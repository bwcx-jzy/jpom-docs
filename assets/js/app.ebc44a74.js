(window.webpackJsonp=window.webpackJsonp||[]).push([[7],[]]);!function(n){function e(e){for(var r,o,i=e[0],l=e[1],c=e[2],p=0,m=[];p<i.length;p++)o=i[p],Object.prototype.hasOwnProperty.call(a,o)&&a[o]&&m.push(a[o][0]),a[o]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(d&&d(e);m.length;)m.shift()();return s.push.apply(s,c||[]),t()}function t(){for(var n,e=0;e<s.length;e++){for(var t=s[e],r=!0,i=1;i<t.length;i++){var l=t[i];0!==a[l]&&(r=!1)}r&&(s.splice(e--,1),n=o(o.s=t[0]))}return n}var r={},a={8:0},s=[];function o(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.e=function(n){var e=[],t=a[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=a[n]=[e,r]}));e.push(t[2]=r);var s,i=document.createElement("script");i.charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.src=function(n){return o.p+"assets/js/"+({}[n]||n)+"."+{0:"1ded5761",1:"6401c4f5",2:"6d5c442c",3:"6e8a3cd3",4:"1be08f7d",5:"4d8656d8",6:"cf9a9116",9:"dee3cbec"}[n]+".js"}(n);var l=new Error;s=function(e){i.onerror=i.onload=null,clearTimeout(c);var t=a[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),s=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+s+")",l.name="ChunkLoadError",l.type=r,l.request=s,t[1](l)}a[n]=void 0}};var c=setTimeout((function(){s({type:"timeout",target:i})}),12e4);i.onerror=i.onload=s,document.head.appendChild(i)}return Promise.all(e)},o.m=n,o.c=r,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/",o.oe=function(n){throw console.error(n),n};var i=window.webpackJsonp=window.webpackJsonp||[],l=i.push.bind(i);i.push=e,i=i.slice();for(var c=0;c<i.length;c++)e(i[c]);var d=l;s.push([132,7]),t()}([function(n,e,t){"use strict";var r=function(n){return n&&n.Math===Math&&n};n.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";var r="object"==typeof document&&document.all;n.exports=void 0===r&&void 0!==r?function(n){return"function"==typeof n||n===r}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var r=t(10),a=String,s=TypeError;n.exports=function(n){if(r(n))return n;throw new s(a(n)+" is not an object")}},function(n,e,t){"use strict";var r=t(12),a=t(0),s=t(147),o=t(3),i=t(2),l=t(87),c=t(129),d=t(149),p=t(1),m=t(11),u=t(17),g=t(88).IteratorPrototype,h=t(6),v=t(24),f=u("toStringTag"),b=TypeError,x=a.Iterator,j=v||!i(x)||x.prototype!==g||!p((function(){x({})})),y=function(){if(s(this,g),l(this)===g)throw new b("Abstract class Iterator not directly constructable")},k=function(n,e){h?c(g,n,{configurable:!0,get:function(){return e},set:function(e){if(o(this),this===g)throw new b("You can't redefine this property");m(this,n)?this[n]=e:d(this,n,e)}}):g[n]=e};m(g,f)||k(f,"Iterator"),!j&&m(g,"constructor")&&g.constructor!==Object||k("constructor",y),y.prototype=g,r({global:!0,constructor:!0,forced:j},{Iterator:y})},function(n,e,t){"use strict";var r=t(33),a=Function.prototype,s=a.call,o=r&&a.bind.bind(s,s);n.exports=r?o:function(n){return function(){return s.apply(n,arguments)}}},function(n,e,t){"use strict";var r=t(1);n.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){"use strict";var r=t(33),a=Function.prototype.call;n.exports=r?a.bind(a):function(){return a.apply(a,arguments)}},function(n,e,t){"use strict";function r(n,e,t,r,a,s,o,i){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),s&&(c._scopeId="data-v-"+s),o?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(o)},c._ssrRegister=l):a&&(l=i?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(n,e){return l.call(e),d(n,e)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(2),a=t(50),s=TypeError;n.exports=function(n){if(r(n))return n;throw new s(a(n)+" is not a function")}},function(n,e,t){"use strict";var r=t(2);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){"use strict";var r=t(5),a=t(31),s=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return s(a(n),e)}},function(n,e,t){"use strict";var r=t(0),a=t(70).f,s=t(25),o=t(46),i=t(52),l=t(84),c=t(146);n.exports=function(n,e){var t,d,p,m,u,g=n.target,h=n.global,v=n.stat;if(t=h?r:v?r[g]||i(g,{}):r[g]&&r[g].prototype)for(d in e){if(m=e[d],p=n.dontCallGetSet?(u=a(t,d))&&u.value:t[d],!c(h?d:g+(v?".":"#")+d,n.forced)&&void 0!==p){if(typeof m==typeof p)continue;l(m,p)}(n.sham||p&&p.sham)&&s(m,"sham",!0),o(t,d,m,n)}}},function(n,e,t){"use strict";var r=t(7),a=t(3),s=t(38);n.exports=function(n,e,t){var o,i;a(n);try{if(!(o=s(n,"return"))){if("throw"===e)throw t;return t}o=r(o,n)}catch(n){i=!0,o=n}if("throw"===e)throw t;if(i)throw o;return a(o),t}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(98),a="object"==typeof self&&self&&self.Object===Object&&self,s=r||a||Function("return this")();n.exports=s},function(n,e,t){"use strict";var r=t(12),a=t(7),s=t(9),o=t(3),i=t(26),l=t(89),c=t(90),d=t(24),p=t(13),m=t(91),u=t(27),g=!d&&!m("filter",(function(){})),h=!d&&!g&&u("filter",TypeError),v=d||g||h,f=l((function(){for(var n,e,t=this.iterator,r=this.predicate,s=this.next;;){if(n=o(a(s,t)),this.done=!!n.done)return;if(e=n.value,c(t,r,[e,this.counter++],!0))return e}}));r({target:"Iterator",proto:!0,real:!0,forced:v},{filter:function(n){o(this);try{s(n)}catch(n){p(this,"throw",n)}return h?a(h,this,n):new f(i(this),{predicate:n})}})},function(n,e,t){"use strict";var r=t(0),a=t(77),s=t(11),o=t(78),i=t(74),l=t(73),c=r.Symbol,d=a("wks"),p=l?c.for||c:c&&c.withoutSetter||o;n.exports=function(n){return s(d,n)||(d[n]=i&&s(c,n)?c[n]:p("Symbol."+n)),d[n]}},function(n,e,t){"use strict";var r=t(6),a=t(79),s=t(81),o=t(3),i=t(71),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=r?s?function(n,e,t){if(o(n),e=i(e),o(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=d(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(o(n),e=i(e),o(t),a)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(198),a=t(201);n.exports=function(n,e){var t=a(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";var r=t(12),a=t(7),s=t(9),o=t(3),i=t(26),l=t(89),c=t(90),d=t(13),p=t(91),m=t(27),u=t(24),g=!u&&!p("map",(function(){})),h=!u&&!g&&m("map",TypeError),v=u||g||h,f=l((function(){var n=this.iterator,e=o(a(this.next,n));if(!(this.done=!!e.done))return c(n,this.mapper,[e.value,this.counter++],!0)}));r({target:"Iterator",proto:!0,real:!0,forced:v},{map:function(n){o(this);try{s(n)}catch(n){d(this,"throw",n)}return h?a(h,this,n):new f(i(this),{mapper:n})}})},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return s})),t.d(e,"j",(function(){return o})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return d})),t.d(e,"c",(function(){return p})),t.d(e,"f",(function(){return m})),t.d(e,"l",(function(){return u})),t.d(e,"m",(function(){return g})),t.d(e,"d",(function(){return v})),t.d(e,"k",(function(){return f})),t.d(e,"n",(function(){return b})),t.d(e,"a",(function(){return j}));t(45),t(4),t(16),t(22),t(20);const r=/#.*$/,a=/\.(md|html)$/,s=/\/$/,o=/^[a-z]+:/i;function i(n){return decodeURI(n).replace(r,"").replace(a,"")}function l(n){return o.test(n)}function c(n){return/^mailto:/.test(n)}function d(n){return/^tel:/.test(n)}function p(n){if(l(n))return n;if(!n)return"404";const e=n.match(r),t=e?e[0]:"",a=i(n);return s.test(a)?n:a+".html"+t}function m(n,e){const t=n.hash,a=function(n){const e=n&&n.match(r);if(e)return e[0]}(e);if(a&&t!==a)return!1;return i(n.path)===i(e)}function u(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;const a=e.split("/");t&&a[a.length-1]||a.pop();const s=n.replace(/^\//,"").split("/");for(let n=0;n<s.length;n++){const e=s[n];".."===e?a.pop():"."!==e&&a.push(e)}""!==a[0]&&a.unshift("");return a.join("/")}(e,t));const r=i(e);for(let e=0;e<n.length;e++)if(i(n[e].regularPath)===r)return Object.assign({},n[e],{type:"page",path:p(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function g(n,e,t,r){const{pages:a,themeConfig:s}=t,o=r&&s.locales&&s.locales[r]||s;if("auto"===(n.frontmatter.sidebar||o.sidebar||s.sidebar))return h(n);const i=o.sidebar||s.sidebar;if(i){const{base:t,config:r}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const r in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(r)))return{base:r,config:e[r]};var t;return{}}(e,i);return"auto"===r?h(n):r?r.map(n=>function n(e,t,r,a=1){if("string"==typeof e)return u(t,e,r);if(Array.isArray(e))return Object.assign(u(t,e[0],r),{title:e[1]});{a>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const s=e.children||[];return 0===s.length&&e.path?Object.assign(u(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:s.map(e=>n(e,t,r,a+1)),collapsable:!1!==e.collapsable}}}(n,a,t)):[]}return[]}function h(n){const e=v(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function v(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function f(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function b(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function x(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function j(n,e){return x(e)-x(n)}},function(n,e,t){"use strict";var r=t(12),a=t(7),s=t(47),o=t(9),i=t(3),l=t(26),c=t(13),d=t(27)("forEach",TypeError);r({target:"Iterator",proto:!0,real:!0,forced:d},{forEach:function(n){i(this);try{o(n)}catch(n){c(this,"throw",n)}if(d)return a(d,this,n);var e=l(this),t=0;s(e,(function(e){n(e,t++)}),{IS_RECORD:!0})}})},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var r=t(6),a=t(18),s=t(34);n.exports=r?function(n,e,t){return a.f(n,e,s(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){"use strict";n.exports=function(n){return{iterator:n,next:n.next,done:!1}}},function(n,e,t){"use strict";var r=t(0);n.exports=function(n,e){var t=r.Iterator,a=t&&t.prototype,s=a&&a[n],o=!1;if(s)try{s.call({next:function(){return{done:!0}},return:function(){o=!0}},-1)}catch(n){n instanceof e||(o=!1)}if(!o)return s}},function(n,e,t){var r=t(30),a=t(183),s=t(184),o=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":o&&o in Object(n)?a(n):s(n)}},function(n,e,t){"use strict";var r=t(5),a=r({}.toString),s=r("".slice);n.exports=function(n){return s(a(n),8,-1)}},function(n,e,t){var r=t(15).Symbol;n.exports=r},function(n,e,t){"use strict";var r=t(48),a=Object;n.exports=function(n){return a(r(n))}},function(n,e,t){"use strict";var r=t(144);n.exports=function(n){return r(n.length)}},function(n,e,t){"use strict";var r=t(1);n.exports=!r((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var r=t(66),a=t(48);n.exports=function(n){return r(a(n))}},function(n,e,t){"use strict";var r=t(0),a=t(2),s=function(n){return a(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?s(r[n]):r[n]&&r[n][e]}},function(n,e,t){"use strict";var r=t(5);n.exports=r({}.isPrototypeOf)},function(n,e,t){"use strict";var r=t(9),a=t(49);n.exports=function(n,e){var t=n[e];return a(t)?void 0:r(t)}},function(n,e,t){var r=t(188),a=t(189),s=t(190),o=t(191),i=t(192);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=s,l.prototype.has=o,l.prototype.set=i,n.exports=l},function(n,e,t){var r=t(100);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(19)(Object,"create");n.exports=r},function(n,e,t){var r=t(210);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(63);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(n,e,t){return n<e?e:n>t?t:n}function s(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=a(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),d=r.speed,p=r.easing;return l.offsetWidth,o((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),i(c,function(n,e,t){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+s(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+s(n)+"%,0)"}:{"margin-left":s(n)+"%"}).transition="all "+e+"ms "+t,a}(n,d,p)),1===n?(i(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){i(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),d)}),d)):setTimeout(e,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*a(Math.random()*e,.1,.95)),e=a(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var a,o=e.querySelector(r.barSelector),l=n?"-100":s(t.status||0),d=document.querySelector(r.parent);return i(o,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=e.querySelector(r.spinnerSelector))&&m(a),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(e),e},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&m(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var o=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),i=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,a=n.length,s=e.charAt(0).toUpperCase()+e.slice(1);a--;)if((r=n[a]+s)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,a,s=arguments;if(2==s.length)for(t in e)void 0!==(a=e[t])&&e.hasOwnProperty(t)&&r(n,t,a);else r(n,s[1],s[2])}}();function l(n,e){return("string"==typeof n?n:p(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=p(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function d(n,e){var t,r=p(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function p(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function m(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=a)},function(n,e,t){"use strict";var r=t(12),a=t(31),s=t(32),o=t(177),i=t(179);r({target:"Array",proto:!0,arity:1,forced:t(1)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=a(this),t=s(e),r=arguments.length;i(t+r);for(var l=0;l<r;l++)e[t]=arguments[l],t++;return o(e,t),t}})},function(n,e,t){"use strict";var r=t(2),a=t(18),s=t(82),o=t(52);n.exports=function(n,e,t,i){i||(i={});var l=i.enumerable,c=void 0!==i.name?i.name:e;if(r(t)&&s(t,c,i),i.global)l?n[e]=t:o(e,t);else{try{i.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:a.f(n,e,{value:t,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return n}},function(n,e,t){"use strict";var r=t(130),a=t(7),s=t(3),o=t(50),i=t(162),l=t(32),c=t(37),d=t(163),p=t(93),m=t(13),u=TypeError,g=function(n,e){this.stopped=n,this.result=e},h=g.prototype;n.exports=function(n,e,t){var v,f,b,x,j,y,k,z=t&&t.that,S=!(!t||!t.AS_ENTRIES),I=!(!t||!t.IS_RECORD),w=!(!t||!t.IS_ITERATOR),T=!(!t||!t.INTERRUPTED),_=r(e,z),E=function(n){return v&&m(v,"normal"),new g(!0,n)},A=function(n){return S?(s(n),T?_(n[0],n[1],E):_(n[0],n[1])):T?_(n,E):_(n)};if(I)v=n.iterator;else if(w)v=n;else{if(!(f=p(n)))throw new u(o(n)+" is not iterable");if(i(f)){for(b=0,x=l(n);x>b;b++)if((j=A(n[b]))&&c(h,j))return j;return new g(!1)}v=d(n,f)}for(y=I?n.next:v.next;!(k=a(y,v)).done;){try{j=A(k.value)}catch(n){m(v,"throw",n)}if("object"==typeof j&&j&&c(h,j))return j}return new g(!1)}},function(n,e,t){"use strict";var r=t(49),a=TypeError;n.exports=function(n){if(r(n))throw new a("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var r=String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var r=t(24),a=t(0),s=t(52),o=n.exports=a["__core-js_shared__"]||s("__core-js_shared__",{});(o.versions||(o.versions=[])).push({version:"3.44.0",mode:r?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.44.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";var r=t(0),a=Object.defineProperty;n.exports=function(n,e){try{a(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){"use strict";var r=t(77),a=t(78),s=r("keys");n.exports=function(n){return s[n]||(s[n]=a(n))}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var r=t(182),a=t(23),s=Object.prototype,o=s.hasOwnProperty,i=s.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return a(n)&&o.call(n,"callee")&&!i.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(19)(t(15),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(202),a=t(209),s=t(211),o=t(212),i=t(213);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=s,l.prototype.has=o,l.prototype.set=i,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(14),a=t(63),s=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!a(n))||(o.test(n)||!s.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(28),a=t(23);n.exports=function(n){return"symbol"==typeof n||a(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";var r=t(12),a=t(7),s=t(47),o=t(9),i=t(3),l=t(26),c=t(13),d=t(27)("some",TypeError);r({target:"Iterator",proto:!0,real:!0,forced:d},{some:function(n){i(this);try{o(n)}catch(n){c(this,"throw",n)}if(d)return a(d,this,n);var e=l(this),t=0;return s(e,(function(e,r){if(n(e,t++))return r()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(n,e,t){"use strict";var r=t(5),a=t(1),s=t(29),o=Object,i=r("".split);n.exports=a((function(){return!o("z").propertyIsEnumerable(0)}))?function(n){return"String"===s(n)?i(n,""):o(n)}:o},function(n,e,t){"use strict";var r,a=t(3),s=t(150),o=t(55),i=t(54),l=t(152),c=t(80),d=t(53),p=d("IE_PROTO"),m=function(){},u=function(n){return"<script>"+n+"<\/script>"},g=function(n){n.write(u("")),n.close();var e=n.parentWindow.Object;return n=null,e},h=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,e;h="undefined"!=typeof document?document.domain&&r?g(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(u("document.F=Object")),n.close(),n.F):g(r);for(var t=o.length;t--;)delete h.prototype[o[t]];return h()};i[p]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(m.prototype=a(n),t=new m,m.prototype=null,t[p]=n):t=h(),void 0===e?t:s.f(t,e)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,s=/^0o[0-7]+$/i,o=parseInt,i="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=i||l||Function("return this")(),d=Object.prototype.toString,p=Math.max,m=Math.min,u=function(){return c.Date.now()};function g(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function h(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==d.call(n)}(n))return NaN;if(g(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=g(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var i=a.test(n);return i||s.test(n)?o(n.slice(2),i?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,a,s,o,i,l,c=0,d=!1,v=!1,f=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function b(e){var t=r,s=a;return r=a=void 0,c=e,o=n.apply(s,t)}function x(n){return c=n,i=setTimeout(y,e),d?b(n):o}function j(n){var t=n-l;return void 0===l||t>=e||t<0||v&&n-c>=s}function y(){var n=u();if(j(n))return k(n);i=setTimeout(y,function(n){var t=e-(n-l);return v?m(t,s-(n-c)):t}(n))}function k(n){return i=void 0,f&&r?b(n):(r=a=void 0,o)}function z(){var n=u(),t=j(n);if(r=arguments,a=this,l=n,t){if(void 0===i)return x(l);if(v)return i=setTimeout(y,e),b(l)}return void 0===i&&(i=setTimeout(y,e)),o}return e=h(e)||0,g(t)&&(d=!!t.leading,s=(v="maxWait"in t)?p(h(t.maxWait)||0,e):s,f="trailing"in t?!!t.trailing:f),z.cancel=function(){void 0!==i&&clearTimeout(i),c=0,r=l=a=i=void 0},z.flush=function(){return void 0===i?o:k(u())},z}},function(n,e,t){"use strict";var r=t(6),a=t(7),s=t(133),o=t(34),i=t(35),l=t(71),c=t(11),d=t(79),p=Object.getOwnPropertyDescriptor;e.f=r?p:function(n,e){if(n=i(n),e=l(e),d)try{return p(n,e)}catch(n){}if(c(n,e))return o(!a(s.f,n,e),n[e])}},function(n,e,t){"use strict";var r=t(134),a=t(72);n.exports=function(n){var e=r(n,"string");return a(e)?e:e+""}},function(n,e,t){"use strict";var r=t(36),a=t(2),s=t(37),o=t(73),i=Object;n.exports=o?function(n){return"symbol"==typeof n}:function(n){var e=r("Symbol");return a(e)&&s(e.prototype,i(n))}},function(n,e,t){"use strict";var r=t(74);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var r=t(75),a=t(1),s=t(0).String;n.exports=!!Object.getOwnPropertySymbols&&!a((function(){var n=Symbol("symbol detection");return!s(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){"use strict";var r,a,s=t(0),o=t(76),i=s.process,l=s.Deno,c=i&&i.versions||l&&l.version,d=c&&c.v8;d&&(a=(r=d.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=+r[1]),n.exports=a},function(n,e,t){"use strict";var r=t(0).navigator,a=r&&r.userAgent;n.exports=a?String(a):""},function(n,e,t){"use strict";var r=t(51);n.exports=function(n,e){return r[n]||(r[n]=e||{})}},function(n,e,t){"use strict";var r=t(5),a=0,s=Math.random(),o=r(1.1.toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+o(++a+s,36)}},function(n,e,t){"use strict";var r=t(6),a=t(1),s=t(80);n.exports=!r&&!a((function(){return 7!==Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var r=t(0),a=t(10),s=r.document,o=a(s)&&a(s.createElement);n.exports=function(n){return o?s.createElement(n):{}}},function(n,e,t){"use strict";var r=t(6),a=t(1);n.exports=r&&a((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var r=t(5),a=t(1),s=t(2),o=t(11),i=t(6),l=t(136).CONFIGURABLE,c=t(137),d=t(83),p=d.enforce,m=d.get,u=String,g=Object.defineProperty,h=r("".slice),v=r("".replace),f=r([].join),b=i&&!a((function(){return 8!==g((function(){}),"length",{value:8}).length})),x=String(String).split("String"),j=n.exports=function(n,e,t){"Symbol("===h(u(e),0,7)&&(e="["+v(u(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!o(n,"name")||l&&n.name!==e)&&(i?g(n,"name",{value:e,configurable:!0}):n.name=e),b&&t&&o(t,"arity")&&n.length!==t.arity&&g(n,"length",{value:t.arity});try{t&&o(t,"constructor")&&t.constructor?i&&g(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var r=p(n);return o(r,"source")||(r.source=f(x,"string"==typeof e?e:"")),n};Function.prototype.toString=j((function(){return s(this)&&m(this).source||c(this)}),"toString")},function(n,e,t){"use strict";var r,a,s,o=t(138),i=t(0),l=t(10),c=t(25),d=t(11),p=t(51),m=t(53),u=t(54),g=i.TypeError,h=i.WeakMap;if(o||p.state){var v=p.state||(p.state=new h);v.get=v.get,v.has=v.has,v.set=v.set,r=function(n,e){if(v.has(n))throw new g("Object already initialized");return e.facade=n,v.set(n,e),e},a=function(n){return v.get(n)||{}},s=function(n){return v.has(n)}}else{var f=m("state");u[f]=!0,r=function(n,e){if(d(n,f))throw new g("Object already initialized");return e.facade=n,c(n,f,e),e},a=function(n){return d(n,f)?n[f]:{}},s=function(n){return d(n,f)}}n.exports={set:r,get:a,has:s,enforce:function(n){return s(n)?a(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=a(e)).type!==n)throw new g("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var r=t(11),a=t(139),s=t(70),o=t(18);n.exports=function(n,e,t){for(var i=a(e),l=o.f,c=s.f,d=0;d<i.length;d++){var p=i[d];r(n,p)||t&&r(t,p)||l(n,p,c(e,p))}}},function(n,e,t){"use strict";var r=t(5),a=t(11),s=t(35),o=t(141).indexOf,i=t(54),l=r([].push);n.exports=function(n,e){var t,r=s(n),c=0,d=[];for(t in r)!a(i,t)&&a(r,t)&&l(d,t);for(;e.length>c;)a(r,t=e[c++])&&(~o(d,t)||l(d,t));return d}},function(n,e,t){"use strict";var r=t(143);n.exports=function(n){var e=+n;return e!=e||0===e?0:r(e)}},function(n,e,t){"use strict";var r=t(11),a=t(2),s=t(31),o=t(53),i=t(148),l=o("IE_PROTO"),c=Object,d=c.prototype;n.exports=i?c.getPrototypeOf:function(n){var e=s(n);if(r(e,l))return e[l];var t=e.constructor;return a(t)&&e instanceof t?t.prototype:e instanceof c?d:null}},function(n,e,t){"use strict";var r,a,s,o=t(1),i=t(2),l=t(10),c=t(67),d=t(87),p=t(46),m=t(17),u=t(24),g=m("iterator"),h=!1;[].keys&&("next"in(s=[].keys())?(a=d(d(s)))!==Object.prototype&&(r=a):h=!0),!l(r)||o((function(){var n={};return r[g].call(n)!==n}))?r={}:u&&(r=c(r)),i(r[g])||p(r,g,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:h}},function(n,e,t){"use strict";var r=t(7),a=t(67),s=t(25),o=t(153),i=t(17),l=t(83),c=t(38),d=t(88).IteratorPrototype,p=t(154),m=t(13),u=t(155),g=i("toStringTag"),h=l.set,v=function(n){var e=l.getterFor(n?"WrapForValidIterator":"IteratorHelper");return o(a(d),{next:function(){var t=e(this);if(n)return t.nextHandler();if(t.done)return p(void 0,!0);try{var r=t.nextHandler();return t.returnHandlerResult?r:p(r,t.done)}catch(n){throw t.done=!0,n}},return:function(){var t=e(this),a=t.iterator;if(t.done=!0,n){var s=c(a,"return");return s?r(s,a):p(void 0,!0)}if(t.inner)try{m(t.inner.iterator,"normal")}catch(n){return m(a,"throw",n)}if(t.openIters)try{u(t.openIters,"normal")}catch(n){return m(a,"throw",n)}return a&&m(a,"normal"),p(void 0,!0)}})},f=v(!0),b=v(!1);s(b,g,"Iterator Helper"),n.exports=function(n,e,t){var r=function(r,a){a?(a.iterator=r.iterator,a.next=r.next):a=r,a.type=e?"WrapForValidIterator":"IteratorHelper",a.returnHandlerResult=!!t,a.nextHandler=n,a.counter=0,a.done=!1,h(this,a)};return r.prototype=e?f:b,r}},function(n,e,t){"use strict";var r=t(3),a=t(13);n.exports=function(n,e,t,s){try{return s?e(r(t)[0],t[1]):e(t)}catch(e){a(n,"throw",e)}}},function(n,e,t){"use strict";n.exports=function(n,e){var t="function"==typeof Iterator&&Iterator.prototype[n];if(t)try{t.call({next:null},e).next()}catch(n){return!0}}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";var r=t(94),a=t(38),s=t(49),o=t(92),i=t(17)("iterator");n.exports=function(n){if(!s(n))return a(n,i)||a(n,"@@iterator")||o[r(n)]}},function(n,e,t){"use strict";var r=t(164),a=t(2),s=t(29),o=t(17)("toStringTag"),i=Object,l="Arguments"===s(function(){return arguments}());n.exports=r?s:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=i(n),o))?t:l?s(e):"Object"===(r=s(e))&&a(e.callee)?"Arguments":r}},function(n,e,t){"use strict";var r=t(33),a=Function.prototype,s=a.apply,o=a.call;n.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(s):function(){return o.apply(s,arguments)})},function(n,e,t){"use strict";var r=t(167),a=t(10),s=t(48),o=t(168);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return s(t),o(r),a(t)?(e?n(t,r):t.__proto__=r,t):t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,a=n.length;++t<r;)n[a+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(39),a=t(193),s=t(194),o=t(195),i=t(196),l=t(197);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=a,c.prototype.delete=s,c.prototype.get=o,c.prototype.has=i,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(28),a=t(58);n.exports=function(n){if(!a(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(214),a=t(23);n.exports=function n(e,t,s,o,i){return e===t||(null==e||null==t||!a(e)&&!a(t)?e!=e&&t!=t:r(e,t,s,o,n,i))}},function(n,e,t){var r=t(105),a=t(217),s=t(106);n.exports=function(n,e,t,o,i,l){var c=1&t,d=n.length,p=e.length;if(d!=p&&!(c&&p>d))return!1;var m=l.get(n),u=l.get(e);if(m&&u)return m==e&&u==n;var g=-1,h=!0,v=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++g<d;){var f=n[g],b=e[g];if(o)var x=c?o(b,f,g,e,n,l):o(f,b,g,n,e,l);if(void 0!==x){if(x)continue;h=!1;break}if(v){if(!a(e,(function(n,e){if(!s(v,e)&&(f===n||i(f,n,t,o,l)))return v.push(e)}))){h=!1;break}}else if(f!==b&&!i(f,b,t,o,l)){h=!1;break}}return l.delete(n),l.delete(e),h}},function(n,e,t){var r=t(59),a=t(215),s=t(216);function o(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}o.prototype.add=o.prototype.push=a,o.prototype.has=s,n.exports=o},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(227),a=t(233),s=t(111);n.exports=function(n){return s(n)?r(n):a(n)}},function(n,e,t){(function(n){var r=t(15),a=t(229),s=e&&!e.nodeType&&e,o=s&&"object"==typeof n&&n&&!n.nodeType&&n,i=o&&o.exports===s?r.Buffer:void 0,l=(i?i.isBuffer:void 0)||a;n.exports=l}).call(this,t(68)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(230),a=t(231),s=t(232),o=s&&s.isTypedArray,i=o?a(o):r;n.exports=i},function(n,e,t){var r=t(101),a=t(61);n.exports=function(n){return null!=n&&a(n.length)&&!r(n)}},function(n,e,t){var r=t(19)(t(15),"Set");n.exports=r},function(n,e,t){var r=t(58);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(116),a=t(43);n.exports=function(n,e){for(var t=0,s=(e=r(e,n)).length;null!=n&&t<s;)n=n[a(e[t++])];return t&&t==s?n:void 0}},function(n,e,t){var r=t(14),a=t(62),s=t(244),o=t(247);n.exports=function(n,e){return r(n)?n:a(n,e)?[n]:s(o(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(180),a=t(185),s=t(256),o=t(264),i=t(273),l=t(131),c=s((function(n){var e=l(n);return i(e)&&(e=void 0),o(r(n,1,i,!0),a(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,a=r.exec(t);if(!a)return t;var s="",o=0,i=0;for(o=a.index;o<t.length;o++){switch(t.charCodeAt(o)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}i!==o&&(s+=t.substring(i,o)),i=o+1,s+=e}return i!==o?s+t.substring(i,o):s}},function(n,e,t){var r;"undefined"!=typeof self&&self,r=function(){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:r})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=7)}([function(n,e,t){n.exports=!t(6)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},function(n,e){n.exports=function(n,e,t,r,a){var s,o=n=n||{},i=typeof n.default;"object"!==i&&"function"!==i||(s=n,o=n.default);var l,c="function"==typeof o?o.options:o;if(e&&(c.render=e.render,c.staticRenderFns=e.staticRenderFns),r&&(c._scopeId=r),a?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),t&&t.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},c._ssrRegister=l):t&&(l=t),l){var d=c.functional,p=d?c.render:c.beforeCreate;d?c.render=function(n,e){return l.call(e),p(n,e)}:c.beforeCreate=p?[].concat(p,l):[l]}return{esModule:s,exports:o,options:c}}},function(n,e){var t=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},function(n,e){var t=n.exports={version:"2.5.7"};"number"==typeof __e&&(__e=t)},function(n,e,t){var r=t(23),a=t(24),s=t(26),o=Object.defineProperty;e.f=t(0)?Object.defineProperty:function(n,e,t){if(r(n),e=s(e,!0),r(t),a)try{return o(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(n[e]=t.value),n}},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r,a,s;a=[e,t(8),t(11)],void 0===(s="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Tabs=n.Tab=void 0;var r=s(e),a=s(t);function s(n){return n&&n.__esModule?n:{default:n}}n.default={install:function(n){n.component("tab",r.default),n.component("tabs",a.default)}},n.Tab=r.default,n.Tabs=a.default})?r.apply(e,a):r)||(n.exports=s)},function(n,e,t){var r=t(2)(t(9),t(10),null,null,null);n.exports=r.exports},function(n,e,t){var r,a,s;a=[e],void 0===(s="function"==typeof(r=function(n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default={props:{id:{default:null},name:{required:!0},prefix:{default:""},suffix:{default:""},isDisabled:{default:!1}},data:function(){return{isActive:!1,isVisible:!0}},computed:{header:function(){return this.prefix+this.name+this.suffix},computedId:function(){return this.id?this.id:this.name.toLowerCase().replace(/ /g,"-")},hash:function(){return this.isDisabled?"#":"#"+this.computedId}}}})?r.apply(e,a):r)||(n.exports=s)},function(n,e){n.exports={render:function(){var n=this.$createElement;return(this._self._c||n)("section",{directives:[{name:"show",rawName:"v-show",value:this.isActive,expression:"isActive"}],staticClass:"tabs-component-panel",attrs:{"aria-hidden":!this.isActive,id:this.computedId,role:"tabpanel"}},[this._t("default")],2)},staticRenderFns:[]}},function(n,e,t){var r=t(2)(t(12),t(29),null,null,null);n.exports=r.exports},function(n,e,t){var r,a,s;a=[e,t(13)],void 0===(s="function"==typeof(r=function(n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t,r=(t=e)&&t.__esModule?t:{default:t};n.default={props:{cacheLifetime:{default:5},options:{type:Object,required:!1,default:function(){return{useUrlFragment:!0,defaultTabHash:null}}}},data:function(){return{tabs:[],activeTabHash:"",activeTabIndex:0,lastActiveTabHash:""}},computed:{storageKey:function(){return"vue-tabs-component.cache."+window.location.host+window.location.pathname}},created:function(){this.tabs=this.$children},mounted:function(){var n=this;if(window.addEventListener("hashchange",(function(){return n.selectTab(window.location.hash)})),this.findTab(window.location.hash))this.selectTab(window.location.hash);else{var e=r.default.get(this.storageKey);this.findTab(e)?this.selectTab(e):null!==this.options.defaultTabHash&&this.findTab("#"+this.options.defaultTabHash)?this.selectTab("#"+this.options.defaultTabHash):this.tabs.length&&this.selectTab(this.tabs[0].hash)}},methods:{findTab:function(n){return this.tabs.find((function(e){return e.hash===n}))},selectTab:function(n,e){e&&!this.options.useUrlFragment&&e.preventDefault();var t=this.findTab(n);t&&(t.isDisabled?e.preventDefault():this.lastActiveTabHash!==t.hash?(this.tabs.forEach((function(n){n.isActive=n.hash===t.hash})),this.$emit("changed",{tab:t}),this.activeTabHash=t.hash,this.activeTabIndex=this.getTabIndex(n),this.lastActiveTabHash=this.activeTabHash=t.hash,r.default.set(this.storageKey,t.hash,this.cacheLifetime)):this.$emit("clicked",{tab:t}))},setTabVisible:function(n,e){var t=this.findTab(n);t&&(t.isVisible=e,t.isActive&&(t.isActive=e,this.tabs.every((function(n,e,t){return!n.isVisible||(n.isActive=!0,!1)}))))},getTabIndex:function(n){var e=this.findTab(n);return this.tabs.indexOf(e)},getTabHash:function(n){var e=this,t=this.tabs.find((function(t){return e.tabs.indexOf(t)===n}));if(t)return t.hash},getActiveTab:function(){return this.findTab(this.activeTabHash)},getActiveTabIndex:function(){return this.getTabIndex(this.activeTabHash)}}}})?r.apply(e,a):r)||(n.exports=s)},function(n,e,t){var r,a,s;a=[e,t(14),t(15)],void 0===(s="function"==typeof(r=function(n,e,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=s(e),a=s(t);function s(n){return n&&n.__esModule?n:{default:n}}var o=function(){function n(){(0,r.default)(this,n)}return(0,a.default)(n,[{key:"get",value:function(n){var e=JSON.parse(localStorage.getItem(n));return e?new Date(e.expires)<new Date?(localStorage.removeItem(n),null):e.value:null}},{key:"set",value:function(n,e,t){var r=(new Date).getTime(),a=new Date(r+6e4*t);localStorage.setItem(n,JSON.stringify({value:e,expires:a}))}}]),n}();n.default=new o})?r.apply(e,a):r)||(n.exports=s)},function(n,e,t){"use strict";e.__esModule=!0,e.default=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}},function(n,e,t){"use strict";e.__esModule=!0;var r,a=t(16),s=(r=a)&&r.__esModule?r:{default:r};e.default=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,s.default)(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}()},function(n,e,t){n.exports={default:t(17),__esModule:!0}},function(n,e,t){t(18);var r=t(4).Object;n.exports=function(n,e,t){return r.defineProperty(n,e,t)}},function(n,e,t){var r=t(19);r(r.S+r.F*!t(0),"Object",{defineProperty:t(5).f})},function(n,e,t){var r=t(3),a=t(4),s=t(20),o=t(22),i=t(28),l=function(n,e,t){var c,d,p,m=n&l.F,u=n&l.G,g=n&l.S,h=n&l.P,v=n&l.B,f=n&l.W,b=u?a:a[e]||(a[e]={}),x=b.prototype,j=u?r:g?r[e]:(r[e]||{}).prototype;for(c in u&&(t=e),t)(d=!m&&j&&void 0!==j[c])&&i(b,c)||(p=d?j[c]:t[c],b[c]=u&&"function"!=typeof j[c]?t[c]:v&&d?s(p,r):f&&j[c]==p?function(n){var e=function(e,t,r){if(this instanceof n){switch(arguments.length){case 0:return new n;case 1:return new n(e);case 2:return new n(e,t)}return new n(e,t,r)}return n.apply(this,arguments)};return e.prototype=n.prototype,e}(p):h&&"function"==typeof p?s(Function.call,p):p,h&&((b.virtual||(b.virtual={}))[c]=p,n&l.R&&x&&!x[c]&&o(x,c,p)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,n.exports=l},function(n,e,t){var r=t(21);n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,a){return n.call(e,t,r,a)}}return function(){return n.apply(e,arguments)}}},function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},function(n,e,t){var r=t(5),a=t(27);n.exports=t(0)?function(n,e,t){return r.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(1);n.exports=function(n){if(!r(n))throw TypeError(n+" is not an object!");return n}},function(n,e,t){n.exports=!t(0)&&!t(6)((function(){return 7!=Object.defineProperty(t(25)("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(1),a=t(3).document,s=r(a)&&r(a.createElement);n.exports=function(n){return s?a.createElement(n):{}}},function(n,e,t){var r=t(1);n.exports=function(n,e){if(!r(n))return n;var t,a;if(e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;if("function"==typeof(t=n.valueOf)&&!r(a=t.call(n)))return a;if(!e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;throw TypeError("Can't convert object to primitive value")}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},function(n,e){n.exports={render:function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"tabs-component"},[t("ul",{staticClass:"tabs-component-tabs",attrs:{role:"tablist"}},n._l(n.tabs,(function(e,r){return t("li",{directives:[{name:"show",rawName:"v-show",value:e.isVisible,expression:"tab.isVisible"}],key:r,staticClass:"tabs-component-tab",class:{"is-active":e.isActive,"is-disabled":e.isDisabled},attrs:{role:"presentation"}},[t("a",{staticClass:"tabs-component-tab-a",attrs:{"aria-controls":e.hash,"aria-selected":e.isActive,href:e.hash,role:"tab"},domProps:{innerHTML:n._s(e.header)},on:{click:function(t){n.selectTab(e.hash,t)}}})])}))),n._v(" "),t("div",{staticClass:"tabs-component-panels"},[n._t("default")],2)])},staticRenderFns:[]}}])},n.exports=r()},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},a=(t(276),t(8)),s=Object(a.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=s.exports},function(n,e,t){"use strict";t.r(e);t(4),t(16),t(22),t(20);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},a=(t(277),t(8)),s=Object(a.a)(r,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,r){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=s.exports},function(n,e,t){"use strict";var r=t(12),a=t(0),s=t(95),o=t(166),i=a.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=o(n,e,l),r({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(n,e){if(i&&i[n]){var t={};t[n]=o("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return s(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return s(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return s(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return s(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return s(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return s(n,this,arguments)}})),c("URIError",(function(n){return function(e){return s(n,this,arguments)}})),d("CompileError",(function(n){return function(e){return s(n,this,arguments)}})),d("LinkError",(function(n){return function(e){return s(n,this,arguments)}})),d("RuntimeError",(function(n){return function(e){return s(n,this,arguments)}}))},function(n,e,t){"use strict";var r=t(94),a=String;n.exports=function(n){if("Symbol"===r(n))throw new TypeError("Cannot convert a Symbol value to a string");return a(n)}},function(n,e,t){"use strict";var r=t(82),a=t(18);n.exports=function(n,e,t){return t.get&&r(t.get,e,{getter:!0}),t.set&&r(t.set,e,{setter:!0}),a.f(n,e,t)}},function(n,e,t){"use strict";var r=t(161),a=t(9),s=t(33),o=r(r.bind);n.exports=function(n,e){return a(n),void 0===e?n:s?o(n,e):function(){return n.apply(e,arguments)}}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){n.exports=t(283)},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,s=a&&!r.call({1:2},1);e.f=s?function(n){var e=a(this,n);return!!e&&e.enumerable}:r},function(n,e,t){"use strict";var r=t(7),a=t(10),s=t(72),o=t(38),i=t(135),l=t(17),c=TypeError,d=l("toPrimitive");n.exports=function(n,e){if(!a(n)||s(n))return n;var t,l=o(n,d);if(l){if(void 0===e&&(e="default"),t=r(l,n,e),!a(t)||s(t))return t;throw new c("Can't convert object to primitive value")}return void 0===e&&(e="number"),i(n,e)}},function(n,e,t){"use strict";var r=t(7),a=t(2),s=t(10),o=TypeError;n.exports=function(n,e){var t,i;if("string"===e&&a(t=n.toString)&&!s(i=r(t,n)))return i;if(a(t=n.valueOf)&&!s(i=r(t,n)))return i;if("string"!==e&&a(t=n.toString)&&!s(i=r(t,n)))return i;throw new o("Can't convert object to primitive value")}},function(n,e,t){"use strict";var r=t(6),a=t(11),s=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,i=a(s,"name"),l=i&&"something"===function(){}.name,c=i&&(!r||r&&o(s,"name").configurable);n.exports={EXISTS:i,PROPER:l,CONFIGURABLE:c}},function(n,e,t){"use strict";var r=t(5),a=t(2),s=t(51),o=r(Function.toString);a(s.inspectSource)||(s.inspectSource=function(n){return o(n)}),n.exports=s.inspectSource},function(n,e,t){"use strict";var r=t(0),a=t(2),s=r.WeakMap;n.exports=a(s)&&/native code/.test(String(s))},function(n,e,t){"use strict";var r=t(36),a=t(5),s=t(140),o=t(145),i=t(3),l=a([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=s.f(i(n)),t=o.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var r=t(85),a=t(55).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,a)}},function(n,e,t){"use strict";var r=t(35),a=t(142),s=t(32),o=function(n){return function(e,t,o){var i=r(e),l=s(i);if(0===l)return!n&&-1;var c,d=a(o,l);if(n&&t!=t){for(;l>d;)if((c=i[d++])!=c)return!0}else for(;l>d;d++)if((n||d in i)&&i[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:o(!0),indexOf:o(!1)}},function(n,e,t){"use strict";var r=t(86),a=Math.max,s=Math.min;n.exports=function(n,e){var t=r(n);return t<0?a(t+e,0):s(t,e)}},function(n,e,t){"use strict";var r=Math.ceil,a=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?a:r)(e)}},function(n,e,t){"use strict";var r=t(86),a=Math.min;n.exports=function(n){var e=r(n);return e>0?a(e,9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var r=t(1),a=t(2),s=/#|\.prototype\./,o=function(n,e){var t=l[i(n)];return t===d||t!==c&&(a(e)?r(e):!!e)},i=o.normalize=function(n){return String(n).replace(s,".").toLowerCase()},l=o.data={},c=o.NATIVE="N",d=o.POLYFILL="P";n.exports=o},function(n,e,t){"use strict";var r=t(37),a=TypeError;n.exports=function(n,e){if(r(e,n))return n;throw new a("Incorrect invocation")}},function(n,e,t){"use strict";var r=t(1);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){"use strict";var r=t(6),a=t(18),s=t(34);n.exports=function(n,e,t){r?a.f(n,e,s(0,t)):n[e]=t}},function(n,e,t){"use strict";var r=t(6),a=t(81),s=t(18),o=t(3),i=t(35),l=t(151);e.f=r&&!a?Object.defineProperties:function(n,e){o(n);for(var t,r=i(e),a=l(e),c=a.length,d=0;c>d;)s.f(n,t=a[d++],r[t]);return n}},function(n,e,t){"use strict";var r=t(85),a=t(55);n.exports=Object.keys||function(n){return r(n,a)}},function(n,e,t){"use strict";var r=t(36);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r=t(46);n.exports=function(n,e,t){for(var a in e)r(n,a,e[a],t);return n}},function(n,e,t){"use strict";n.exports=function(n,e){return{value:n,done:e}}},function(n,e,t){"use strict";var r=t(13);n.exports=function(n,e,t){for(var a=n.length-1;a>=0;a--)if(void 0!==n[a])try{t=r(n[a].iterator,e,t)}catch(n){e="throw",t=n}if("throw"===e)throw t;return t}},function(n,e,t){"use strict";var r=t(12),a=t(157).left,s=t(158),o=t(75);r({target:"Array",proto:!0,forced:!t(159)&&o>79&&o<83||!s("reduce")},{reduce:function(n){var e=arguments.length;return a(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(9),a=t(31),s=t(66),o=t(32),i=TypeError,l="Reduce of empty array with no initial value",c=function(n){return function(e,t,c,d){var p=a(e),m=s(p),u=o(p);if(r(t),0===u&&c<2)throw new i(l);var g=n?u-1:0,h=n?-1:1;if(c<2)for(;;){if(g in m){d=m[g],g+=h;break}if(g+=h,n?g<0:u<=g)throw new i(l)}for(;n?g>=0:u>g;g+=h)g in m&&(d=t(d,m[g],g,p));return d}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){"use strict";var r=t(1);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var r=t(160);n.exports="NODE"===r},function(n,e,t){"use strict";var r=t(0),a=t(76),s=t(29),o=function(n){return a.slice(0,n.length)===n};n.exports=o("Bun/")?"BUN":o("Cloudflare-Workers")?"CLOUDFLARE":o("Deno/")?"DENO":o("Node.js/")?"NODE":r.Bun&&"string"==typeof Bun.version?"BUN":r.Deno&&"object"==typeof Deno.version?"DENO":"process"===s(r.process)?"NODE":r.window&&r.document?"BROWSER":"REST"},function(n,e,t){"use strict";var r=t(29),a=t(5);n.exports=function(n){if("Function"===r(n))return a(n)}},function(n,e,t){"use strict";var r=t(17),a=t(92),s=r("iterator"),o=Array.prototype;n.exports=function(n){return void 0!==n&&(a.Array===n||o[s]===n)}},function(n,e,t){"use strict";var r=t(7),a=t(9),s=t(3),o=t(50),i=t(93),l=TypeError;n.exports=function(n,e){var t=arguments.length<2?i(n):e;if(a(t))return s(r(t,n));throw new l(o(n)+" is not iterable")}},function(n,e,t){"use strict";var r={};r[t(17)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){"use strict";var r=t(12),a=t(47),s=t(9),o=t(3),i=t(26),l=t(13),c=t(27),d=t(95),p=t(1),m=TypeError,u=p((function(){[].keys().reduce((function(){}),void 0)})),g=!u&&c("reduce",m);r({target:"Iterator",proto:!0,real:!0,forced:u||g},{reduce:function(n){o(this);try{s(n)}catch(n){l(this,"throw",n)}var e=arguments.length<2,t=e?void 0:arguments[1];if(g)return d(g,this,e?[n]:[n,t]);var r=i(this),c=0;if(a(r,(function(r){e?(e=!1,t=r):t=n(t,r,c),c++}),{IS_RECORD:!0}),e)throw new m("Reduce of empty iterator with no initial value");return t}})},function(n,e,t){"use strict";var r=t(36),a=t(11),s=t(25),o=t(37),i=t(96),l=t(84),c=t(170),d=t(171),p=t(172),m=t(173),u=t(174),g=t(6),h=t(24);n.exports=function(n,e,t,v){var f=v?2:1,b=n.split("."),x=b[b.length-1],j=r.apply(null,b);if(j){var y=j.prototype;if(!h&&a(y,"cause")&&delete y.cause,!t)return j;var k=r("Error"),z=e((function(n,e){var t=p(v?e:n,void 0),r=v?new j(n):new j;return void 0!==t&&s(r,"message",t),u(r,z,r.stack,2),this&&o(y,this)&&d(r,this,z),arguments.length>f&&m(r,arguments[f]),r}));if(z.prototype=y,"Error"!==x?i?i(z,k):l(z,k,{name:!0}):g&&"stackTraceLimit"in j&&(c(z,j,"stackTraceLimit"),c(z,j,"prepareStackTrace")),l(z,j),!h)try{y.name!==x&&s(y,"name",x),y.constructor=z}catch(n){}return z}}},function(n,e,t){"use strict";var r=t(5),a=t(9);n.exports=function(n,e,t){try{return r(a(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var r=t(169),a=String,s=TypeError;n.exports=function(n){if(r(n))return n;throw new s("Can't set "+a(n)+" as a prototype")}},function(n,e,t){"use strict";var r=t(10);n.exports=function(n){return r(n)||null===n}},function(n,e,t){"use strict";var r=t(18).f;n.exports=function(n,e,t){t in n||r(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var r=t(2),a=t(10),s=t(96);n.exports=function(n,e,t){var o,i;return s&&r(o=e.constructor)&&o!==t&&a(i=o.prototype)&&i!==t.prototype&&s(n,i),n}},function(n,e,t){"use strict";var r=t(128);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){"use strict";var r=t(10),a=t(25);n.exports=function(n,e){r(e)&&"cause"in e&&a(n,"cause",e.cause)}},function(n,e,t){"use strict";var r=t(25),a=t(175),s=t(176),o=Error.captureStackTrace;n.exports=function(n,e,t,i){s&&(o?o(n,e):r(n,"stack",a(t,i)))}},function(n,e,t){"use strict";var r=t(5),a=Error,s=r("".replace),o=String(new a("zxcasd").stack),i=/\n\s*at [^:]*:[^\n]*/,l=i.test(o);n.exports=function(n,e){if(l&&"string"==typeof n&&!a.prepareStackTrace)for(;e--;)n=s(n,i,"");return n}},function(n,e,t){"use strict";var r=t(1),a=t(34);n.exports=!r((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",a(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var r=t(6),a=t(178),s=TypeError,o=Object.getOwnPropertyDescriptor,i=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=i?function(n,e){if(a(n)&&!o(n,"length").writable)throw new s("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var r=t(29);n.exports=Array.isArray||function(n){return"Array"===r(n)}},function(n,e,t){"use strict";var r=TypeError;n.exports=function(n){if(n>9007199254740991)throw r("Maximum allowed index exceeded");return n}},function(n,e,t){var r=t(97),a=t(181);n.exports=function n(e,t,s,o,i){var l=-1,c=e.length;for(s||(s=a),i||(i=[]);++l<c;){var d=e[l];t>0&&s(d)?t>1?n(d,t-1,s,o,i):r(i,d):o||(i[i.length]=d)}return i}},function(n,e,t){var r=t(30),a=t(56),s=t(14),o=r?r.isConcatSpreadable:void 0;n.exports=function(n){return s(n)||a(n)||!!(o&&n&&n[o])}},function(n,e,t){var r=t(28),a=t(23);n.exports=function(n){return a(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(30),a=Object.prototype,s=a.hasOwnProperty,o=a.toString,i=r?r.toStringTag:void 0;n.exports=function(n){var e=s.call(n,i),t=n[i];try{n[i]=void 0;var r=!0}catch(n){}var a=o.call(n);return r&&(e?n[i]=t:delete n[i]),a}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(186),a=t(242),s=t(64),o=t(14),i=t(253);n.exports=function(n){return"function"==typeof n?n:null==n?s:"object"==typeof n?o(n)?a(n[0],n[1]):r(n):i(n)}},function(n,e,t){var r=t(187),a=t(241),s=t(114);n.exports=function(n){var e=a(n);return 1==e.length&&e[0][2]?s(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(99),a=t(103);n.exports=function(n,e,t,s){var o=t.length,i=o,l=!s;if(null==n)return!i;for(n=Object(n);o--;){var c=t[o];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++o<i;){var d=(c=t[o])[0],p=n[d],m=c[1];if(l&&c[2]){if(void 0===p&&!(d in n))return!1}else{var u=new r;if(s)var g=s(p,m,d,n,e,u);if(!(void 0===g?a(m,p,3,s,u):g))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(40),a=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():a.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(40);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(40);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(40);n.exports=function(n,e){var t=this.__data__,a=r(t,n);return a<0?(++this.size,t.push([n,e])):t[a][1]=e,this}},function(n,e,t){var r=t(39);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(39),a=t(57),s=t(59);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var o=t.__data__;if(!a||o.length<199)return o.push([n,e]),this.size=++t.size,this;t=this.__data__=new s(o)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(101),a=t(199),s=t(58),o=t(102),i=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,p=c.hasOwnProperty,m=RegExp("^"+d.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!s(n)||a(n))&&(r(n)?m:i).test(o(n))}},function(n,e,t){var r,a=t(200),s=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!s&&s in n}},function(n,e,t){var r=t(15)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(203),a=t(39),s=t(57);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(s||a),string:new r}}},function(n,e,t){var r=t(204),a=t(205),s=t(206),o=t(207),i=t(208);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=s,l.prototype.has=o,l.prototype.set=i,n.exports=l},function(n,e,t){var r=t(41);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(41),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return a.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(41),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:a.call(e,n)}},function(n,e,t){var r=t(41);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(42);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(42);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(42);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(42);n.exports=function(n,e){var t=r(this,n),a=t.size;return t.set(n,e),this.size+=t.size==a?0:1,this}},function(n,e,t){var r=t(99),a=t(104),s=t(218),o=t(221),i=t(237),l=t(14),c=t(108),d=t(110),p="[object Object]",m=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,u,g,h){var v=l(n),f=l(e),b=v?"[object Array]":i(n),x=f?"[object Array]":i(e),j=(b="[object Arguments]"==b?p:b)==p,y=(x="[object Arguments]"==x?p:x)==p,k=b==x;if(k&&c(n)){if(!c(e))return!1;v=!0,j=!1}if(k&&!j)return h||(h=new r),v||d(n)?a(n,e,t,u,g,h):s(n,e,b,t,u,g,h);if(!(1&t)){var z=j&&m.call(n,"__wrapped__"),S=y&&m.call(e,"__wrapped__");if(z||S){var I=z?n.value():n,w=S?e.value():e;return h||(h=new r),g(I,w,t,u,h)}}return!!k&&(h||(h=new r),o(n,e,t,u,g,h))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(30),a=t(219),s=t(100),o=t(104),i=t(220),l=t(60),c=r?r.prototype:void 0,d=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,p,m){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!p(new a(n),new a(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return s(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var u=i;case"[object Set]":var g=1&r;if(u||(u=l),n.size!=e.size&&!g)return!1;var h=m.get(n);if(h)return h==e;r|=2,m.set(n,e);var v=o(u(n),u(e),r,c,p,m);return m.delete(n),v;case"[object Symbol]":if(d)return d.call(n)==d.call(e)}return!1}},function(n,e,t){var r=t(15).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(222),a=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,s,o,i){var l=1&t,c=r(n),d=c.length;if(d!=r(e).length&&!l)return!1;for(var p=d;p--;){var m=c[p];if(!(l?m in e:a.call(e,m)))return!1}var u=i.get(n),g=i.get(e);if(u&&g)return u==e&&g==n;var h=!0;i.set(n,e),i.set(e,n);for(var v=l;++p<d;){var f=n[m=c[p]],b=e[m];if(s)var x=l?s(b,f,m,e,n,i):s(f,b,m,n,e,i);if(!(void 0===x?f===b||o(f,b,t,s,i):x)){h=!1;break}v||(v="constructor"==m)}if(h&&!v){var j=n.constructor,y=e.constructor;j==y||!("constructor"in n)||!("constructor"in e)||"function"==typeof j&&j instanceof j&&"function"==typeof y&&y instanceof y||(h=!1)}return i.delete(n),i.delete(e),h}},function(n,e,t){var r=t(223),a=t(224),s=t(107);n.exports=function(n){return r(n,s,a)}},function(n,e,t){var r=t(97),a=t(14);n.exports=function(n,e,t){var s=e(n);return a(n)?s:r(s,t(n))}},function(n,e,t){var r=t(225),a=t(226),s=Object.prototype.propertyIsEnumerable,o=Object.getOwnPropertySymbols,i=o?function(n){return null==n?[]:(n=Object(n),r(o(n),(function(e){return s.call(n,e)})))}:a;n.exports=i},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=0,s=[];++t<r;){var o=n[t];e(o,t,n)&&(s[a++]=o)}return s}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(228),a=t(56),s=t(14),o=t(108),i=t(109),l=t(110),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=s(n),d=!t&&a(n),p=!t&&!d&&o(n),m=!t&&!d&&!p&&l(n),u=t||d||p||m,g=u?r(n.length,String):[],h=g.length;for(var v in n)!e&&!c.call(n,v)||u&&("length"==v||p&&("offset"==v||"parent"==v)||m&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||i(v,h))||g.push(v);return g}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(28),a=t(61),s=t(23),o={};o["[object Float32Array]"]=o["[object Float64Array]"]=o["[object Int8Array]"]=o["[object Int16Array]"]=o["[object Int32Array]"]=o["[object Uint8Array]"]=o["[object Uint8ClampedArray]"]=o["[object Uint16Array]"]=o["[object Uint32Array]"]=!0,o["[object Arguments]"]=o["[object Array]"]=o["[object ArrayBuffer]"]=o["[object Boolean]"]=o["[object DataView]"]=o["[object Date]"]=o["[object Error]"]=o["[object Function]"]=o["[object Map]"]=o["[object Number]"]=o["[object Object]"]=o["[object RegExp]"]=o["[object Set]"]=o["[object String]"]=o["[object WeakMap]"]=!1,n.exports=function(n){return s(n)&&a(n.length)&&!!o[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(98),a=e&&!e.nodeType&&e,s=a&&"object"==typeof n&&n&&!n.nodeType&&n,o=s&&s.exports===a&&r.process,i=function(){try{var n=s&&s.require&&s.require("util").types;return n||o&&o.binding&&o.binding("util")}catch(n){}}();n.exports=i}).call(this,t(68)(n))},function(n,e,t){var r=t(234),a=t(235),s=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return a(n);var e=[];for(var t in Object(n))s.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(236)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(238),a=t(57),s=t(239),o=t(112),i=t(240),l=t(28),c=t(102),d=c(r),p=c(a),m=c(s),u=c(o),g=c(i),h=l;(r&&"[object DataView]"!=h(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=h(new a)||s&&"[object Promise]"!=h(s.resolve())||o&&"[object Set]"!=h(new o)||i&&"[object WeakMap]"!=h(new i))&&(h=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case d:return"[object DataView]";case p:return"[object Map]";case m:return"[object Promise]";case u:return"[object Set]";case g:return"[object WeakMap]"}return e}),n.exports=h},function(n,e,t){var r=t(19)(t(15),"DataView");n.exports=r},function(n,e,t){var r=t(19)(t(15),"Promise");n.exports=r},function(n,e,t){var r=t(19)(t(15),"WeakMap");n.exports=r},function(n,e,t){var r=t(113),a=t(107);n.exports=function(n){for(var e=a(n),t=e.length;t--;){var s=e[t],o=n[s];e[t]=[s,o,r(o)]}return e}},function(n,e,t){var r=t(103),a=t(243),s=t(250),o=t(62),i=t(113),l=t(114),c=t(43);n.exports=function(n,e){return o(n)&&i(e)?l(c(n),e):function(t){var o=a(t,n);return void 0===o&&o===e?s(t,n):r(e,o,3)}}},function(n,e,t){var r=t(115);n.exports=function(n,e,t){var a=null==n?void 0:r(n,e);return void 0===a?t:a}},function(n,e,t){var r=t(245),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,s=/\\(\\)?/g,o=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(a,(function(n,t,r,a){e.push(r?a.replace(s,"$1"):t||n)})),e}));n.exports=o},function(n,e,t){var r=t(246);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(59);function a(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,a=e?e.apply(this,r):r[0],s=t.cache;if(s.has(a))return s.get(a);var o=n.apply(this,r);return t.cache=s.set(a,o)||s,o};return t.cache=new(a.Cache||r),t}a.Cache=r,n.exports=a},function(n,e,t){var r=t(248);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(30),a=t(249),s=t(14),o=t(63),i=r?r.prototype:void 0,l=i?i.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(s(e))return a(e,n)+"";if(o(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=Array(r);++t<r;)a[t]=e(n[t],t,n);return a}},function(n,e,t){var r=t(251),a=t(252);n.exports=function(n,e){return null!=n&&a(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(116),a=t(56),s=t(14),o=t(109),i=t(61),l=t(43);n.exports=function(n,e,t){for(var c=-1,d=(e=r(e,n)).length,p=!1;++c<d;){var m=l(e[c]);if(!(p=null!=n&&t(n,m)))break;n=n[m]}return p||++c!=d?p:!!(d=null==n?0:n.length)&&i(d)&&o(m,d)&&(s(n)||a(n))}},function(n,e,t){var r=t(254),a=t(255),s=t(62),o=t(43);n.exports=function(n){return s(n)?r(o(n)):a(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(115);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(64),a=t(257),s=t(259);n.exports=function(n,e){return s(a(n,e,r),n+"")}},function(n,e,t){var r=t(258),a=Math.max;n.exports=function(n,e,t){return e=a(void 0===e?n.length-1:e,0),function(){for(var s=arguments,o=-1,i=a(s.length-e,0),l=Array(i);++o<i;)l[o]=s[e+o];o=-1;for(var c=Array(e+1);++o<e;)c[o]=s[o];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(260),a=t(263)(r);n.exports=a},function(n,e,t){var r=t(261),a=t(262),s=t(64),o=a?function(n,e){return a(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:s;n.exports=o},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(19),a=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=a},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var a=t(),s=16-(a-r);if(r=a,s>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(105),a=t(265),s=t(270),o=t(106),i=t(271),l=t(60);n.exports=function(n,e,t){var c=-1,d=a,p=n.length,m=!0,u=[],g=u;if(t)m=!1,d=s;else if(p>=200){var h=e?null:i(n);if(h)return l(h);m=!1,d=o,g=new r}else g=e?[]:u;n:for(;++c<p;){var v=n[c],f=e?e(v):v;if(v=t||0!==v?v:0,m&&f==f){for(var b=g.length;b--;)if(g[b]===f)continue n;e&&g.push(f),u.push(v)}else d(g,f,t)||(g!==u&&g.push(f),u.push(v))}return u}},function(n,e,t){var r=t(266);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(267),a=t(268),s=t(269);n.exports=function(n,e,t){return e==e?s(n,e,t):r(n,a,t)}},function(n,e){n.exports=function(n,e,t,r){for(var a=n.length,s=t+(r?1:-1);r?s--:++s<a;)if(e(n[s],s,n))return s;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,a=n.length;++r<a;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,a=null==n?0:n.length;++r<a;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(112),a=t(272),s=t(60),o=r&&1/s(new r([,-0]))[1]==1/0?function(n){return new r(n)}:a;n.exports=o},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(111),a=t(23);n.exports=function(n){return a(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(117)},function(n,e,t){"use strict";t(118)},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(119)},function(n,e,t){"use strict";t(120)},function(n,e,t){"use strict";t(121)},function(n,e,t){"use strict";t.r(e);t(4),t(16),t(20);var r=Object.freeze({}),a=Array.isArray;function s(n){return null==n}function o(n){return null!=n}function i(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function d(n){return null!==n&&"object"==typeof n}var p=Object.prototype.toString;function m(n){return"[object Object]"===p.call(n)}function u(n){return"[object RegExp]"===p.call(n)}function g(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function h(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function v(n){return null==n?"":Array.isArray(n)||m(n)&&n.toString===p?JSON.stringify(n,f,2):String(n)}function f(n,e){return e&&e.__v_isRef?e.value:e}function b(n){var e=parseFloat(n);return isNaN(e)?n:e}function x(n,e){for(var t=Object.create(null),r=n.split(","),a=0;a<r.length;a++)t[r[a]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}x("slot,component",!0);var j=x("key,ref,slot,slot-scope,is");function y(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var r=n.indexOf(e);if(r>-1)return n.splice(r,1)}}var k=Object.prototype.hasOwnProperty;function z(n,e){return k.call(n,e)}function S(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var I=/-(\w)/g,w=S((function(n){return n.replace(I,(function(n,e){return e?e.toUpperCase():""}))})),T=S((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),_=/\B([A-Z])/g,E=S((function(n){return n.replace(_,"-$1").toLowerCase()}));var A=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function B(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function F(n,e){for(var t in e)n[t]=e[t];return n}function O(n){for(var e={},t=0;t<n.length;t++)n[t]&&F(e,n[t]);return e}function D(n,e,t){}var P=function(n,e,t){return!1},C=function(n){return n};function J(n,e){if(n===e)return!0;var t=d(n),r=d(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var a=Array.isArray(n),s=Array.isArray(e);if(a&&s)return n.length===e.length&&n.every((function(n,t){return J(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(a||s)return!1;var o=Object.keys(n),i=Object.keys(e);return o.length===i.length&&o.every((function(t){return J(n[t],e[t])}))}catch(n){return!1}}function U(n,e){for(var t=0;t<n.length;t++)if(J(n[t],e))return t;return-1}function G(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function L(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var N=["component","directive","filter"],R=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],q={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:P,isReservedAttr:P,isUnknownElement:P,getTagNamespace:D,parsePlatformTagName:C,mustUseProp:P,async:!0,_lifecycleHooks:R},H=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function M(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function V(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var X=new RegExp("[^".concat(H.source,".$_\\d]"));var Z="__proto__"in{},Q="undefined"!=typeof window,W=Q&&window.navigator.userAgent.toLowerCase(),K=W&&/msie|trident/.test(W),Y=W&&W.indexOf("msie 9.0")>0,nn=W&&W.indexOf("edge/")>0;W&&W.indexOf("android");var en=W&&/iphone|ipad|ipod|ios/.test(W);W&&/chrome\/\d+/.test(W),W&&/phantomjs/.test(W);var tn,rn=W&&W.match(/firefox\/(\d+)/),an={}.watch,sn=!1;if(Q)try{var on={};Object.defineProperty(on,"passive",{get:function(){sn=!0}}),window.addEventListener("test-passive",null,on)}catch(n){}var ln=function(){return void 0===tn&&(tn=!Q&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),tn},cn=Q&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function dn(n){return"function"==typeof n&&/native code/.test(n.toString())}var pn,mn="undefined"!=typeof Symbol&&dn(Symbol)&&"undefined"!=typeof Reflect&&dn(Reflect.ownKeys);pn="undefined"!=typeof Set&&dn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=null;function gn(n){void 0===n&&(n=null),n||un&&un._scope.off(),un=n,n&&n._scope.on()}var hn=function(){function n(n,e,t,r,a,s,o,i){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=a,this.ns=void 0,this.context=s,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=o,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=i,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),vn=function(n){void 0===n&&(n="");var e=new hn;return e.text=n,e.isComment=!0,e};function fn(n){return new hn(void 0,void 0,void 0,String(n))}function bn(n){var e=new hn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}"function"==typeof SuppressedError&&SuppressedError;var xn=0,jn=[],yn=function(){function n(){this._pending=!1,this.id=xn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,jn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,r=e.length;t<r;t++){0,e[t].update()}},n}();yn.target=null;var kn=[];function zn(n){kn.push(n),yn.target=n}function Sn(){kn.pop(),yn.target=kn[kn.length-1]}var In=Array.prototype,wn=Object.create(In);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=In[n];V(wn,n,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var a,s=e.apply(this,t),o=this.__ob__;switch(n){case"push":case"unshift":a=t;break;case"splice":a=t.slice(2)}return a&&o.observeArray(a),o.dep.notify(),s}))}));var Tn=Object.getOwnPropertyNames(wn),_n={},En=!0;function An(n){En=n}var $n={notify:D,depend:D,addSub:D,removeSub:D},Bn=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?$n:new yn,this.vmCount=0,V(n,"__ob__",this),a(n)){if(!t)if(Z)n.__proto__=wn;else for(var r=0,s=Tn.length;r<s;r++){V(n,i=Tn[r],wn[i])}e||this.observeArray(n)}else{var o=Object.keys(n);for(r=0;r<o.length;r++){var i;On(n,i=o[r],_n,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Fn(n[e],!1,this.mock)},n}();function Fn(n,e,t){return n&&z(n,"__ob__")&&n.__ob__ instanceof Bn?n.__ob__:!En||!t&&ln()||!a(n)&&!m(n)||!Object.isExtensible(n)||n.__v_skip||Ln(n)||n instanceof hn?void 0:new Bn(n,e,t)}function On(n,e,t,r,s,o,i){void 0===i&&(i=!1);var l=new yn,c=Object.getOwnPropertyDescriptor(n,e);if(!c||!1!==c.configurable){var d=c&&c.get,p=c&&c.set;d&&!p||t!==_n&&2!==arguments.length||(t=n[e]);var m=s?t&&t.__ob__:Fn(t,!1,o);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=d?d.call(n):t;return yn.target&&(l.depend(),m&&(m.dep.depend(),a(e)&&Cn(e))),Ln(e)&&!s?e.value:e},set:function(e){var r=d?d.call(n):t;if(L(r,e)){if(p)p.call(n,e);else{if(d)return;if(!s&&Ln(r)&&!Ln(e))return void(r.value=e);t=e}m=s?e&&e.__ob__:Fn(e,!1,o),l.notify()}}}),l}}function Dn(n,e,t){if(!Gn(n)){var r=n.__ob__;return a(n)&&g(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),r&&!r.shallow&&r.mock&&Fn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||r&&r.vmCount?t:r?(On(r.value,e,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(n[e]=t,t)}}function Pn(n,e){if(a(n)&&g(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Gn(n)||z(n,e)&&(delete n[e],t&&t.dep.notify())}}function Cn(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),a(e)&&Cn(e)}function Jn(n){return Un(n,!0),V(n,"__v_isShallow",!0),n}function Un(n,e){if(!Gn(n)){Fn(n,e,ln());0}}function Gn(n){return!(!n||!n.__v_isReadonly)}function Ln(n){return!(!n||!0!==n.__v_isRef)}function Nn(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Ln(n))return n.value;var r=n&&n.__ob__;return r&&r.dep.depend(),n},set:function(n){var r=e[t];Ln(r)&&!Ln(n)?r.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Rn;var qn=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Rn,!n&&Rn&&(this.index=(Rn.scopes||(Rn.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=Rn;try{return Rn=this,n()}finally{Rn=e}}else 0},n.prototype.on=function(){Rn=this},n.prototype.off=function(){Rn=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Hn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Mn=S((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function Vn(n,e){function t(){var n=t.fns;if(!a(n))return Ee(n,null,arguments,e,"v-on handler");for(var r=n.slice(),s=0;s<r.length;s++)Ee(r[s],null,arguments,e,"v-on handler")}return t.fns=n,t}function Xn(n,e,t,r,a,o){var l,c,d,p;for(l in n)c=n[l],d=e[l],p=Mn(l),s(c)||(s(d)?(s(c.fns)&&(c=n[l]=Vn(c,o)),i(p.once)&&(c=n[l]=a(p.name,c,p.capture)),t(p.name,c,p.capture,p.passive,p.params)):c!==d&&(d.fns=c,n[l]=d));for(l in e)s(n[l])&&r((p=Mn(l)).name,e[l],p.capture)}function Zn(n,e,t){var r;n instanceof hn&&(n=n.data.hook||(n.data.hook={}));var a=n[e];function l(){t.apply(this,arguments),y(r.fns,l)}s(a)?r=Vn([l]):o(a.fns)&&i(a.merged)?(r=a).fns.push(l):r=Vn([a,l]),r.merged=!0,n[e]=r}function Qn(n,e,t,r,a){if(o(e)){if(z(e,t))return n[t]=e[t],a||delete e[t],!0;if(z(e,r))return n[t]=e[r],a||delete e[r],!0}return!1}function Wn(n){return l(n)?[fn(n)]:a(n)?function n(e,t){var r,c,d,p,m=[];for(r=0;r<e.length;r++)s(c=e[r])||"boolean"==typeof c||(d=m.length-1,p=m[d],a(c)?c.length>0&&(Kn((c=n(c,"".concat(t||"","_").concat(r)))[0])&&Kn(p)&&(m[d]=fn(p.text+c[0].text),c.shift()),m.push.apply(m,c)):l(c)?Kn(p)?m[d]=fn(p.text+c):""!==c&&m.push(fn(c)):Kn(c)&&Kn(p)?m[d]=fn(p.text+c.text):(i(e._isVList)&&o(c.tag)&&s(c.key)&&o(t)&&(c.key="__vlist".concat(t,"_").concat(r,"__")),m.push(c)));return m}(n):void 0}function Kn(n){return o(n)&&o(n.text)&&!1===n.isComment}function Yn(n,e){var t,r,s,i,l=null;if(a(n)||"string"==typeof n)for(l=new Array(n.length),t=0,r=n.length;t<r;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(d(n))if(mn&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)l.push(e(p.value,l.length)),p=c.next()}else for(s=Object.keys(n),l=new Array(s.length),t=0,r=s.length;t<r;t++)i=s[t],l[t]=e(n[i],i,t);return o(l)||(l=[]),l._isVList=!0,l}function ne(n,e,t,r){var a,s=this.$scopedSlots[n];s?(t=t||{},r&&(t=F(F({},r),t)),a=s(t)||(c(e)?e():e)):a=this.$slots[n]||(c(e)?e():e);var o=t&&t.slot;return o?this.$createElement("template",{slot:o},a):a}function ee(n){return Bt(this.$options,"filters",n,!0)||C}function te(n,e){return a(n)?-1===n.indexOf(e):n!==e}function re(n,e,t,r,a){var s=q.keyCodes[e]||t;return a&&r&&!q.keyCodes[e]?te(a,r):s?te(s,n):r?E(r)!==e:void 0===n}function ae(n,e,t,r,s){if(t)if(d(t)){a(t)&&(t=O(t));var o=void 0,i=function(a){if("class"===a||"style"===a||j(a))o=n;else{var i=n.attrs&&n.attrs.type;o=r||q.mustUseProp(e,i,a)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=w(a),c=E(a);l in o||c in o||(o[a]=t[a],s&&((n.on||(n.on={}))["update:".concat(a)]=function(n){t[a]=n}))};for(var l in t)i(l)}else;return n}function se(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||ie(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),r}function oe(n,e,t){return ie(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ie(n,e,t){if(a(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&le(n[r],"".concat(e,"_").concat(r),t);else le(n,e,t)}function le(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function ce(n,e){if(e)if(m(e)){var t=n.on=n.on?F({},n.on):{};for(var r in e){var a=t[r],s=e[r];t[r]=a?[].concat(a,s):s}}else;return n}function de(n,e,t,r){e=e||{$stable:!t};for(var s=0;s<n.length;s++){var o=n[s];a(o)?de(o,e,t):o&&(o.proxy&&(o.fn.proxy=!0),e[o.key]=o.fn)}return r&&(e.$key=r),e}function pe(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function me(n,e){return"string"==typeof n?e+n:n}function ue(n){n._o=oe,n._n=b,n._s=v,n._l=Yn,n._t=ne,n._q=J,n._i=U,n._m=se,n._f=ee,n._k=re,n._b=ae,n._v=fn,n._e=vn,n._u=de,n._g=ce,n._d=pe,n._p=me}function ge(n,e){if(!n||!n.length)return{};for(var t={},r=0,a=n.length;r<a;r++){var s=n[r],o=s.data;if(o&&o.attrs&&o.attrs.slot&&delete o.attrs.slot,s.context!==e&&s.fnContext!==e||!o||null==o.slot)(t.default||(t.default=[])).push(s);else{var i=o.slot,l=t[i]||(t[i]=[]);"template"===s.tag?l.push.apply(l,s.children||[]):l.push(s)}}for(var c in t)t[c].every(he)&&delete t[c];return t}function he(n){return n.isComment&&!n.asyncFactory||" "===n.text}function ve(n){return n.isComment&&n.asyncFactory}function fe(n,e,t,a){var s,o=Object.keys(t).length>0,i=e?!!e.$stable:!o,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(i&&a&&a!==r&&l===a.$key&&!o&&!a.$hasNormal)return a;for(var c in s={},e)e[c]&&"$"!==c[0]&&(s[c]=be(n,t,c,e[c]))}else s={};for(var d in t)d in s||(s[d]=xe(t,d));return e&&Object.isExtensible(e)&&(e._normalized=s),V(s,"$stable",i),V(s,"$key",l),V(s,"$hasNormal",o),s}function be(n,e,t,r){var s=function(){var e=un;gn(n);var t=arguments.length?r.apply(null,arguments):r({}),s=(t=t&&"object"==typeof t&&!a(t)?[t]:Wn(t))&&t[0];return gn(e),t&&(!s||1===t.length&&s.isComment&&!ve(s))?void 0:t};return r.proxy&&Object.defineProperty(e,t,{get:s,enumerable:!0,configurable:!0}),s}function xe(n,e){return function(){return n[e]}}function je(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};V(e,"_v_attr_proxy",!0),ye(e,n.$attrs,r,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||ye(n._listenersProxy={},n.$listeners,r,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||ze(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:A(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return Nn(n,e,t)}))}}}function ye(n,e,t,r,a){var s=!1;for(var o in e)o in n?e[o]!==t[o]&&(s=!0):(s=!0,ke(n,o,r,a));for(var o in n)o in e||(s=!0,delete n[o]);return s}function ke(n,e,t,r){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[r][e]}})}function ze(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var Se=null;function Ie(n,e){return(n.__esModule||mn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),d(n)?e.extend(n):n}function we(n){if(a(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||ve(t)))return t}}function Te(n,e,t,r,p,m){return(a(t)||l(t))&&(p=r,r=t,t=void 0),i(m)&&(p=2),function(n,e,t,r,l){if(o(t)&&o(t.__ob__))return vn();o(t)&&o(t.is)&&(e=t.is);if(!e)return vn();0;a(r)&&c(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===l?r=Wn(r):1===l&&(r=function(n){for(var e=0;e<n.length;e++)if(a(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var p,m;if("string"==typeof e){var u=void 0;m=n.$vnode&&n.$vnode.ns||q.getTagNamespace(e),p=q.isReservedTag(e)?new hn(q.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!o(u=Bt(n.$options,"components",e))?new hn(e,t,r,void 0,void 0,n):kt(u,t,n,r,e)}else p=kt(e,t,n,r);return a(p)?p:o(p)?(o(m)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(o(e.children))for(var a=0,l=e.children.length;a<l;a++){var c=e.children[a];o(c.tag)&&(s(c.ns)||i(r)&&"svg"!==c.tag)&&n(c,t,r)}}(p,m),o(t)&&function(n){d(n.style)&&qe(n.style);d(n.class)&&qe(n.class)}(t),p):vn()}(n,e,t,r,p)}function _e(n,e,t){zn();try{if(e)for(var r=e;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var s=0;s<a.length;s++)try{if(!1===a[s].call(r,n,e,t))return}catch(n){Ae(n,r,"errorCaptured hook")}}Ae(n,e,t)}finally{Sn()}}function Ee(n,e,t,r,a){var s;try{(s=t?n.apply(e,t):n.call(e))&&!s._isVue&&h(s)&&!s._handled&&(s.catch((function(n){return _e(n,r,a+" (Promise/async)")})),s._handled=!0)}catch(n){_e(n,r,a)}return s}function Ae(n,e,t){if(q.errorHandler)try{return q.errorHandler.call(null,n,e,t)}catch(e){e!==n&&$e(e,null,"config.errorHandler")}$e(n,e,t)}function $e(n,e,t){if(!Q||"undefined"==typeof console)throw n;console.error(n)}var Be,Fe=!1,Oe=[],De=!1;function Pe(){De=!1;var n=Oe.slice(0);Oe.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&dn(Promise)){var Ce=Promise.resolve();Be=function(){Ce.then(Pe),en&&setTimeout(D)},Fe=!0}else if(K||"undefined"==typeof MutationObserver||!dn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Be="undefined"!=typeof setImmediate&&dn(setImmediate)?function(){setImmediate(Pe)}:function(){setTimeout(Pe,0)};else{var Je=1,Ue=new MutationObserver(Pe),Ge=document.createTextNode(String(Je));Ue.observe(Ge,{characterData:!0}),Be=function(){Je=(Je+1)%2,Ge.data=String(Je)},Fe=!0}function Le(n,e){var t;if(Oe.push((function(){if(n)try{n.call(e)}catch(n){_e(n,e,"nextTick")}else t&&t(e)})),De||(De=!0,Be()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Ne(n){return function(e,t){if(void 0===t&&(t=un),t)return function(n,e,t){var r=n.$options;r[e]=_t(r[e],t)}(t,n,e)}}Ne("beforeMount"),Ne("mounted"),Ne("beforeUpdate"),Ne("updated"),Ne("beforeDestroy"),Ne("destroyed"),Ne("activated"),Ne("deactivated"),Ne("serverPrefetch"),Ne("renderTracked"),Ne("renderTriggered"),Ne("errorCaptured");var Re=new pn;function qe(n){return function n(e,t){var r,s,o=a(e);if(!o&&!d(e)||e.__v_skip||Object.isFrozen(e)||e instanceof hn)return;if(e.__ob__){var i=e.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(o)for(r=e.length;r--;)n(e[r],t);else if(Ln(e))n(e.value,t);else for(s=Object.keys(e),r=s.length;r--;)n(e[s[r]],t)}(n,Re),Re.clear(),n}var He,Me=0,Ve=function(){function n(n,e,t,r,a){var s,o;s=this,void 0===(o=Rn&&!Rn._vm?Rn:n?n._scope:void 0)&&(o=Rn),o&&o.active&&o.effects.push(s),(this.vm=n)&&a&&(n._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Me,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new pn,this.newDepIds=new pn,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!X.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=D)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;zn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;_e(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&qe(n),Sn(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():gt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||d(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ee(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&y(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Xe(n,e){He.$on(n,e)}function Ze(n,e){He.$off(n,e)}function Qe(n,e){var t=He;return function r(){var a=e.apply(null,arguments);null!==a&&t.$off(n,r)}}function We(n,e,t){He=n,Xn(e,t||{},Xe,Ze,Qe,n),He=void 0}var Ke=null;function Ye(n){var e=Ke;return Ke=n,function(){Ke=e}}function nt(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function et(n,e){if(e){if(n._directInactive=!1,nt(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)et(n.$children[t]);tt(n,"activated")}}function tt(n,e,t,r){void 0===r&&(r=!0),zn();var a=un,s=Rn;r&&gn(n);var o=n.$options[e],i="".concat(e," hook");if(o)for(var l=0,c=o.length;l<c;l++)Ee(o[l],n,t||null,n,i);n._hasHookEvent&&n.$emit("hook:"+e),r&&(gn(a),s&&s.on()),Sn()}var rt=[],at=[],st={},ot=!1,it=!1,lt=0;var ct=0,dt=Date.now;if(Q&&!K){var pt=window.performance;pt&&"function"==typeof pt.now&&dt()>document.createEvent("Event").timeStamp&&(dt=function(){return pt.now()})}var mt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function ut(){var n,e;for(ct=dt(),it=!0,rt.sort(mt),lt=0;lt<rt.length;lt++)(n=rt[lt]).before&&n.before(),e=n.id,st[e]=null,n.run();var t=at.slice(),r=rt.slice();lt=rt.length=at.length=0,st={},ot=it=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,et(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&tt(r,"updated")}}(r),function(){for(var n=0;n<jn.length;n++){var e=jn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}jn.length=0}(),cn&&q.devtools&&cn.emit("flush")}function gt(n){var e=n.id;if(null==st[e]&&(n!==yn.target||!n.noRecurse)){if(st[e]=!0,it){for(var t=rt.length-1;t>lt&&rt[t].id>n.id;)t--;rt.splice(t+1,0,n)}else rt.push(n);ot||(ot=!0,Le(ut))}}function ht(n,e){if(n){for(var t=Object.create(null),r=mn?Reflect.ownKeys(n):Object.keys(n),a=0;a<r.length;a++){var s=r[a];if("__ob__"!==s){var o=n[s].from;if(o in e._provided)t[s]=e._provided[o];else if("default"in n[s]){var i=n[s].default;t[s]=c(i)?i.call(e):i}else 0}}return t}}function vt(n,e,t,s,o){var l,c=this,d=o.options;z(s,"_uid")?(l=Object.create(s))._original=s:(l=s,s=s._original);var p=i(d._compiled),m=!p;this.data=n,this.props=e,this.children=t,this.parent=s,this.listeners=n.on||r,this.injections=ht(d.inject,s),this.slots=function(){return c.$slots||fe(s,n.scopedSlots,c.$slots=ge(t,s)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return fe(s,n.scopedSlots,this.slots())}}),p&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=fe(s,n.scopedSlots,this.$slots)),d._scopeId?this._c=function(n,e,t,r){var o=Te(l,n,e,t,r,m);return o&&!a(o)&&(o.fnScopeId=d._scopeId,o.fnContext=s),o}:this._c=function(n,e,t,r){return Te(l,n,e,t,r,m)}}function ft(n,e,t,r,a){var s=bn(n);return s.fnContext=t,s.fnOptions=r,e.slot&&((s.data||(s.data={})).slot=e.slot),s}function bt(n,e){for(var t in e)n[w(t)]=e[t]}function xt(n){return n.name||n.__name||n._componentTag}ue(vt.prototype);var jt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;jt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;o(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ke)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,s){var o=a.data.scopedSlots,i=n.$scopedSlots,l=!!(o&&!o.$stable||i!==r&&!i.$stable||o&&n.$scopedSlots.$key!==o.$key||!o&&n.$scopedSlots.$key),c=!!(s||n.$options._renderChildren||l),d=n.$vnode;n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a),n.$options._renderChildren=s;var p=a.data.attrs||r;n._attrsProxy&&ye(n._attrsProxy,p,d.data&&d.data.attrs||r,n,"$attrs")&&(c=!0),n.$attrs=p,t=t||r;var m=n.$options._parentListeners;if(n._listenersProxy&&ye(n._listenersProxy,t,m||r,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,We(n,t,m),e&&n.$options.props){An(!1);for(var u=n._props,g=n.$options._propKeys||[],h=0;h<g.length;h++){var v=g[h],f=n.$options.props;u[v]=Ft(v,f,e,n)}An(!0),n.$options.propsData=e}c&&(n.$slots=ge(s,a.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,tt(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,at.push(e)):et(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,nt(e))||e._inactive)){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);tt(e,"deactivated")}}(e,!0):e.$destroy())}},yt=Object.keys(jt);function kt(n,e,t,l,c){if(!s(n)){var p=t.$options._base;if(d(n)&&(n=p.extend(n)),"function"==typeof n){var m;if(s(n.cid)&&void 0===(n=function(n,e){if(i(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=Se;if(t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),i(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var r=n.owners=[t],a=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return y(r,t)}));var p=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},m=G((function(t){n.resolved=Ie(t,e),a?r.length=0:p(!0)})),u=G((function(e){o(n.errorComp)&&(n.error=!0,p(!0))})),g=n(m,u);return d(g)&&(h(g)?s(n.resolved)&&g.then(m,u):h(g.component)&&(g.component.then(m,u),o(g.error)&&(n.errorComp=Ie(g.error,e)),o(g.loading)&&(n.loadingComp=Ie(g.loading,e),0===g.delay?n.loading=!0:l=setTimeout((function(){l=null,s(n.resolved)&&s(n.error)&&(n.loading=!0,p(!1))}),g.delay||200)),o(g.timeout)&&(c=setTimeout((function(){c=null,s(n.resolved)&&u(null)}),g.timeout)))),a=!1,n.loading?n.loadingComp:n.resolved}}(m=n,p)))return function(n,e,t,r,a){var s=vn();return s.asyncFactory=n,s.asyncMeta={data:e,context:t,children:r,tag:a},s}(m,e,t,l,c);e=e||{},Vt(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var s=e.on||(e.on={}),i=s[r],l=e.model.callback;o(i)?(a(i)?-1===i.indexOf(l):i!==l)&&(s[r]=[l].concat(i)):s[r]=l}(n.options,e);var u=function(n,e,t){var r=e.options.props;if(!s(r)){var a={},i=n.attrs,l=n.props;if(o(i)||o(l))for(var c in r){var d=E(c);Qn(a,l,c,d,!0)||Qn(a,i,c,d,!1)}return a}}(e,n);if(i(n.options.functional))return function(n,e,t,s,i){var l=n.options,c={},d=l.props;if(o(d))for(var p in d)c[p]=Ft(p,d,e||r);else o(t.attrs)&&bt(c,t.attrs),o(t.props)&&bt(c,t.props);var m=new vt(t,c,i,s,n),u=l.render.call(null,m._c,m);if(u instanceof hn)return ft(u,t,m.parent,l,m);if(a(u)){for(var g=Wn(u)||[],h=new Array(g.length),v=0;v<g.length;v++)h[v]=ft(g[v],t,m.parent,l,m);return h}}(n,u,e,t,l);var g=e.on;if(e.on=e.nativeOn,i(n.options.abstract)){var v=e.slot;e={},v&&(e.slot=v)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<yt.length;t++){var r=yt[t],a=e[r],s=jt[r];a===s||a&&a._merged||(e[r]=a?zt(s,a):s)}}(e);var f=xt(n.options)||c;return new hn("vue-component-".concat(n.cid).concat(f?"-".concat(f):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:u,listeners:g,tag:c,children:l},m)}}}function zt(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}var St=D,It=q.optionMergeStrategies;function wt(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var r,a,s,o=mn?Reflect.ownKeys(e):Object.keys(e),i=0;i<o.length;i++)"__ob__"!==(r=o[i])&&(a=n[r],s=e[r],t&&z(n,r)?a!==s&&m(a)&&m(s)&&wt(a,s):Dn(n,r,s));return n}function Tt(n,e,t){return t?function(){var r=c(e)?e.call(t,t):e,a=c(n)?n.call(t,t):n;return r?wt(r,a):a}:e?n?function(){return wt(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function _t(n,e){var t=e?n?n.concat(e):a(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Et(n,e,t,r){var a=Object.create(n||null);return e?F(a,e):a}It.data=function(n,e,t){return t?Tt(n,e,t):e&&"function"!=typeof e?n:Tt(n,e)},R.forEach((function(n){It[n]=_t})),N.forEach((function(n){It[n+"s"]=Et})),It.watch=function(n,e,t,r){if(n===an&&(n=void 0),e===an&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var s={};for(var o in F(s,n),e){var i=s[o],l=e[o];i&&!a(i)&&(i=[i]),s[o]=i?i.concat(l):a(l)?l:[l]}return s},It.props=It.methods=It.inject=It.computed=function(n,e,t,r){if(!n)return e;var a=Object.create(null);return F(a,n),e&&F(a,e),a},It.provide=function(n,e){return n?function(){var t=Object.create(null);return wt(t,c(n)?n.call(this):n),e&&wt(t,c(e)?e.call(this):e,!1),t}:e};var At=function(n,e){return void 0===e?n:e};function $t(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var r,s,o={};if(a(t))for(r=t.length;r--;)"string"==typeof(s=t[r])&&(o[w(s)]={type:null});else if(m(t))for(var i in t)s=t[i],o[w(i)]=m(s)?s:{type:s};else 0;n.props=o}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(a(t))for(var s=0;s<t.length;s++)r[t[s]]={from:t[s]};else if(m(t))for(var o in t){var i=t[o];r[o]=m(i)?F({from:o},i):{from:i}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];c(r)&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=$t(n,e.extends,t)),e.mixins))for(var r=0,s=e.mixins.length;r<s;r++)n=$t(n,e.mixins[r],t);var o,i={};for(o in n)l(o);for(o in e)z(n,o)||l(o);function l(r){var a=It[r]||At;i[r]=a(n[r],e[r],t,r)}return i}function Bt(n,e,t,r){if("string"==typeof t){var a=n[e];if(z(a,t))return a[t];var s=w(t);if(z(a,s))return a[s];var o=T(s);return z(a,o)?a[o]:a[t]||a[s]||a[o]}}function Ft(n,e,t,r){var a=e[n],s=!z(t,n),o=t[n],i=Ct(Boolean,a.type);if(i>-1)if(s&&!z(a,"default"))o=!1;else if(""===o||o===E(n)){var l=Ct(String,a.type);(l<0||i<l)&&(o=!0)}if(void 0===o){o=function(n,e,t){if(!z(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(r)&&"Function"!==Dt(e.type)?r.call(n):r}(r,a,n);var d=En;An(!0),Fn(o),An(d)}return o}var Ot=/^\s*function (\w+)/;function Dt(n){var e=n&&n.toString().match(Ot);return e?e[1]:""}function Pt(n,e){return Dt(n)===Dt(e)}function Ct(n,e){if(!a(e))return Pt(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Pt(e[t],n))return t;return-1}var Jt={enumerable:!0,configurable:!0,get:D,set:D};function Ut(n,e,t){Jt.get=function(){return this[e][t]},Jt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Jt)}function Gt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props=Jn({}),a=n.$options._propKeys=[];n.$parent&&An(!1);var s=function(s){a.push(s);var o=Ft(s,e,t,n);On(r,s,o,void 0,!0),s in n||Ut(n,"_props",s)};for(var o in e)s(o);An(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var r=n._setupContext=je(n);gn(n),zn();var a=Ee(t,null,[n._props||Jn({}),r],n,"setup");if(Sn(),gn(),c(a))e.render=a;else if(d(a))if(n._setupState=a,a.__sfc){var s=n._setupProxy={};for(var o in a)"__sfc"!==o&&Nn(s,a,o)}else for(var o in a)M(o)||Nn(n,a,o);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?D:A(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;m(e=n._data=c(e)?function(n,e){zn();try{return n.call(e,e)}catch(n){return _e(n,e,"data()"),{}}finally{Sn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,a=(n.$options.methods,t.length);for(;a--;){var s=t[a];0,r&&z(r,s)||M(s)||Ut(n,"_data",s)}var o=Fn(e);o&&o.vmCount++}(n);else{var t=Fn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=ln();for(var a in e){var s=e[a],o=c(s)?s:s.get;0,r||(t[a]=new Ve(n,o||D,D,Lt)),a in n||Nt(n,a,s)}}(n,e.computed),e.watch&&e.watch!==an&&function(n,e){for(var t in e){var r=e[t];if(a(r))for(var s=0;s<r.length;s++)Ht(n,t,r[s]);else Ht(n,t,r)}}(n,e.watch)}var Lt={lazy:!0};function Nt(n,e,t){var r=!ln();c(t)?(Jt.get=r?Rt(e):qt(t),Jt.set=D):(Jt.get=t.get?r&&!1!==t.cache?Rt(e):qt(t.get):D,Jt.set=t.set||D),Object.defineProperty(n,e,Jt)}function Rt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),yn.target&&e.depend(),e.value}}function qt(n){return function(){return n.call(this,this)}}function Ht(n,e,t,r){return m(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var Mt=0;function Vt(n){var e=n.options;if(n.super){var t=Vt(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var a in t)t[a]!==r[a]&&(e||(e={}),e[a]=t[a]);return e}(n);r&&F(n.extendOptions,r),(e=n.options=$t(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Xt(n){this._init(n)}function Zt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,a=n._Ctor||(n._Ctor={});if(a[r])return a[r];var s=xt(n)||xt(t.options);var o=function(n){this._init(n)};return(o.prototype=Object.create(t.prototype)).constructor=o,o.cid=e++,o.options=$t(t.options,n),o.super=t,o.options.props&&function(n){var e=n.options.props;for(var t in e)Ut(n.prototype,"_props",t)}(o),o.options.computed&&function(n){var e=n.options.computed;for(var t in e)Nt(n.prototype,t,e[t])}(o),o.extend=t.extend,o.mixin=t.mixin,o.use=t.use,N.forEach((function(n){o[n]=t[n]})),s&&(o.options.components[s]=o),o.superOptions=t.options,o.extendOptions=n,o.sealedOptions=F({},o.options),a[r]=o,o}}function Qt(n){return n&&(xt(n.Ctor.options)||n.tag)}function Wt(n,e){return a(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!u(n)&&n.test(e)}function Kt(n,e){var t=n.cache,r=n.keys,a=n._vnode,s=n.$vnode;for(var o in t){var i=t[o];if(i){var l=i.name;l&&!e(l)&&Yt(t,o,r,a)}}s.componentOptions.children=void 0}function Yt(n,e,t,r){var a=n[e];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),n[e]=null,y(t,e)}Xt.prototype._init=function(n){var e=this;e._uid=Mt++,e._isVue=!0,e.__v_skip=!0,e._scope=new qn(!0),e._scope.parent=void 0,e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var a=r.componentOptions;t.propsData=a.propsData,t._parentListeners=a.listeners,t._renderChildren=a.children,t._componentTag=a.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=$t(Vt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&We(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=ge(e._renderChildren,a),n.$scopedSlots=t?fe(n.$parent,t.data.scopedSlots,n.$slots):r,n._c=function(e,t,r,a){return Te(n,e,t,r,a,!1)},n.$createElement=function(e,t,r,a){return Te(n,e,t,r,a,!0)};var s=t&&t.data;On(n,"$attrs",s&&s.attrs||r,null,!0),On(n,"$listeners",e._parentListeners||r,null,!0)}(e),tt(e,"beforeCreate",void 0,!1),function(n){var e=ht(n.$options.inject,n);e&&(An(!1),Object.keys(e).forEach((function(t){On(n,t,e[t])})),An(!0))}(e),Gt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!d(t))return;for(var r=Hn(n),a=mn?Reflect.ownKeys(t):Object.keys(t),s=0;s<a.length;s++){var o=a[s];Object.defineProperty(r,o,Object.getOwnPropertyDescriptor(t,o))}}}(e),tt(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=Dn,n.prototype.$delete=Pn,n.prototype.$watch=function(n,e,t){if(m(e))return Ht(this,n,e,t);(t=t||{}).user=!0;var r=new Ve(this,n,e,t);if(t.immediate){var a='callback for immediate watcher "'.concat(r.expression,'"');zn(),Ee(e,this,[r.value],this,a),Sn()}return function(){r.teardown()}}}(Xt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(a(n))for(var s=0,o=n.length;s<o;s++)r.$on(n[s],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(a(n)){for(var r=0,s=n.length;r<s;r++)t.$off(n[r],e);return t}var o,i=t._events[n];if(!i)return t;if(!e)return t._events[n]=null,t;for(var l=i.length;l--;)if((o=i[l])===e||o.fn===e){i.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?B(t):t;for(var r=B(arguments,1),a='event handler for "'.concat(n,'"'),s=0,o=t.length;s<o;s++)Ee(t[s],e,r,e,a)}return e}}(Xt),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,a=t._vnode,s=Ye(t);t._vnode=n,t.$el=a?t.__patch__(a,n):t.__patch__(t.$el,n,e,!1),s(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var o=t;o&&o.$vnode&&o.$parent&&o.$vnode===o.$parent._vnode;)o.$parent.$el=o.$el,o=o.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){tt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||y(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),tt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Xt),function(n){ue(n.prototype),n.prototype.$nextTick=function(n){return Le(n,this)},n.prototype._render=function(){var n=this,e=n.$options,t=e.render,r=e._parentVnode;r&&n._isMounted&&(n.$scopedSlots=fe(n.$parent,r.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&ze(n._slotsProxy,n.$scopedSlots)),n.$vnode=r;var s,o=un,i=Se;try{gn(n),Se=n,s=t.call(n._renderProxy,n.$createElement)}catch(e){_e(e,n,"render"),s=n._vnode}finally{Se=i,gn(o)}return a(s)&&1===s.length&&(s=s[0]),s instanceof hn||(s=vn()),s.parent=r,s}}(Xt);var nr=[String,RegExp,Array],er={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:nr,exclude:nr,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var a=t.tag,s=t.componentInstance,o=t.componentOptions;n[r]={name:Qt(o),tag:a,componentInstance:s},e.push(r),this.max&&e.length>parseInt(this.max)&&Yt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Yt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Kt(n,(function(n){return Wt(e,n)}))})),this.$watch("exclude",(function(e){Kt(n,(function(n){return!Wt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=we(n),t=e&&e.componentOptions;if(t){var r=Qt(t),a=this.include,s=this.exclude;if(a&&(!r||!Wt(a,r))||s&&r&&Wt(s,r))return e;var o=this.cache,i=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;o[l]?(e.componentInstance=o[l].componentInstance,y(i,l),i.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return q}};Object.defineProperty(n,"config",e),n.util={warn:St,extend:F,mergeOptions:$t,defineReactive:On},n.set=Dn,n.delete=Pn,n.nextTick=Le,n.observable=function(n){return Fn(n),n},n.options=Object.create(null),N.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,F(n.options.components,er),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=B(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=$t(this.options,n),this}}(n),Zt(n),function(n){N.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&m(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Xt),Object.defineProperty(Xt.prototype,"$isServer",{get:ln}),Object.defineProperty(Xt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Xt,"FunctionalRenderContext",{value:vt}),Xt.version="2.7.16";var tr=x("style,class"),rr=x("input,textarea,option,select,progress"),ar=x("contenteditable,draggable,spellcheck"),sr=x("events,caret,typing,plaintext-only"),or=x("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ir="http://www.w3.org/1999/xlink",lr=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},cr=function(n){return lr(n)?n.slice(6,n.length):""},dr=function(n){return null==n||!1===n};function pr(n){for(var e=n.data,t=n,r=n;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=mr(r.data,e));for(;o(t=t.parent);)t&&t.data&&(e=mr(e,t.data));return function(n,e){if(o(n)||o(e))return ur(n,gr(e));return""}(e.staticClass,e.class)}function mr(n,e){return{staticClass:ur(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function ur(n,e){return n?e?n+" "+e:n:e||""}function gr(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,a=n.length;r<a;r++)o(e=gr(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):d(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var hr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},vr=x("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),fr=x("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),br=function(n){return vr(n)||fr(n)};var xr=Object.create(null);var jr=x("text,number,password,search,email,tel,url");var yr=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(hr[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),kr={create:function(n,e){zr(e)},update:function(n,e){n.data.ref!==e.data.ref&&(zr(n,!0),zr(e))},destroy:function(n){zr(n,!0)}};function zr(n,e){var t=n.data.ref;if(o(t)){var r=n.context,s=n.componentInstance||n.elm,i=e?null:s,l=e?void 0:s;if(c(t))Ee(t,r,[i],r,"template ref function");else{var d=n.data.refInFor,p="string"==typeof t||"number"==typeof t,m=Ln(t),u=r.$refs;if(p||m)if(d){var g=p?u[t]:t.value;e?a(g)&&y(g,s):a(g)?g.includes(s)||g.push(s):p?(u[t]=[s],Sr(r,t,u[t])):t.value=[s]}else if(p){if(e&&u[t]!==s)return;u[t]=l,Sr(r,t,i)}else if(m){if(e&&t.value!==s)return;t.value=i}else 0}}}function Sr(n,e,t){var r=n._setupState;r&&z(r,e)&&(Ln(r[e])?r[e].value=t:r[e]=t)}var Ir=new hn("",{},[]),wr=["create","activate","update","remove","destroy"];function Tr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=o(t=n.data)&&o(t=t.attrs)&&t.type,a=o(t=e.data)&&o(t=t.attrs)&&t.type;return r===a||jr(r)&&jr(a)}(n,e)||i(n.isAsyncPlaceholder)&&s(e.asyncFactory.error))}function _r(n,e,t){var r,a,s={};for(r=e;r<=t;++r)o(a=n[r].key)&&(s[a]=r);return s}var Er={create:Ar,update:Ar,destroy:function(n){Ar(n,Ir)}};function Ar(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,a,s=n===Ir,o=e===Ir,i=Br(n.data.directives,n.context),l=Br(e.data.directives,e.context),c=[],d=[];for(t in l)r=i[t],a=l[t],r?(a.oldValue=r.value,a.oldArg=r.arg,Or(a,"update",e,n),a.def&&a.def.componentUpdated&&d.push(a)):(Or(a,"bind",e,n),a.def&&a.def.inserted&&c.push(a));if(c.length){var p=function(){for(var t=0;t<c.length;t++)Or(c[t],"inserted",e,n)};s?Zn(e,"insert",p):p()}d.length&&Zn(e,"postpatch",(function(){for(var t=0;t<d.length;t++)Or(d[t],"componentUpdated",e,n)}));if(!s)for(t in i)l[t]||Or(i[t],"unbind",n,n,o)}(n,e)}var $r=Object.create(null);function Br(n,e){var t,r,a=Object.create(null);if(!n)return a;for(t=0;t<n.length;t++){if((r=n[t]).modifiers||(r.modifiers=$r),a[Fr(r)]=r,e._setupState&&e._setupState.__sfc){var s=r.def||Bt(e,"_setupState","v-"+r.name);r.def="function"==typeof s?{bind:s,update:s}:s}r.def=r.def||Bt(e.$options,"directives",r.name)}return a}function Fr(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Or(n,e,t,r,a){var s=n.def&&n.def[e];if(s)try{s(t.elm,n,t,r,a)}catch(r){_e(r,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Dr=[kr,Er];function Pr(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||s(n.data.attrs)&&s(e.data.attrs))){var r,a,l=e.elm,c=n.data.attrs||{},d=e.data.attrs||{};for(r in(o(d.__ob__)||i(d._v_attr_proxy))&&(d=e.data.attrs=F({},d)),d)a=d[r],c[r]!==a&&Cr(l,r,a,e.data.pre);for(r in(K||nn)&&d.value!==c.value&&Cr(l,"value",d.value),c)s(d[r])&&(lr(r)?l.removeAttributeNS(ir,cr(r)):ar(r)||l.removeAttribute(r))}}function Cr(n,e,t,r){r||n.tagName.indexOf("-")>-1?Jr(n,e,t):or(e)?dr(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):ar(e)?n.setAttribute(e,function(n,e){return dr(e)||"false"===e?"false":"contenteditable"===n&&sr(e)?e:"true"}(e,t)):lr(e)?dr(t)?n.removeAttributeNS(ir,cr(e)):n.setAttributeNS(ir,e,t):Jr(n,e,t)}function Jr(n,e,t){if(dr(t))n.removeAttribute(e);else{if(K&&!Y&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var Ur={create:Pr,update:Pr};function Gr(n,e){var t=e.elm,r=e.data,a=n.data;if(!(s(r.staticClass)&&s(r.class)&&(s(a)||s(a.staticClass)&&s(a.class)))){var i=pr(e),l=t._transitionClasses;o(l)&&(i=ur(i,gr(l))),i!==t._prevClass&&(t.setAttribute("class",i),t._prevClass=i)}}var Lr,Nr={create:Gr,update:Gr};function Rr(n,e,t){var r=Lr;return function a(){var s=e.apply(null,arguments);null!==s&&Mr(n,a,t,r)}}var qr=Fe&&!(rn&&Number(rn[1])<=53);function Hr(n,e,t,r){if(qr){var a=ct,s=e;e=s._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=a||n.timeStamp<=0||n.target.ownerDocument!==document)return s.apply(this,arguments)}}Lr.addEventListener(n,e,sn?{capture:t,passive:r}:t)}function Mr(n,e,t,r){(r||Lr).removeEventListener(n,e._wrapper||e,t)}function Vr(n,e){if(!s(n.data.on)||!s(e.data.on)){var t=e.data.on||{},r=n.data.on||{};Lr=e.elm||n.elm,function(n){if(o(n.__r)){var e=K?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Xn(t,r,Hr,Mr,Rr,e.context),Lr=void 0}}var Xr,Zr={create:Vr,update:Vr,destroy:function(n){return Vr(n,Ir)}};function Qr(n,e){if(!s(n.data.domProps)||!s(e.data.domProps)){var t,r,a=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(o(c.__ob__)||i(c._v_attr_proxy))&&(c=e.data.domProps=F({},c)),l)t in c||(a[t]="");for(t in c){if(r=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===l[t])continue;1===a.childNodes.length&&a.removeChild(a.childNodes[0])}if("value"===t&&"PROGRESS"!==a.tagName){a._value=r;var d=s(r)?"":String(r);Wr(a,d)&&(a.value=d)}else if("innerHTML"===t&&fr(a.tagName)&&s(a.innerHTML)){(Xr=Xr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var p=Xr.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;p.firstChild;)a.appendChild(p.firstChild)}else if(r!==l[t])try{a[t]=r}catch(n){}}}}function Wr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(o(r)){if(r.number)return b(t)!==b(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Kr={create:Qr,update:Qr},Yr=S((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function na(n){var e=ea(n.style);return n.staticStyle?F(n.staticStyle,e):e}function ea(n){return Array.isArray(n)?O(n):"string"==typeof n?Yr(n):n}var ta,ra=/^--/,aa=/\s*!important$/,sa=function(n,e,t){if(ra.test(e))n.style.setProperty(e,t);else if(aa.test(t))n.style.setProperty(E(e),t.replace(aa,""),"important");else{var r=ia(e);if(Array.isArray(t))for(var a=0,s=t.length;a<s;a++)n.style[r]=t[a];else n.style[r]=t}},oa=["Webkit","Moz","ms"],ia=S((function(n){if(ta=ta||document.createElement("div").style,"filter"!==(n=w(n))&&n in ta)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<oa.length;t++){var r=oa[t]+e;if(r in ta)return r}}));function la(n,e){var t=e.data,r=n.data;if(!(s(t.staticStyle)&&s(t.style)&&s(r.staticStyle)&&s(r.style))){var a,i,l=e.elm,c=r.staticStyle,d=r.normalizedStyle||r.style||{},p=c||d,m=ea(e.data.style)||{};e.data.normalizedStyle=o(m.__ob__)?F({},m):m;var u=function(n,e){var t,r={};if(e)for(var a=n;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(t=na(a.data))&&F(r,t);(t=na(n.data))&&F(r,t);for(var s=n;s=s.parent;)s.data&&(t=na(s.data))&&F(r,t);return r}(e,!0);for(i in p)s(u[i])&&sa(l,i,"");for(i in u)a=u[i],sa(l,i,null==a?"":a)}}var ca={create:la,update:la},da=/\s+/;function pa(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(da).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function ma(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(da).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function ua(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&F(e,ga(n.name||"v")),F(e,n),e}return"string"==typeof n?ga(n):void 0}}var ga=S((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),ha=Q&&!Y,va="transition",fa="transitionend",ba="animation",xa="animationend";ha&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(va="WebkitTransition",fa="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(ba="WebkitAnimation",xa="webkitAnimationEnd"));var ja=Q?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function ya(n){ja((function(){ja(n)}))}function ka(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),pa(n,e))}function za(n,e){n._transitionClasses&&y(n._transitionClasses,e),ma(n,e)}function Sa(n,e,t){var r=wa(n,e),a=r.type,s=r.timeout,o=r.propCount;if(!a)return t();var i="transition"===a?fa:xa,l=0,c=function(){n.removeEventListener(i,d),t()},d=function(e){e.target===n&&++l>=o&&c()};setTimeout((function(){l<o&&c()}),s+1),n.addEventListener(i,d)}var Ia=/\b(transform|all)(,|$)/;function wa(n,e){var t,r=window.getComputedStyle(n),a=(r[va+"Delay"]||"").split(", "),s=(r[va+"Duration"]||"").split(", "),o=Ta(a,s),i=(r[ba+"Delay"]||"").split(", "),l=(r[ba+"Duration"]||"").split(", "),c=Ta(i,l),d=0,p=0;return"transition"===e?o>0&&(t="transition",d=o,p=s.length):"animation"===e?c>0&&(t="animation",d=c,p=l.length):p=(t=(d=Math.max(o,c))>0?o>c?"transition":"animation":null)?"transition"===t?s.length:l.length:0,{type:t,timeout:d,propCount:p,hasTransform:"transition"===t&&Ia.test(r[va+"Property"])}}function Ta(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return _a(e)+_a(n[t])})))}function _a(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Ea(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=ua(n.data.transition);if(!s(r)&&!o(t._enterCb)&&1===t.nodeType){for(var a=r.css,i=r.type,l=r.enterClass,p=r.enterToClass,m=r.enterActiveClass,u=r.appearClass,g=r.appearToClass,h=r.appearActiveClass,v=r.beforeEnter,f=r.enter,x=r.afterEnter,j=r.enterCancelled,y=r.beforeAppear,k=r.appear,z=r.afterAppear,S=r.appearCancelled,I=r.duration,w=Ke,T=Ke.$vnode;T&&T.parent;)w=T.context,T=T.parent;var _=!w._isMounted||!n.isRootInsert;if(!_||k||""===k){var E=_&&u?u:l,A=_&&h?h:m,$=_&&g?g:p,B=_&&y||v,F=_&&c(k)?k:f,O=_&&z||x,D=_&&S||j,P=b(d(I)?I.enter:I);0;var C=!1!==a&&!Y,J=Ba(F),U=t._enterCb=G((function(){C&&(za(t,$),za(t,A)),U.cancelled?(C&&za(t,E),D&&D(t)):O&&O(t),t._enterCb=null}));n.data.show||Zn(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),F&&F(t,U)})),B&&B(t),C&&(ka(t,E),ka(t,A),ya((function(){za(t,E),U.cancelled||(ka(t,$),J||($a(P)?setTimeout(U,P):Sa(t,i,U)))}))),n.data.show&&(e&&e(),F&&F(t,U)),C||J||U()}}}function Aa(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=ua(n.data.transition);if(s(r)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var a=r.css,i=r.type,l=r.leaveClass,c=r.leaveToClass,p=r.leaveActiveClass,m=r.beforeLeave,u=r.leave,g=r.afterLeave,h=r.leaveCancelled,v=r.delayLeave,f=r.duration,x=!1!==a&&!Y,j=Ba(u),y=b(d(f)?f.leave:f);0;var k=t._leaveCb=G((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),x&&(za(t,c),za(t,p)),k.cancelled?(x&&za(t,l),h&&h(t)):(e(),g&&g(t)),t._leaveCb=null}));v?v(z):z()}function z(){k.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),m&&m(t),x&&(ka(t,l),ka(t,p),ya((function(){za(t,l),k.cancelled||(ka(t,c),j||($a(y)?setTimeout(k,y):Sa(t,i,k)))}))),u&&u(t,k),x||j||k())}}function $a(n){return"number"==typeof n&&!isNaN(n)}function Ba(n){if(s(n))return!1;var e=n.fns;return o(e)?Ba(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Fa(n,e){!0!==e.data.show&&Ea(e)}var Oa=function(n){var e,t,r={},c=n.modules,d=n.nodeOps;for(e=0;e<wr.length;++e)for(r[wr[e]]=[],t=0;t<c.length;++t)o(c[t][wr[e]])&&r[wr[e]].push(c[t][wr[e]]);function p(n){var e=d.parentNode(n);o(e)&&d.removeChild(e,n)}function m(n,e,t,a,s,l,c){if(o(n.elm)&&o(l)&&(n=l[c]=bn(n)),n.isRootInsert=!s,!function(n,e,t,a){var s=n.data;if(o(s)){var l=o(n.componentInstance)&&s.keepAlive;if(o(s=s.hook)&&o(s=s.init)&&s(n,!1),o(n.componentInstance))return u(n,e),g(t,n.elm,a),i(l)&&function(n,e,t,a){var s,i=n;for(;i.componentInstance;)if(i=i.componentInstance._vnode,o(s=i.data)&&o(s=s.transition)){for(s=0;s<r.activate.length;++s)r.activate[s](Ir,i);e.push(i);break}g(t,n.elm,a)}(n,e,t,a),!0}}(n,e,t,a)){var p=n.data,m=n.children,v=n.tag;o(v)?(n.elm=n.ns?d.createElementNS(n.ns,v):d.createElement(v,n),b(n),h(n,m,e),o(p)&&f(n,e),g(t,n.elm,a)):i(n.isComment)?(n.elm=d.createComment(n.text),g(t,n.elm,a)):(n.elm=d.createTextNode(n.text),g(t,n.elm,a))}}function u(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,v(n)?(f(n,e),b(n)):(zr(n),e.push(n))}function g(n,e,t){o(n)&&(o(t)?d.parentNode(t)===n&&d.insertBefore(n,e,t):d.appendChild(n,e))}function h(n,e,t){if(a(e)){0;for(var r=0;r<e.length;++r)m(e[r],t,n.elm,null,!0,e,r)}else l(n.text)&&d.appendChild(n.elm,d.createTextNode(String(n.text)))}function v(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function f(n,t){for(var a=0;a<r.create.length;++a)r.create[a](Ir,n);o(e=n.data.hook)&&(o(e.create)&&e.create(Ir,n),o(e.insert)&&t.push(n))}function b(n){var e;if(o(e=n.fnScopeId))d.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e),t=t.parent;o(e=Ke)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e)}function j(n,e,t,r,a,s){for(;r<=a;++r)m(t[r],s,n,e,!1,t,r)}function y(n){var e,t,a=n.data;if(o(a))for(o(e=a.hook)&&o(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)y(n.children[t])}function k(n,e,t){for(;e<=t;++e){var r=n[e];o(r)&&(o(r.tag)?(z(r),y(r)):p(r.elm))}}function z(n,e){if(o(e)||o(n.data)){var t,a=r.remove.length+1;for(o(e)?e.listeners+=a:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,a),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&z(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else p(n.elm)}function S(n,e,t,r){for(var a=t;a<r;a++){var s=e[a];if(o(s)&&Tr(n,s))return a}}function I(n,e,t,a,l,c){if(n!==e){o(e.elm)&&o(a)&&(e=a[l]=bn(e));var p=e.elm=n.elm;if(i(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?_(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(i(e.isStatic)&&i(n.isStatic)&&e.key===n.key&&(i(e.isCloned)||i(e.isOnce)))e.componentInstance=n.componentInstance;else{var u,g=e.data;o(g)&&o(u=g.hook)&&o(u=u.prepatch)&&u(n,e);var h=n.children,f=e.children;if(o(g)&&v(e)){for(u=0;u<r.update.length;++u)r.update[u](n,e);o(u=g.hook)&&o(u=u.update)&&u(n,e)}s(e.text)?o(h)&&o(f)?h!==f&&function(n,e,t,r,a){var i,l,c,p=0,u=0,g=e.length-1,h=e[0],v=e[g],f=t.length-1,b=t[0],x=t[f],y=!a;for(0;p<=g&&u<=f;)s(h)?h=e[++p]:s(v)?v=e[--g]:Tr(h,b)?(I(h,b,r,t,u),h=e[++p],b=t[++u]):Tr(v,x)?(I(v,x,r,t,f),v=e[--g],x=t[--f]):Tr(h,x)?(I(h,x,r,t,f),y&&d.insertBefore(n,h.elm,d.nextSibling(v.elm)),h=e[++p],x=t[--f]):Tr(v,b)?(I(v,b,r,t,u),y&&d.insertBefore(n,v.elm,h.elm),v=e[--g],b=t[++u]):(s(i)&&(i=_r(e,p,g)),s(l=o(b.key)?i[b.key]:S(b,e,p,g))?m(b,r,n,h.elm,!1,t,u):Tr(c=e[l],b)?(I(c,b,r,t,u),e[l]=void 0,y&&d.insertBefore(n,c.elm,h.elm)):m(b,r,n,h.elm,!1,t,u),b=t[++u]);p>g?j(n,s(t[f+1])?null:t[f+1].elm,t,u,f,r):u>f&&k(e,p,g)}(p,h,f,t,c):o(f)?(o(n.text)&&d.setTextContent(p,""),j(p,null,f,0,f.length-1,t)):o(h)?k(h,0,h.length-1):o(n.text)&&d.setTextContent(p,""):n.text!==e.text&&d.setTextContent(p,e.text),o(g)&&o(u=g.hook)&&o(u=u.postpatch)&&u(n,e)}}}function w(n,e,t){if(i(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var T=x("attrs,class,staticClass,staticStyle,key");function _(n,e,t,r){var a,s=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,i(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(e,!0),o(a=e.componentInstance)))return u(e,t),!0;if(o(s)){if(o(c))if(n.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==n.innerHTML)return!1}else{for(var d=!0,p=n.firstChild,m=0;m<c.length;m++){if(!p||!_(p,c[m],t,r)){d=!1;break}p=p.nextSibling}if(!d||p)return!1}else h(e,c,t);if(o(l)){var g=!1;for(var v in l)if(!T(v)){g=!0,f(e,t);break}!g&&l.class&&qe(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,a){if(!s(e)){var l,c=!1,p=[];if(s(n))c=!0,m(e,p);else{var u=o(n.nodeType);if(!u&&Tr(n,e))I(n,e,p,null,null,a);else{if(u){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),i(t)&&_(n,e,p))return w(e,p,!0),n;l=n,n=new hn(d.tagName(l).toLowerCase(),{},[],void 0,l)}var g=n.elm,h=d.parentNode(g);if(m(e,p,g._leaveCb?null:h,d.nextSibling(g)),o(e.parent))for(var f=e.parent,b=v(e);f;){for(var x=0;x<r.destroy.length;++x)r.destroy[x](f);if(f.elm=e.elm,b){for(var j=0;j<r.create.length;++j)r.create[j](Ir,f);var z=f.data.hook.insert;if(z.merged)for(var S=z.fns.slice(1),T=0;T<S.length;T++)S[T]()}else zr(f);f=f.parent}o(h)?k([n],0,0):o(n.tag)&&y(n)}}return w(e,p,c),e.elm}o(n)&&y(n)}}({nodeOps:yr,modules:[Ur,Nr,Zr,Kr,ca,Q?{create:Fa,activate:Fa,remove:function(n,e){!0!==n.data.show?Aa(n,e):e()}}:{}].concat(Dr)});Y&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Na(n,"input")}));var Da={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?Zn(t,"postpatch",(function(){Da.componentUpdated(n,e,t)})):Pa(n,e,t.context),n._vOptions=[].map.call(n.options,Ua)):("textarea"===t.tag||jr(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Ga),n.addEventListener("compositionend",La),n.addEventListener("change",La),Y&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Pa(n,e,t.context);var r=n._vOptions,a=n._vOptions=[].map.call(n.options,Ua);if(a.some((function(n,e){return!J(n,r[e])})))(n.multiple?e.value.some((function(n){return Ja(n,a)})):e.value!==e.oldValue&&Ja(e.value,a))&&Na(n,"change")}}};function Pa(n,e,t){Ca(n,e,t),(K||nn)&&setTimeout((function(){Ca(n,e,t)}),0)}function Ca(n,e,t){var r=e.value,a=n.multiple;if(!a||Array.isArray(r)){for(var s,o,i=0,l=n.options.length;i<l;i++)if(o=n.options[i],a)s=U(r,Ua(o))>-1,o.selected!==s&&(o.selected=s);else if(J(Ua(o),r))return void(n.selectedIndex!==i&&(n.selectedIndex=i));a||(n.selectedIndex=-1)}}function Ja(n,e){return e.every((function(e){return!J(e,n)}))}function Ua(n){return"_value"in n?n._value:n.value}function Ga(n){n.target.composing=!0}function La(n){n.target.composing&&(n.target.composing=!1,Na(n.target,"input"))}function Na(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Ra(n){return!n.componentInstance||n.data&&n.data.transition?n:Ra(n.componentInstance._vnode)}var qa={model:Da,show:{bind:function(n,e,t){var r=e.value,a=(t=Ra(t)).data&&t.data.transition,s=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&a?(t.data.show=!0,Ea(t,(function(){n.style.display=s}))):n.style.display=r?s:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=Ra(t)).data&&t.data.transition?(t.data.show=!0,r?Ea(t,(function(){n.style.display=n.__vOriginalDisplay})):Aa(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,a){a||(n.style.display=n.__vOriginalDisplay)}}},Ha={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Ma(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Ma(we(e.children)):n}function Va(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var a=t._parentListeners;for(var r in a)e[w(r)]=a[r];return e}function Xa(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Za=function(n){return n.tag||ve(n)},Qa=function(n){return"show"===n.name},Wa={name:"transition",props:Ha,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Za)).length){0;var r=this.mode;0;var a=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return a;var s=Ma(a);if(!s)return a;if(this._leaving)return Xa(n,a);var o="__transition-".concat(this._uid,"-");s.key=null==s.key?s.isComment?o+"comment":o+s.tag:l(s.key)?0===String(s.key).indexOf(o)?s.key:o+s.key:s.key;var i=(s.data||(s.data={})).transition=Va(this),c=this._vnode,d=Ma(c);if(s.data.directives&&s.data.directives.some(Qa)&&(s.data.show=!0),d&&d.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(s,d)&&!ve(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var p=d.data.transition=F({},i);if("out-in"===r)return this._leaving=!0,Zn(p,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Xa(n,a);if("in-out"===r){if(ve(s))return c;var m,u=function(){m()};Zn(i,"afterEnter",u),Zn(i,"enterCancelled",u),Zn(p,"delayLeave",(function(n){m=n}))}}return a}}},Ka=F({tag:String,moveClass:String},Ha);function Ya(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function ns(n){n.data.newPos=n.elm.getBoundingClientRect()}function es(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,a=e.top-t.top;if(r||a){n.data.moved=!0;var s=n.elm.style;s.transform=s.WebkitTransform="translate(".concat(r,"px,").concat(a,"px)"),s.transitionDuration="0s"}}delete Ka.mode;var ts={Transition:Wa,TransitionGroup:{props:Ka,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var a=Ye(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,a(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],s=this.children=[],o=Va(this),i=0;i<a.length;i++){if((d=a[i]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))s.push(d),t[d.key]=d,(d.data||(d.data={})).transition=o;else;}if(r){var l=[],c=[];for(i=0;i<r.length;i++){var d;(d=r[i]).data.transition=o,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):c.push(d)}this.kept=n(e,null,l),this.removed=c}return n(e,null,s)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Ya),n.forEach(ns),n.forEach(es),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;ka(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(fa,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(fa,n),t._moveCb=null,za(t,e))})}})))},methods:{hasMove:function(n,e){if(!ha)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){ma(t,n)})),pa(t,e),t.style.display="none",this.$el.appendChild(t);var r=wa(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};function rs(n,e){for(var t in e)n[t]=e[t];return n}Xt.config.mustUseProp=function(n,e,t){return"value"===t&&rr(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Xt.config.isReservedTag=br,Xt.config.isReservedAttr=tr,Xt.config.getTagNamespace=function(n){return fr(n)?"svg":"math"===n?"math":void 0},Xt.config.isUnknownElement=function(n){if(!Q)return!0;if(br(n))return!1;if(n=n.toLowerCase(),null!=xr[n])return xr[n];var e=document.createElement(n);return n.indexOf("-")>-1?xr[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:xr[n]=/HTMLUnknownElement/.test(e.toString())},F(Xt.options.directives,qa),F(Xt.options.components,ts),Xt.prototype.__patch__=Q?Oa:D,Xt.prototype.$mount=function(n,e){return function(n,e,t){var r;n.$el=e,n.$options.render||(n.$options.render=vn),tt(n,"beforeMount"),r=function(){n._update(n._render(),t)},new Ve(n,r,D,{before:function(){n._isMounted&&!n._isDestroyed&&tt(n,"beforeUpdate")}},!0),t=!1;var a=n._preWatchers;if(a)for(var s=0;s<a.length;s++)a[s].run();return null==n.$vnode&&(n._isMounted=!0,tt(n,"mounted")),n}(this,n=n&&Q?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},Q&&setTimeout((function(){q.devtools&&cn&&cn.emit("init",Xt)}),0);var as=/[!'()*]/g,ss=function(n){return"%"+n.charCodeAt(0).toString(16)},os=/%2C/g,is=function(n){return encodeURIComponent(n).replace(as,ss).replace(os,",")};function ls(n){try{return decodeURIComponent(n)}catch(n){0}return n}var cs=function(n){return null==n||"object"==typeof n?n:String(n)};function ds(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=ls(t.shift()),a=t.length>0?ls(t.join("=")):null;void 0===e[r]?e[r]=a:Array.isArray(e[r])?e[r].push(a):e[r]=[e[r],a]})),e):e}function ps(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return is(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(is(e)):r.push(is(e)+"="+is(n)))})),r.join("&")}return is(e)+"="+is(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var ms=/\/?$/;function us(n,e,t,r){var a=r&&r.options.stringifyQuery,s=e.query||{};try{s=gs(s)}catch(n){}var o={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:s,params:e.params||{},fullPath:fs(e,a),matched:n?vs(n):[]};return t&&(o.redirectedFrom=fs(t,a)),Object.freeze(o)}function gs(n){if(Array.isArray(n))return n.map(gs);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=gs(n[t]);return e}return n}var hs=us(null,{path:"/"});function vs(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function fs(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var a=n.hash;return void 0===a&&(a=""),(t||"/")+(e||ps)(r)+a}function bs(n,e,t){return e===hs?n===e:!!e&&(n.path&&e.path?n.path.replace(ms,"")===e.path.replace(ms,"")&&(t||n.hash===e.hash&&xs(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&xs(n.query,e.query)&&xs(n.params,e.params))))}function xs(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,a){var s=n[t];if(r[a]!==t)return!1;var o=e[t];return null==s||null==o?s===o:"object"==typeof s&&"object"==typeof o?xs(s,o):String(s)===String(o)}))}function js(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var a=t.instances[r],s=t.enteredCbs[r];if(a&&s){delete t.enteredCbs[r];for(var o=0;o<s.length;o++)a._isBeingDestroyed||s[o](a)}}}}var ys={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,a=e.parent,s=e.data;s.routerView=!0;for(var o=a.$createElement,i=t.name,l=a.$route,c=a._routerViewCache||(a._routerViewCache={}),d=0,p=!1;a&&a._routerRoot!==a;){var m=a.$vnode?a.$vnode.data:{};m.routerView&&d++,m.keepAlive&&a._directInactive&&a._inactive&&(p=!0),a=a.$parent}if(s.routerViewDepth=d,p){var u=c[i],g=u&&u.component;return g?(u.configProps&&ks(g,s,u.route,u.configProps),o(g,s,r)):o()}var h=l.matched[d],v=h&&h.components[i];if(!h||!v)return c[i]=null,o();c[i]={component:v},s.registerRouteInstance=function(n,e){var t=h.instances[i];(e&&t!==n||!e&&t===n)&&(h.instances[i]=e)},(s.hook||(s.hook={})).prepatch=function(n,e){h.instances[i]=e.componentInstance},s.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==h.instances[i]&&(h.instances[i]=n.componentInstance),js(l)};var f=h.props&&h.props[i];return f&&(rs(c[i],{route:l,configProps:f}),ks(v,s,l,f)),o(v,s,r)}};function ks(n,e,t,r){var a=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(a){a=e.props=rs({},a);var s=e.attrs=e.attrs||{};for(var o in a)n.props&&o in n.props||(s[o]=a[o],delete a[o])}}function zs(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var a=e.split("/");t&&a[a.length-1]||a.pop();for(var s=n.replace(/^\//,"").split("/"),o=0;o<s.length;o++){var i=s[o];".."===i?a.pop():"."!==i&&a.push(i)}return""!==a[0]&&a.unshift(""),a.join("/")}function Ss(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var Is=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},ws=Gs,Ts=Bs,_s=function(n,e){return Os(Bs(n,e),e)},Es=Os,As=Us,$s=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Bs(n,e){for(var t,r=[],a=0,s=0,o="",i=e&&e.delimiter||"/";null!=(t=$s.exec(n));){var l=t[0],c=t[1],d=t.index;if(o+=n.slice(s,d),s=d+l.length,c)o+=c[1];else{var p=n[s],m=t[2],u=t[3],g=t[4],h=t[5],v=t[6],f=t[7];o&&(r.push(o),o="");var b=null!=m&&null!=p&&p!==m,x="+"===v||"*"===v,j="?"===v||"*"===v,y=t[2]||i,k=g||h;r.push({name:u||a++,prefix:m||"",delimiter:y,optional:j,repeat:x,partial:b,asterisk:!!f,pattern:k?Ps(k):f?".*":"[^"+Ds(y)+"]+?"})}}return s<n.length&&(o+=n.substr(s)),o&&r.push(o),r}function Fs(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function Os(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",Js(e)));return function(e,r){for(var a="",s=e||{},o=(r||{}).pretty?Fs:encodeURIComponent,i=0;i<n.length;i++){var l=n[i];if("string"!=typeof l){var c,d=s[l.name];if(null==d){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(Is(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(c=o(d[p]),!t[i].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):o(d),!t[i].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function Ds(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Ps(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Cs(n,e){return n.keys=e,n}function Js(n){return n&&n.sensitive?"":"i"}function Us(n,e,t){Is(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,a=!1!==t.end,s="",o=0;o<n.length;o++){var i=n[o];if("string"==typeof i)s+=Ds(i);else{var l=Ds(i.prefix),c="(?:"+i.pattern+")";e.push(i),i.repeat&&(c+="(?:"+l+c+")*"),s+=c=i.optional?i.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=Ds(t.delimiter||"/"),p=s.slice(-d.length)===d;return r||(s=(p?s.slice(0,-d.length):s)+"(?:"+d+"(?=$))?"),s+=a?"$":r&&p?"":"(?="+d+"|$)",Cs(new RegExp("^"+s,Js(t)),e)}function Gs(n,e,t){return Is(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Cs(n,e)}(n,e):Is(n)?function(n,e,t){for(var r=[],a=0;a<n.length;a++)r.push(Gs(n[a],e,t).source);return Cs(new RegExp("(?:"+r.join("|")+")",Js(t)),e)}(n,e,t):function(n,e,t){return Us(Bs(n,t),e,t)}(n,e,t)}ws.parse=Ts,ws.compile=_s,ws.tokensToFunction=Es,ws.tokensToRegExp=As;var Ls=Object.create(null);function Ns(n,e,t){e=e||{};try{var r=Ls[n]||(Ls[n]=ws.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Rs(n,e,t,r){var a="string"==typeof n?{path:n}:n;if(a._normalized)return a;if(a.name){var s=(a=rs({},n)).params;return s&&"object"==typeof s&&(a.params=rs({},s)),a}if(!a.path&&a.params&&e){(a=rs({},a))._normalized=!0;var o=rs(rs({},e.params),a.params);if(e.name)a.name=e.name,a.params=o;else if(e.matched.length){var i=e.matched[e.matched.length-1].path;a.path=Ns(i,o,e.path)}else 0;return a}var l=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var a=n.indexOf("?");return a>=0&&(t=n.slice(a+1),n=n.slice(0,a)),{path:n,query:t,hash:e}}(a.path||""),c=e&&e.path||"/",d=l.path?zs(l.path,c,t||a.append):c,p=function(n,e,t){void 0===e&&(e={});var r,a=t||ds;try{r=a(n||"")}catch(n){r={}}for(var s in e){var o=e[s];r[s]=Array.isArray(o)?o.map(cs):cs(o)}return r}(l.query,a.query,r&&r.options.parseQuery),m=a.hash||l.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:d,query:p,hash:m}}var qs,Hs=function(){},Ms={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,a=t.resolve(this.to,r,this.append),s=a.location,o=a.route,i=a.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,p=null==c?"router-link-active":c,m=null==d?"router-link-exact-active":d,u=null==this.activeClass?p:this.activeClass,g=null==this.exactActiveClass?m:this.exactActiveClass,h=o.redirectedFrom?us(null,Rs(o.redirectedFrom),null,t):o;l[g]=bs(r,h,this.exactPath),l[u]=this.exact||this.exactPath?l[g]:function(n,e){return 0===n.path.replace(ms,"/").indexOf(e.path.replace(ms,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,h);var v=l[g]?this.ariaCurrentValue:null,f=function(n){Vs(n)&&(e.replace?t.replace(s,Hs):t.push(s,Hs))},b={click:Vs};Array.isArray(this.event)?this.event.forEach((function(n){b[n]=f})):b[this.event]=f;var x={class:l},j=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:i,route:o,navigate:f,isActive:l[u],isExactActive:l[g]});if(j){if(1===j.length)return j[0];if(j.length>1||!j.length)return 0===j.length?n():n("span",{},j)}if("a"===this.tag)x.on=b,x.attrs={href:i,"aria-current":v};else{var y=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(y){y.isStatic=!1;var k=y.data=rs({},y.data);for(var z in k.on=k.on||{},k.on){var S=k.on[z];z in b&&(k.on[z]=Array.isArray(S)?S:[S])}for(var I in b)I in k.on?k.on[I].push(b[I]):k.on[I]=f;var w=y.data.attrs=rs({},y.data.attrs);w.href=i,w["aria-current"]=v}else x.on=b}return n(this.tag,x,this.$slots.default)}};function Vs(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Xs="undefined"!=typeof window;function Zs(n,e,t,r,a){var s=e||[],o=t||Object.create(null),i=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,a,s,o){var i=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},d=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return Ss(e.path+"/"+n)}(i,s,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var p={path:d,regex:Qs(d,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:l,parent:s,matchAs:o,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var s=o?Ss(o+"/"+a.path):void 0;n(e,t,r,a,p,s)}));t[p.path]||(e.push(p.path),t[p.path]=p);if(void 0!==a.alias)for(var m=Array.isArray(a.alias)?a.alias:[a.alias],u=0;u<m.length;++u){0;var g={path:m[u],children:a.children};n(e,t,r,g,s,p.path||"/")}l&&(r[l]||(r[l]=p))}(s,o,i,n,a)}));for(var l=0,c=s.length;l<c;l++)"*"===s[l]&&(s.push(s.splice(l,1)[0]),c--,l--);return{pathList:s,pathMap:o,nameMap:i}}function Qs(n,e){return ws(n,[],e)}function Ws(n,e){var t=Zs(n),r=t.pathList,a=t.pathMap,s=t.nameMap;function o(n,t,o){var i=Rs(n,t,!1,e),c=i.name;if(c){var d=s[c];if(!d)return l(null,i);var p=d.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof i.params&&(i.params={}),t&&"object"==typeof t.params)for(var m in t.params)!(m in i.params)&&p.indexOf(m)>-1&&(i.params[m]=t.params[m]);return i.path=Ns(d.path,i.params),l(d,i,o)}if(i.path){i.params={};for(var u=0;u<r.length;u++){var g=r[u],h=a[g];if(Ks(h.regex,i.path,i.params))return l(h,i,o)}}return l(null,i)}function i(n,t){var r=n.redirect,a="function"==typeof r?r(us(n,t,null,e)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,t);var i=a,c=i.name,d=i.path,p=t.query,m=t.hash,u=t.params;if(p=i.hasOwnProperty("query")?i.query:p,m=i.hasOwnProperty("hash")?i.hash:m,u=i.hasOwnProperty("params")?i.params:u,c){s[c];return o({_normalized:!0,name:c,query:p,hash:m,params:u},void 0,t)}if(d){var g=function(n,e){return zs(n,e.parent?e.parent.path:"/",!0)}(d,n);return o({_normalized:!0,path:Ns(g,u),query:p,hash:m},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?i(n,r||t):n&&n.matchAs?function(n,e,t){var r=o({_normalized:!0,path:Ns(t,e.params)});if(r){var a=r.matched,s=a[a.length-1];return e.params=r.params,l(s,e)}return l(null,e)}(0,t,n.matchAs):us(n,t,r,e)}return{match:o,addRoute:function(n,e){var t="object"!=typeof n?s[n]:void 0;Zs([e||n],r,a,s,t),t&&t.alias.length&&Zs(t.alias.map((function(n){return{path:n,children:[e]}})),r,a,s,t)},getRoutes:function(){return r.map((function(n){return a[n]}))},addRoutes:function(n){Zs(n,r,a,s)}}}function Ks(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var a=1,s=r.length;a<s;++a){var o=n.keys[a-1];o&&(t[o.name||"pathMatch"]="string"==typeof r[a]?ls(r[a]):r[a])}return!0}var Ys=Xs&&window.performance&&window.performance.now?window.performance:Date;function no(){return Ys.now().toFixed(3)}var eo=no();function to(){return eo}function ro(n){return eo=n}var ao=Object.create(null);function so(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=rs({},window.history.state);return t.key=to(),window.history.replaceState(t,"",e),window.addEventListener("popstate",lo),function(){window.removeEventListener("popstate",lo)}}function oo(n,e,t,r){if(n.app){var a=n.options.scrollBehavior;a&&n.app.$nextTick((function(){var s=function(){var n=to();if(n)return ao[n]}(),o=a.call(n,e,t,r?s:null);o&&("function"==typeof o.then?o.then((function(n){go(n,s)})).catch((function(n){0})):go(o,s))}))}}function io(){var n=to();n&&(ao[n]={x:window.pageXOffset,y:window.pageYOffset})}function lo(n){io(),n.state&&n.state.key&&ro(n.state.key)}function co(n){return mo(n.x)||mo(n.y)}function po(n){return{x:mo(n.x)?n.x:window.pageXOffset,y:mo(n.y)?n.y:window.pageYOffset}}function mo(n){return"number"==typeof n}var uo=/^#\d/;function go(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var a=uo.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(a){var s=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(a,s={x:mo((t=s).x)?t.x:0,y:mo(t.y)?t.y:0})}else co(n)&&(e=po(n))}else r&&co(n)&&(e=po(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var ho,vo=Xs&&((-1===(ho=window.navigator.userAgent).indexOf("Android 2.")&&-1===ho.indexOf("Android 4.0")||-1===ho.indexOf("Mobile Safari")||-1!==ho.indexOf("Chrome")||-1!==ho.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function fo(n,e){io();var t=window.history;try{if(e){var r=rs({},t.state);r.key=to(),t.replaceState(r,"",n)}else t.pushState({key:ro(no())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function bo(n){fo(n,!0)}var xo={redirected:2,aborted:4,cancelled:8,duplicated:16};function jo(n,e){return ko(n,e,xo.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return zo.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function yo(n,e){return ko(n,e,xo.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function ko(n,e,t,r){var a=new Error(r);return a._isRouter=!0,a.from=n,a.to=e,a.type=t,a}var zo=["params","query","hash"];function So(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function Io(n,e){return So(n)&&n._isRouter&&(null==e||n.type===e)}function wo(n,e,t){var r=function(a){a>=n.length?t():n[a]?e(n[a],(function(){r(a+1)})):r(a+1)};r(0)}function To(n){return function(e,t,r){var a=!1,s=0,o=null;_o(n,(function(n,e,t,i){if("function"==typeof n&&void 0===n.cid){a=!0,s++;var l,c=$o((function(e){var a;((a=e).__esModule||Ao&&"Module"===a[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:qs.extend(e),t.components[i]=e,--s<=0&&r()})),d=$o((function(n){var e="Failed to resolve async component "+i+": "+n;o||(o=So(n)?n:new Error(e),r(o))}));try{l=n(c,d)}catch(n){d(n)}if(l)if("function"==typeof l.then)l.then(c,d);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,d)}}})),a||r()}}function _o(n,e){return Eo(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Eo(n){return Array.prototype.concat.apply([],n)}var Ao="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function $o(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var Bo=function(n,e){this.router=n,this.base=function(n){if(!n)if(Xs){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=hs,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Fo(n,e,t,r){var a=_o(n,(function(n,r,a,s){var o=function(n,e){"function"!=typeof n&&(n=qs.extend(n));return n.options[e]}(n,e);if(o)return Array.isArray(o)?o.map((function(n){return t(n,r,a,s)})):t(o,r,a,s)}));return Eo(r?a.reverse():a)}function Oo(n,e){if(e)return function(){return n.apply(e,arguments)}}Bo.prototype.listen=function(n){this.cb=n},Bo.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Bo.prototype.onError=function(n){this.errorCbs.push(n)},Bo.prototype.transitionTo=function(n,e,t){var r,a=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var s=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),e&&e(r),a.ensureURL(),a.router.afterHooks.forEach((function(n){n&&n(r,s)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!a.ready&&(Io(n,xo.redirected)&&s===hs||(a.ready=!0,a.readyErrorCbs.forEach((function(e){e(n)}))))}))},Bo.prototype.confirmTransition=function(n,e,t){var r=this,a=this.current;this.pending=n;var s,o,i=function(n){!Io(n)&&So(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=a.matched.length-1;if(bs(n,a)&&l===c&&n.matched[l]===a.matched[c])return this.ensureURL(),n.hash&&oo(this.router,a,n,!1),i(((o=ko(s=a,n,xo.duplicated,'Avoided redundant navigation to current location: "'+s.fullPath+'".')).name="NavigationDuplicated",o));var d=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),p=d.updated,m=d.deactivated,u=d.activated,g=[].concat(function(n){return Fo(n,"beforeRouteLeave",Oo,!0)}(m),this.router.beforeHooks,function(n){return Fo(n,"beforeRouteUpdate",Oo)}(p),u.map((function(n){return n.beforeEnter})),To(u)),h=function(e,t){if(r.pending!==n)return i(yo(a,n));try{e(n,a,(function(e){!1===e?(r.ensureURL(!0),i(function(n,e){return ko(n,e,xo.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(a,n))):So(e)?(r.ensureURL(!0),i(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(i(jo(a,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){i(n)}};wo(g,h,(function(){wo(function(n){return Fo(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,a,s){return n(r,a,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),s(n)}))}}(n,t,r)}))}(u).concat(r.router.resolveHooks),h,(function(){if(r.pending!==n)return i(yo(a,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){js(n)}))}))}))},Bo.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Bo.prototype.setupListeners=function(){},Bo.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=hs,this.pending=null};var Do=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Po(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=vo&&t;r&&this.listeners.push(so());var a=function(){var t=n.current,a=Po(n.base);n.current===hs&&a===n._startLocation||n.transitionTo(a,(function(n){r&&oo(e,n,t,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){fo(Ss(r.base+n.fullPath)),oo(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){bo(Ss(r.base+n.fullPath)),oo(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Po(this.base)!==this.current.fullPath){var e=Ss(this.base+this.current.fullPath);n?fo(e):bo(e)}},e.prototype.getCurrentLocation=function(){return Po(this.base)},e}(Bo);function Po(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(Ss(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Co=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=Po(n);if(!/^\/#/.test(e))return window.location.replace(Ss(n+"/#"+e)),!0}(this.base)||Jo()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=vo&&e;t&&this.listeners.push(so());var r=function(){var e=n.current;Jo()&&n.transitionTo(Uo(),(function(r){t&&oo(n.router,r,e,!0),vo||No(r.fullPath)}))},a=vo?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){Lo(n.fullPath),oo(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){No(n.fullPath),oo(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Uo()!==e&&(n?Lo(e):No(e))},e.prototype.getCurrentLocation=function(){return Uo()},e}(Bo);function Jo(){var n=Uo();return"/"===n.charAt(0)||(No("/"+n),!1)}function Uo(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Go(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Lo(n){vo?fo(Go(n)):window.location.hash=n}function No(n){vo?bo(Go(n)):window.location.replace(Go(n))}var Ro=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){Io(n,xo.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Bo),qo=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ws(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!vo&&!1!==n.fallback,this.fallback&&(e="hash"),Xs||(e="abstract"),this.mode=e,e){case"history":this.history=new Do(this,n.base);break;case"hash":this.history=new Co(this,n.base,this.fallback);break;case"abstract":this.history=new Ro(this,n.base);break;default:0}},Ho={currentRoute:{configurable:!0}};qo.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Ho.currentRoute.get=function(){return this.history&&this.history.current},qo.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Do||t instanceof Co){var r=function(n){t.setupListeners(),function(n){var r=t.current,a=e.options.scrollBehavior;vo&&a&&"fullPath"in n&&oo(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},qo.prototype.beforeEach=function(n){return Vo(this.beforeHooks,n)},qo.prototype.beforeResolve=function(n){return Vo(this.resolveHooks,n)},qo.prototype.afterEach=function(n){return Vo(this.afterHooks,n)},qo.prototype.onReady=function(n,e){this.history.onReady(n,e)},qo.prototype.onError=function(n){this.history.onError(n)},qo.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},qo.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},qo.prototype.go=function(n){this.history.go(n)},qo.prototype.back=function(){this.go(-1)},qo.prototype.forward=function(){this.go(1)},qo.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},qo.prototype.resolve=function(n,e,t){var r=Rs(n,e=e||this.history.current,t,this),a=this.match(r,e),s=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?Ss(n+"/"+r):r}(this.history.base,s,this.mode),normalizedTo:r,resolved:a}},qo.prototype.getRoutes=function(){return this.matcher.getRoutes()},qo.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==hs&&this.history.transitionTo(this.history.getCurrentLocation())},qo.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==hs&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(qo.prototype,Ho);var Mo=qo;function Vo(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}qo.install=function n(e){if(!n.installed||qs!==e){n.installed=!0,qs=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",ys),e.component("RouterLink",Ms);var a=e.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},qo.version="3.6.5",qo.isNavigationFailure=Io,qo.NavigationFailureType=xo,qo.START_LOCATION=hs,Xs&&window.Vue&&window.Vue.use(qo);t(156),t(22),t(165);t(127),t(45);var Xo={NotFound:()=>Promise.all([t.e(7),t.e(0)]).then(t.bind(null,384)),Layout:()=>Promise.all([t.e(7),t.e(9),t.e(1)]).then(t.bind(null,382))},Zo={"v-4ffccbfb":()=>t.e(1).then(t.bind(null,391)),"v-4e4d077b":()=>t.e(1).then(t.bind(null,392)),"v-ce20c74a":()=>t.e(1).then(t.bind(null,393)),"v-99d0c83e":()=>t.e(4).then(t.bind(null,394)),"v-17613726":()=>t.e(0).then(t.bind(null,395)),"v-7aeb821b":()=>t.e(2).then(t.bind(null,396)),"v-1980d392":()=>t.e(2).then(t.bind(null,397)),"v-df664cc8":()=>t.e(6).then(t.bind(null,398)),"v-42ccaad8":()=>Promise.all([t.e(7),t.e(4)]).then(t.bind(null,399)),"v-209bdeb8":()=>t.e(3).then(t.bind(null,400)),"v-1d0ca95a":()=>t.e(0).then(t.bind(null,401)),"v-897ec7b4":()=>t.e(4).then(t.bind(null,402)),"v-8017fed2":()=>t.e(4).then(t.bind(null,403)),"v-6d658deb":()=>t.e(0).then(t.bind(null,404)),"v-eab1ac62":()=>t.e(0).then(t.bind(null,405)),"v-46e4df80":()=>t.e(2).then(t.bind(null,406)),"v-7107d482":()=>t.e(0).then(t.bind(null,407)),"v-fe35c9bc":()=>t.e(5).then(t.bind(null,408)),"v-e4b62408":()=>t.e(4).then(t.bind(null,409)),"v-48115274":()=>t.e(0).then(t.bind(null,410)),"v-506e45d4":()=>t.e(5).then(t.bind(null,411)),"v-3a17c070":()=>t.e(2).then(t.bind(null,412)),"v-00f34618":()=>t.e(0).then(t.bind(null,413)),"v-05df9398":()=>t.e(4).then(t.bind(null,414)),"v-23172d18":()=>t.e(5).then(t.bind(null,415)),"v-f1645dd8":()=>t.e(1).then(t.bind(null,416)),"v-a4cbab98":()=>t.e(0).then(t.bind(null,417)),"v-d1395446":()=>t.e(1).then(t.bind(null,418)),"v-2be7dac6":()=>t.e(1).then(t.bind(null,419)),"v-3f9189c1":()=>t.e(3).then(t.bind(null,420)),"v-f0e78466":()=>t.e(1).then(t.bind(null,421)),"v-72a4fae5":()=>t.e(2).then(t.bind(null,422)),"v-79216612":()=>t.e(2).then(t.bind(null,423)),"v-5899f538":()=>t.e(5).then(t.bind(null,424)),"v-3485e52f":()=>t.e(0).then(t.bind(null,425)),"v-1ec9d360":()=>t.e(3).then(t.bind(null,426)),"v-2d7a0750":()=>t.e(5).then(t.bind(null,427)),"v-222bf5c8":()=>t.e(1).then(t.bind(null,428)),"v-ff94b706":()=>t.e(1).then(t.bind(null,429)),"v-32cd8c48":()=>t.e(0).then(t.bind(null,430)),"v-1d455bc4":()=>t.e(3).then(t.bind(null,431)),"v-ac5152e2":()=>t.e(4).then(t.bind(null,432)),"v-a64d2c18":()=>t.e(2).then(t.bind(null,433)),"v-0a810df7":()=>t.e(2).then(t.bind(null,434)),"v-2c258483":()=>t.e(4).then(t.bind(null,435)),"v-19b5ec25":()=>t.e(5).then(t.bind(null,436)),"v-e7fae964":()=>t.e(5).then(t.bind(null,437)),"v-2b5ee664":()=>t.e(1).then(t.bind(null,438)),"v-05e5798a":()=>t.e(4).then(t.bind(null,439)),"v-edd3d778":()=>t.e(6).then(t.bind(null,440)),"v-4df1ce76":()=>t.e(1).then(t.bind(null,441)),"v-5ded3183":()=>t.e(2).then(t.bind(null,442)),"v-332dd43c":()=>t.e(3).then(t.bind(null,443)),"v-331a314c":()=>t.e(3).then(t.bind(null,444)),"v-0ba5ddf3":()=>t.e(0).then(t.bind(null,445)),"v-87cbab66":()=>t.e(6).then(t.bind(null,446)),"v-69ac7bd6":()=>t.e(0).then(t.bind(null,447)),"v-6922a670":()=>t.e(0).then(t.bind(null,448)),"v-b6d9da36":()=>t.e(1).then(t.bind(null,449)),"v-702ff1be":()=>t.e(5).then(t.bind(null,450)),"v-29860946":()=>t.e(0).then(t.bind(null,451)),"v-31e6e3d5":()=>t.e(2).then(t.bind(null,452)),"v-0a4449a7":()=>t.e(0).then(t.bind(null,453)),"v-5e88d539":()=>t.e(3).then(t.bind(null,454)),"v-0e91ef99":()=>t.e(1).then(t.bind(null,455)),"v-15e0d9cd":()=>t.e(5).then(t.bind(null,456)),"v-255a0820":()=>t.e(3).then(t.bind(null,457)),"v-b99dd972":()=>t.e(2).then(t.bind(null,458)),"v-6b947f16":()=>t.e(5).then(t.bind(null,459)),"v-0cad66ab":()=>t.e(5).then(t.bind(null,460)),"v-23586a79":()=>t.e(0).then(t.bind(null,461)),"v-52726112":()=>Promise.all([t.e(7),t.e(6)]).then(t.bind(null,462)),"v-6418f247":()=>t.e(0).then(t.bind(null,463)),"v-535f78d0":()=>t.e(0).then(t.bind(null,464)),"v-5da37683":()=>t.e(2).then(t.bind(null,465)),"v-2057c300":()=>t.e(3).then(t.bind(null,466)),"v-29c7d206":()=>t.e(4).then(t.bind(null,467)),"v-65d6bf18":()=>t.e(2).then(t.bind(null,468)),"v-59e47739":()=>t.e(2).then(t.bind(null,469)),"v-725f8659":()=>t.e(1).then(t.bind(null,470)),"v-f8698352":()=>t.e(3).then(t.bind(null,471)),"v-1008631a":()=>t.e(4).then(t.bind(null,472)),"v-057f5752":()=>t.e(0).then(t.bind(null,473)),"v-083c3760":()=>t.e(2).then(t.bind(null,474)),"v-695409bb":()=>t.e(1).then(t.bind(null,475)),"v-207eb677":()=>t.e(0).then(t.bind(null,476)),"v-43b57019":()=>t.e(1).then(t.bind(null,477)),"v-5693e255":()=>t.e(3).then(t.bind(null,478)),"v-0116a4c0":()=>t.e(0).then(t.bind(null,479)),"v-2594b856":()=>t.e(2).then(t.bind(null,480)),"v-89482816":()=>t.e(3).then(t.bind(null,481)),"v-adb25576":()=>t.e(2).then(t.bind(null,482)),"v-7ee3e430":()=>t.e(1).then(t.bind(null,483)),"v-12e1cef3":()=>t.e(3).then(t.bind(null,484)),"v-24b77e56":()=>t.e(0).then(t.bind(null,485)),"v-d46babc2":()=>t.e(1).then(t.bind(null,486)),"v-2f93f016":()=>t.e(3).then(t.bind(null,487)),"v-65449efa":()=>t.e(4).then(t.bind(null,488)),"v-408de39c":()=>t.e(6).then(t.bind(null,489)),"v-36117e5c":()=>t.e(6).then(t.bind(null,490)),"v-d3793bb4":()=>t.e(3).then(t.bind(null,491)),"v-e8b5de98":()=>t.e(2).then(t.bind(null,492)),"v-62e067f4":()=>t.e(1).then(t.bind(null,493)),"v-0ee5d8f8":()=>t.e(5).then(t.bind(null,494)),"v-65bed54c":()=>t.e(5).then(t.bind(null,495)),"v-746a30c8":()=>t.e(6).then(t.bind(null,496)),"v-ffcc14aa":()=>t.e(6).then(t.bind(null,497)),"v-0621d0e1":()=>t.e(0).then(t.bind(null,498)),"v-8863c864":()=>t.e(4).then(t.bind(null,499)),"v-5a423170":()=>t.e(3).then(t.bind(null,500)),"v-3b20f602":()=>t.e(0).then(t.bind(null,501)),"v-6442d20e":()=>t.e(3).then(t.bind(null,502)),"v-0b819066":()=>t.e(2).then(t.bind(null,503)),"v-8331f970":()=>t.e(1).then(t.bind(null,504)),"v-9be6db9a":()=>t.e(0).then(t.bind(null,505)),"v-2e15f469":()=>t.e(0).then(t.bind(null,506)),"v-16a2894c":()=>t.e(6).then(t.bind(null,507)),"v-14736bc6":()=>t.e(0).then(t.bind(null,508)),"v-5ed3ce0e":()=>t.e(2).then(t.bind(null,509)),"v-27d7f9ae":()=>t.e(3).then(t.bind(null,510)),"v-27ccae51":()=>t.e(1).then(t.bind(null,511)),"v-3e35976a":()=>t.e(1).then(t.bind(null,512)),"v-14569a23":()=>t.e(1).then(t.bind(null,513)),"v-af31e4a4":()=>t.e(4).then(t.bind(null,514)),"v-06020ef6":()=>t.e(4).then(t.bind(null,515)),"v-faa6e8b0":()=>t.e(3).then(t.bind(null,516)),"v-c5a2c41a":()=>t.e(3).then(t.bind(null,517)),"v-f0625140":()=>t.e(6).then(t.bind(null,518)),"v-ea656672":()=>t.e(2).then(t.bind(null,519)),"v-2934d34f":()=>t.e(5).then(t.bind(null,520)),"v-5cf4a45e":()=>t.e(2).then(t.bind(null,521)),"v-951bd066":()=>t.e(2).then(t.bind(null,522)),"v-3594dcbe":()=>t.e(0).then(t.bind(null,523)),"v-28d2ad57":()=>t.e(0).then(t.bind(null,524)),"v-07446048":()=>t.e(0).then(t.bind(null,525)),"v-111883b0":()=>t.e(0).then(t.bind(null,526)),"v-1a26fd2a":()=>t.e(5).then(t.bind(null,527)),"v-53db48e2":()=>t.e(4).then(t.bind(null,528)),"v-23a772d3":()=>t.e(0).then(t.bind(null,529)),"v-387f6a75":()=>t.e(6).then(t.bind(null,530)),"v-d12216fa":()=>t.e(2).then(t.bind(null,531)),"v-63c94824":()=>t.e(3).then(t.bind(null,532)),"v-894b1e10":()=>t.e(2).then(t.bind(null,533)),"v-a782e9da":()=>t.e(1).then(t.bind(null,534)),"v-3b2e6be1":()=>t.e(0).then(t.bind(null,535)),"v-8b483f02":()=>t.e(6).then(t.bind(null,536)),"v-ef23006a":()=>t.e(3).then(t.bind(null,537)),"v-800a98dc":()=>t.e(2).then(t.bind(null,538)),"v-70549619":()=>t.e(2).then(t.bind(null,539)),"v-55adf227":()=>t.e(2).then(t.bind(null,540)),"v-4489e684":()=>t.e(6).then(t.bind(null,541)),"v-9c9d9c48":()=>t.e(1).then(t.bind(null,542)),"v-67e2d778":()=>t.e(3).then(t.bind(null,543)),"v-aa4eca94":()=>t.e(5).then(t.bind(null,544)),"v-6e8c7244":()=>t.e(0).then(t.bind(null,545)),"v-5632da12":()=>t.e(1).then(t.bind(null,546)),"v-55d7a9c9":()=>t.e(4).then(t.bind(null,547)),"v-0746684c":()=>t.e(3).then(t.bind(null,548)),"v-76174836":()=>t.e(4).then(t.bind(null,549)),"v-11885233":()=>t.e(0).then(t.bind(null,550)),"v-bec10dec":()=>t.e(2).then(t.bind(null,551)),"v-7212fccc":()=>t.e(1).then(t.bind(null,552)),"v-238d264d":()=>t.e(3).then(t.bind(null,553)),"v-02eaa539":()=>t.e(0).then(t.bind(null,554)),"v-b5ea62e2":()=>t.e(4).then(t.bind(null,555)),"v-58368712":()=>t.e(2).then(t.bind(null,556)),"v-0482581c":()=>t.e(0).then(t.bind(null,557)),"v-7c6bb49e":()=>t.e(1).then(t.bind(null,558)),"v-7c539bf6":()=>t.e(3).then(t.bind(null,559)),"v-00eb9972":()=>t.e(0).then(t.bind(null,560)),"v-0a7e37f1":()=>t.e(0).then(t.bind(null,561)),"v-5204f37e":()=>t.e(5).then(t.bind(null,562)),"v-3ae37d31":()=>t.e(1).then(t.bind(null,563)),"v-b6de4cd6":()=>t.e(6).then(t.bind(null,564)),"v-7109ac58":()=>t.e(5).then(t.bind(null,565)),"v-6953f20c":()=>t.e(1).then(t.bind(null,566)),"v-60d7610c":()=>t.e(4).then(t.bind(null,567)),"v-71d0830c":()=>t.e(0).then(t.bind(null,568)),"v-7a4d140c":()=>t.e(1).then(t.bind(null,569)),"v-2aaf1b60":()=>t.e(0).then(t.bind(null,570)),"v-630c3c8a":()=>t.e(2).then(t.bind(null,571)),"v-6b88cd8a":()=>t.e(6).then(t.bind(null,572)),"v-56ffda0a":()=>t.e(4).then(t.bind(null,573)),"v-9024d35c":()=>t.e(5).then(t.bind(null,574)),"v-bd003cac":()=>t.e(4).then(t.bind(null,575)),"v-2352bf88":()=>t.e(2).then(t.bind(null,576)),"v-69eb03b9":()=>t.e(2).then(t.bind(null,577)),"v-c4f83d88":()=>t.e(5).then(t.bind(null,578))};function Qo(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Wo=/-(\w)/g,Ko=Qo(n=>n.replace(Wo,(n,e)=>e?e.toUpperCase():"")),Yo=/\B([A-Z])/g,ni=Qo(n=>n.replace(Yo,"-$1").toLowerCase()),ei=Qo(n=>n.charAt(0).toUpperCase()+n.slice(1));function ti(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(ei(Ko(e))):n(ei(e))||n(ni(e))}const ri=Object.assign({},Xo,Zo),ai=n=>ri[n],si=n=>Zo[n],oi=n=>Xo[n],ii=n=>Xt.component(n);function li(n){return ti(si,n)}function ci(n){return ti(oi,n)}function di(n){return ti(ai,n)}function pi(n){return ti(ii,n)}function mi(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!pi(n)&&di(n)){const e=await di(n)();Xt.component(n,e.default)}}))}function ui(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var gi=t(122),hi=t.n(gi),vi=t(123),fi=t.n(vi),bi={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${fi()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=ji(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=yi(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return hi()([{name:"description",content:this.$description}],n,this.siteMeta,ki)},updateCanonicalLink(){xi(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ji(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){yi(null,this.currentMetaTags),xi()}};function xi(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function ji(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function yi(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function ki(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}t(65);var zi=t(69),Si={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(zi)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),a=window.innerHeight+t;for(let n=0;n<e.length;n++){const s=e[n],o=e[n+1],i=0===n&&0===t||t>=s.parentElement.offsetTop+10&&(!o||t<o.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(i&&l!==decodeURIComponent(s.hash)){const t=s;if(a===r)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Ii=t(44),wi=t.n(Ii),Ti={mounted(){wi.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Xt.component(n.name)||wi.a.start(),t()}),this.$router.afterEach(()=>{wi.a.done(),this.isSidebarOpen=!1})}};t(274),t(275);class _i{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var Ei={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new _i).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},Ai="auto",$i="zoom-in",Bi="zoom-out",Fi="grab",Oi="move";function Di(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a={passive:!1};r?n.addEventListener(e,t,a):n.removeEventListener(e,t,a)}function Pi(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Ci(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Ji(n,e,t){!function(n){var e=Ui,t=Gi;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var a=n.transform;delete n.transform,n[t]=a}}(e);var r=n.style,a={};for(var s in e)t&&(a[s]=r[s]||""),r[s]=e[s];return a}var Ui="transition",Gi="transform",Li="transform",Ni="transitionend";var Ri=function(){},qi={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Ri,onClose:Ri,onGrab:Ri,onMove:Ri,onRelease:Ri,onBeforeOpen:Ri,onBeforeClose:Ri,onBeforeGrab:Ri,onBeforeRelease:Ri,onImageLoading:Ri,onImageLoaded:Ri},Hi={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Vi(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,a=this.lastScrollPosition.y-t,s=this.options.scrollThreshold;(Math.abs(a)>=s||Math.abs(r)>=s)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Mi(n)&&!Vi(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Mi(n)&&!Vi(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Mi(n){return 0===n.button}function Vi(n){return n.metaKey||n.ctrlKey}var Xi={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Ji(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Di(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Ji(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Zi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Qi=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),Wi=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},Ki={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Ci(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,a=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?Fi:Bi,transition:Li+"\n        "+r+"s\n        "+a,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Ji(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Ji(this.el,{transform:"none"})},grab:function(n,e,t){var r=Yi(),a=r.x-n,s=r.y-e;Ji(this.el,{cursor:Oi,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+s)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=Yi(),a=r.x-n,s=r.y-e;Ji(this.el,{transition:Li,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+s)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Ji(this.el,this.styleClose)},restoreOpenStyle:function(){Ji(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Yi(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,a=r.customSize,s=r.scaleBase;if(!a&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(a&&"object"===(void 0===a?"undefined":Zi(a)))return{x:a.width/this.rect.width,y:a.height/this.rect.height};var o=this.rect.width/2,i=this.rect.height/2,l=Yi(),c={x:l.x-o,y:l.y-i},d=c.x/o,p=c.y/i,m=s+Math.min(d,p);if(a&&"string"==typeof a){var u=t||this.el.naturalWidth,g=e||this.el.naturalHeight,h=parseFloat(a)*u/(100*this.rect.width),v=parseFloat(a)*g/(100*this.rect.height);if(m>h||m>v)return{x:h,y:v}}return{x:m,y:m}}};function Yi(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function nl(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Di(n,r,e[r],t)}))}var el=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Ki),this.overlay=Object.create(Xi),this.handler=Object.create(Hi),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Wi({},qi,e),this.overlay.init(this),this.handler.init(this)}return Qi(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=$i,Di(n,"click",this.handler.click),this.options.preloadImage&&Pi(Ci(n)));return this}},{key:"config",value:function(n){return n?(Wi(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var a=this.target.srcOriginal;null!=a&&(this.options.onImageLoading(r),Pi(a,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Di(document,"scroll",this.handler.scroll),Di(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Di(window,"resize",this.handler.resizeWindow);var s=function n(){Di(r,Ni,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&nl(document,e.handler,!0),t(r)};return Di(r,Ni,s),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ai,this.overlay.fadeOut(),this.target.zoomOut(),Di(document,"scroll",this.handler.scroll,!1),Di(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Di(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Di(t,Ni,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&nl(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Di(t,Ni,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var a=this.target.el;this.options.onBeforeGrab(a),this.released=!1,this.target.grab(n,e,t);var s=function n(){Di(a,Ni,n,!1),r(a)};return Di(a,Ni,s),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Oi,this.target.move(n,e,t);var a=this.target.el,s=function n(){Di(a,Ni,n,!1),r(a)};return Di(a,Ni,s),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ai,this.target.restoreOpenStyle();var r=function r(){Di(t,Ni,r,!1),n.lock=!1,n.released=!0,e(t)};return Di(t,Ni,r),this}}}]),n}();const tl=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),rl=Number("500");class al{constructor(){this.instance=new el(tl)}update(n=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=".theme-vdoing-content img:not(.no-zoom)",e=rl){setTimeout(()=>this.update(n),e)}}var sl=[bi,Si,Ti,Ei,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new al,this.$vuepress.zooming.updateDelay()}}],ol={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return ui("layout",n),Xt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},il=t(8),ll=Object(il.a)(ol,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(ll,"mixins",sl);const cl=[{name:"v-4ffccbfb",path:"/archives/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-4ffccbfb").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-4e4d077b",path:"/tags/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-4e4d077b").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-ce20c74a",path:"/categories/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-ce20c74a").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-99d0c83e",path:"/pages/9d6940/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-99d0c83e").then(t)}},{path:"/pages/9d6940/index.html",redirect:"/pages/9d6940/"},{path:"/_posts/workspace_vs_role.html",redirect:"/pages/9d6940/"},{name:"v-17613726",path:"/pages/demo-maintain/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-17613726").then(t)}},{path:"/pages/demo-maintain/index.html",redirect:"/pages/demo-maintain/"},{path:"/_posts/演示系统维护.html",redirect:"/pages/demo-maintain/"},{name:"v-7aeb821b",path:"/pages/praise/best-practices/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7aeb821b").then(t)}},{path:"/pages/praise/best-practices/index.html",redirect:"/pages/praise/best-practices/"},{path:"/_posts/best_practices.html",redirect:"/pages/praise/best-practices/"},{name:"v-1980d392",path:"/pages/malice-fraudulent/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-1980d392").then(t)}},{path:"/pages/malice-fraudulent/index.html",redirect:"/pages/malice-fraudulent/"},{path:"/_posts/下载中心调整.html",redirect:"/pages/malice-fraudulent/"},{name:"v-df664cc8",path:"/pages/practice/build-jpom/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-df664cc8").then(t)}},{path:"/pages/practice/build-jpom/index.html",redirect:"/pages/practice/build-jpom/"},{path:"/实践案例/009.解决方案/0000.V2.10.X/0088.在线构建为 Jpom 发版.html",redirect:"/pages/practice/build-jpom/"},{name:"v-42ccaad8",path:"/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-42ccaad8").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-209bdeb8",path:"/pages/practice/simple-solution-01/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-209bdeb8").then(t)}},{path:"/pages/practice/simple-solution-01/index.html",redirect:"/pages/practice/simple-solution-01/"},{path:"/实践案例/009.解决方案/0090.simple-solution-01.html",redirect:"/pages/practice/simple-solution-01/"},{name:"v-1d0ca95a",path:"/pages/practice/ea3667/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-1d0ca95a").then(t)}},{path:"/pages/practice/ea3667/index.html",redirect:"/pages/practice/ea3667/"},{path:"/实践案例/009.解决方案/0094.自定义第三方通知.html",redirect:"/pages/practice/ea3667/"},{name:"v-897ec7b4",path:"/pages/practice/4f8e47/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-897ec7b4").then(t)}},{path:"/pages/practice/4f8e47/index.html",redirect:"/pages/practice/4f8e47/"},{path:"/实践案例/009.解决方案/0100.Jpom运维系统安装与使用.html",redirect:"/pages/practice/4f8e47/"},{name:"v-8017fed2",path:"/pages/practice/af288b/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-8017fed2").then(t)}},{path:"/pages/practice/af288b/index.html",redirect:"/pages/practice/af288b/"},{path:"/实践案例/009.解决方案/9998.V2.9.X/0093.离线安装实践.html",redirect:"/pages/practice/af288b/"},{name:"v-6d658deb",path:"/pages/practice/c846d3/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6d658deb").then(t)}},{path:"/pages/practice/c846d3/index.html",redirect:"/pages/practice/c846d3/"},{path:"/实践案例/009.解决方案/9998.V2.9.X/0092.Docker 容器安装实践.html",redirect:"/pages/practice/c846d3/"},{name:"v-eab1ac62",path:"/pages/practice/15b7a2/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-eab1ac62").then(t)}},{path:"/pages/practice/15b7a2/index.html",redirect:"/pages/practice/15b7a2/"},{path:"/实践案例/009.解决方案/9999.V2.8.X/0091.一键安装实践.html",redirect:"/pages/practice/15b7a2/"},{name:"v-46e4df80",path:"/pages/practice/jpom-server-scp-upload/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-46e4df80").then(t)}},{path:"/pages/practice/jpom-server-scp-upload/index.html",redirect:"/pages/practice/jpom-server-scp-upload/"},{path:"/实践案例/010.在线构建/0000.V2.10.X/0101.jpom-server-scp-upload.html",redirect:"/pages/practice/jpom-server-scp-upload/"},{name:"v-7107d482",path:"/pages/practice/gitee-webhook-trigger-build/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7107d482").then(t)}},{path:"/pages/practice/gitee-webhook-trigger-build/index.html",redirect:"/pages/practice/gitee-webhook-trigger-build/"},{path:"/实践案例/010.在线构建/0109.Gitee提交代码后自动执行构建.html",redirect:"/pages/practice/gitee-webhook-trigger-build/"},{name:"v-fe35c9bc",path:"/pages/practice/4756ec/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-fe35c9bc").then(t)}},{path:"/pages/practice/4756ec/index.html",redirect:"/pages/practice/4756ec/"},{path:"/实践案例/009.解决方案/9999.V2.8.X/0089.DSL 项目模板.html",redirect:"/pages/practice/4756ec/"},{name:"v-e4b62408",path:"/pages/practice/build-gradle-node-release/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-e4b62408").then(t)}},{path:"/pages/practice/build-gradle-node-release/index.html",redirect:"/pages/practice/build-gradle-node-release/"},{path:"/实践案例/010.在线构建/0110.使用 gradle 本地构建打包项目并发布到节点.html",redirect:"/pages/practice/build-gradle-node-release/"},{name:"v-48115274",path:"/pages/practice/gitlab-webhook-trigger-build/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-48115274").then(t)}},{path:"/pages/practice/gitlab-webhook-trigger-build/index.html",redirect:"/pages/practice/gitlab-webhook-trigger-build/"},{path:"/实践案例/010.在线构建/0111.GitLab提交代码后自动执行构建.html",redirect:"/pages/practice/gitlab-webhook-trigger-build/"},{name:"v-506e45d4",path:"/pages/practice/e33af5/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-506e45d4").then(t)}},{path:"/pages/practice/e33af5/index.html",redirect:"/pages/practice/e33af5/"},{path:"/实践案例/010.在线构建/0112.构建状态统一通知推送.html",redirect:"/pages/practice/e33af5/"},{name:"v-3a17c070",path:"/pages/practice/privateToken-import-repository/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3a17c070").then(t)}},{path:"/pages/practice/privateToken-import-repository/index.html",redirect:"/pages/practice/privateToken-import-repository/"},{path:"/实践案例/010.在线构建/9997.V2.9.X/0211.通过私人令牌导入仓库.html",redirect:"/pages/practice/privateToken-import-repository/"},{name:"v-00f34618",path:"/pages/practice/build-node-release/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-00f34618").then(t)}},{path:"/pages/practice/build-node-release/index.html",redirect:"/pages/practice/build-node-release/"},{path:"/实践案例/010.在线构建/9998.V2.8.X/0102.build-node-release.html",redirect:"/pages/practice/build-node-release/"},{name:"v-05df9398",path:"/pages/practice/build-node-ssh-release/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-05df9398").then(t)}},{path:"/pages/practice/build-node-ssh-release/index.html",redirect:"/pages/practice/build-node-ssh-release/"},{path:"/实践案例/010.在线构建/9998.V2.8.X/0103.build-node-ssh-release.html",redirect:"/pages/practice/build-node-ssh-release/"},{name:"v-23172d18",path:"/pages/practice/build-docker-java-node-release/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-23172d18").then(t)}},{path:"/pages/practice/build-docker-java-node-release/index.html",redirect:"/pages/practice/build-docker-java-node-release/"},{path:"/实践案例/010.在线构建/9998.V2.8.X/0108.build-docker-java-node-release.html",redirect:"/pages/practice/build-docker-java-node-release/"},{name:"v-f1645dd8",path:"/pages/practice/project-dsl-python/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-f1645dd8").then(t)}},{path:"/pages/practice/project-dsl-python/index.html",redirect:"/pages/practice/project-dsl-python/"},{path:"/实践案例/010.在线构建/9998.V2.8.X/0104.project-dsl-python.html",redirect:"/pages/practice/project-dsl-python/"},{name:"v-a4cbab98",path:"/pages/practice/build-java-ssh-release/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-a4cbab98").then(t)}},{path:"/pages/practice/build-java-ssh-release/index.html",redirect:"/pages/practice/build-java-ssh-release/"},{path:"/实践案例/010.在线构建/9999.V2.6.X/0100.build-java-ssh-release.html",redirect:"/pages/practice/build-java-ssh-release/"},{name:"v-d1395446",path:"/pages/practice/9c1641/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-d1395446").then(t)}},{path:"/pages/practice/9c1641/index.html",redirect:"/pages/practice/9c1641/"},{path:"/实践案例/011.docker/9997.V2.11.X/0111.构建web镜像并推送至仓库.html",redirect:"/pages/practice/9c1641/"},{name:"v-2be7dac6",path:"/pages/practice/d4a57d/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2be7dac6").then(t)}},{path:"/pages/practice/d4a57d/index.html",redirect:"/pages/practice/d4a57d/"},{path:"/实践案例/011.docker/9998.V2.9.X/0108.在线构建 docker 镜像.html",redirect:"/pages/practice/d4a57d/"},{name:"v-3f9189c1",path:"/pages/practice/988404/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3f9189c1").then(t)}},{path:"/pages/practice/988404/index.html",redirect:"/pages/practice/988404/"},{path:"/实践案例/011.docker/9998.V2.9.X/0110.界面安装 reids 流程.html",redirect:"/pages/practice/988404/"},{name:"v-f0e78466",path:"/pages/practice/9c1640/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-f0e78466").then(t)}},{path:"/pages/practice/9c1640/index.html",redirect:"/pages/practice/9c1640/"},{path:"/实践案例/011.docker/9998.V2.9.X/0109.构建镜像并推送至仓库.html",redirect:"/pages/practice/9c1640/"},{name:"v-72a4fae5",path:"/pages/practice/node-nginx/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-72a4fae5").then(t)}},{path:"/pages/practice/node-nginx/index.html",redirect:"/pages/practice/node-nginx/"},{path:"/实践案例/012.节点管理/9999.V2.8.X/0106.node-nginx.html",redirect:"/pages/practice/node-nginx/"},{name:"v-79216612",path:"/pages/practice/dc2836/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-79216612").then(t)}},{path:"/pages/practice/dc2836/index.html",redirect:"/pages/practice/dc2836/"},{path:"/实践案例/013.项目管理/0000.V2.10.X/0107.DSL 管理 TOMCAT.html",redirect:"/pages/practice/dc2836/"},{name:"v-5899f538",path:"/pages/practice/8017a2/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5899f538").then(t)}},{path:"/pages/practice/8017a2/index.html",redirect:"/pages/practice/8017a2/"},{path:"/实践案例/013.项目管理/0000.V2.10.X/0108.DSL管理elasticsearch.html",redirect:"/pages/practice/8017a2/"},{name:"v-3485e52f",path:"/pages/practice/docker-cli/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3485e52f").then(t)}},{path:"/pages/practice/docker-cli/index.html",redirect:"/pages/practice/docker-cli/"},{path:"/实践案例/011.docker/9999.V2.8.X/0107.docker-cli.html",redirect:"/pages/practice/docker-cli/"},{name:"v-1ec9d360",path:"/pages/practice/dc2837/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-1ec9d360").then(t)}},{path:"/pages/practice/dc2837/index.html",redirect:"/pages/practice/dc2837/"},{path:"/实践案例/013.项目管理/0000.V2.10.X/0109.DSL 管理 NGINX.html",redirect:"/pages/practice/dc2837/"},{name:"v-2d7a0750",path:"/pages/practice/ac7b66/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2d7a0750").then(t)}},{path:"/pages/practice/ac7b66/index.html",redirect:"/pages/practice/ac7b66/"},{path:"/实践案例/013.项目管理/9998.V2.9.X/0106.DSL项目接口探活.html",redirect:"/pages/practice/ac7b66/"},{name:"v-222bf5c8",path:"/pages/practice/project-dsl-java/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-222bf5c8").then(t)}},{path:"/pages/practice/project-dsl-java/index.html",redirect:"/pages/practice/project-dsl-java/"},{path:"/实践案例/013.项目管理/9999.V2.8.X/0105.project-dsl-java.html",redirect:"/pages/practice/project-dsl-java/"},{name:"v-ff94b706",path:"/pages/practice/610387/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-ff94b706").then(t)}},{path:"/pages/practice/610387/index.html",redirect:"/pages/practice/610387/"},{path:"/实践案例/014.项目监控/0120.DSL 项目接口探活监控.html",redirect:"/pages/practice/610387/"},{name:"v-32cd8c48",path:"/pages/practice/node-script-backup-docker-mysql/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-32cd8c48").then(t)}},{path:"/pages/practice/node-script-backup-docker-mysql/index.html",redirect:"/pages/practice/node-script-backup-docker-mysql/"},{path:"/实践案例/015.在线脚本/01.使用节点脚本定时备份 docker 中的 mysql 数据库.html",redirect:"/pages/practice/node-script-backup-docker-mysql/"},{name:"v-1d455bc4",path:"/pages/practice/ssh-terminal/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-1d455bc4").then(t)}},{path:"/pages/practice/ssh-terminal/index.html",redirect:"/pages/practice/ssh-terminal/"},{path:"/实践案例/016.SSH管理/01.在线管理 SSH 终端以及上传文件和执行命令历史.html",redirect:"/pages/practice/ssh-terminal/"},{name:"v-ac5152e2",path:"/pages/practice/monitor-notice/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-ac5152e2").then(t)}},{path:"/pages/practice/monitor-notice/index.html",redirect:"/pages/practice/monitor-notice/"},{path:"/实践案例/014.项目监控/9998.V2.9.X/0109.monitor.notice.html",redirect:"/pages/practice/monitor-notice/"},{name:"v-a64d2c18",path:"/pages/practice/8127a2/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-a64d2c18").then(t)}},{path:"/pages/practice/8127a2/index.html",redirect:"/pages/practice/8127a2/"},{path:"/实践案例/017.日常管理/0000.V2.10.X/0200.Linux安装Jpom2.10.40教程.html",redirect:"/pages/practice/8127a2/"},{name:"v-0a810df7",path:"/pages/practice/h2-console/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0a810df7").then(t)}},{path:"/pages/practice/h2-console/index.html",redirect:"/pages/practice/h2-console/"},{path:"/实践案例/017.日常管理/0100.如何开启 h2-console web 访问功能.html",redirect:"/pages/practice/h2-console/"},{name:"v-2c258483",path:"/pages/practice/jpom-server-import-multi-repos/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2c258483").then(t)}},{path:"/pages/practice/jpom-server-import-multi-repos/index.html",redirect:"/pages/practice/jpom-server-import-multi-repos/"},{path:"/实践案例/017.日常管理/0300.jpom-server-import-multi-repos.html",redirect:"/pages/practice/jpom-server-import-multi-repos/"},{name:"v-19b5ec25",path:"/pages/practice/jpom-server-cert-manage/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-19b5ec25").then(t)}},{path:"/pages/practice/jpom-server-cert-manage/index.html",redirect:"/pages/practice/jpom-server-cert-manage/"},{path:"/实践案例/017.日常管理/0400.jpom-server-cert-manage.html",redirect:"/pages/practice/jpom-server-cert-manage/"},{name:"v-e7fae964",path:"/pages/practice/b63dc5/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-e7fae964").then(t)}},{path:"/pages/practice/b63dc5/index.html",redirect:"/pages/practice/b63dc5/"},{path:"/实践案例/017.日常管理/1900.安装docker.html",redirect:"/pages/practice/b63dc5/"},{name:"v-2b5ee664",path:"/pages/practice/a033a2/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2b5ee664").then(t)}},{path:"/pages/practice/a033a2/index.html",redirect:"/pages/practice/a033a2/"},{path:"/实践案例/017.日常管理/9999.使用 Rainbond 部署 Jpom.html",redirect:"/pages/practice/a033a2/"},{name:"v-05e5798a",path:"/pages/practice/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-05e5798a").then(t)}},{path:"/pages/practice/index.html",redirect:"/pages/practice/"},{path:"/实践案例/实践案例.html",redirect:"/pages/practice/"},{name:"v-edd3d778",path:"/pages/c270ce/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-edd3d778").then(t)}},{path:"/pages/c270ce/index.html",redirect:"/pages/c270ce/"},{path:"/推广文章/Java项目自动升级的方式之一.html",redirect:"/pages/c270ce/"},{name:"v-4df1ce76",path:"/pages/practice/catalogue/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-4df1ce76").then(t)}},{path:"/pages/practice/catalogue/index.html",redirect:"/pages/practice/catalogue/"},{path:"/实践案例/实践案例目录.html",redirect:"/pages/practice/catalogue/"},{name:"v-5ded3183",path:"/pages/e234a7/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5ded3183").then(t)}},{path:"/pages/e234a7/index.html",redirect:"/pages/e234a7/"},{path:"/推广文章/Jpom介绍文章0727.html",redirect:"/pages/e234a7/"},{name:"v-332dd43c",path:"/pages/b66671/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-332dd43c").then(t)}},{path:"/pages/b66671/index.html",redirect:"/pages/b66671/"},{path:"/推广文章/Jpom认证管理20230403.html",redirect:"/pages/b66671/"},{name:"v-331a314c",path:"/pages/7f1127/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-331a314c").then(t)}},{path:"/pages/7f1127/index.html",redirect:"/pages/7f1127/"},{path:"/推广文章/Jpom资产管理介绍.html",redirect:"/pages/7f1127/"},{name:"v-0ba5ddf3",path:"/pages/praise/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0ba5ddf3").then(t)}},{path:"/pages/praise/index.html",redirect:"/pages/praise/"},{path:"/支持/00.赞赏支持/00.个人赞赏.html",redirect:"/pages/praise/"},{name:"v-87cbab66",path:"/pages/589c8e/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-87cbab66").then(t)}},{path:"/pages/589c8e/index.html",redirect:"/pages/589c8e/"},{path:"/支持/00.赞赏支持/04.成为赞助商.html",redirect:"/pages/589c8e/"},{name:"v-69ac7bd6",path:"/pages/dfeb97/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-69ac7bd6").then(t)}},{path:"/pages/dfeb97/index.html",redirect:"/pages/dfeb97/"},{path:"/推广文章/Jpom软文0727.html",redirect:"/pages/dfeb97/"},{name:"v-6922a670",path:"/pages/praise/publicity/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6922a670").then(t)}},{path:"/pages/praise/publicity/index.html",redirect:"/pages/praise/publicity/"},{path:"/支持/00.赞赏支持/100.赞赏总览.html",redirect:"/pages/praise/publicity/"},{name:"v-b6d9da36",path:"/pages/da38d0/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-b6d9da36").then(t)}},{path:"/pages/da38d0/index.html",redirect:"/pages/da38d0/"},{path:"/支持/00.赞赏支持/101.赞赏记录/75.2025年.html",redirect:"/pages/da38d0/"},{name:"v-702ff1be",path:"/pages/97e0e2/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-702ff1be").then(t)}},{path:"/pages/97e0e2/index.html",redirect:"/pages/97e0e2/"},{path:"/支持/00.赞赏支持/101.赞赏记录/76.2024年.html",redirect:"/pages/97e0e2/"},{name:"v-29860946",path:"/pages/8bbc44/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-29860946").then(t)}},{path:"/pages/8bbc44/index.html",redirect:"/pages/8bbc44/"},{path:"/支持/00.赞赏支持/101.赞赏记录/77.2023年.html",redirect:"/pages/8bbc44/"},{name:"v-31e6e3d5",path:"/pages/1bf779/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-31e6e3d5").then(t)}},{path:"/pages/1bf779/index.html",redirect:"/pages/1bf779/"},{path:"/支持/00.赞赏支持/101.赞赏记录/79.2021年.html",redirect:"/pages/1bf779/"},{name:"v-0a4449a7",path:"/pages/eb27c8/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0a4449a7").then(t)}},{path:"/pages/eb27c8/index.html",redirect:"/pages/eb27c8/"},{path:"/支持/00.赞赏支持/101.赞赏记录/80.2020年.html",redirect:"/pages/eb27c8/"},{name:"v-5e88d539",path:"/pages/9a4844/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5e88d539").then(t)}},{path:"/pages/9a4844/index.html",redirect:"/pages/9a4844/"},{path:"/支持/00.赞赏支持/101.赞赏记录/81.2019年.html",redirect:"/pages/9a4844/"},{name:"v-0e91ef99",path:"/pages/e69067/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0e91ef99").then(t)}},{path:"/pages/e69067/index.html",redirect:"/pages/e69067/"},{path:"/支持/00.赞赏支持/101.赞赏记录/78.2022年.html",redirect:"/pages/e69067/"},{name:"v-15e0d9cd",path:"/pages/souvenir/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-15e0d9cd").then(t)}},{path:"/pages/souvenir/index.html",redirect:"/pages/souvenir/"},{path:"/支持/00.赞赏支持/90.专属纪念品.html",redirect:"/pages/souvenir/"},{name:"v-255a0820",path:"/pages/3cfadf/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-255a0820").then(t)}},{path:"/pages/3cfadf/index.html",redirect:"/pages/3cfadf/"},{path:"/支持/01.周边商品/10.推荐周边.html",redirect:"/pages/3cfadf/"},{name:"v-b99dd972",path:"/pages/legal-risk/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-b99dd972").then(t)}},{path:"/pages/legal-risk/index.html",redirect:"/pages/legal-risk/"},{path:"/支持/03.企业服务/00.法律风险.html",redirect:"/pages/legal-risk/"},{name:"v-6b947f16",path:"/pages/dc18b8/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6b947f16").then(t)}},{path:"/pages/dc18b8/index.html",redirect:"/pages/dc18b8/"},{path:"/支持/102.贡献说明/102.贡献准则.html",redirect:"/pages/dc18b8/"},{name:"v-0cad66ab",path:"/pages/enterprise-service/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0cad66ab").then(t)}},{path:"/pages/enterprise-service/index.html",redirect:"/pages/enterprise-service/"},{path:"/支持/03.企业服务/03.企业服务.html",redirect:"/pages/enterprise-service/"},{name:"v-23586a79",path:"/pages/shop/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-23586a79").then(t)}},{path:"/pages/shop/index.html",redirect:"/pages/shop/"},{path:"/支持/01.周边商品/02.周边商品.html",redirect:"/pages/shop/"},{name:"v-52726112",path:"/pages/user/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-52726112").then(t)}},{path:"/pages/user/index.html",redirect:"/pages/user/"},{path:"/支持/109.我们用户.html",redirect:"/pages/user/"},{name:"v-6418f247",path:"/pages/praise/join/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6418f247").then(t)}},{path:"/pages/praise/join/index.html",redirect:"/pages/praise/join/"},{path:"/支持/110.加入社群.html",redirect:"/pages/praise/join/"},{name:"v-535f78d0",path:"/pages/readme/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-535f78d0").then(t)}},{path:"/pages/readme/index.html",redirect:"/pages/readme/"},{path:"/文档/00.自述序言/02.了解Jpom.html",redirect:"/pages/readme/"},{name:"v-5da37683",path:"/pages/ac6961/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5da37683").then(t)}},{path:"/pages/ac6961/index.html",redirect:"/pages/ac6961/"},{path:"/文档/00.自述序言/10.文档说明.html",redirect:"/pages/ac6961/"},{name:"v-2057c300",path:"/pages/FQA/proper-noun/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2057c300").then(t)}},{path:"/pages/FQA/proper-noun/index.html",redirect:"/pages/FQA/proper-noun/"},{path:"/文档/00.自述序言/22.名词解释/01.基础名词.html",redirect:"/pages/FQA/proper-noun/"},{name:"v-29c7d206",path:"/pages/0171cb/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-29c7d206").then(t)}},{path:"/pages/0171cb/index.html",redirect:"/pages/0171cb/"},{path:"/文档/00.自述序言/22.名词解释/02.命令相关.html",redirect:"/pages/0171cb/"},{name:"v-65d6bf18",path:"/pages/d05224/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-65d6bf18").then(t)}},{path:"/pages/d05224/index.html",redirect:"/pages/d05224/"},{path:"/文档/00.自述序言/22.名词解释/08.产物目录.html",redirect:"/pages/d05224/"},{name:"v-59e47739",path:"/pages/6f2c0b/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-59e47739").then(t)}},{path:"/pages/6f2c0b/index.html",redirect:"/pages/6f2c0b/"},{path:"/文档/00.自述序言/22.名词解释/09.更多说明.html",redirect:"/pages/6f2c0b/"},{name:"v-725f8659",path:"/pages/2e4ffc/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-725f8659").then(t)}},{path:"/pages/2e4ffc/index.html",redirect:"/pages/2e4ffc/"},{path:"/文档/00.自述序言/30.演示系统.html",redirect:"/pages/2e4ffc/"},{name:"v-f8698352",path:"/pages/0facbd/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-f8698352").then(t)}},{path:"/pages/0facbd/index.html",redirect:"/pages/0facbd/"},{path:"/文档/00.自述序言/998.高效报告BUG.html",redirect:"/pages/0facbd/"},{name:"v-1008631a",path:"/pages/install/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-1008631a").then(t)}},{path:"/pages/install/index.html",redirect:"/pages/install/"},{path:"/文档/01.安装使用/01.安装说明.html",redirect:"/pages/install/"},{name:"v-057f5752",path:"/pages/FQA/how-to-ask-questions-the-smart-way/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-057f5752").then(t)}},{path:"/pages/FQA/how-to-ask-questions-the-smart-way/index.html",redirect:"/pages/FQA/how-to-ask-questions-the-smart-way/"},{path:"/文档/00.自述序言/999.提问智慧.html",redirect:"/pages/FQA/how-to-ask-questions-the-smart-way/"},{name:"v-083c3760",path:"/pages/praise/friends/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-083c3760").then(t)}},{path:"/pages/praise/friends/index.html",redirect:"/pages/praise/friends/"},{path:"/支持/102.贡献说明/103.贡献者.html",redirect:"/pages/praise/friends/"},{name:"v-695409bb",path:"/pages/fe28e9/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-695409bb").then(t)}},{path:"/pages/fe28e9/index.html",redirect:"/pages/fe28e9/"},{path:"/文档/01.安装使用/02.一键安装.html",redirect:"/pages/fe28e9/"},{name:"v-207eb677",path:"/pages/820286/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-207eb677").then(t)}},{path:"/pages/820286/index.html",redirect:"/pages/820286/"},{path:"/文档/01.安装使用/04.容器化安装.html",redirect:"/pages/820286/"},{name:"v-43b57019",path:"/pages/e6e8bf/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-43b57019").then(t)}},{path:"/pages/e6e8bf/index.html",redirect:"/pages/e6e8bf/"},{path:"/文档/01.安装使用/05.自行编译.html",redirect:"/pages/e6e8bf/"},{name:"v-5693e255",path:"/pages/db3065/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5693e255").then(t)}},{path:"/pages/db3065/index.html",redirect:"/pages/db3065/"},{path:"/文档/01.安装使用/03.下载安装.html",redirect:"/pages/db3065/"},{name:"v-0116a4c0",path:"/pages/a06a94/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0116a4c0").then(t)}},{path:"/pages/a06a94/index.html",redirect:"/pages/a06a94/"},{path:"/文档/01.安装使用/06.docker-compose.html",redirect:"/pages/a06a94/"},{name:"v-2594b856",path:"/pages/929085/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2594b856").then(t)}},{path:"/pages/929085/index.html",redirect:"/pages/929085/"},{path:"/文档/01.安装使用/20.安装服务.html",redirect:"/pages/929085/"},{name:"v-89482816",path:"/pages/892df7/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-89482816").then(t)}},{path:"/pages/892df7/index.html",redirect:"/pages/892df7/"},{path:"/文档/01.安装使用/30.开始使用/001.如何访问.html",redirect:"/pages/892df7/"},{name:"v-adb25576",path:"/pages/feb7c1/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-adb25576").then(t)}},{path:"/pages/feb7c1/index.html",redirect:"/pages/feb7c1/"},{path:"/文档/01.安装使用/099.辅助安装.html",redirect:"/pages/feb7c1/"},{name:"v-7ee3e430",path:"/pages/FQA/nginx-conf/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7ee3e430").then(t)}},{path:"/pages/FQA/nginx-conf/index.html",redirect:"/pages/FQA/nginx-conf/"},{path:"/文档/01.安装使用/30.开始使用/099.nginx.html",redirect:"/pages/FQA/nginx-conf/"},{name:"v-12e1cef3",path:"/pages/a13d8d/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-12e1cef3").then(t)}},{path:"/pages/a13d8d/index.html",redirect:"/pages/a13d8d/"},{path:"/文档/01.安装使用/35.Windows安装.html",redirect:"/pages/a13d8d/"},{name:"v-24b77e56",path:"/pages/40765e/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-24b77e56").then(t)}},{path:"/pages/40765e/index.html",redirect:"/pages/40765e/"},{path:"/文档/01.安装使用/9999.宝塔安装.html",redirect:"/pages/40765e/"},{name:"v-d46babc2",path:"/pages/2026d1/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-d46babc2").then(t)}},{path:"/pages/2026d1/index.html",redirect:"/pages/2026d1/"},{path:"/文档/012.备份&升级/010.备份数据.html",redirect:"/pages/2026d1/"},{name:"v-2f93f016",path:"/pages/db/4cfb46/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2f93f016").then(t)}},{path:"/pages/db/4cfb46/index.html",redirect:"/pages/db/4cfb46/"},{path:"/文档/012.备份&升级/020.数据库管理/0990.数据库迁移到 mysql.html",redirect:"/pages/db/4cfb46/"},{name:"v-65449efa",path:"/pages/db/672ad5/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-65449efa").then(t)}},{path:"/pages/db/672ad5/index.html",redirect:"/pages/db/672ad5/"},{path:"/文档/012.备份&升级/020.数据库管理/020.数据库管理.html",redirect:"/pages/db/672ad5/"},{name:"v-408de39c",path:"/pages/db/e59f84/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-408de39c").then(t)}},{path:"/pages/db/e59f84/index.html",redirect:"/pages/db/e59f84/"},{path:"/文档/012.备份&升级/020.数据库管理/0992.数据库迁移到 postgresql.html",redirect:"/pages/db/e59f84/"},{name:"v-36117e5c",path:"/pages/db/e59f85/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-36117e5c").then(t)}},{path:"/pages/db/e59f85/index.html",redirect:"/pages/db/e59f85/"},{path:"/文档/012.备份&升级/020.数据库管理/0993.数据库迁移到 dameng.html",redirect:"/pages/db/e59f85/"},{name:"v-d3793bb4",path:"/pages/upgrade/2.10.x-to-2.11.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-d3793bb4").then(t)}},{path:"/pages/upgrade/2.10.x-to-2.11.x/index.html",redirect:"/pages/upgrade/2.10.x-to-2.11.x/"},{path:"/文档/012.备份&升级/0996.2.10.x-2.11.x.html",redirect:"/pages/upgrade/2.10.x-to-2.11.x/"},{name:"v-e8b5de98",path:"/pages/db/5622b5/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-e8b5de98").then(t)}},{path:"/pages/db/5622b5/index.html",redirect:"/pages/db/5622b5/"},{path:"/文档/012.备份&升级/020.数据库管理/0991.数据库迁移到 mariadb.html",redirect:"/pages/db/5622b5/"},{name:"v-62e067f4",path:"/pages/upgrade/2.8.x-to-2.9.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-62e067f4").then(t)}},{path:"/pages/upgrade/2.8.x-to-2.9.x/index.html",redirect:"/pages/upgrade/2.8.x-to-2.9.x/"},{path:"/文档/012.备份&升级/0999.2.8.x-2.9.x.html",redirect:"/pages/upgrade/2.8.x-to-2.9.x/"},{name:"v-0ee5d8f8",path:"/pages/upgrade/2.9.x-to-2.10.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0ee5d8f8").then(t)}},{path:"/pages/upgrade/2.9.x-to-2.10.x/index.html",redirect:"/pages/upgrade/2.9.x-to-2.10.x/"},{path:"/文档/012.备份&升级/0998.2.9.x-2.10.x.html",redirect:"/pages/upgrade/2.9.x-to-2.10.x/"},{name:"v-65bed54c",path:"/pages/FQA/upgrade/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-65bed54c").then(t)}},{path:"/pages/FQA/upgrade/index.html",redirect:"/pages/FQA/upgrade/"},{path:"/文档/012.备份&升级/08.升级版本.html",redirect:"/pages/FQA/upgrade/"},{name:"v-746a30c8",path:"/pages/269bdc/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-746a30c8").then(t)}},{path:"/pages/269bdc/index.html",redirect:"/pages/269bdc/"},{path:"/文档/01.安装使用/30.开始使用/002.初始化服务端.html",redirect:"/pages/269bdc/"},{name:"v-ffcc14aa",path:"/pages/dec2a1/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-ffcc14aa").then(t)}},{path:"/pages/dec2a1/index.html",redirect:"/pages/dec2a1/"},{path:"/文档/013.迁移数据/020.完整&部分迁移.html",redirect:"/pages/dec2a1/"},{name:"v-0621d0e1",path:"/pages/4d2ebc/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0621d0e1").then(t)}},{path:"/pages/4d2ebc/index.html",redirect:"/pages/4d2ebc/"},{path:"/文档/013.迁移数据/010.迁移方式.html",redirect:"/pages/4d2ebc/"},{name:"v-8863c864",path:"/pages/643951/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-8863c864").then(t)}},{path:"/pages/643951/index.html",redirect:"/pages/643951/"},{path:"/文档/013.迁移数据/030.数据还原&导入.html",redirect:"/pages/643951/"},{name:"v-5a423170",path:"/pages/1ec490/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5a423170").then(t)}},{path:"/pages/1ec490/index.html",redirect:"/pages/1ec490/"},{path:"/文档/013.迁移数据/040.容器迁移.html",redirect:"/pages/1ec490/"},{name:"v-3b20f602",path:"/pages/permissions/ca90a5/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3b20f602").then(t)}},{path:"/pages/permissions/ca90a5/index.html",redirect:"/pages/permissions/ca90a5/"},{path:"/文档/020.用户&权限/00.权限说明.html",redirect:"/pages/permissions/ca90a5/"},{name:"v-6442d20e",path:"/pages/be7a7b/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6442d20e").then(t)}},{path:"/pages/be7a7b/index.html",redirect:"/pages/be7a7b/"},{path:"/文档/020.用户&权限/05.登录说明.html",redirect:"/pages/be7a7b/"},{name:"v-0b819066",path:"/pages/0f14d7/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0b819066").then(t)}},{path:"/pages/0f14d7/index.html",redirect:"/pages/0f14d7/"},{path:"/文档/020.用户&权限/10.管理用户.html",redirect:"/pages/0f14d7/"},{name:"v-8331f970",path:"/pages/oauth/898d2e/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-8331f970").then(t)}},{path:"/pages/oauth/898d2e/index.html",redirect:"/pages/oauth/898d2e/"},{path:"/文档/020.用户&权限/90.Oauth2登录/00.Oauth2说明.html",redirect:"/pages/oauth/898d2e/"},{name:"v-9be6db9a",path:"/pages/oauth/gitee/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-9be6db9a").then(t)}},{path:"/pages/oauth/gitee/index.html",redirect:"/pages/oauth/gitee/"},{path:"/文档/020.用户&权限/90.Oauth2登录/01.gitee登录.html",redirect:"/pages/oauth/gitee/"},{name:"v-2e15f469",path:"/pages/oauth/dingtalk/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2e15f469").then(t)}},{path:"/pages/oauth/dingtalk/index.html",redirect:"/pages/oauth/dingtalk/"},{path:"/文档/020.用户&权限/90.Oauth2登录/02.钉钉登录.html",redirect:"/pages/oauth/dingtalk/"},{name:"v-16a2894c",path:"/pages/oauth/wechat_enterprise_qrcode/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-16a2894c").then(t)}},{path:"/pages/oauth/wechat_enterprise_qrcode/index.html",redirect:"/pages/oauth/wechat_enterprise_qrcode/"},{path:"/文档/020.用户&权限/90.Oauth2登录/03.企业微信二维码登录.html",redirect:"/pages/oauth/wechat_enterprise_qrcode/"},{name:"v-14736bc6",path:"/pages/oauth/feishu/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-14736bc6").then(t)}},{path:"/pages/oauth/feishu/index.html",redirect:"/pages/oauth/feishu/"},{path:"/文档/020.用户&权限/90.Oauth2登录/04.飞书登录.html",redirect:"/pages/oauth/feishu/"},{name:"v-5ed3ce0e",path:"/pages/oauth/my_gitlab/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5ed3ce0e").then(t)}},{path:"/pages/oauth/my_gitlab/index.html",redirect:"/pages/oauth/my_gitlab/"},{path:"/文档/020.用户&权限/90.Oauth2登录/06.自建 Gitlab.html",redirect:"/pages/oauth/my_gitlab/"},{name:"v-27d7f9ae",path:"/pages/oauth/github/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-27d7f9ae").then(t)}},{path:"/pages/oauth/github/index.html",redirect:"/pages/oauth/github/"},{path:"/文档/020.用户&权限/90.Oauth2登录/05.github登录.html",redirect:"/pages/oauth/github/"},{name:"v-27ccae51",path:"/pages/6e6103/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-27ccae51").then(t)}},{path:"/pages/6e6103/index.html",redirect:"/pages/6e6103/"},{path:"/文档/020.用户&权限/98.用户日志.html",redirect:"/pages/6e6103/"},{name:"v-3e35976a",path:"/pages/885659/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3e35976a").then(t)}},{path:"/pages/885659/index.html",redirect:"/pages/885659/"},{path:"/文档/020.用户&权限/99.MFA两步验证.html",redirect:"/pages/885659/"},{name:"v-14569a23",path:"/pages/workspace/cluster/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-14569a23").then(t)}},{path:"/pages/workspace/cluster/index.html",redirect:"/pages/workspace/cluster/"},{path:"/文档/030.工作空间&集群/000.集群管理.html",redirect:"/pages/workspace/cluster/"},{name:"v-af31e4a4",path:"/pages/workspace/d3f985/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-af31e4a4").then(t)}},{path:"/pages/workspace/d3f985/index.html",redirect:"/pages/workspace/d3f985/"},{path:"/文档/030.工作空间&集群/010.工作空间.html",redirect:"/pages/workspace/d3f985/"},{name:"v-06020ef6",path:"/pages/350118/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-06020ef6").then(t)}},{path:"/pages/350118/index.html",redirect:"/pages/350118/"},{path:"/文档/035.资产管理/00.资产说明.html",redirect:"/pages/350118/"},{name:"v-faa6e8b0",path:"/pages/3f268f/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-faa6e8b0").then(t)}},{path:"/pages/3f268f/index.html",redirect:"/pages/3f268f/"},{path:"/文档/035.资产管理/10.机器资产.html",redirect:"/pages/3f268f/"},{name:"v-c5a2c41a",path:"/pages/d2df49/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-c5a2c41a").then(t)}},{path:"/pages/d2df49/index.html",redirect:"/pages/d2df49/"},{path:"/文档/035.资产管理/20.SSH资产.html",redirect:"/pages/d2df49/"},{name:"v-f0625140",path:"/pages/4d0c1b/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-f0625140").then(t)}},{path:"/pages/4d0c1b/index.html",redirect:"/pages/4d0c1b/"},{path:"/文档/035.资产管理/30.Docker资产/00.新增Docker.html",redirect:"/pages/4d0c1b/"},{name:"v-ea656672",path:"/pages/81c6ca/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-ea656672").then(t)}},{path:"/pages/81c6ca/index.html",redirect:"/pages/81c6ca/"},{path:"/文档/035.资产管理/30.Docker资产/05.Docker控制台.html",redirect:"/pages/81c6ca/"},{name:"v-2934d34f",path:"/pages/6af9e1/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2934d34f").then(t)}},{path:"/pages/6af9e1/index.html",redirect:"/pages/6af9e1/"},{path:"/文档/035.资产管理/30.Docker资产/10.Swarm管理.html",redirect:"/pages/6af9e1/"},{name:"v-5cf4a45e",path:"/pages/ccc0ae/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5cf4a45e").then(t)}},{path:"/pages/ccc0ae/index.html",redirect:"/pages/ccc0ae/"},{path:"/文档/035.资产管理/30.Docker资产/14.Swarm控制台.html",redirect:"/pages/ccc0ae/"},{name:"v-951bd066",path:"/pages/bb772f/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-951bd066").then(t)}},{path:"/pages/bb772f/index.html",redirect:"/pages/bb772f/"},{path:"/文档/035.资产管理/30.Docker资产/20.分配Docker.html",redirect:"/pages/bb772f/"},{name:"v-3594dcbe",path:"/pages/285484/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3594dcbe").then(t)}},{path:"/pages/285484/index.html",redirect:"/pages/285484/"},{path:"/文档/040.节点&项目/010.逻辑节点.html",redirect:"/pages/285484/"},{name:"v-28d2ad57",path:"/pages/b3e508/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-28d2ad57").then(t)}},{path:"/pages/b3e508/index.html",redirect:"/pages/b3e508/"},{path:"/文档/040.节点&项目/020.节点项目.html",redirect:"/pages/b3e508/"},{name:"v-07446048",path:"/pages/8a95bf/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-07446048").then(t)}},{path:"/pages/8a95bf/index.html",redirect:"/pages/8a95bf/"},{path:"/文档/040.节点&项目/030.节点脚本.html",redirect:"/pages/8a95bf/"},{name:"v-111883b0",path:"/pages/c5cbe6/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-111883b0").then(t)}},{path:"/pages/c5cbe6/index.html",redirect:"/pages/c5cbe6/"},{path:"/文档/040.节点&项目/050.日志搜索.html",redirect:"/pages/c5cbe6/"},{name:"v-1a26fd2a",path:"/pages/FQA/DSL/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-1a26fd2a").then(t)}},{path:"/pages/FQA/DSL/index.html",redirect:"/pages/FQA/DSL/"},{path:"/文档/100.DSL说明/00.介绍.html",redirect:"/pages/FQA/DSL/"},{name:"v-53db48e2",path:"/pages/9c85bc/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-53db48e2").then(t)}},{path:"/pages/9c85bc/index.html",redirect:"/pages/9c85bc/"},{path:"/文档/100.DSL说明/10.常见问题.html",redirect:"/pages/9c85bc/"},{name:"v-23a772d3",path:"/pages/e35370/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-23a772d3").then(t)}},{path:"/pages/e35370/index.html",redirect:"/pages/e35370/"},{path:"/文档/040.节点&项目/040.节点分发.html",redirect:"/pages/e35370/"},{name:"v-387f6a75",path:"/pages/519020/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-387f6a75").then(t)}},{path:"/pages/519020/index.html",redirect:"/pages/519020/"},{path:"/文档/100.DSL说明/10.配置示例/01.DSL-java.html",redirect:"/pages/519020/"},{name:"v-d12216fa",path:"/pages/eb9c6e/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-d12216fa").then(t)}},{path:"/pages/eb9c6e/index.html",redirect:"/pages/eb9c6e/"},{path:"/文档/100.DSL说明/10.配置示例/02.DSL-python.html",redirect:"/pages/eb9c6e/"},{name:"v-63c94824",path:"/pages/FQA/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-63c94824").then(t)}},{path:"/pages/FQA/index.html",redirect:"/pages/FQA/"},{path:"/文档/200.常见问题/010.FQA.html",redirect:"/pages/FQA/"},{name:"v-894b1e10",path:"/pages/FQA/839836/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-894b1e10").then(t)}},{path:"/pages/FQA/839836/index.html",redirect:"/pages/FQA/839836/"},{path:"/文档/200.常见问题/100.账号相关.html",redirect:"/pages/FQA/839836/"},{name:"v-a782e9da",path:"/pages/FQA/a1e454/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-a782e9da").then(t)}},{path:"/pages/FQA/a1e454/index.html",redirect:"/pages/FQA/a1e454/"},{path:"/文档/200.常见问题/101.启动相关.html",redirect:"/pages/FQA/a1e454/"},{name:"v-3b2e6be1",path:"/pages/5020f7/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3b2e6be1").then(t)}},{path:"/pages/5020f7/index.html",redirect:"/pages/5020f7/"},{path:"/文档/100.DSL说明/10.配置示例/03.DOCKER_DSL.html",redirect:"/pages/5020f7/"},{name:"v-8b483f02",path:"/pages/FQA/d0b0c3/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-8b483f02").then(t)}},{path:"/pages/FQA/d0b0c3/index.html",redirect:"/pages/FQA/d0b0c3/"},{path:"/文档/200.常见问题/104.系统报错.html",redirect:"/pages/FQA/d0b0c3/"},{name:"v-ef23006a",path:"/pages/FQA/ba6ff8/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-ef23006a").then(t)}},{path:"/pages/FQA/ba6ff8/index.html",redirect:"/pages/FQA/ba6ff8/"},{path:"/文档/200.常见问题/103.无法访问.html",redirect:"/pages/FQA/ba6ff8/"},{name:"v-800a98dc",path:"/pages/FQA/6a1f29/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-800a98dc").then(t)}},{path:"/pages/FQA/6a1f29/index.html",redirect:"/pages/FQA/6a1f29/"},{path:"/文档/200.常见问题/106.构建相关.html",redirect:"/pages/FQA/6a1f29/"},{name:"v-70549619",path:"/pages/FQA/98500f/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-70549619").then(t)}},{path:"/pages/FQA/98500f/index.html",redirect:"/pages/FQA/98500f/"},{path:"/文档/200.常见问题/105.修改配置.html",redirect:"/pages/FQA/98500f/"},{name:"v-55adf227",path:"/pages/FQA/fa9335/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-55adf227").then(t)}},{path:"/pages/FQA/fa9335/index.html",redirect:"/pages/FQA/fa9335/"},{path:"/文档/200.常见问题/199.更多问题.html",redirect:"/pages/FQA/fa9335/"},{name:"v-4489e684",path:"/pages/FQA/maven-conf/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-4489e684").then(t)}},{path:"/pages/FQA/maven-conf/index.html",redirect:"/pages/FQA/maven-conf/"},{path:"/文档/200.常见问题/500.maven.html",redirect:"/pages/FQA/maven-conf/"},{name:"v-9c9d9c48",path:"/pages/1508cd/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-9c9d9c48").then(t)}},{path:"/pages/1508cd/index.html",redirect:"/pages/1508cd/"},{path:"/文档/9999.历史文档/0111.管理/08.启动参数.html",redirect:"/pages/1508cd/"},{name:"v-67e2d778",path:"/pages/FQA/project-file-backup/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-67e2d778").then(t)}},{path:"/pages/FQA/project-file-backup/index.html",redirect:"/pages/FQA/project-file-backup/"},{path:"/文档/200.常见问题/300.ProjectFileBackup.html",redirect:"/pages/FQA/project-file-backup/"},{name:"v-aa4eca94",path:"/pages/d39de8/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-aa4eca94").then(t)}},{path:"/pages/d39de8/index.html",redirect:"/pages/d39de8/"},{path:"/文档/9999.历史文档/0111.管理/09.启动失败.html",redirect:"/pages/d39de8/"},{name:"v-6e8c7244",path:"/pages/7d218d/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6e8c7244").then(t)}},{path:"/pages/7d218d/index.html",redirect:"/pages/7d218d/"},{path:"/文档/9999.历史文档/0010.用户管理/01.用户角色.html",redirect:"/pages/7d218d/"},{name:"v-5632da12",path:"/pages/c6e79e/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5632da12").then(t)}},{path:"/pages/c6e79e/index.html",redirect:"/pages/c6e79e/"},{path:"/文档/9999.历史文档/0010.用户管理/02.编辑用户.html",redirect:"/pages/c6e79e/"},{name:"v-55d7a9c9",path:"/pages/530eb0/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-55d7a9c9").then(t)}},{path:"/pages/530eb0/index.html",redirect:"/pages/530eb0/"},{path:"/文档/9999.历史文档/0111.管理/10.管理命令.html",redirect:"/pages/530eb0/"},{name:"v-0746684c",path:"/pages/29f687/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0746684c").then(t)}},{path:"/pages/29f687/index.html",redirect:"/pages/29f687/"},{path:"/文档/9999.历史文档/0887.在线构建/01.编辑构建.html",redirect:"/pages/29f687/"},{name:"v-76174836",path:"/pages/2f4ebb/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-76174836").then(t)}},{path:"/pages/2f4ebb/index.html",redirect:"/pages/2f4ebb/"},{path:"/文档/9999.历史文档/0888.监控管理/01.监控介绍.html",redirect:"/pages/2f4ebb/"},{name:"v-11885233",path:"/pages/5d6479/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-11885233").then(t)}},{path:"/pages/5d6479/index.html",redirect:"/pages/5d6479/"},{path:"/文档/9999.历史文档/0889.系统管理/01.系统日志.html",redirect:"/pages/5d6479/"},{name:"v-bec10dec",path:"/pages/0429ad/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-bec10dec").then(t)}},{path:"/pages/0429ad/index.html",redirect:"/pages/0429ad/"},{path:"/文档/9999.历史文档/0889.系统管理/02.系统管理.html",redirect:"/pages/0429ad/"},{name:"v-7212fccc",path:"/pages/25f350/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7212fccc").then(t)}},{path:"/pages/25f350/index.html",redirect:"/pages/25f350/"},{path:"/文档/9999.历史文档/0889.系统管理/03.邮箱配置.html",redirect:"/pages/25f350/"},{name:"v-238d264d",path:"/pages/ff3028/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-238d264d").then(t)}},{path:"/pages/ff3028/index.html",redirect:"/pages/ff3028/"},{path:"/文档/9999.历史文档/0890.节点功能/10.项目管理/02.控制台.html",redirect:"/pages/ff3028/"},{name:"v-02eaa539",path:"/pages/fa7614/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-02eaa539").then(t)}},{path:"/pages/fa7614/index.html",redirect:"/pages/fa7614/"},{path:"/文档/9999.历史文档/0890.节点功能/10.项目管理/01.项目属性.html",redirect:"/pages/fa7614/"},{name:"v-b5ea62e2",path:"/pages/933483/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-b5ea62e2").then(t)}},{path:"/pages/933483/index.html",redirect:"/pages/933483/"},{path:"/文档/9999.历史文档/0890.节点功能/13.系统管理/01.白名单目录.html",redirect:"/pages/933483/"},{name:"v-58368712",path:"/pages/2573d3/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-58368712").then(t)}},{path:"/pages/2573d3/index.html",redirect:"/pages/2573d3/"},{path:"/文档/9999.历史文档/0891.节点管理/01.添加节点.html",redirect:"/pages/2573d3/"},{name:"v-0482581c",path:"/pages/c6da0f/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0482581c").then(t)}},{path:"/pages/c6da0f/index.html",redirect:"/pages/c6da0f/"},{path:"/文档/9999.历史文档/0891.节点管理/02.SSH管理.html",redirect:"/pages/c6da0f/"},{name:"v-7c6bb49e",path:"/pages/changelog/new/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7c6bb49e").then(t)}},{path:"/pages/changelog/new/index.html",redirect:"/pages/changelog/new/"},{path:"/日志&下载/01.更新日志/01.最新.html",redirect:"/pages/changelog/new/"},{name:"v-7c539bf6",path:"/pages/541f19/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7c539bf6").then(t)}},{path:"/pages/541f19/index.html",redirect:"/pages/541f19/"},{path:"/文档/9999.历史文档/0892.节点分发/01.分发介绍.html",redirect:"/pages/541f19/"},{name:"v-00eb9972",path:"/pages/b06467/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-00eb9972").then(t)}},{path:"/pages/b06467/index.html",redirect:"/pages/b06467/"},{path:"/文档/9999.历史文档/0890.节点功能/13.系统管理/02.缓存管理.html",redirect:"/pages/b06467/"},{name:"v-0a7e37f1",path:"/pages/9b918a/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-0a7e37f1").then(t)}},{path:"/pages/9b918a/index.html",redirect:"/pages/9b918a/"},{path:"/日志&下载/01.更新日志/1180.2.10.x-release.html",redirect:"/pages/9b918a/"},{name:"v-5204f37e",path:"/pages/changelog/new-beta/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-5204f37e").then(t)}},{path:"/pages/changelog/new-beta/index.html",redirect:"/pages/changelog/new-beta/"},{path:"/日志&下载/01.更新日志/02.最新beta.html",redirect:"/pages/changelog/new-beta/"},{name:"v-3ae37d31",path:"/pages/cc9ffc/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-3ae37d31").then(t)}},{path:"/pages/cc9ffc/index.html",redirect:"/pages/cc9ffc/"},{path:"/日志&下载/01.更新日志/1181.2.10.x-beta.html",redirect:"/pages/cc9ffc/"},{name:"v-b6de4cd6",path:"/pages/changelog/2.9.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-b6de4cd6").then(t)}},{path:"/pages/changelog/2.9.x/index.html",redirect:"/pages/changelog/2.9.x/"},{path:"/日志&下载/01.更新日志/1191.2.9.x.html",redirect:"/pages/changelog/2.9.x/"},{name:"v-7109ac58",path:"/pages/changelog/history/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7109ac58").then(t)}},{path:"/pages/changelog/history/index.html",redirect:"/pages/changelog/history/"},{path:"/日志&下载/01.更新日志/9999.历史版本/11100.history.html",redirect:"/pages/changelog/history/"},{name:"v-6953f20c",path:"/pages/changelog/2.7.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6953f20c").then(t)}},{path:"/pages/changelog/2.7.x/index.html",redirect:"/pages/changelog/2.7.x/"},{path:"/日志&下载/01.更新日志/9999.历史版本/1193.2.7.x.html",redirect:"/pages/changelog/2.7.x/"},{name:"v-60d7610c",path:"/pages/changelog/2.8.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-60d7610c").then(t)}},{path:"/pages/changelog/2.8.x/index.html",redirect:"/pages/changelog/2.8.x/"},{path:"/日志&下载/01.更新日志/9999.历史版本/1192.2.8.x.html",redirect:"/pages/changelog/2.8.x/"},{name:"v-71d0830c",path:"/pages/changelog/2.6.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-71d0830c").then(t)}},{path:"/pages/changelog/2.6.x/index.html",redirect:"/pages/changelog/2.6.x/"},{path:"/日志&下载/01.更新日志/9999.历史版本/1194.2.6.x.html",redirect:"/pages/changelog/2.6.x/"},{name:"v-7a4d140c",path:"/pages/changelog/2.5.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-7a4d140c").then(t)}},{path:"/pages/changelog/2.5.x/index.html",redirect:"/pages/changelog/2.5.x/"},{path:"/日志&下载/01.更新日志/9999.历史版本/1195.2.5.x.html",redirect:"/pages/changelog/2.5.x/"},{name:"v-2aaf1b60",path:"/pages/changelog/2.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2aaf1b60").then(t)}},{path:"/pages/changelog/2.x/index.html",redirect:"/pages/changelog/2.x/"},{path:"/日志&下载/01.更新日志/9999.历史版本/1199.2.0-2.2.html",redirect:"/pages/changelog/2.x/"},{name:"v-630c3c8a",path:"/pages/changelog/2.4.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-630c3c8a").then(t)}},{path:"/pages/changelog/2.4.x/index.html",redirect:"/pages/changelog/2.4.x/"},{path:"/日志&下载/01.更新日志/9999.历史版本/1197.2.4.x.html",redirect:"/pages/changelog/2.4.x/"},{name:"v-6b88cd8a",path:"/pages/changelog/2.3.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-6b88cd8a").then(t)}},{path:"/pages/changelog/2.3.x/index.html",redirect:"/pages/changelog/2.3.x/"},{path:"/日志&下载/01.更新日志/9999.历史版本/1198.2.3.x.html",redirect:"/pages/changelog/2.3.x/"},{name:"v-56ffda0a",path:"/pages/all-downloads/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-56ffda0a").then(t)}},{path:"/pages/all-downloads/index.html",redirect:"/pages/all-downloads/"},{path:"/日志&下载/02.下载链接/01.下载链接.html",redirect:"/pages/all-downloads/"},{name:"v-9024d35c",path:"/pages/downloads/downloads-2.8.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-9024d35c").then(t)}},{path:"/pages/downloads/downloads-2.8.x/index.html",redirect:"/pages/downloads/downloads-2.8.x/"},{path:"/日志&下载/02.下载链接/1000.2.8.x.html",redirect:"/pages/downloads/downloads-2.8.x/"},{name:"v-bd003cac",path:"/pages/all-beta-downloads/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-bd003cac").then(t)}},{path:"/pages/all-beta-downloads/index.html",redirect:"/pages/all-beta-downloads/"},{path:"/日志&下载/02.下载链接/02.下载链接beta.html",redirect:"/pages/all-beta-downloads/"},{name:"v-2352bf88",path:"/pages/downloads/508e7f/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-2352bf88").then(t)}},{path:"/pages/downloads/508e7f/index.html",redirect:"/pages/downloads/508e7f/"},{path:"/日志&下载/02.下载链接/980.2.10.x-release.html",redirect:"/pages/downloads/508e7f/"},{name:"v-69eb03b9",path:"/pages/downloads/ba6e33/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-69eb03b9").then(t)}},{path:"/pages/downloads/ba6e33/index.html",redirect:"/pages/downloads/ba6e33/"},{path:"/日志&下载/02.下载链接/981.2.10.x beta.html",redirect:"/pages/downloads/ba6e33/"},{name:"v-c4f83d88",path:"/pages/downloads/downloads-2.9.x/",component:ll,beforeEnter:(n,e,t)=>{mi("Layout","v-c4f83d88").then(t)}},{path:"/pages/downloads/downloads-2.9.x/index.html",redirect:"/pages/downloads/downloads-2.9.x/"},{path:"/日志&下载/02.下载链接/999.2.9.x.html",redirect:"/pages/downloads/downloads-2.9.x/"},{path:"*",component:ll}],dl={title:"",description:"",base:"/",headTags:[["link",{rel:"icon",href:"/favicon.ico"}],["link",{rel:"shortcut icon",href:"/favicon.ico"}],["meta",{name:"keywords",content:"Jpom,Jpom官网,Jpom文档,开源,管理系统,运维,项目运维,服务器运维,原生 ops,CI/CD,devops,自动部署,在线构建,项目管理系统,open source"}],["meta",{name:"theme-color",content:"#11a8cd"}],["meta",{name:"og:type",content:"website"}],["meta",{name:"og:title",content:"Jpom 项目管理系统文档"}],["meta",{name:"og:url",content:"https://jpom.top/"}],["meta",{name:"og:site_name",content:"Jpom 文档"}],["meta",{name:"og:description",content:"Jpom-项目管理系统,一款简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件"}],["link",{rel:"stylesheet",href:"//at.alicdn.com/t/font_3114978_qe0b39no76.css"}],["meta",{name:"referrer",content:"no-referrer-when-downgrade"}],["noscript",{},'<meta http-equiv="refresh" content="0; url=https://jpom.io/noscript.html"><style>.theme-vdoing-content { display:none }'],["meta",{name:"baidu-site-verification",content:"code-te8iliecTI"}],["meta",{name:"360-site-verification",content:"0a5e4a367ff77232a3c1e9bc83edf7ba"}],["meta",{name:"wwads-cn-verify",content:"6da9003b743b65f4c0ccd295cc484e57"}],["meta",{name:"google-site-verification",content:"MA1Gbd51TsfBQa-4bZiaJfOnFiufsvLf5groklfa138"}],["script",{async:!0,src:"https://cdn.wwads.cn/js/makemoney.js",type:"text/javascript"}],["meta",{name:"google-adsense-account",content:"ca-pub-8458956478992681"}],["meta",{name:"viewport",content:"width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no"}],["script",{src:"/assets/js/common.js"}],["script",{},"\nvar _hmt = _hmt || [];\n          "],["script",{src:"https://agi-dev-platform-web.bj.bcebos.com/ai_apaas/embed/output/embedLiteSDK.js?responseExpires=0"}],["link",{rel:"preload",href:"/images/index/light.svg",as:"image",type:"image/svg+xml",fetchpriority:"high"}],["link",{rel:"preload",href:"/images/index/dark.svg",as:"image",type:"image/svg+xml",fetchpriority:"high"}],["link",{rel:"preload",href:"/images/index/read.svg",as:"image",type:"image/svg+xml",fetchpriority:"high"}]],pages:[{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1,readingShow:"top"},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-4ffccbfb",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/11, 10:25:55",lastUpdatedTimestamp:1654943155e3},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1,readingShow:"top"},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-4e4d077b",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/16, 06:46:30",lastUpdatedTimestamp:165536199e4},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1,readingShow:"top"},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-ce20c74a",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/06/16, 06:46:30",lastUpdatedTimestamp:165536199e4},{title:"关于工作空间和角色对比说明",frontmatter:{title:"关于工作空间和角色对比说明",date:"2022-06-11T16:22:29.000Z",permalink:"/pages/9d6940/",tags:[null],categories:["docs","FQA"],sidebar:"auto",readingShow:"top"},regularPath:"/_posts/workspace_vs_role.html",relativePath:"_posts/workspace_vs_role.md",key:"v-99d0c83e",path:"/pages/9d6940/",headers:[{level:3,title:"角色说明",slug:"角色说明",normalizedTitle:"角色说明",charIndex:61}],headersStr:"角色说明",content:"Jpom 2.8.0+ 使用工作空间取代角色来实现用户权限控制，这里列出为什么使用工作空间代替角色已经两者的对比\n\n\n# 角色说明\n\n通常一个系统使用角色来控制用户的权限，用户和角色关系如下：\n\n 1. 用户绑定单个或者多个角色\n 2. 角色来绑定功能权限以及数据权限",normalizedContent:"jpom 2.8.0+ 使用工作空间取代角色来实现用户权限控制，这里列出为什么使用工作空间代替角色已经两者的对比\n\n\n# 角色说明\n\n通常一个系统使用角色来控制用户的权限，用户和角色关系如下：\n\n 1. 用户绑定单个或者多个角色\n 2. 角色来绑定功能权限以及数据权限",charsets:{cjk:!0},lastUpdated:"2023/12/25, 08:40:46",lastUpdatedTimestamp:1703493646e3},{title:"很抱歉演示系统维护中",frontmatter:{title:"很抱歉演示系统维护中",date:"2024-04-19T20:19:02.000Z",permalink:"/pages/demo-maintain/",sidebar:!1,article:!1,comment:!1,categories:["随笔"],tags:["演示"],readingShow:"top"},regularPath:"/_posts/%E6%BC%94%E7%A4%BA%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4.html",relativePath:"_posts/演示系统维护.md",key:"v-17613726",path:"/pages/demo-maintain/",headers:[{level:2,title:"很抱歉的通知您我们的演示系统维护中，请耐心等待。",slug:"很抱歉的通知您我们的演示系统维护中-请耐心等待。",normalizedTitle:"很抱歉的通知您我们的演示系统维护中，请耐心等待。",charIndex:2}],headersStr:"很抱歉的通知您我们的演示系统维护中，请耐心等待。",content:"# 很抱歉的通知您我们的演示系统维护中，请耐心等待。\n\n我们演示系统无法保证稳定，有如下原因可能无法访问：\n\n * 系统更新\n * 系统宕机\n * 网络中断\n * 人为破坏\n * 其他原因\n\n----------------------------------------\n\n一般1-2小时恢复，请耐心等待。\n\n<<返回演示>>\n\n联系我们（如果长时间未恢复或者发现系统异常）\n\n\n\n添加好友请备注来意",normalizedContent:"# 很抱歉的通知您我们的演示系统维护中，请耐心等待。\n\n我们演示系统无法保证稳定，有如下原因可能无法访问：\n\n * 系统更新\n * 系统宕机\n * 网络中断\n * 人为破坏\n * 其他原因\n\n----------------------------------------\n\n一般1-2小时恢复，请耐心等待。\n\n<<返回演示>>\n\n联系我们（如果长时间未恢复或者发现系统异常）\n\n\n\n添加好友请备注来意",charsets:{cjk:!0},lastUpdated:"2024/04/26, 07:02:37",lastUpdatedTimestamp:1714114957e3},{title:"Jpom 最佳实践征文",frontmatter:{title:"Jpom 最佳实践征文",date:"2022-09-05T19:08:44.000Z",permalink:"/pages/praise/best-practices/",categories:["docs","赞赏"],tags:[null],sidebar:"auto",readingShow:"top"},regularPath:"/_posts/best_practices.html",relativePath:"_posts/best_practices.md",key:"v-7aeb821b",path:"/pages/praise/best-practices/",headers:[{level:2,title:"活动介绍",slug:"活动介绍",normalizedTitle:"活动介绍",charIndex:2},{level:2,title:"奖品",slug:"奖品",normalizedTitle:"奖品",charIndex:184},{level:2,title:"参与方式",slug:"参与方式",normalizedTitle:"参与方式",charIndex:246},{level:2,title:"推荐博文主题",slug:"推荐博文主题",normalizedTitle:"推荐博文主题",charIndex:310},{level:2,title:"领奖方式",slug:"领奖方式",normalizedTitle:"领奖方式",charIndex:381}],headersStr:"活动介绍 奖品 参与方式 推荐博文主题 领奖方式",content:"# 活动介绍\n\n在我们使用 Jpom 部署运维过程中，经常会 get 到一些最佳的解决方法，或者在使用过程中遇到不太明白的问题，再使用比较早或者大佬已经知道怎么更好地使用 Jpom 实现需要的效果， 为了更好地帮忙大家使用 Jpom，在此举办最佳实践征文，为后面使用 Jpom 的同学提供参考， 快来秀一秀您使用 Jpom 部署运维的的神操作，顺便拿个大奖～\n\n\n# 奖品\n\n 1. 一篇有效博文链接 10-50 元现金红包\n 2. 一篇搜索引擎收录博文链接 20-50 元现金红包\n\n\n# 参与方式\n\n 1. 贡献到官方文档\n 2. oschina（开源中国）\n 3. csdn\n 4. 简书\n 5. 博客园\n\n\n# 推荐博文主题\n\n 1. 如何部署 Jpom\n 2. 集群环境使用 Jpom\n 3. Jpom 节点管理\n 4. Jpom 的基础配置\n\n\n# 领奖方式\n\n 1. 加入微信群：添加微信 jpom66 根据提示进入微信群，发博文链接，管理确认后将进行现金私发红包",normalizedContent:"# 活动介绍\n\n在我们使用 jpom 部署运维过程中，经常会 get 到一些最佳的解决方法，或者在使用过程中遇到不太明白的问题，再使用比较早或者大佬已经知道怎么更好地使用 jpom 实现需要的效果， 为了更好地帮忙大家使用 jpom，在此举办最佳实践征文，为后面使用 jpom 的同学提供参考， 快来秀一秀您使用 jpom 部署运维的的神操作，顺便拿个大奖～\n\n\n# 奖品\n\n 1. 一篇有效博文链接 10-50 元现金红包\n 2. 一篇搜索引擎收录博文链接 20-50 元现金红包\n\n\n# 参与方式\n\n 1. 贡献到官方文档\n 2. oschina（开源中国）\n 3. csdn\n 4. 简书\n 5. 博客园\n\n\n# 推荐博文主题\n\n 1. 如何部署 jpom\n 2. 集群环境使用 jpom\n 3. jpom 节点管理\n 4. jpom 的基础配置\n\n\n# 领奖方式\n\n 1. 加入微信群：添加微信 jpom66 根据提示进入微信群，发博文链接，管理确认后将进行现金私发红包",charsets:{cjk:!0},lastUpdated:"2024/01/18, 06:38:29",lastUpdatedTimestamp:1705559909e3},{title:"下载中心调整通知",frontmatter:{title:"下载中心调整通知",date:"2024-07-02T08:51:53.000Z",permalink:"/pages/malice-fraudulent/",sidebar:"auto",categories:["通知"],tags:["CDN","恶意","盗刷"],readingShow:"top"},regularPath:"/_posts/%E4%B8%8B%E8%BD%BD%E4%B8%AD%E5%BF%83%E8%B0%83%E6%95%B4.html",relativePath:"_posts/下载中心调整.md",key:"v-1980d392",path:"/pages/malice-fraudulent/",headers:[{level:2,title:"重要通知",slug:"重要通知",normalizedTitle:"重要通知",charIndex:2},{level:2,title:"受影响的功能",slug:"受影响的功能",normalizedTitle:"受影响的功能",charIndex:430},{level:2,title:"相关证明截图",slug:"相关证明截图",normalizedTitle:"相关证明截图",charIndex:528},{level:3,title:"迁移到 cloudflare 后还在被暴力尝试",slug:"迁移到-cloudflare-后还在被暴力尝试",normalizedTitle:"迁移到 cloudflare 后还在被暴力尝试",charIndex:539},{level:3,title:"再一次恶意盗刷（2024年6月下旬）",slug:"再一次恶意盗刷-2024年6月下旬",normalizedTitle:"再一次恶意盗刷（2024年6月下旬）",charIndex:622},{level:3,title:"第一次恶意盗刷（2024年5月上旬）",slug:"第一次恶意盗刷-2024年5月上旬",normalizedTitle:"第一次恶意盗刷（2024年5月上旬）",charIndex:660},{level:3,title:"近一个月所有流量分析（2024年6月）",slug:"近一个月所有流量分析-2024年6月",normalizedTitle:"近一个月所有流量分析（2024年6月）",charIndex:701},{level:3,title:"消耗费用截图",slug:"消耗费用截图",normalizedTitle:"消耗费用截图",charIndex:727},{level:2,title:"感谢",slug:"感谢",normalizedTitle:"感谢",charIndex:413},{level:2,title:"恳请",slug:"恳请",normalizedTitle:"恳请",charIndex:824}],headersStr:"重要通知 受影响的功能 相关证明截图 迁移到 cloudflare 后还在被暴力尝试 再一次恶意盗刷（2024年6月下旬） 第一次恶意盗刷（2024年5月上旬） 近一个月所有流量分析（2024年6月） 消耗费用截图 感谢 恳请",content:"# 重要通知\n\n我们遗憾地通报，Jpom 下载中心近期遭遇了持续的恶意下载流量攻击。近期恶意流量累计消耗 300 元以上（最高峰在短短5天内 CDN流量消耗超过了100元）。\n\n从第一次 2024年5月上旬开始，当我们发现后里面做了基础规则限制，起到了临时性的防护。\n\n2024年6月下旬再次受到相关来源的恶意流量盗刷，为确保服务稳定性，我们不得不采取措施，全站下载实施限速，速度限制为100kb/s。但是遗憾的是对恶意流量效果很不明显。\n\n给我们的长期运营带来了很大的挑战。经过我们慎重考虑后决定将下载中心迁移至 cloudflare：https://d.jpom.download\n\n使用 cloudflare 后部分网络环境下可能出现访问延迟，甚至无法访问还请自行解决。\n\n我们正积极规划新版下载中心。虽然具体调整的时间表和细节尚未确定，但请各位用户保持关注，我们承诺将尽快推出改进措施，为您带来更安全、流畅的下载服务。感谢您的理解与耐心等待！\n\n\n# 受影响的功能\n\nJpom 中的在线更新，由于您服务器或者电脑网络环境下可能出现无法访问导致不能下载，或者下载超时。\n\n建议您使用相关工具进行下载后再使用上传的方式来更新 Jpom 版本。\n\n\n# 相关证明截图\n\n\n# 迁移到 cloudflare 后还在被暴力尝试\n\n暴力尝试最严重的是 2024年7月10日，当天同一个安装包被尝试 70w次，独立 IP 1w以上。\n\n\n\n\n\n\n# 再一次恶意盗刷（2024年6月下旬）\n\n我们做了限速后效果显微\n\n\n\n\n# 第一次恶意盗刷（2024年5月上旬）\n\n在我们发现后做了基础规则限制\n\n\n\n\n# 近一个月所有流量分析（2024年6月）\n\n\n\n\n# 消耗费用截图\n\n\n\n\n# 感谢\n\n感谢所有对 Jpom 长期支持的朋友们我们深知此处变动给您来了十分不便，此举我们也是十分无奈。\n\n我们会尽快想法解决此问题，还请您持续关注我们的消息。\n\n\n# 恳请\n\n如果我们在哪里有对不住的地方或者有什么错，请您及时告知我们。\n\n如果我或者我们团队曾经有对不起您的地方，我在这里给您道个歉，对不起。还请您不计前嫌，放过我们。\n\n您可以不支持开源，但是请一定不要伤害开源！",normalizedContent:"# 重要通知\n\n我们遗憾地通报，jpom 下载中心近期遭遇了持续的恶意下载流量攻击。近期恶意流量累计消耗 300 元以上（最高峰在短短5天内 cdn流量消耗超过了100元）。\n\n从第一次 2024年5月上旬开始，当我们发现后里面做了基础规则限制，起到了临时性的防护。\n\n2024年6月下旬再次受到相关来源的恶意流量盗刷，为确保服务稳定性，我们不得不采取措施，全站下载实施限速，速度限制为100kb/s。但是遗憾的是对恶意流量效果很不明显。\n\n给我们的长期运营带来了很大的挑战。经过我们慎重考虑后决定将下载中心迁移至 cloudflare：https://d.jpom.download\n\n使用 cloudflare 后部分网络环境下可能出现访问延迟，甚至无法访问还请自行解决。\n\n我们正积极规划新版下载中心。虽然具体调整的时间表和细节尚未确定，但请各位用户保持关注，我们承诺将尽快推出改进措施，为您带来更安全、流畅的下载服务。感谢您的理解与耐心等待！\n\n\n# 受影响的功能\n\njpom 中的在线更新，由于您服务器或者电脑网络环境下可能出现无法访问导致不能下载，或者下载超时。\n\n建议您使用相关工具进行下载后再使用上传的方式来更新 jpom 版本。\n\n\n# 相关证明截图\n\n\n# 迁移到 cloudflare 后还在被暴力尝试\n\n暴力尝试最严重的是 2024年7月10日，当天同一个安装包被尝试 70w次，独立 ip 1w以上。\n\n\n\n\n\n\n# 再一次恶意盗刷（2024年6月下旬）\n\n我们做了限速后效果显微\n\n\n\n\n# 第一次恶意盗刷（2024年5月上旬）\n\n在我们发现后做了基础规则限制\n\n\n\n\n# 近一个月所有流量分析（2024年6月）\n\n\n\n\n# 消耗费用截图\n\n\n\n\n# 感谢\n\n感谢所有对 jpom 长期支持的朋友们我们深知此处变动给您来了十分不便，此举我们也是十分无奈。\n\n我们会尽快想法解决此问题，还请您持续关注我们的消息。\n\n\n# 恳请\n\n如果我们在哪里有对不住的地方或者有什么错，请您及时告知我们。\n\n如果我或者我们团队曾经有对不起您的地方，我在这里给您道个歉，对不起。还请您不计前嫌，放过我们。\n\n您可以不支持开源，但是请一定不要伤害开源！",charsets:{cjk:!0},lastUpdated:"2024/08/02, 09:47:29",lastUpdatedTimestamp:1722592049e3},{title:"如何使用 Jpom 的在线构建为 Jpom 发版",frontmatter:{title:"如何使用 Jpom 的在线构建为 Jpom 发版",date:"2023-02-24T16:06:23.000Z",permalink:"/pages/practice/build-jpom/",categories:["docs","实践案例","解决方案"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/0000.V2.10.X/0088.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA%E4%B8%BA%20Jpom%20%E5%8F%91%E7%89%88.html",relativePath:"实践案例/009.解决方案/0000.V2.10.X/0088.在线构建为 Jpom 发版.md",key:"v-df664cc8",path:"/pages/practice/build-jpom/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"手动版",slug:"手动版",normalizedTitle:"手动版",charIndex:286},{level:3,title:"自动版",slug:"自动版",normalizedTitle:"自动版",charIndex:983},{level:3,title:"核心流程总结",slug:"核心流程总结",normalizedTitle:"核心流程总结",charIndex:1288},{level:3,title:"需要使用到的相关功能",slug:"需要使用到的相关功能",normalizedTitle:"需要使用到的相关功能",charIndex:1460},{level:2,title:"创建相关的构建",slug:"创建相关的构建",normalizedTitle:"创建相关的构建",charIndex:1549},{level:3,title:"发布安装包的构建",slug:"发布安装包的构建",normalizedTitle:"发布安装包的构建",charIndex:1644},{level:3,title:"发布事件脚本",slug:"发布事件脚本",normalizedTitle:"发布事件脚本",charIndex:2601},{level:3,title:"发布文档的构建",slug:"发布文档的构建",normalizedTitle:"发布文档的构建",charIndex:5172},{level:3,title:"发布 docker 镜像构建",slug:"发布-docker-镜像构建",normalizedTitle:"发布 docker 镜像构建",charIndex:6053},{level:4,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:227},{level:2,title:"触发构建",slug:"触发构建",normalizedTitle:"触发构建",charIndex:6519},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1292},{level:2,title:"附件",slug:"附件",normalizedTitle:"附件",charIndex:1528},{level:3,title:"快速替换版本号脚本",slug:"快速替换版本号脚本",normalizedTitle:"快速替换版本号脚本",charIndex:6896},{level:3,title:"构建容器 dockerfile",slug:"构建容器-dockerfile",normalizedTitle:"构建容器 dockerfile",charIndex:8802}],headersStr:"前言 手动版 自动版 核心流程总结 需要使用到的相关功能 创建相关的构建 发布安装包的构建 发布事件脚本 发布文档的构建 发布 docker 镜像构建 注意 触发构建 总结 附件 快速替换版本号脚本 构建容器 dockerfile",content:'# 前言\n\nJpom 中有在线构建，那么可以使用 Jpom 本身相关的功能实现 Jpom 每次的版本发版吗？\n\n当然可以的！！\n\n声明\n\n本文档想要建立在您对 Jpom 已经有一定的熟悉度后的高阶操作。 里面涉及到一些基础功能的使用。 如果您还是新手入门 Jpom ，还想要您看看其他相关文档或者上手操作后再来看看本文档来找解决方案灵感\n\n> 本文默认您已经会使用 Jpom 的基础功能了，不再讲解如果安装 Jpom，如果有不会的可以参考其他文档\n\n> 注意：本文采用基于 2.10.21 版本讲解,系统为 centos\n\n我们先梳理一下 Jpom 发版的流程：\n\n\n# 手动版\n\n> 手动版是指，未使用 Jpom 来实现发版的流程\n\n 1.  将 dev 分支合并到 master\n 2.  changelog 版本增加发版日期\n 3.  更新代码版本号：cd ./jpom-parent/script && sh replaceVersion.sh 2.x.x\n 4.  打包前端：npm i && npm run build\n 5.  打包后端：mvn clean package\n 6.  人工测试服务端包和插件端包是否可以正常启动\n 7.  提交一个 commit 2.x.x\n 8.  基于 commit 新增 tag: v2.x.x 并且将代码推送到远程\n 9.  将包上传到 oss : sh deploy-release-oss.sh\n 10. 更新文档版本号：cd ./docs/script && sh replaceVersion.sh 2.x.x\n 11. 手动 copy 更新文档 changelog\n 12. 发布文档：sh deploy-docs-pages.sh\n 13. 测试远程更新是否正常\n 14. 发布服务端 docker 镜像包 docker buildx build --platform linux/amd64,linux/arm64 -t jpomdocker/jpom:2.x.x -t jpomdocker/jpom:latest -f ./modules/server/DockerfileRelease --push .\n 15. 添加 gitee、github 发行版\n 16. 可选填写发版公告\n\n\n# 自动版\n\n> 自动版是指使用 Jpom 里面的构建功能来实现发版流程，减少人为操作\n\n 1.  将 dev 分支合并到 master\n 2.  人工打包并测试相关功能\n 3.  changelog 版本增加发版日期\n 4.  执行-发布代码任务 (注意修改构建命令版本号)\n 5.  基于 commit 新增 tag: v2.x.x 并且将代码推送到远程\n 6.  手动 copy 更新文档 changelog\n 7.  执行-发布文档 (注意修改构建命令版本号)\n 8.  测试远程更新是否正常\n 9.  执行-发布镜像\n 10. 添加 gitee、github 发行版\n 11. 可选填写发版公告\n\n\n# 核心流程总结\n\n 1. 需要快速更改 pom.xml 版本号\n 2. 需要前构建前端 vue\n 3. 前端构建完成后再构建后端 java\n 4. 需要将构建完成的文件包上传到远程存储中\n 5. 发布文档来实现更新新版本的信息（实现客户端知道有新版本）\n 6. 为服务端发布 docker 镜像，并推送到 docker hub 远程仓库\n\n\n# 需要使用到的相关功能\n\n 1. 仓库管理\n 2. 在线构建\n    1. 构建发布本地命令\n    2. 构建的事件脚本\n    3. 附件环境变量\n 3. 服务端脚本\n\n\n# 创建相关的构建\n\n这里我们为了保留整个流程能分开控制和为了检查发版过程中的正确性，分开创建三个构建来实现。\n\n 1. 发布安装包\n 2. 发布文档\n 3. 发布 docker 镜像\n\n\n# 发布安装包的构建\n\n构建的配置截图\n\n\n\n事件脚本里配置截图\n\n\n\n注意\n\n我这里事件脚本中只实现了：release，您需要跟进您想要实现的对应事件来填写\n\n构建命令：\n\n这里为了实现自动 commit 代码，我在构建服务器中手动安装了 git，并配置了全局凭证\n\n\ngit config --system user.name "bwcx_jzy"\ngit config --system user.email "bwcx_jzy@163.com"\n\nold_version=$(cat ./docs/version.txt)\nmvn -s ./script/settings.xml clean\nif [ "$new_version"  == "$old_version" ]; then\n      echo "版本一致不用替换"\n      exit 1\nelse\n\n  sh ./script/replaceVersion.sh $new_version\n \n  git add . \n  #message="commit $now_version" \n  git commit -m "commit"\\ ${new_version}\n  git push\n\nfi\n\n\ncd web-vue && npm i && npm run build\n\ncd ../\n\nmvn  -s ./script/settings.xml clean package \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n发布命令：\n\n这里发布命令只是为了随意输出，最终还是通过事件脚本来实现了上传安装包到远程。当然您也可以将对应的脚本配置到发布命令中，跟进自己的情况来决定（随意搭配）\n\necho ${BUILD_RESULT_FILE}\n\ncat ${BUILD_RESULT_FILE}/modules/server/target/checksums.csv\n\ncat ${BUILD_RESULT_FILE}/modules/agent/target/checksums.csv\n\n\n1\n2\n3\n4\n5\n\n\n\n# 发布事件脚本\n\n这里注意，发布事件脚本中，要想获取构建相关的文件只能通过环境变量来实现：\n\n 1. $buildResultFile\n\n更多环境变量，可以参考构建页面的小问号\n\n#!/bin/bash\n\ncurrent_path=$(pwd)\ncase "$(uname)" in\n    Linux)\n\t\tbin_abs_path=$(readlink -f $(dirname "$0"))\n\t\t;;\n\t*)\n\t\tbin_abs_path=`cd $(dirname $0) || exit; pwd`\n\t\t;;\nesac\nDIR_PATH=$buildResultFile/\n\nnow_version="$(cat "${DIR_PATH}/docs/version.txt")"\n\n#\nnow_version="$(echo $now_version |tr -d \'\\n\\r\')"\n\necho "当前路径：${current_path} 脚本路径：${bin_abs_path},目录：${DIR_PATH} 当前版本：${now_version}"\n\nif [ ! -n "$now_version" ]; then\n    echo "ERROR: 版本不存在，请确认 /docs/version.txt 中信息正确"\n    exit\nfi\n\nOS="$(uname)"\ncase "${OS}" in\nLinux)\n\tossUtil=\'ossutil64\'\n\t;;\nDarwin)\n\tossUtil=\'ossutilmac64\'\n\t;;\n*)\n\techo "Unsupported os: ${OS}"\n\texit 1\n\t;;\nesac\n\necho  "${OS} ${ossUtil} 开始上传"\necho "同步到 agent oss 中"\n# 同步到 agent oss 中\n${ossUtil} cp ${DIR_PATH}/modules/agent/target/agent-${now_version}-release.tar.gz oss://jpom-releases/release/${now_version}/ -f\n${ossUtil} cp ${DIR_PATH}/modules/agent/target/agent-${now_version}-release.tar.gz.sha1 oss://jpom-releases/release/${now_version}/ -f\n${ossUtil} cp ${DIR_PATH}/modules/agent/target/agent-${now_version}-release.zip oss://jpom-releases/release/${now_version}/ -f\n${ossUtil} cp ${DIR_PATH}/modules/agent/target/agent-${now_version}-release.zip.sha1 oss://jpom-releases/release/${now_version}/ -f\n\necho "同步到 server oss 中"\n# 同步到 server oss 中\n${ossUtil} cp ${DIR_PATH}/modules/server/target/server-${now_version}-release.tar.gz oss://jpom-releases/release/${now_version}/ -f\n${ossUtil} cp ${DIR_PATH}/modules/server/target/server-${now_version}-release.tar.gz.sha1 oss://jpom-releases/release/${now_version}/ -f\n${ossUtil} cp ${DIR_PATH}/modules/server/target/server-${now_version}-release.zip oss://jpom-releases/release/${now_version}/ -f\n${ossUtil} cp ${DIR_PATH}/modules/server/target/server-${now_version}-release.zip.sha1 oss://jpom-releases/release/${now_version}/ -f\n\nrm -f ${DIR_PATH}/jpom-${now_version}.zip\n\nzip -rj ${DIR_PATH}/jpom-${now_version}.zip ${DIR_PATH}/modules/server/target/server-${now_version}-release.zip ${DIR_PATH}/modules/agent/target/agent-${now_version}-release.zip\n\necho "完整的压缩包"\n# 完整的压缩包\n${ossUtil} cp ${DIR_PATH}/jpom-${now_version}.zip oss://jpom-releases/release/${now_version}/ -f\n\nrm -f ${DIR_PATH}/jpom-${now_version}.zip\n\necho "上传结束"\n\necho "验证 sha1sum"\n\nbash ${DIR_PATH}/script/release-sha1sum.sh\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n\n\n\n# 发布文档的构建\n\n\n\n构建命令：\n\n\n  git config --system user.name "bwcx_jzy"\n  git config --system user.email "bwcx_jzy@163.com"\n\n\nold_version=$(cat ./docs/.vuepress/public/docs/versions.release.tag)\n\nif [ "$new_version"  == "$old_version" ]; then\n      echo "版本一致不用替换"\n      exit 1\nelse\n\n  sh ./script/replaceVersion.sh $new_version\n\n  git add . \n  #message="commit $now_version" \n  git commit -m "commit"\\ ${new_version}\\ "update"\\ "docs"\\ "pages"\n  git push\n\nfi\n\n\n npm i && npm run build\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n发布命令：\n\necho ${BUILD_RESULT_FILE}\n\n\nOS="$(uname)"\ncase "${OS}" in\nLinux)\n\tossUtil=\'ossutil64\'\n\t;;\nDarwin)\n\tossUtil=\'ossutilmac64\'\n\t;;\n*)\n\techo "Unsupported os: ${OS}"\n\texit 1\n\t;;\nesac\n\n# 同步到 oss 中\n${ossUtil} sync ${BUILD_RESULT_FILE} oss://jpom-docs/ --delete -f --exclude .DS_Store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 发布 docker 镜像构建\n\n\n\nJpom 的发布 docker 镜像为基于已经发布的安装去生成的镜像，随意这里就简单很多了\n\n构建命令就随意填写的\n\n发布命令\n\necho $JPOM_VERSION\ndocker buildx build --platform linux/amd64,linux/arm64 -t jpomdocker/jpom:$JPOM_VERSION -t jpomdocker/jpom:latest -f ./modules/server/DockerfileRelease --push .\n\n\n1\n2\n\n\n附件环境变量：\n\n是指读取仓库文件下的指定文件，并解析为环境变量\n\n\n\n这里的变量值，已经在发布安装包的时候，自动替换更为新版本啦\n\n# 注意\n\n在 linux 下使用 docker buildx 想要提前安装的奥，docker buildx 安装方式在不同内核版本有一定差异\n\n送您一个避坑文档：https://blog.bwcxtech.com/posts/43dd6afb/\n\n\n# 触发构建\n\nJpom 发版都是手动触发，并且每个版本的版本号不一样，相当于每次构建都想要修改版本号\n\n构建安装包\n\n\n\n这里在每次触发构建时候修改环境变量的值为最新版本，并且替换版本号脚本里面也有验证重复构建\n\n构建文档\n\n\n\n\n# 总结\n\n整体流程是：\n\n 1. 使用构建调用替换版本号脚本来实现批量修改 pom.xml、相关文件的版本号\n    1. 替换版本号的参数由构建参数传递进来\n 2. 使用 git 将替换版本号后的代码提交到远程\n 3. 构建前端 + 后端\n 4. 使用事件脚本执行文件上传、验证文件完整性\n 5. 使用构建发布文档（思路流程和发布安装包一致）\n 6. 使用 docker buildx 实现构建多内核镜像\n    1. 使用构建附加环境变量来实现 dokcer 命令读取变量，来实现自动更新版本号\n\n\n# 附件\n\n\n# 快速替换版本号脚本\n\n#!/bin/bash\n#-----------------------------------------------------------\n# 此脚本用于每次升级时替换相应位置的版本号\n#-----------------------------------------------------------\n\nset -o errexit\n\ncurrent_path=$(pwd)\ncase "$(uname)" in\nLinux)\n\tbin_abs_path=$(readlink -f $(dirname $0))\n\t;;\n*)\n\tbin_abs_path=$(\n\t\tcd $(dirname $0)\n\t\tpwd\n\t)\n\t;;\nesac\nbase=${bin_abs_path}/../\n\necho "当前路径：${current_path} 脚本路径：${bin_abs_path}"\n\nif [ -n "$1" ]; then\n\tnew_version="$1"\n\told_version=$(cat ${base}/docs/version.txt)\n\techo "$old_version 替换为新版本 $new_version"\nelse\n\t# 参数错误，退出\n\techo "ERROR: 请指定新版本！"\n\texit\nfi\n\nif [ ! -n "$old_version" ]; then\n\techo "ERROR: 旧版本不存在，请确认 /docs/version.txt 中信息正确"\n\texit\nfi\n\n# 替换所有模块pom.xml中的版本\ncd ${base} && mvn versions:set -DnewVersion=$1\n\necho "替换配置文件版本号 $new_version"\n\nif [ -f "$base/.env" ]; then\n\t# 替换 docker 中的版本\n\tsed -i.bak "s/${old_version}/${new_version}/g" $base/.env\nfi\n\n# 替换 Dockerfile 中的版本\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/server/Dockerfile\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/agent/Dockerfile\nsed -i.bak "s/${old_version}/${new_version}/g" $base/script/docker.sh\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/server/DockerfileRelease\n\n# logo\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/common/src/main/resources/banner.txt\n\n# vue version\nsed -i.bak "s/${old_version}/${new_version}/g" $base/web-vue/package.json\n\n# release-sha1sum.sh\nsed -i.bak "s/${old_version}/${new_version}/g" $base/script/release-sha1sum.sh\n\n# gitee go\nsed -i.bak "s/${old_version}/${new_version}/g" $base/.workflow/MasterPipeline.yml\n\n# 保留新版本号\necho "$new_version" >$base/docs/version.txt\n\necho "版本号替换成功 $new_version"\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n\n\n\n# 构建容器 dockerfile\n\nFROM maven:3.8.6-jdk-8\n\nARG BUILD_DATE\nLABEL build_info="dromara/Jpom build-date:- ${BUILD_DATE}"\nLABEL maintainer="bwcx-jzy <bwcx_jzy@163.com>"\nLABEL documentation="https://jpom.top"\n\nENV JPOM_HOME\t/usr/local/jpom-server\nENV JPOM_PKG_VERSION\t2.10.22\nENV JPOM_PKG\tserver-${JPOM_PKG_VERSION}-release.tar.gz\nENV SHA1_NAME server-${JPOM_PKG_VERSION}-release.tar.gz.sha1\n\nENV JPOM_DATA_PATH ${JPOM_HOME}/data\nENV JPOM_LOG_PATH ${JPOM_HOME}/logs\n# 数据目录\nENV jpom.path ${JPOM_DATA_PATH}\n\nWORKDIR ${JPOM_HOME}\n\n# 时区\nENV TZ Asia/Shanghai\nRUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && echo ${TZ} > /etc/timezone\n\nRUN mkdir -p ${JPOM_HOME}\n#\nRUN curl -LfSo ${JPOM_HOME}/${JPOM_PKG} https://d.jpom.download/release/${JPOM_PKG_VERSION}/${JPOM_PKG}\nRUN curl -LfsSo ${JPOM_HOME}/${SHA1_NAME} https://d.jpom.download/release/${JPOM_PKG_VERSION}/${SHA1_NAME} && \\\n    ESUM=`cat ${JPOM_HOME}/${SHA1_NAME}` && \\\n    echo "${ESUM} ${JPOM_HOME}/${JPOM_PKG}" | sha1sum -c -;\nRUN tar -zxvf ${JPOM_HOME}/${JPOM_PKG} -C ${JPOM_HOME}\nRUN rm -rf ${JPOM_HOME}/${JPOM_PKG}\n\n# 将配置文件暂存默认目录，避免无法挂载\nRUN mv $JPOM_HOME/conf $JPOM_HOME/conf_default\n\n# 健康检查\nHEALTHCHECK CMD curl -X POST -f http://localhost:2122/check-system || exit 1\n\nEXPOSE 2122\n\nENTRYPOINT ["/bin/bash", "./bin/BlockListener.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n',normalizedContent:'# 前言\n\njpom 中有在线构建，那么可以使用 jpom 本身相关的功能实现 jpom 每次的版本发版吗？\n\n当然可以的！！\n\n声明\n\n本文档想要建立在您对 jpom 已经有一定的熟悉度后的高阶操作。 里面涉及到一些基础功能的使用。 如果您还是新手入门 jpom ，还想要您看看其他相关文档或者上手操作后再来看看本文档来找解决方案灵感\n\n> 本文默认您已经会使用 jpom 的基础功能了，不再讲解如果安装 jpom，如果有不会的可以参考其他文档\n\n> 注意：本文采用基于 2.10.21 版本讲解,系统为 centos\n\n我们先梳理一下 jpom 发版的流程：\n\n\n# 手动版\n\n> 手动版是指，未使用 jpom 来实现发版的流程\n\n 1.  将 dev 分支合并到 master\n 2.  changelog 版本增加发版日期\n 3.  更新代码版本号：cd ./jpom-parent/script && sh replaceversion.sh 2.x.x\n 4.  打包前端：npm i && npm run build\n 5.  打包后端：mvn clean package\n 6.  人工测试服务端包和插件端包是否可以正常启动\n 7.  提交一个 commit 2.x.x\n 8.  基于 commit 新增 tag: v2.x.x 并且将代码推送到远程\n 9.  将包上传到 oss : sh deploy-release-oss.sh\n 10. 更新文档版本号：cd ./docs/script && sh replaceversion.sh 2.x.x\n 11. 手动 copy 更新文档 changelog\n 12. 发布文档：sh deploy-docs-pages.sh\n 13. 测试远程更新是否正常\n 14. 发布服务端 docker 镜像包 docker buildx build --platform linux/amd64,linux/arm64 -t jpomdocker/jpom:2.x.x -t jpomdocker/jpom:latest -f ./modules/server/dockerfilerelease --push .\n 15. 添加 gitee、github 发行版\n 16. 可选填写发版公告\n\n\n# 自动版\n\n> 自动版是指使用 jpom 里面的构建功能来实现发版流程，减少人为操作\n\n 1.  将 dev 分支合并到 master\n 2.  人工打包并测试相关功能\n 3.  changelog 版本增加发版日期\n 4.  执行-发布代码任务 (注意修改构建命令版本号)\n 5.  基于 commit 新增 tag: v2.x.x 并且将代码推送到远程\n 6.  手动 copy 更新文档 changelog\n 7.  执行-发布文档 (注意修改构建命令版本号)\n 8.  测试远程更新是否正常\n 9.  执行-发布镜像\n 10. 添加 gitee、github 发行版\n 11. 可选填写发版公告\n\n\n# 核心流程总结\n\n 1. 需要快速更改 pom.xml 版本号\n 2. 需要前构建前端 vue\n 3. 前端构建完成后再构建后端 java\n 4. 需要将构建完成的文件包上传到远程存储中\n 5. 发布文档来实现更新新版本的信息（实现客户端知道有新版本）\n 6. 为服务端发布 docker 镜像，并推送到 docker hub 远程仓库\n\n\n# 需要使用到的相关功能\n\n 1. 仓库管理\n 2. 在线构建\n    1. 构建发布本地命令\n    2. 构建的事件脚本\n    3. 附件环境变量\n 3. 服务端脚本\n\n\n# 创建相关的构建\n\n这里我们为了保留整个流程能分开控制和为了检查发版过程中的正确性，分开创建三个构建来实现。\n\n 1. 发布安装包\n 2. 发布文档\n 3. 发布 docker 镜像\n\n\n# 发布安装包的构建\n\n构建的配置截图\n\n\n\n事件脚本里配置截图\n\n\n\n注意\n\n我这里事件脚本中只实现了：release，您需要跟进您想要实现的对应事件来填写\n\n构建命令：\n\n这里为了实现自动 commit 代码，我在构建服务器中手动安装了 git，并配置了全局凭证\n\n\ngit config --system user.name "bwcx_jzy"\ngit config --system user.email "bwcx_jzy@163.com"\n\nold_version=$(cat ./docs/version.txt)\nmvn -s ./script/settings.xml clean\nif [ "$new_version"  == "$old_version" ]; then\n      echo "版本一致不用替换"\n      exit 1\nelse\n\n  sh ./script/replaceversion.sh $new_version\n \n  git add . \n  #message="commit $now_version" \n  git commit -m "commit"\\ ${new_version}\n  git push\n\nfi\n\n\ncd web-vue && npm i && npm run build\n\ncd ../\n\nmvn  -s ./script/settings.xml clean package \n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n发布命令：\n\n这里发布命令只是为了随意输出，最终还是通过事件脚本来实现了上传安装包到远程。当然您也可以将对应的脚本配置到发布命令中，跟进自己的情况来决定（随意搭配）\n\necho ${build_result_file}\n\ncat ${build_result_file}/modules/server/target/checksums.csv\n\ncat ${build_result_file}/modules/agent/target/checksums.csv\n\n\n1\n2\n3\n4\n5\n\n\n\n# 发布事件脚本\n\n这里注意，发布事件脚本中，要想获取构建相关的文件只能通过环境变量来实现：\n\n 1. $buildresultfile\n\n更多环境变量，可以参考构建页面的小问号\n\n#!/bin/bash\n\ncurrent_path=$(pwd)\ncase "$(uname)" in\n    linux)\n\t\tbin_abs_path=$(readlink -f $(dirname "$0"))\n\t\t;;\n\t*)\n\t\tbin_abs_path=`cd $(dirname $0) || exit; pwd`\n\t\t;;\nesac\ndir_path=$buildresultfile/\n\nnow_version="$(cat "${dir_path}/docs/version.txt")"\n\n#\nnow_version="$(echo $now_version |tr -d \'\\n\\r\')"\n\necho "当前路径：${current_path} 脚本路径：${bin_abs_path},目录：${dir_path} 当前版本：${now_version}"\n\nif [ ! -n "$now_version" ]; then\n    echo "error: 版本不存在，请确认 /docs/version.txt 中信息正确"\n    exit\nfi\n\nos="$(uname)"\ncase "${os}" in\nlinux)\n\tossutil=\'ossutil64\'\n\t;;\ndarwin)\n\tossutil=\'ossutilmac64\'\n\t;;\n*)\n\techo "unsupported os: ${os}"\n\texit 1\n\t;;\nesac\n\necho  "${os} ${ossutil} 开始上传"\necho "同步到 agent oss 中"\n# 同步到 agent oss 中\n${ossutil} cp ${dir_path}/modules/agent/target/agent-${now_version}-release.tar.gz oss://jpom-releases/release/${now_version}/ -f\n${ossutil} cp ${dir_path}/modules/agent/target/agent-${now_version}-release.tar.gz.sha1 oss://jpom-releases/release/${now_version}/ -f\n${ossutil} cp ${dir_path}/modules/agent/target/agent-${now_version}-release.zip oss://jpom-releases/release/${now_version}/ -f\n${ossutil} cp ${dir_path}/modules/agent/target/agent-${now_version}-release.zip.sha1 oss://jpom-releases/release/${now_version}/ -f\n\necho "同步到 server oss 中"\n# 同步到 server oss 中\n${ossutil} cp ${dir_path}/modules/server/target/server-${now_version}-release.tar.gz oss://jpom-releases/release/${now_version}/ -f\n${ossutil} cp ${dir_path}/modules/server/target/server-${now_version}-release.tar.gz.sha1 oss://jpom-releases/release/${now_version}/ -f\n${ossutil} cp ${dir_path}/modules/server/target/server-${now_version}-release.zip oss://jpom-releases/release/${now_version}/ -f\n${ossutil} cp ${dir_path}/modules/server/target/server-${now_version}-release.zip.sha1 oss://jpom-releases/release/${now_version}/ -f\n\nrm -f ${dir_path}/jpom-${now_version}.zip\n\nzip -rj ${dir_path}/jpom-${now_version}.zip ${dir_path}/modules/server/target/server-${now_version}-release.zip ${dir_path}/modules/agent/target/agent-${now_version}-release.zip\n\necho "完整的压缩包"\n# 完整的压缩包\n${ossutil} cp ${dir_path}/jpom-${now_version}.zip oss://jpom-releases/release/${now_version}/ -f\n\nrm -f ${dir_path}/jpom-${now_version}.zip\n\necho "上传结束"\n\necho "验证 sha1sum"\n\nbash ${dir_path}/script/release-sha1sum.sh\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n\n\n\n# 发布文档的构建\n\n\n\n构建命令：\n\n\n  git config --system user.name "bwcx_jzy"\n  git config --system user.email "bwcx_jzy@163.com"\n\n\nold_version=$(cat ./docs/.vuepress/public/docs/versions.release.tag)\n\nif [ "$new_version"  == "$old_version" ]; then\n      echo "版本一致不用替换"\n      exit 1\nelse\n\n  sh ./script/replaceversion.sh $new_version\n\n  git add . \n  #message="commit $now_version" \n  git commit -m "commit"\\ ${new_version}\\ "update"\\ "docs"\\ "pages"\n  git push\n\nfi\n\n\n npm i && npm run build\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n发布命令：\n\necho ${build_result_file}\n\n\nos="$(uname)"\ncase "${os}" in\nlinux)\n\tossutil=\'ossutil64\'\n\t;;\ndarwin)\n\tossutil=\'ossutilmac64\'\n\t;;\n*)\n\techo "unsupported os: ${os}"\n\texit 1\n\t;;\nesac\n\n# 同步到 oss 中\n${ossutil} sync ${build_result_file} oss://jpom-docs/ --delete -f --exclude .ds_store\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 发布 docker 镜像构建\n\n\n\njpom 的发布 docker 镜像为基于已经发布的安装去生成的镜像，随意这里就简单很多了\n\n构建命令就随意填写的\n\n发布命令\n\necho $jpom_version\ndocker buildx build --platform linux/amd64,linux/arm64 -t jpomdocker/jpom:$jpom_version -t jpomdocker/jpom:latest -f ./modules/server/dockerfilerelease --push .\n\n\n1\n2\n\n\n附件环境变量：\n\n是指读取仓库文件下的指定文件，并解析为环境变量\n\n\n\n这里的变量值，已经在发布安装包的时候，自动替换更为新版本啦\n\n# 注意\n\n在 linux 下使用 docker buildx 想要提前安装的奥，docker buildx 安装方式在不同内核版本有一定差异\n\n送您一个避坑文档：https://blog.bwcxtech.com/posts/43dd6afb/\n\n\n# 触发构建\n\njpom 发版都是手动触发，并且每个版本的版本号不一样，相当于每次构建都想要修改版本号\n\n构建安装包\n\n\n\n这里在每次触发构建时候修改环境变量的值为最新版本，并且替换版本号脚本里面也有验证重复构建\n\n构建文档\n\n\n\n\n# 总结\n\n整体流程是：\n\n 1. 使用构建调用替换版本号脚本来实现批量修改 pom.xml、相关文件的版本号\n    1. 替换版本号的参数由构建参数传递进来\n 2. 使用 git 将替换版本号后的代码提交到远程\n 3. 构建前端 + 后端\n 4. 使用事件脚本执行文件上传、验证文件完整性\n 5. 使用构建发布文档（思路流程和发布安装包一致）\n 6. 使用 docker buildx 实现构建多内核镜像\n    1. 使用构建附加环境变量来实现 dokcer 命令读取变量，来实现自动更新版本号\n\n\n# 附件\n\n\n# 快速替换版本号脚本\n\n#!/bin/bash\n#-----------------------------------------------------------\n# 此脚本用于每次升级时替换相应位置的版本号\n#-----------------------------------------------------------\n\nset -o errexit\n\ncurrent_path=$(pwd)\ncase "$(uname)" in\nlinux)\n\tbin_abs_path=$(readlink -f $(dirname $0))\n\t;;\n*)\n\tbin_abs_path=$(\n\t\tcd $(dirname $0)\n\t\tpwd\n\t)\n\t;;\nesac\nbase=${bin_abs_path}/../\n\necho "当前路径：${current_path} 脚本路径：${bin_abs_path}"\n\nif [ -n "$1" ]; then\n\tnew_version="$1"\n\told_version=$(cat ${base}/docs/version.txt)\n\techo "$old_version 替换为新版本 $new_version"\nelse\n\t# 参数错误，退出\n\techo "error: 请指定新版本！"\n\texit\nfi\n\nif [ ! -n "$old_version" ]; then\n\techo "error: 旧版本不存在，请确认 /docs/version.txt 中信息正确"\n\texit\nfi\n\n# 替换所有模块pom.xml中的版本\ncd ${base} && mvn versions:set -dnewversion=$1\n\necho "替换配置文件版本号 $new_version"\n\nif [ -f "$base/.env" ]; then\n\t# 替换 docker 中的版本\n\tsed -i.bak "s/${old_version}/${new_version}/g" $base/.env\nfi\n\n# 替换 dockerfile 中的版本\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/server/dockerfile\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/agent/dockerfile\nsed -i.bak "s/${old_version}/${new_version}/g" $base/script/docker.sh\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/server/dockerfilerelease\n\n# logo\nsed -i.bak "s/${old_version}/${new_version}/g" $base/modules/common/src/main/resources/banner.txt\n\n# vue version\nsed -i.bak "s/${old_version}/${new_version}/g" $base/web-vue/package.json\n\n# release-sha1sum.sh\nsed -i.bak "s/${old_version}/${new_version}/g" $base/script/release-sha1sum.sh\n\n# gitee go\nsed -i.bak "s/${old_version}/${new_version}/g" $base/.workflow/masterpipeline.yml\n\n# 保留新版本号\necho "$new_version" >$base/docs/version.txt\n\necho "版本号替换成功 $new_version"\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n\n\n\n# 构建容器 dockerfile\n\nfrom maven:3.8.6-jdk-8\n\narg build_date\nlabel build_info="dromara/jpom build-date:- ${build_date}"\nlabel maintainer="bwcx-jzy <bwcx_jzy@163.com>"\nlabel documentation="https://jpom.top"\n\nenv jpom_home\t/usr/local/jpom-server\nenv jpom_pkg_version\t2.10.22\nenv jpom_pkg\tserver-${jpom_pkg_version}-release.tar.gz\nenv sha1_name server-${jpom_pkg_version}-release.tar.gz.sha1\n\nenv jpom_data_path ${jpom_home}/data\nenv jpom_log_path ${jpom_home}/logs\n# 数据目录\nenv jpom.path ${jpom_data_path}\n\nworkdir ${jpom_home}\n\n# 时区\nenv tz asia/shanghai\nrun ln -snf /usr/share/zoneinfo/${tz} /etc/localtime && echo ${tz} > /etc/timezone\n\nrun mkdir -p ${jpom_home}\n#\nrun curl -lfso ${jpom_home}/${jpom_pkg} https://d.jpom.download/release/${jpom_pkg_version}/${jpom_pkg}\nrun curl -lfsso ${jpom_home}/${sha1_name} https://d.jpom.download/release/${jpom_pkg_version}/${sha1_name} && \\\n    esum=`cat ${jpom_home}/${sha1_name}` && \\\n    echo "${esum} ${jpom_home}/${jpom_pkg}" | sha1sum -c -;\nrun tar -zxvf ${jpom_home}/${jpom_pkg} -c ${jpom_home}\nrun rm -rf ${jpom_home}/${jpom_pkg}\n\n# 将配置文件暂存默认目录，避免无法挂载\nrun mv $jpom_home/conf $jpom_home/conf_default\n\n# 健康检查\nhealthcheck cmd curl -x post -f http://localhost:2122/check-system || exit 1\n\nexpose 2122\n\nentrypoint ["/bin/bash", "./bin/blocklistener.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n',charsets:{cjk:!0},lastUpdated:"2024/07/02, 05:53:05",lastUpdatedTimestamp:1719899585e3},{title:"Home",frontmatter:{home:!0,heroImage:"/images/logo/jpom_logo_big.svg",heroText:"一款原生 ops 软件",tagline:"【dromara】🚀简而轻的低侵入式在线构建、自动部署、日常运维、项目运维监控软件",actions:[{actionText:"🛠️开始安装",actionLink:"/pages/install/"},{actionText:"⚡️支持我们",actionLink:"/pages/praise/",actionClass:"action-button-diy"},{actionText:"🤝了解我们",actionLink:"/pages/readme/",actionClass:"action-button-diy"}],bannerBg:"none",features:[{title:"节点管理",details:"集群节点，统一管理多节点的项目，实现快速一键分发项目文件"},{title:"项目管理",details:"创建、启动、停止、实时查看项目控制台日志，管理项目文件",link:"/pages/practice/project-dsl-java/"},{title:"SSH 终端",details:"在浏览器中执行 SSH 终端，方便进行日常运维,记录执行命令记录",link:"/pages/practice/ssh-terminal/"},{title:"在线构建",details:"在线拉取 GIT、SVN 仓库快速构建项目包，不用运维人员手动上传项目包",link:"/pages/practice/build-java-ssh-release/"},{title:"在线脚本",details:"在线管理脚本、定时执行脚本、webhook 钩子执行、执行日志等",link:"/pages/practice/node-script-backup-docker-mysql/"},{title:"DOCKER 管理",details:"在线管理镜像、容器、SWARM 集群。界面化管理 DOCKER",link:"/pages/practice/docker-cli/"},{title:"用户管理",details:"多用户管理,实现不同用户不同权限，用户操作、管理日志完善记录"},{title:"项目监控",details:"实时监控项目当前状态、如果异常自动触发邮件、钉钉报警通知",link:"/pages/practice/monitor-notice/"},{title:"NGINX 配置、SSL 证书",details:"在线快速方便的修改 NGINX 配置文件，SSL 证书统一管理",link:"/pages/practice/node-nginx/"}],postList:"none","notices-2":[{id:"jpom-2.10.38",title:"📢 Jpom v2.10.38 发布！",content:'<div><p>2023-03-31</p><ul><li>支持 oauth2 登录（maxkey、gitee、github）</li><li>脚本、仓库支持全局共享</li><li>文件管理发布支持发布到节点指定目录 </li></ul></div><p style="text-align: right;"><a href="/pages/changelog/new/">查看详情</a>&nbsp;&nbsp;<a href="/pages/all-downloads/">下载安装包</a></p>',isHtmlContent:!0,position:"top-right"},{id:"jpom-2.10.x",title:"🎁 Jpom v2.10.x 资产管理了解一下?",content:'<div><ul><li>资产管理怎么用？</li><li>2.10.x有哪些新特性？</li><li>想使用 mysql 数据库该怎么办？</li></ul></div><p style="text-align: right;"><a href="/pages/7f1127/">查看详情</a></p>',isHtmlContent:!0,position:"top-left"}],readingShow:"top"},regularPath:"/",relativePath:"index.md",key:"v-42ccaad8",path:"/",headers:[{level:2,title:"🌈特别赞助 【 成为赞助商 】",slug:"🌈特别赞助-【-成为赞助商-】",normalizedTitle:"🌈特别赞助 【 成为赞助商 】",charIndex:29},{level:2,title:"😭 日常开发中，您是否有以下痛点？",slug:"😭-日常开发中-您是否有以下痛点",normalizedTitle:"😭 日常开发中，您是否有以下痛点？",charIndex:1219},{level:3,title:"😁 使用 Jpom 后",slug:"😁-使用-jpom-后",normalizedTitle:"😁 使用 jpom 后",charIndex:1564},{level:2,title:"Jpom 发展史",slug:"jpom-发展史",normalizedTitle:"jpom 发展史",charIndex:2331},{level:2,title:"快速体验",slug:"快速体验",normalizedTitle:"快速体验",charIndex:2497},{level:3,title:"一键安装插件端 详细的安装说明文档",slug:"一键安装插件端-详细的安装说明文档",normalizedTitle:"一键安装插件端 详细的安装说明文档",charIndex:2506},{level:3,title:"一键安装服务端 详细的安装说明文档",slug:"一键安装服务端-详细的安装说明文档",normalizedTitle:"一键安装服务端 详细的安装说明文档",charIndex:3174},{level:2,title:"🍭架构图",slug:"🍭架构图",normalizedTitle:"🍭架构图",charIndex:4289},{level:2,title:"🏡代码托管",slug:"🏡代码托管",normalizedTitle:"🏡代码托管",charIndex:4300},{level:2,title:"💪🏻参与贡献",slug:"💪🏻参与贡献",normalizedTitle:"💪🏻参与贡献",charIndex:4392},{level:2,title:"🤝 dromara 组织项目",slug:"🤝-dromara-组织项目",normalizedTitle:"🤝 dromara 组织项目",charIndex:4505},{level:2,title:"🧲友情链接",slug:"🧲友情链接",normalizedTitle:"🧲友情链接",charIndex:4559}],headersStr:"🌈特别赞助 【 成为赞助商 】 😭 日常开发中，您是否有以下痛点？ 😁 使用 Jpom 后 Jpom 发展史 快速体验 一键安装插件端 详细的安装说明文档 一键安装服务端 详细的安装说明文档 🍭架构图 🏡代码托管 💪🏻参与贡献 🤝 dromara 组织项目 🧲友情链接",content:"\n\n\n实践案例 常见问题 名词解释 支持这个项目\n\n\n# 🌈特别赞助 【 成为赞助商 】\n\nMaxKey\n\n\n业界领先的单点登录\n\nSnowy\n\n国内首个国密前后端分离快速开发平台，中国式工作流、独家双模式租户\n\n唛盟(mdp-lcode)\n\n低代码开发平台\n一体化智能开发神器，告别繁琐代码\n\nJNPF低代码开发平台\n\n技术双引擎系统，无限制业务场景，永久使用权，全源码交付\n\n橙单免费代码生成\n\n卓越的代码生成能力，全优的代码生成质量\n\n- name: MaxKey\n  desc: </br>业界领先的单点登录\n  avatar: /images/friends/ad/maxkey.png\n  link: https://gitee.com/dromara/MaxKey\n  bgColor: '#9ed3e5'\n  textColor: '#1f2328'\n- name: Snowy\n  desc: 国内首个国密前后端分离快速开发平台，中国式工作流、独家双模式租户\n  avatar: /images/friends/ad/snowy.png\n  link: https://www.xiaonuo.vip\n  bgColor: '#1373CC'\n  textColor: '#ffffff'\n- name: 唛盟(mdp-lcode)\n  desc: 低代码开发平台</br>一体化智能开发神器，告别繁琐代码\n  avatar: /images/friends/ad/mdp.png\n  link: https://gitee.com/qingqinkj/mdp-lcode-ui-web\n  bgColor: '#5555f0'\n  textColor: '#ffffff'\n- name: JNPF低代码开发平台\n  desc: 技术双引擎系统，无限制业务场景，永久使用权，全源码交付\n  avatar: /images/friends/ad/jnpfsoft.png\n  link: https://www.jnpfsoft.com/index.html?from=jpom\n  bgColor: '#404040'\n  textColor: '#ffffff'\n- name: 橙单免费代码生成\n  desc: 卓越的代码生成能力，全优的代码生成质量\n  avatar: /images/friends/ad/orangeforms-logo.png\n  link: https://www.orangeforms.com/?from=jpom\n  bgColor: '#f37700'\n  textColor: '#ffffff'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n\n# 😭 日常开发中，您是否有以下痛点？\n\n * 团队中没有专业的运维，开发还要做运维的活，需要自己手动构建、部署项目。\n * 不同的项目有不同的构建、部署命令。\n * 有开发、测试、生产等多环境打包的需求。\n * 需要同时监控多个项目的运行状态。\n * 需要下载 SSH 工具远程连接服务器。\n * 需要下载 FTP 工具 传输文件到服务器。\n * 多台服务器时，在不同电脑之间账号密码同步不方便。\n * 想使用一些自动化工具，但是对服务器性能太高，搭建太麻烦。\n * 对自动化工具有个性化的需求，想自己修改项目，但是市面上的工具太复杂了。\n\n> 如果是分布式的项目，以上步骤则更加繁琐。\n> \n> 让 Jpom 来帮您解决这些痛点吧！然而，这些只是 Jpom 解决的最基础的功能。\n\n\n# 😁 使用 Jpom 后\n\n * 方便的用户管理\n   1. 用户操作监控，监控指定用户指定操作以邮件形式通知\n   2. 多用户管理，用户项目权限独立（上传、删除权限可控制），完善的操作日志，使用工作空间隔离权限\n   3. 账号可以开启 MFA 两步验证提高账号安全性\n * 界面形式实时查看项目运行状态、控制台日志、管理项目文件\n   1. 在线修改项目文本文件\n * Docker 容器管理、Docker swarm 集群管理\n * 在线 SSH 终端，让您在没有 Xshell、FinalShell 等软件也能轻松管理服务器\n    1. 登录 Jpom 系统后不需要知道服务器密码\n    2. 能指定 SSH 禁止执行的命令，避免执行高风险命令，并且能自动执行命令日志\n    3. 设置文件目录，在线查看管理对应项目文件及配置文件\n    4. SSH 命令模版在线执行脚本还能定时执行\n    5. 在线修改文本文件\n    6. 轻量的实现了简单的\"堡垒机\"功能\n\n * 使用项目分发一键搞定集群项目多机部署\n * 在线构建不用手动更新升级项目\n    1. 支持拉取 GIT、SVN 仓库\n    2. 支持容器构建（docker）\n    3. 支持 SSH 方式发布\n    4. 支持定时构建\n    5. 支持 WebHook 形式触发构建\n\n * 支持在线编辑 nginx 配置文件并自动 reload 等操作\n    1. 管理 nginx 状态，管理 SSL 证书\n\n * 项目状态监控异常自动报警、自动尝试重启\n   1. 支持邮件 + 钉钉群 + 微信群通知，主动感知项目运行状况\n * 节点脚本模版+定时执行或者触发器，拓展更多功能\n * 重要路径授权模式，杜绝用户误操作系统文件\n\n\n\n# Jpom 发展史\n\nJpom 从 2017 年诞生、2019 年发布第一个版本。\n\n从最开始仅支持单机管理以及数据采用 JSON 文件存储到多节点管理、支持 H2/Mysql 数据库、容器构建等。\n\n至今已经经历 150+ 版本迭代欢迎您使用，为 Jpom 发展提出宝贵意见，我们也更欢迎您参与进来共同为开源做出一份贡献。\n\n\n# 快速体验\n\n\n# 一键安装插件端 详细的安装说明文档\n\n默认端口：2123\n\n如果服务器中没有 jdk 会自动安装 jdk8\n\n# 一键安装 使用默认的安装路径\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent jdk+default\n# 一键默认安装 + 自动配置开机自启服务\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent jdk+default+service\n\n# 自定义安装路径\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 一键安装 使用默认的安装路径\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent jdk+default\n\n# 自定义安装路径\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n说明\n\n插件端是可选项，实际根据您使用情况来决定是否需要安装。详细说明请看详细的安装说明文档\n\n\n# 一键安装服务端 详细的安装说明文档\n\n默认端口：2122\n\n如果服务器中没有 jdk 会自动安装 jdk8\n\n# 一键安装 使用默认的安装路径\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+default\n# 一键默认安装 + 自动配置开机自启服务\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+default+service\n\n# 自定义安装路径\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 一键安装 使用默认的安装路径\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+default\n# 一键默认安装 + 自动配置开机自启服务\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+default+service\n\n# 自定义安装路径\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 此方式未挂载数据目录（不推荐）\n# 阿里云仓库\ndocker run -p 2122:2122 --name jpom-server jpomdocker/jpom\n# docker hub 仓库\ndocker run -p 2122:2122 --name jpom-server registry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n\n\n说明\n\n如无法访问管理系统，检查下是否开启了防火墙 ， 需要放行 2122 端口。\n\n如果在操作系统上放行了端口仍无法访问，并且您使用的是云服务器，请到云服务器后台中检查安全组规则是否放行 2122 端口。\n\n⚠️注意： Linux 系统中有多种防火墙：Firewall、Iptables、SELinux 等，再检查防火墙配置时候需要都检查一下。\n\n\n\n# 🍭架构图\n\n\n\n# 🏡代码托管\n\n * Gitee\n * Github\n * Gitcode\n\n开源不易请大家多多支持，有了您的支持我们会更有动力持续迭代，请给个 star 支持一下，谢谢！\n\n\n\n# 💪🏻参与贡献\n\n欢迎各路好汉一起来参与完善 ，我们期待您的 PR！\n\n如果想贡献，请先查看贡献准则。\n\n贡献成员列表\n\n> 提交贡献即认为签署了 CLA 协议\n\n\nMade with contrib.rocks.\n\n\n# 🤝 dromara 组织项目\n\n为往圣继绝学，一个人或许能走的更快，但一群人会走的更远。\n\n\n\n\n\n\n# 🧲友情链接\n\n\n",normalizedContent:"\n\n\n实践案例 常见问题 名词解释 支持这个项目\n\n\n# 🌈特别赞助 【 成为赞助商 】\n\nmaxkey\n\n\n业界领先的单点登录\n\nsnowy\n\n国内首个国密前后端分离快速开发平台，中国式工作流、独家双模式租户\n\n唛盟(mdp-lcode)\n\n低代码开发平台\n一体化智能开发神器，告别繁琐代码\n\njnpf低代码开发平台\n\n技术双引擎系统，无限制业务场景，永久使用权，全源码交付\n\n橙单免费代码生成\n\n卓越的代码生成能力，全优的代码生成质量\n\n- name: maxkey\n  desc: </br>业界领先的单点登录\n  avatar: /images/friends/ad/maxkey.png\n  link: https://gitee.com/dromara/maxkey\n  bgcolor: '#9ed3e5'\n  textcolor: '#1f2328'\n- name: snowy\n  desc: 国内首个国密前后端分离快速开发平台，中国式工作流、独家双模式租户\n  avatar: /images/friends/ad/snowy.png\n  link: https://www.xiaonuo.vip\n  bgcolor: '#1373cc'\n  textcolor: '#ffffff'\n- name: 唛盟(mdp-lcode)\n  desc: 低代码开发平台</br>一体化智能开发神器，告别繁琐代码\n  avatar: /images/friends/ad/mdp.png\n  link: https://gitee.com/qingqinkj/mdp-lcode-ui-web\n  bgcolor: '#5555f0'\n  textcolor: '#ffffff'\n- name: jnpf低代码开发平台\n  desc: 技术双引擎系统，无限制业务场景，永久使用权，全源码交付\n  avatar: /images/friends/ad/jnpfsoft.png\n  link: https://www.jnpfsoft.com/index.html?from=jpom\n  bgcolor: '#404040'\n  textcolor: '#ffffff'\n- name: 橙单免费代码生成\n  desc: 卓越的代码生成能力，全优的代码生成质量\n  avatar: /images/friends/ad/orangeforms-logo.png\n  link: https://www.orangeforms.com/?from=jpom\n  bgcolor: '#f37700'\n  textcolor: '#ffffff'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n\n# 😭 日常开发中，您是否有以下痛点？\n\n * 团队中没有专业的运维，开发还要做运维的活，需要自己手动构建、部署项目。\n * 不同的项目有不同的构建、部署命令。\n * 有开发、测试、生产等多环境打包的需求。\n * 需要同时监控多个项目的运行状态。\n * 需要下载 ssh 工具远程连接服务器。\n * 需要下载 ftp 工具 传输文件到服务器。\n * 多台服务器时，在不同电脑之间账号密码同步不方便。\n * 想使用一些自动化工具，但是对服务器性能太高，搭建太麻烦。\n * 对自动化工具有个性化的需求，想自己修改项目，但是市面上的工具太复杂了。\n\n> 如果是分布式的项目，以上步骤则更加繁琐。\n> \n> 让 jpom 来帮您解决这些痛点吧！然而，这些只是 jpom 解决的最基础的功能。\n\n\n# 😁 使用 jpom 后\n\n * 方便的用户管理\n   1. 用户操作监控，监控指定用户指定操作以邮件形式通知\n   2. 多用户管理，用户项目权限独立（上传、删除权限可控制），完善的操作日志，使用工作空间隔离权限\n   3. 账号可以开启 mfa 两步验证提高账号安全性\n * 界面形式实时查看项目运行状态、控制台日志、管理项目文件\n   1. 在线修改项目文本文件\n * docker 容器管理、docker swarm 集群管理\n * 在线 ssh 终端，让您在没有 xshell、finalshell 等软件也能轻松管理服务器\n    1. 登录 jpom 系统后不需要知道服务器密码\n    2. 能指定 ssh 禁止执行的命令，避免执行高风险命令，并且能自动执行命令日志\n    3. 设置文件目录，在线查看管理对应项目文件及配置文件\n    4. ssh 命令模版在线执行脚本还能定时执行\n    5. 在线修改文本文件\n    6. 轻量的实现了简单的\"堡垒机\"功能\n\n * 使用项目分发一键搞定集群项目多机部署\n * 在线构建不用手动更新升级项目\n    1. 支持拉取 git、svn 仓库\n    2. 支持容器构建（docker）\n    3. 支持 ssh 方式发布\n    4. 支持定时构建\n    5. 支持 webhook 形式触发构建\n\n * 支持在线编辑 nginx 配置文件并自动 reload 等操作\n    1. 管理 nginx 状态，管理 ssl 证书\n\n * 项目状态监控异常自动报警、自动尝试重启\n   1. 支持邮件 + 钉钉群 + 微信群通知，主动感知项目运行状况\n * 节点脚本模版+定时执行或者触发器，拓展更多功能\n * 重要路径授权模式，杜绝用户误操作系统文件\n\n\n\n# jpom 发展史\n\njpom 从 2017 年诞生、2019 年发布第一个版本。\n\n从最开始仅支持单机管理以及数据采用 json 文件存储到多节点管理、支持 h2/mysql 数据库、容器构建等。\n\n至今已经经历 150+ 版本迭代欢迎您使用，为 jpom 发展提出宝贵意见，我们也更欢迎您参与进来共同为开源做出一份贡献。\n\n\n# 快速体验\n\n\n# 一键安装插件端 详细的安装说明文档\n\n默认端口：2123\n\n如果服务器中没有 jdk 会自动安装 jdk8\n\n# 一键安装 使用默认的安装路径\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent jdk+default\n# 一键默认安装 + 自动配置开机自启服务\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent jdk+default+service\n\n# 自定义安装路径\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 一键安装 使用默认的安装路径\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent jdk+default\n\n# 自定义安装路径\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n说明\n\n插件端是可选项，实际根据您使用情况来决定是否需要安装。详细说明请看详细的安装说明文档\n\n\n# 一键安装服务端 详细的安装说明文档\n\n默认端口：2122\n\n如果服务器中没有 jdk 会自动安装 jdk8\n\n# 一键安装 使用默认的安装路径\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+default\n# 一键默认安装 + 自动配置开机自启服务\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+default+service\n\n# 自定义安装路径\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 一键安装 使用默认的安装路径\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+default\n# 一键默认安装 + 自动配置开机自启服务\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+default+service\n\n# 自定义安装路径\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 此方式未挂载数据目录（不推荐）\n# 阿里云仓库\ndocker run -p 2122:2122 --name jpom-server jpomdocker/jpom\n# docker hub 仓库\ndocker run -p 2122:2122 --name jpom-server registry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n\n\n说明\n\n如无法访问管理系统，检查下是否开启了防火墙 ， 需要放行 2122 端口。\n\n如果在操作系统上放行了端口仍无法访问，并且您使用的是云服务器，请到云服务器后台中检查安全组规则是否放行 2122 端口。\n\n⚠️注意： linux 系统中有多种防火墙：firewall、iptables、selinux 等，再检查防火墙配置时候需要都检查一下。\n\n\n\n# 🍭架构图\n\n\n\n# 🏡代码托管\n\n * gitee\n * github\n * gitcode\n\n开源不易请大家多多支持，有了您的支持我们会更有动力持续迭代，请给个 star 支持一下，谢谢！\n\n\n\n# 💪🏻参与贡献\n\n欢迎各路好汉一起来参与完善 ，我们期待您的 pr！\n\n如果想贡献，请先查看贡献准则。\n\n贡献成员列表\n\n> 提交贡献即认为签署了 cla 协议\n\n\nmade with contrib.rocks.\n\n\n# 🤝 dromara 组织项目\n\n为往圣继绝学，一个人或许能走的更快，但一群人会走的更远。\n\n\n\n\n\n\n# 🧲友情链接\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/12/02, 02:18:13",lastUpdatedTimestamp:1733105893e3},{title:"基于 Jpom 搭建应用部署系统",frontmatter:{title:"基于 Jpom 搭建应用部署系统",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/simple-solution-01/",author:{name:"带刺的玫瑰",link:"https://gitee.com/LinChong2018"},tags:["监控","SSH","在线构建"],categories:["文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/0090.simple-solution-01.html",relativePath:"实践案例/009.解决方案/0090.simple-solution-01.md",key:"v-209bdeb8",path:"/pages/practice/simple-solution-01/",headers:[{level:2,title:"0、部署示意图",slug:"_0、部署示意图",normalizedTitle:"0、部署示意图",charIndex:2},{level:2,title:"1、安装Jpom的Server、Agent",slug:"_1、安装jpom的server、agent",normalizedTitle:"1、安装jpom的server、agent",charIndex:16},{level:2,title:"2、代理服务器安装Nginx并代理Agent",slug:"_2、代理服务器安装nginx并代理agent",normalizedTitle:"2、代理服务器安装nginx并代理agent",charIndex:149},{level:2,title:"3、在Server初始化系统信息",slug:"_3、在server初始化系统信息",normalizedTitle:"3、在server初始化系统信息",charIndex:756},{level:3,title:"1、根据部署环境建立对应的工作空间",slug:"_1、根据部署环境建立对应的工作空间",normalizedTitle:"1、根据部署环境建立对应的工作空间",charIndex:777},{level:3,title:"2、在节点管理添加节点",slug:"_2、在节点管理添加节点",normalizedTitle:"2、在节点管理添加节点",charIndex:801},{level:3,title:"3、在节点下添加项目",slug:"_3、在节点下添加项目",normalizedTitle:"3、在节点下添加项目",charIndex:912},{level:3,title:"4、进入项目上传jar包",slug:"_4、进入项目上传jar包",normalizedTitle:"4、进入项目上传jar包",charIndex:929},{level:3,title:"5、点击“控制台”启动项目",slug:"_5、点击-控制台-启动项目",normalizedTitle:"5、点击“控制台”启动项目",charIndex:948},{level:2,title:"4、配置在线构建",slug:"_4、配置在线构建",normalizedTitle:"4、配置在线构建",charIndex:1017},{level:3,title:"1、配置仓库地址",slug:"_1、配置仓库地址",normalizedTitle:"1、配置仓库地址",charIndex:1030},{level:3,title:"2、填写构建规则",slug:"_2、填写构建规则",normalizedTitle:"2、填写构建规则",charIndex:1091},{level:3,title:"3、进行构建",slug:"_3、进行构建",normalizedTitle:"3、进行构建",charIndex:1768},{level:2,title:"5、配置脚本列表",slug:"_5、配置脚本列表",normalizedTitle:"5、配置脚本列表",charIndex:1856},{level:3,title:"1、在SSH管理-命令管理添加脚本",slug:"_1、在ssh管理-命令管理添加脚本",normalizedTitle:"1、在ssh管理-命令管理添加脚本",charIndex:2027},{level:4,title:"1、添加ssh信息",slug:"_1、添加ssh信息",normalizedTitle:"1、添加ssh信息",charIndex:2048},{level:4,title:"2、编写服务上传脚本",slug:"_2、编写服务上传脚本",normalizedTitle:"2、编写服务上传脚本",charIndex:2135},{level:4,title:"3、添加ssh key",slug:"_3、添加ssh-key",normalizedTitle:"3、添加ssh key",charIndex:2354},{level:4,title:"4、测试脚本是否能顺利执行",slug:"_4、测试脚本是否能顺利执行",normalizedTitle:"4、测试脚本是否能顺利执行",charIndex:2568},{level:3,title:"2、在脚本管理-脚本列表添加脚本",slug:"_2、在脚本管理-脚本列表添加脚本",normalizedTitle:"2、在脚本管理-脚本列表添加脚本",charIndex:2588},{level:2,title:"6、配置服务告警邮件监控",slug:"_6、配置服务告警邮件监控",normalizedTitle:"6、配置服务告警邮件监控",charIndex:2632},{level:3,title:"1、管理员配置好邮件初始信息",slug:"_1、管理员配置好邮件初始信息",normalizedTitle:"1、管理员配置好邮件初始信息",charIndex:2649},{level:3,title:"2、配置监控规则",slug:"_2、配置监控规则",normalizedTitle:"2、配置监控规则",charIndex:2670},{level:3,title:"3、测试启停被监控的服务",slug:"_3、测试启停被监控的服务",normalizedTitle:"3、测试启停被监控的服务",charIndex:2701}],headersStr:"0、部署示意图 1、安装Jpom的Server、Agent 2、代理服务器安装Nginx并代理Agent 3、在Server初始化系统信息 1、根据部署环境建立对应的工作空间 2、在节点管理添加节点 3、在节点下添加项目 4、进入项目上传jar包 5、点击“控制台”启动项目 4、配置在线构建 1、配置仓库地址 2、填写构建规则 3、进行构建 5、配置脚本列表 1、在SSH管理-命令管理添加脚本 1、添加ssh信息 2、编写服务上传脚本 3、添加ssh key 4、测试脚本是否能顺利执行 2、在脚本管理-脚本列表添加脚本 6、配置服务告警邮件监控 1、管理员配置好邮件初始信息 2、配置监控规则 3、测试启停被监控的服务",content:'# 0、部署示意图\n\n\n\n\n# 1、安装Jpom的Server、Agent\n\n> Server部署在公司内网服务器，能访问外网；\n> \n> Agent部署在需要管理的服务器节点，比如A服务器需要部署Java应用就安装Agent。\n\n官网安装教程\n\n这是安装完成后的Server端界面：\n\n\n\n\n# 2、代理服务器安装Nginx并代理Agent\n\n> Nginx需要安装在具有公网IP，和Agent所在的服务器在同一个网络环境的服务器\n\nNginx安装教程\n\n修改nginx.conf代理Agent\n\nserver {\n        listen       83;\n        server_name  localhost;\n\t\t#每个agent服务器定义一个唯一的代理规则\n        location /16803/ {\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection "upgrade";\n\n            proxy_pass http://ip:2123/;\n        }\n        location /168019/ {\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection "upgrade";\n\n            proxy_pass http://ip:2123/;\n        }\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 3、在Server初始化系统信息\n\n\n# 1、根据部署环境建立对应的工作空间\n\n\n\n\n# 2、在节点管理添加节点\n\n\n\n * 节点地址：填Nginx代理的agent的地址\n * 节点账号和密码安装Agent的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json\n\n\n# 3、在节点下添加项目\n\n\n\n\n# 4、进入项目上传jar包\n\n\n\n\n# 5、点击“控制台”启动项目\n\n\n\n> 至此已经完成了项目部署的基本功能，以后每次只需要重新上传jar包，再进行重启操作完成部署。\n\n\n# 4、配置在线构建\n\n\n# 1、配置仓库地址\n\n\n\n * 仓库地址：填写需要构建的项目地址\n * 账号、密码：填写公司分配的SVN的账号密码\n\n\n# 2、填写构建规则\n\n\n\n * 构建命令：打包的mvn命令，不同的空间配特定的打包环境，通过-P参数指定；\n\n * 产物目录：匹配打包后的文件进行发布。这里的是相对路径，相对的是根目录是/yyyy/jpom-server/data/build/xxx/source\n\n * 发布操作：对于匹配的文件如何进行处理。\n   \n   * 不发布：仅仅打包，不进行其他操作，产物目录匹配到的文件会生成到\n     \n     /yyyy/jpom-server/data/build/xxx/history/#n/result\n     \n     xxx是一个随机字符串，每个构建规则会生成一个这样的特定字符串\n     \n     n是序号，每次打包都会递增1生成目录\n   \n   * 节点分发\n   \n   * 项目：如果项目打包后只有一个jar包就可以直接选择这种方式\n   \n   * SSH：将匹配到的文件发布指定的服务器的指定目录\n   \n   * 本地命令：自定义命令操作匹配到的文件。\n     \n     cp -rp ${BUILD_RESULT_FILE} /yyyy/deploy/test这个就可以把打包完成的文件拷贝到指定的目录。\n     \n     ${BUILD_RESULT_FILE}：jpom提供的环境变量，可以获取本次打包生成的匹配文件放入的目录\n     \n     即/yyyy/jpom-server/data/build/xxx/history/#n/result\n   \n   * Docker镜像\n\n\n# 3、进行构建\n\n\n\n * 分支：选择构建的分支\n\n\n\n此时可以叉掉弹框去做其他的事情，打包将在后台进行\n\n\n\n在构建历史列表也可以看到本次构建的进度以及历史的构建日志\n\n\n# 5、配置脚本列表\n\n可以针对每个服务写一个脚本用于将打好的jar包上传到指定的服务器的指定目录\n\n\n\n> 既可以在【SSH管理-命令管理】也可以在【脚本管理-脚本列表】添加要编写的脚本。\n> \n> 两者的区别是，前者编写的脚本可以在指定的服务器上执行，但要先添加SSH信息，后者直接就在部署Jpom Server的服务器上执行命令。\n\n\n# 1、在SSH管理-命令管理添加脚本\n\n# 1、添加ssh信息\n\n\n\n如果发现连接添加的SSH服务器信息经常超时连接不上，需要在上面的其他配置里面配置超时时间，这样能保证程序不会因为在指定时间内没连上导致超时。\n\n# 2、编写服务上传脚本\n\n\n\necho "准备上传文件..."\nscp -C -P 应用服务器ssh端口号 -o \'ProxyJump 登录用户名@代理机器IP -p 代理机器ssh端口号\' 构建生成jar的绝对路径 登录用户名@应用服务器ip:文件上传指定目录\necho "上传成功！"\n\n\n1\n2\n3\n\n\n> 这里演示的是通过代理服务器上传文件到应用服务器，因为很多情况下有些服务器是没有外网ip的，如果有的话就直接scp上传。\n\n# 3、添加ssh key\n\n因为scp命令拷贝时需要ssh秘钥认证，需要提前把ssh key的认证配置好。\n\n如果是通过代理服务器上传文件到应用服务器，一共需要配置两处地方的ssh key认证\n\n 1. 在构建服务器上生成的id_rsa.pub添加到代理服务器\n 2. 在代理服务器上生成id_rsa.pub，将构建服务器和代理服务器的id_rsa.pub同时添加到应用服务器\n\nssh public key认证免密码登录\n\n# 4、测试脚本是否能顺利执行\n\n\n\n\n# 2、在脚本管理-脚本列表添加脚本\n\n和上面的方式同理，只是不用选择SSH节点。\n\n\n# 6、配置服务告警邮件监控\n\n\n# 1、管理员配置好邮件初始信息\n\n\n\n\n# 2、配置监控规则\n\n\n\n联系人要配置了邮箱才能被选择\n\n\n# 3、测试启停被监控的服务\n\n\n\n邮件报警记录\n\n',normalizedContent:'# 0、部署示意图\n\n\n\n\n# 1、安装jpom的server、agent\n\n> server部署在公司内网服务器，能访问外网；\n> \n> agent部署在需要管理的服务器节点，比如a服务器需要部署java应用就安装agent。\n\n官网安装教程\n\n这是安装完成后的server端界面：\n\n\n\n\n# 2、代理服务器安装nginx并代理agent\n\n> nginx需要安装在具有公网ip，和agent所在的服务器在同一个网络环境的服务器\n\nnginx安装教程\n\n修改nginx.conf代理agent\n\nserver {\n        listen       83;\n        server_name  localhost;\n\t\t#每个agent服务器定义一个唯一的代理规则\n        location /16803/ {\n            proxy_set_header upgrade $http_upgrade;\n            proxy_set_header connection "upgrade";\n\n            proxy_pass http://ip:2123/;\n        }\n        location /168019/ {\n            proxy_set_header upgrade $http_upgrade;\n            proxy_set_header connection "upgrade";\n\n            proxy_pass http://ip:2123/;\n        }\n }\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 3、在server初始化系统信息\n\n\n# 1、根据部署环境建立对应的工作空间\n\n\n\n\n# 2、在节点管理添加节点\n\n\n\n * 节点地址：填nginx代理的agent的地址\n * 节点账号和密码安装agent的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json\n\n\n# 3、在节点下添加项目\n\n\n\n\n# 4、进入项目上传jar包\n\n\n\n\n# 5、点击“控制台”启动项目\n\n\n\n> 至此已经完成了项目部署的基本功能，以后每次只需要重新上传jar包，再进行重启操作完成部署。\n\n\n# 4、配置在线构建\n\n\n# 1、配置仓库地址\n\n\n\n * 仓库地址：填写需要构建的项目地址\n * 账号、密码：填写公司分配的svn的账号密码\n\n\n# 2、填写构建规则\n\n\n\n * 构建命令：打包的mvn命令，不同的空间配特定的打包环境，通过-p参数指定；\n\n * 产物目录：匹配打包后的文件进行发布。这里的是相对路径，相对的是根目录是/yyyy/jpom-server/data/build/xxx/source\n\n * 发布操作：对于匹配的文件如何进行处理。\n   \n   * 不发布：仅仅打包，不进行其他操作，产物目录匹配到的文件会生成到\n     \n     /yyyy/jpom-server/data/build/xxx/history/#n/result\n     \n     xxx是一个随机字符串，每个构建规则会生成一个这样的特定字符串\n     \n     n是序号，每次打包都会递增1生成目录\n   \n   * 节点分发\n   \n   * 项目：如果项目打包后只有一个jar包就可以直接选择这种方式\n   \n   * ssh：将匹配到的文件发布指定的服务器的指定目录\n   \n   * 本地命令：自定义命令操作匹配到的文件。\n     \n     cp -rp ${build_result_file} /yyyy/deploy/test这个就可以把打包完成的文件拷贝到指定的目录。\n     \n     ${build_result_file}：jpom提供的环境变量，可以获取本次打包生成的匹配文件放入的目录\n     \n     即/yyyy/jpom-server/data/build/xxx/history/#n/result\n   \n   * docker镜像\n\n\n# 3、进行构建\n\n\n\n * 分支：选择构建的分支\n\n\n\n此时可以叉掉弹框去做其他的事情，打包将在后台进行\n\n\n\n在构建历史列表也可以看到本次构建的进度以及历史的构建日志\n\n\n# 5、配置脚本列表\n\n可以针对每个服务写一个脚本用于将打好的jar包上传到指定的服务器的指定目录\n\n\n\n> 既可以在【ssh管理-命令管理】也可以在【脚本管理-脚本列表】添加要编写的脚本。\n> \n> 两者的区别是，前者编写的脚本可以在指定的服务器上执行，但要先添加ssh信息，后者直接就在部署jpom server的服务器上执行命令。\n\n\n# 1、在ssh管理-命令管理添加脚本\n\n# 1、添加ssh信息\n\n\n\n如果发现连接添加的ssh服务器信息经常超时连接不上，需要在上面的其他配置里面配置超时时间，这样能保证程序不会因为在指定时间内没连上导致超时。\n\n# 2、编写服务上传脚本\n\n\n\necho "准备上传文件..."\nscp -c -p 应用服务器ssh端口号 -o \'proxyjump 登录用户名@代理机器ip -p 代理机器ssh端口号\' 构建生成jar的绝对路径 登录用户名@应用服务器ip:文件上传指定目录\necho "上传成功！"\n\n\n1\n2\n3\n\n\n> 这里演示的是通过代理服务器上传文件到应用服务器，因为很多情况下有些服务器是没有外网ip的，如果有的话就直接scp上传。\n\n# 3、添加ssh key\n\n因为scp命令拷贝时需要ssh秘钥认证，需要提前把ssh key的认证配置好。\n\n如果是通过代理服务器上传文件到应用服务器，一共需要配置两处地方的ssh key认证\n\n 1. 在构建服务器上生成的id_rsa.pub添加到代理服务器\n 2. 在代理服务器上生成id_rsa.pub，将构建服务器和代理服务器的id_rsa.pub同时添加到应用服务器\n\nssh public key认证免密码登录\n\n# 4、测试脚本是否能顺利执行\n\n\n\n\n# 2、在脚本管理-脚本列表添加脚本\n\n和上面的方式同理，只是不用选择ssh节点。\n\n\n# 6、配置服务告警邮件监控\n\n\n# 1、管理员配置好邮件初始信息\n\n\n\n\n# 2、配置监控规则\n\n\n\n联系人要配置了邮箱才能被选择\n\n\n# 3、测试启停被监控的服务\n\n\n\n邮件报警记录\n\n',charsets:{cjk:!0},lastUpdated:"2023/03/27, 08:37:18",lastUpdatedTimestamp:1679906238e3},{title:"自定义第三方通知",frontmatter:{title:"自定义第三方通知",date:"2023-02-17T17:47:51.000Z",permalink:"/pages/practice/ea3667/",categories:["docs","实践案例","解决方案"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/0094.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AC%AC%E4%B8%89%E6%96%B9%E9%80%9A%E7%9F%A5.html",relativePath:"实践案例/009.解决方案/0094.自定义第三方通知.md",key:"v-1d0ca95a",path:"/pages/practice/ea3667/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"第三方通知脚本",slug:"第三方通知脚本",normalizedTitle:"第三方通知脚本",charIndex:125},{level:2,title:"脚本中如何获取相关参数",slug:"脚本中如何获取相关参数",normalizedTitle:"脚本中如何获取相关参数",charIndex:326},{level:2,title:"案例代码分享",slug:"案例代码分享",normalizedTitle:"案例代码分享",charIndex:614},{level:3,title:"节点分发实现通知飞书",slug:"节点分发实现通知飞书",normalizedTitle:"节点分发实现通知飞书",charIndex:625}],headersStr:"前言 第三方通知脚本 脚本中如何获取相关参数 案例代码分享 节点分发实现通知飞书",content:'# 前言\n\n在 Jpom 中想实现构建、项目、监控、节点分发等包含配置 webhook 的功能想实现通知第三方系统（钉钉群通知、企业微信通知、飞书群通知、第三方系统接口、邮件通知），均可采用如下方案来实现自定义。\n\n核心思路：\n\n 1. 创建一个触发第三方通知脚本\n 2. 为脚本创建一个触发器\n 3. 将脚本的触发器地址配置到对应的 webhook 属性\n\n流程图\n\n\n\n\n# 第三方通知脚本\n\n第三方通知脚本的内容主要实现将 webhook 请求过来的测试解析并触发第三方通知，比如使用 curl 触发 钉钉、飞书、企业微信的群消息机器人，甚至实现邮件发送等\n\n至于脚本内容就需要根据您使用的第三方平台的 webhook 请求规则来决定了\n\n\n# 脚本中如何获取相关参数\n\n在 Jpom 中 webhook 默认均采用 get 方式请求，并将对应事件相关参数传入（不同事件有不同的参数，还需要根据不同类型事件来判断不同的参数）。\n\n在原始事件触发 webhook 时候传入到脚本的触发器，脚本的触发器会将请求的所有参数传入脚本中执行，为了避免参数名和其他环境变量冲突已经变量名规范，脚本触发器中会将所有的参数名拼接：trigger_xxx,xxx为传入的参数名,再进行驼峰转下划线。\n\n比如：请求脚本触发器参数名为：outGivingName 传入脚本的变量参数名为：trigger_out_giving_name\n\n\n# 案例代码分享\n\n\n# 节点分发实现通知飞书\n\n\noutGivingId=${trigger_out_giving_id}\n\nif [[ -z "${outGivingId}" ]]; then\n  echo "不存在分发id" 2>&2\n  exit 1\nfi\n\n#分发过程请求对应的地址,开始分发,分发完成,分发失败,取消分发\n#传入参数有：outGivingId、outGivingName、status、statusMsg、executeTime\n#status 的值有：1:分发中、2：分发结束、3：已取消、4：分发失败\n#异步请求不能保证有序性\n\nstatusMsg=""\n\nif [ "$trigger_status" == "1" ]; then #中括号两边都要有空格\n  statusMsg="开始准备分发（分发中）"\nelif [ "$trigger_status" == "2" ]; then\n  statusMsg="分发结束"\nelif [ "$trigger_status" == "3" ]; then\n  statusMsg="已取消"\nelif [ "$trigger_status" == "4" ]; then\n  statusMsg="分发失败"\nelse\n  statusMsg="未知"\nfi\n\n#{"msg_type":"text","content":{"text":\'"${text}"\'}}\n\npostData=\'{\n\t"msg_type": "post",\n\t"content": {\n\t\t"post": {\n\t\t\t"zh_cn": {\n\t\t\t\t"title": "分发事件通知",\n\t\t\t\t"content": [\n\t\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\t"tag": "text",\n\t\t\t\t\t\t\t"text": "名称：\'$trigger_out_giving_name\'\\n"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t"tag": "text",\n\t\t\t\t\t\t\t"text": "名称：\'$statusMsg\'\\n"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t"tag": "text",\n\t\t\t\t\t\t\t"text": "状态信息：\'$trigger_status_msg\'"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n}\'\n\ncurl -X POST -H "Content-Type: application/json" \\\n  -d "$postData" \\\n  https://open.feishu.cn/open-apis/bot/v2/hook/xxxxxxxxxxxxxxxxxxxxxxxxxx\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n',normalizedContent:'# 前言\n\n在 jpom 中想实现构建、项目、监控、节点分发等包含配置 webhook 的功能想实现通知第三方系统（钉钉群通知、企业微信通知、飞书群通知、第三方系统接口、邮件通知），均可采用如下方案来实现自定义。\n\n核心思路：\n\n 1. 创建一个触发第三方通知脚本\n 2. 为脚本创建一个触发器\n 3. 将脚本的触发器地址配置到对应的 webhook 属性\n\n流程图\n\n\n\n\n# 第三方通知脚本\n\n第三方通知脚本的内容主要实现将 webhook 请求过来的测试解析并触发第三方通知，比如使用 curl 触发 钉钉、飞书、企业微信的群消息机器人，甚至实现邮件发送等\n\n至于脚本内容就需要根据您使用的第三方平台的 webhook 请求规则来决定了\n\n\n# 脚本中如何获取相关参数\n\n在 jpom 中 webhook 默认均采用 get 方式请求，并将对应事件相关参数传入（不同事件有不同的参数，还需要根据不同类型事件来判断不同的参数）。\n\n在原始事件触发 webhook 时候传入到脚本的触发器，脚本的触发器会将请求的所有参数传入脚本中执行，为了避免参数名和其他环境变量冲突已经变量名规范，脚本触发器中会将所有的参数名拼接：trigger_xxx,xxx为传入的参数名,再进行驼峰转下划线。\n\n比如：请求脚本触发器参数名为：outgivingname 传入脚本的变量参数名为：trigger_out_giving_name\n\n\n# 案例代码分享\n\n\n# 节点分发实现通知飞书\n\n\noutgivingid=${trigger_out_giving_id}\n\nif [[ -z "${outgivingid}" ]]; then\n  echo "不存在分发id" 2>&2\n  exit 1\nfi\n\n#分发过程请求对应的地址,开始分发,分发完成,分发失败,取消分发\n#传入参数有：outgivingid、outgivingname、status、statusmsg、executetime\n#status 的值有：1:分发中、2：分发结束、3：已取消、4：分发失败\n#异步请求不能保证有序性\n\nstatusmsg=""\n\nif [ "$trigger_status" == "1" ]; then #中括号两边都要有空格\n  statusmsg="开始准备分发（分发中）"\nelif [ "$trigger_status" == "2" ]; then\n  statusmsg="分发结束"\nelif [ "$trigger_status" == "3" ]; then\n  statusmsg="已取消"\nelif [ "$trigger_status" == "4" ]; then\n  statusmsg="分发失败"\nelse\n  statusmsg="未知"\nfi\n\n#{"msg_type":"text","content":{"text":\'"${text}"\'}}\n\npostdata=\'{\n\t"msg_type": "post",\n\t"content": {\n\t\t"post": {\n\t\t\t"zh_cn": {\n\t\t\t\t"title": "分发事件通知",\n\t\t\t\t"content": [\n\t\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\t"tag": "text",\n\t\t\t\t\t\t\t"text": "名称：\'$trigger_out_giving_name\'\\n"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t"tag": "text",\n\t\t\t\t\t\t\t"text": "名称：\'$statusmsg\'\\n"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t"tag": "text",\n\t\t\t\t\t\t\t"text": "状态信息：\'$trigger_status_msg\'"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n}\'\n\ncurl -x post -h "content-type: application/json" \\\n  -d "$postdata" \\\n  https://open.feishu.cn/open-apis/bot/v2/hook/xxxxxxxxxxxxxxxxxxxxxxxxxx\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"Jpom运维系统安装与使用",frontmatter:{title:"Jpom运维系统安装与使用",date:"2024-10-18T12:27:52.000Z",permalink:"/pages/practice/4f8e47/",categories:["docs","实践案例","解决方案"],tags:[null],author:{name:"will",link:"https://gitee.com/arvinWill"},readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/0100.Jpom%E8%BF%90%E7%BB%B4%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8.html",relativePath:"实践案例/009.解决方案/0100.Jpom运维系统安装与使用.md",key:"v-897ec7b4",path:"/pages/practice/4f8e47/",headers:[{level:2,title:"一、环境准备",slug:"一、环境准备",normalizedTitle:"一、环境准备",charIndex:2},{level:3,title:"1、查看是否安装JDK",slug:"_1、查看是否安装jdk",normalizedTitle:"1、查看是否安装jdk",charIndex:13},{level:3,title:"2、查看是否安装Maven",slug:"_2、查看是否安装maven",normalizedTitle:"2、查看是否安装maven",charIndex:110},{level:2,title:"二、安装Server服务端",slug:"二、安装server服务端",normalizedTitle:"二、安装server服务端",charIndex:165},{level:3,title:"1、下载Jpom Server服务端安装包",slug:"_1、下载jpom-server服务端安装包",normalizedTitle:"1、下载jpom server服务端安装包",charIndex:234},{level:4,title:"1.1 点击上方连接，根据需要下载对应安装包，推荐安装最新版本",slug:"_1-1-点击上方连接-根据需要下载对应安装包-推荐安装最新版本",normalizedTitle:"1.1 点击上方连接，根据需要下载对应安装包，推荐安装最新版本",charIndex:269},{level:4,title:"1.2 解压server压缩包",slug:"_1-2-解压server压缩包",normalizedTitle:"1.2 解压server压缩包",charIndex:337},{level:3,title:"2、Server服务端配置",slug:"_2、server服务端配置",normalizedTitle:"2、server服务端配置",charIndex:359},{level:4,title:"2.1 修改数据库相关",slug:"_2-1-修改数据库相关",normalizedTitle:"2.1 修改数据库相关",charIndex:470},{level:4,title:"2.1 其他配置",slug:"_2-1-其他配置",normalizedTitle:"2.1 其他配置",charIndex:518},{level:3,title:"3、服务端启动",slug:"_3、服务端启动",normalizedTitle:"3、服务端启动",charIndex:731},{level:4,title:"3.1 linux 启动服务",slug:"_3-1-linux-启动服务",normalizedTitle:"3.1 linux 启动服务",charIndex:742},{level:4,title:"3.2 windows启动服务",slug:"_3-2-windows启动服务",normalizedTitle:"3.2 windows启动服务",charIndex:826},{level:4,title:"3.3 启动失败问题",slug:"_3-3-启动失败问题",normalizedTitle:"3.3 启动失败问题",charIndex:904},{level:3,title:"4、启动成功后访问服务端",slug:"_4、启动成功后访问服务端",normalizedTitle:"4、启动成功后访问服务端",charIndex:970},{level:3,title:"5、初始化服务端",slug:"_5、初始化服务端",normalizedTitle:"5、初始化服务端",charIndex:1158},{level:4,title:"5.1 添加超级管理账号",slug:"_5-1-添加超级管理账号",normalizedTitle:"5.1 添加超级管理账号",charIndex:1243},{level:4,title:"5.2 开启账号 MFA",slug:"_5-2-开启账号-mfa",normalizedTitle:"5.2 开启账号 mfa",charIndex:1334},{level:2,title:"三、安装Agent插件端",slug:"三、安装agent插件端",normalizedTitle:"三、安装agent插件端",charIndex:1382},{level:3,title:"1、下载Jpom Agent插件端安装包",slug:"_1、下载jpom-agent插件端安装包",normalizedTitle:"1、下载jpom agent插件端安装包",charIndex:1399},{level:4,title:"1.1 点击上方连接，下载跟服务端同版本的Agent安装包",slug:"_1-1-点击上方连接-下载跟服务端同版本的agent安装包",normalizedTitle:"1.1 点击上方连接，下载跟服务端同版本的agent安装包",charIndex:1459},{level:4,title:"1.2 解压agent压缩包",slug:"_1-2-解压agent压缩包",normalizedTitle:"1.2 解压agent压缩包",charIndex:1522},{level:3,title:"2、Agent插件端配置",slug:"_2、agent插件端配置",normalizedTitle:"2、agent插件端配置",charIndex:1543},{level:3,title:"3、Agent插件端启动",slug:"_3、agent插件端启动",normalizedTitle:"3、agent插件端启动",charIndex:1747},{level:3,title:"3.1 快速启动并绑定",slug:"_3-1-快速启动并绑定",normalizedTitle:"3.1 快速启动并绑定",charIndex:1764},{level:4,title:"3.2 启动后再绑定",slug:"_3-2-启动后再绑定",normalizedTitle:"3.2 启动后再绑定",charIndex:1863},{level:2,title:"四、项目管理",slug:"四、项目管理",normalizedTitle:"四、项目管理",charIndex:2111},{level:3,title:"1、创建java后端项目",slug:"_1、创建java后端项目",normalizedTitle:"1、创建java后端项目",charIndex:2159},{level:4,title:"1.1 点击新增，选择节点",slug:"_1-1-点击新增-选择节点",normalizedTitle:"1.1 点击新增，选择节点",charIndex:2175},{level:4,title:"1.2 填写项目基本信息",slug:"_1-2-填写项目基本信息",normalizedTitle:"1.2 填写项目基本信息",charIndex:2194},{level:4,title:"1.3 选择运行方式",slug:"_1-3-选择运行方式",normalizedTitle:"1.3 选择运行方式",charIndex:2210},{level:4,title:"1.4 配置项目路径和其他参数",slug:"_1-4-配置项目路径和其他参数",normalizedTitle:"1.4 配置项目路径和其他参数",charIndex:2226},{level:3,title:"2、创建vue前端项目",slug:"_2、创建vue前端项目",normalizedTitle:"2、创建vue前端项目",charIndex:2266},{level:2,title:"五、仓库管理",slug:"五、仓库管理",normalizedTitle:"五、仓库管理",charIndex:2334},{level:3,title:"1、新增仓库",slug:"_1、新增仓库",normalizedTitle:"1、新增仓库",charIndex:2381},{level:3,title:"2、令牌导入",slug:"_2、令牌导入",normalizedTitle:"2、令牌导入",charIndex:2407},{level:2,title:"六、构建发布",slug:"六、构建发布",normalizedTitle:"六、构建发布",charIndex:2460},{level:3,title:"1、新增构建，选择构建方式",slug:"_1、新增构建-选择构建方式",normalizedTitle:"1、新增构建，选择构建方式",charIndex:2507},{level:3,title:"2、填写基本信息",slug:"_2、填写基本信息",normalizedTitle:"2、填写基本信息",charIndex:2550},{level:3,title:"3、构建过程",slug:"_3、构建过程",normalizedTitle:"3、构建过程",charIndex:2587},{level:3,title:"4、发布操作",slug:"_4、发布操作",normalizedTitle:"4、发布操作",charIndex:2641},{level:3,title:"5、其他配置",slug:"_5、其他配置",normalizedTitle:"5、其他配置",charIndex:2683},{level:3,title:"6、发布构建",slug:"_6、发布构建",normalizedTitle:"6、发布构建",charIndex:2696},{level:3,title:"7、其他问题",slug:"_7、其他问题",normalizedTitle:"7、其他问题",charIndex:2802}],headersStr:"一、环境准备 1、查看是否安装JDK 2、查看是否安装Maven 二、安装Server服务端 1、下载Jpom Server服务端安装包 1.1 点击上方连接，根据需要下载对应安装包，推荐安装最新版本 1.2 解压server压缩包 2、Server服务端配置 2.1 修改数据库相关 2.1 其他配置 3、服务端启动 3.1 linux 启动服务 3.2 windows启动服务 3.3 启动失败问题 4、启动成功后访问服务端 5、初始化服务端 5.1 添加超级管理账号 5.2 开启账号 MFA 三、安装Agent插件端 1、下载Jpom Agent插件端安装包 1.1 点击上方连接，下载跟服务端同版本的Agent安装包 1.2 解压agent压缩包 2、Agent插件端配置 3、Agent插件端启动 3.1 快速启动并绑定 3.2 启动后再绑定 四、项目管理 1、创建java后端项目 1.1 点击新增，选择节点 1.2 填写项目基本信息 1.3 选择运行方式 1.4 配置项目路径和其他参数 2、创建vue前端项目 五、仓库管理 1、新增仓库 2、令牌导入 六、构建发布 1、新增构建，选择构建方式 2、填写基本信息 3、构建过程 4、发布操作 5、其他配置 6、发布构建 7、其他问题",content:"# 一、环境准备\n\n\n# 1、查看是否安装JDK\n\njava -version\n\n\n1\n\n\nJpom采用jdk 1.8 开发，推荐在Java 8 环境下使用，如果您想在高版本中使用您需要修改Jpom的启动脚本。\n\n\n# 2、查看是否安装Maven\n\n根据自身项目判断是否安装，非必须\n\nmvn -version\n\n\n1\n\n\n\n# 二、安装Server服务端\n\n这里为2.10.0+版本离线安装文档，若需其他安装方式，请到Jpom官网安装相关，自行选择安装方式\n\n\n# 1、下载Jpom Server服务端安装包\n\nJpom下载地址\n\n# 1.1 点击上方连接，根据需要下载对应安装包，推荐安装最新版本\n\n\n\n若下载的是完整安装包，请先找出其中对应server的压缩包\n\n# 1.2 解压server压缩包\n\n\n\n\n# 2、Server服务端配置\n\n目录： server-x.x.x-release/conf/application.yml\n\n根据自身需求，调整服务端相关配置，以下为重要配置说明，其他说明请到Jpom官网配置相关查看\n\n# 2.1 修改数据库相关\n\n根据自身需求修改jpom.db相关属性，默认采用H2数据库\n\n\n\n# 2.1 其他配置\n\n属性                            描述\njpom.path                     jpom 数据存储路径\njpom.cluster.id               集群Id，默认为default\njpom.file-storage.save-path   文件中心存储路径\nserver.port                   服务端运行端口号\n\n\n# 3、服务端启动\n\n# 3.1 linux 启动服务\n\n# 进入安装目录\ncd /xxxxx\n# 启动服务端\nbash ./bin/Server.sh start\n\n\n1\n2\n3\n4\n\n\n# 3.2 windows启动服务\n\n# 进入安装目录\ncd X:/xxxxx\ncd bin\n./Server.bat start\n\n\n1\n2\n3\n4\n\n\n# 3.3 启动失败问题\n\n请检查环境中是否已安装jdk且jdk版本在1.8+，若有其他问题请前往Jpom官网启动相关自行查看\n\n\n# 4、启动成功后访问服务端\n\nJpom 服务端的默认端口是：2122。若配置中修改过端口，访问时请使用修改后的端口。\n\n此时您只需要在浏览器地址栏输入：http://您服务器的IP:2122 即可访问到 Jpom 服务端。\n\n如果您的服务不能直接通过 IP 地址访问端口，您可以通过 Nginx 进行反向代理。\n\n其他访问问题，请前往Jpom官网访问服务端相关自行查看\n\n\n# 5、初始化服务端\n\n当您初次安装 Jpom 服务端并访问页面，系统会跳转至添加超级管理员账号页面\n\n如果您系统中没有超级管理员账号也会跳转至添加超级管理员账号页面\n\n# 5.1 添加超级管理账号\n\n添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n如果超级管理员被异常锁定请走超级管理员忘记密码流程：具体操作可以查阅文档\n\n# 5.2 开启账号 MFA\n\n为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n# 三、安装Agent插件端\n\n\n# 1、下载Jpom Agent插件端安装包\n\nJpom下载地址 注意： 多节点时，每个节点都需安装Agent插件端\n\n# 1.1 点击上方连接，下载跟服务端同版本的Agent安装包\n\n若下载的是完整安装包，请先找出其中对应agent的压缩包\n\n# 1.2 解压agent压缩包\n\n\n\n\n# 2、Agent插件端配置\n\n目录： agent-x.x.x-release/conf/application.yml\n\n根据自身需求，调整插件端相关配置，其他说明请前往Jpom官网配置相关查看\n\n若有需要，可修改jpom.authorize.agent-name和jpom.authorize.agent-pwd，修改agent段管理账号，密码为空Jpom会自动生成一串随机字符串当密码，请妥善保管\n\n\n# 3、Agent插件端启动\n\n\n# 3.1 快速启动并绑定\n\n登录Jpom服务端，找到功能管理中【节点&项目】下【逻辑节点】，点击【快速安装】按钮\n\n复制【快速绑定】中的命令内容，路径不同请自行调整，请自行确认需绑定的工作空间\n\n# 3.2 启动后再绑定\n\n# 3.2.1 linux 启动服务\n\n# 进入安装目录\ncd /xxxxx\n# 启动服务端\nbash ./bin/Agent.sh start\n\n\n1\n2\n3\n4\n\n\n# 3.2.2 windows启动服务\n\n#进入安装目录\ncd X:/xxxxx\ncd bin\n./Agent.bat start\n\n\n1\n2\n3\n4\n\n\n# 3.2.3 启动后绑定服务端\n\n登录Jpom服务端，找到系统管理中【资产管理】下【机器管理】，点击【新增】按钮，根据具体情况绑定\n\n\n\n\n# 四、项目管理\n\n菜单路径：选择对应工作空间，找到功能管理中【节点&项目】下【项目列表】\n\n\n# 1、创建java后端项目\n\n# 1.1 点击新增，选择节点\n\n\n\n# 1.2 填写项目基本信息\n\n# 1.3 选择运行方式\n\n\n\n# 1.4 配置项目路径和其他参数\n\n\n\n未配置项目路径时，请点击快速配置\n\n\n# 2、创建vue前端项目\n\n与创建java项目不同的是，选择的运行方式不同，vue前端项目选择静态文件项目，其他步骤基本相同\n\n\n\n\n# 五、仓库管理\n\n菜单路径：选择对应工作空间，找到功能管理中【在线构建】下【仓库信息】\n\n\n# 1、新增仓库\n\n填入仓库信息和账号密码即可\n\n\n# 2、令牌导入\n\n根据界面提示，获取私人令牌，填入私人令牌和仓库地址，点击搜索后，选择对应仓库导入\n\n\n# 六、构建发布\n\n菜单路径：选择对应工作空间，找到功能管理中【在线构建】下【构建列表】\n\n\n# 1、新增构建，选择构建方式\n\n本次演示本地构建方式，选择构建方式，点击下一步\n\n\n# 2、填写基本信息\n\n填写构建名称，选择仓库，选择分支，点击下一步\n\n\n# 3、构建过程\n\n填入构建命令(可参考常见构建命令示例)，填入产物目录(项目打包的目录)，点击下一步\n\n\n# 4、发布操作\n\n选择发布方式，这里演示项目方式，其他情况请自行尝试\n\n\n\n\n\n\n# 5、其他配置\n\n\n\n\n# 6、发布构建\n\n菜单路径：选择对应工作空间，找到功能管理中【在线构建】下【构建列表】，找到对应构建项目，点击构建\n\n\n\n确认发布分支，产物目录等，确认无误后，点击确定，进入构建日志，直至构建发布成功\n\n\n\n\n# 7、其他问题\n\n命令未找到或不能执行（command not found: xxxx、xxxx command not found）\n\n请排查服务端所在系统环境问题，比如maven或node是否安装配置成功\n\n构建发布成功，但项目未启动\n\n请排查节点对应插件端所在系统环境问题，比如发布java项目，系统环境是否安装jdk\n\n更多问题，请前往Jpom官网构建相关 自行查看",normalizedContent:"# 一、环境准备\n\n\n# 1、查看是否安装jdk\n\njava -version\n\n\n1\n\n\njpom采用jdk 1.8 开发，推荐在java 8 环境下使用，如果您想在高版本中使用您需要修改jpom的启动脚本。\n\n\n# 2、查看是否安装maven\n\n根据自身项目判断是否安装，非必须\n\nmvn -version\n\n\n1\n\n\n\n# 二、安装server服务端\n\n这里为2.10.0+版本离线安装文档，若需其他安装方式，请到jpom官网安装相关，自行选择安装方式\n\n\n# 1、下载jpom server服务端安装包\n\njpom下载地址\n\n# 1.1 点击上方连接，根据需要下载对应安装包，推荐安装最新版本\n\n\n\n若下载的是完整安装包，请先找出其中对应server的压缩包\n\n# 1.2 解压server压缩包\n\n\n\n\n# 2、server服务端配置\n\n目录： server-x.x.x-release/conf/application.yml\n\n根据自身需求，调整服务端相关配置，以下为重要配置说明，其他说明请到jpom官网配置相关查看\n\n# 2.1 修改数据库相关\n\n根据自身需求修改jpom.db相关属性，默认采用h2数据库\n\n\n\n# 2.1 其他配置\n\n属性                            描述\njpom.path                     jpom 数据存储路径\njpom.cluster.id               集群id，默认为default\njpom.file-storage.save-path   文件中心存储路径\nserver.port                   服务端运行端口号\n\n\n# 3、服务端启动\n\n# 3.1 linux 启动服务\n\n# 进入安装目录\ncd /xxxxx\n# 启动服务端\nbash ./bin/server.sh start\n\n\n1\n2\n3\n4\n\n\n# 3.2 windows启动服务\n\n# 进入安装目录\ncd x:/xxxxx\ncd bin\n./server.bat start\n\n\n1\n2\n3\n4\n\n\n# 3.3 启动失败问题\n\n请检查环境中是否已安装jdk且jdk版本在1.8+，若有其他问题请前往jpom官网启动相关自行查看\n\n\n# 4、启动成功后访问服务端\n\njpom 服务端的默认端口是：2122。若配置中修改过端口，访问时请使用修改后的端口。\n\n此时您只需要在浏览器地址栏输入：http://您服务器的ip:2122 即可访问到 jpom 服务端。\n\n如果您的服务不能直接通过 ip 地址访问端口，您可以通过 nginx 进行反向代理。\n\n其他访问问题，请前往jpom官网访问服务端相关自行查看\n\n\n# 5、初始化服务端\n\n当您初次安装 jpom 服务端并访问页面，系统会跳转至添加超级管理员账号页面\n\n如果您系统中没有超级管理员账号也会跳转至添加超级管理员账号页面\n\n# 5.1 添加超级管理账号\n\n添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n如果超级管理员被异常锁定请走超级管理员忘记密码流程：具体操作可以查阅文档\n\n# 5.2 开启账号 mfa\n\n为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n# 三、安装agent插件端\n\n\n# 1、下载jpom agent插件端安装包\n\njpom下载地址 注意： 多节点时，每个节点都需安装agent插件端\n\n# 1.1 点击上方连接，下载跟服务端同版本的agent安装包\n\n若下载的是完整安装包，请先找出其中对应agent的压缩包\n\n# 1.2 解压agent压缩包\n\n\n\n\n# 2、agent插件端配置\n\n目录： agent-x.x.x-release/conf/application.yml\n\n根据自身需求，调整插件端相关配置，其他说明请前往jpom官网配置相关查看\n\n若有需要，可修改jpom.authorize.agent-name和jpom.authorize.agent-pwd，修改agent段管理账号，密码为空jpom会自动生成一串随机字符串当密码，请妥善保管\n\n\n# 3、agent插件端启动\n\n\n# 3.1 快速启动并绑定\n\n登录jpom服务端，找到功能管理中【节点&项目】下【逻辑节点】，点击【快速安装】按钮\n\n复制【快速绑定】中的命令内容，路径不同请自行调整，请自行确认需绑定的工作空间\n\n# 3.2 启动后再绑定\n\n# 3.2.1 linux 启动服务\n\n# 进入安装目录\ncd /xxxxx\n# 启动服务端\nbash ./bin/agent.sh start\n\n\n1\n2\n3\n4\n\n\n# 3.2.2 windows启动服务\n\n#进入安装目录\ncd x:/xxxxx\ncd bin\n./agent.bat start\n\n\n1\n2\n3\n4\n\n\n# 3.2.3 启动后绑定服务端\n\n登录jpom服务端，找到系统管理中【资产管理】下【机器管理】，点击【新增】按钮，根据具体情况绑定\n\n\n\n\n# 四、项目管理\n\n菜单路径：选择对应工作空间，找到功能管理中【节点&项目】下【项目列表】\n\n\n# 1、创建java后端项目\n\n# 1.1 点击新增，选择节点\n\n\n\n# 1.2 填写项目基本信息\n\n# 1.3 选择运行方式\n\n\n\n# 1.4 配置项目路径和其他参数\n\n\n\n未配置项目路径时，请点击快速配置\n\n\n# 2、创建vue前端项目\n\n与创建java项目不同的是，选择的运行方式不同，vue前端项目选择静态文件项目，其他步骤基本相同\n\n\n\n\n# 五、仓库管理\n\n菜单路径：选择对应工作空间，找到功能管理中【在线构建】下【仓库信息】\n\n\n# 1、新增仓库\n\n填入仓库信息和账号密码即可\n\n\n# 2、令牌导入\n\n根据界面提示，获取私人令牌，填入私人令牌和仓库地址，点击搜索后，选择对应仓库导入\n\n\n# 六、构建发布\n\n菜单路径：选择对应工作空间，找到功能管理中【在线构建】下【构建列表】\n\n\n# 1、新增构建，选择构建方式\n\n本次演示本地构建方式，选择构建方式，点击下一步\n\n\n# 2、填写基本信息\n\n填写构建名称，选择仓库，选择分支，点击下一步\n\n\n# 3、构建过程\n\n填入构建命令(可参考常见构建命令示例)，填入产物目录(项目打包的目录)，点击下一步\n\n\n# 4、发布操作\n\n选择发布方式，这里演示项目方式，其他情况请自行尝试\n\n\n\n\n\n\n# 5、其他配置\n\n\n\n\n# 6、发布构建\n\n菜单路径：选择对应工作空间，找到功能管理中【在线构建】下【构建列表】，找到对应构建项目，点击构建\n\n\n\n确认发布分支，产物目录等，确认无误后，点击确定，进入构建日志，直至构建发布成功\n\n\n\n\n# 7、其他问题\n\n命令未找到或不能执行（command not found: xxxx、xxxx command not found）\n\n请排查服务端所在系统环境问题，比如maven或node是否安装配置成功\n\n构建发布成功，但项目未启动\n\n请排查节点对应插件端所在系统环境问题，比如发布java项目，系统环境是否安装jdk\n\n更多问题，请前往jpom官网构建相关 自行查看",charsets:{cjk:!0},lastUpdated:"2024/10/18, 04:40:37",lastUpdatedTimestamp:1729226437e3},{title:"离线安装实践",frontmatter:{title:"离线安装实践",date:"2022-11-04T14:54:33.000Z",permalink:"/pages/practice/af288b/",categories:["docs","实践案例","解决方案"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/9998.V2.9.X/0093.%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%AE%9E%E8%B7%B5.html",relativePath:"实践案例/009.解决方案/9998.V2.9.X/0093.离线安装实践.md",key:"v-8017fed2",path:"/pages/practice/af288b/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:127},{level:2,title:"获取安装包",slug:"获取安装包",normalizedTitle:"获取安装包",charIndex:420},{level:2,title:"上传安装包到服务器中",slug:"上传安装包到服务器中",normalizedTitle:"上传安装包到服务器中",charIndex:992},{level:2,title:"安装插件端",slug:"安装插件端",normalizedTitle:"安装插件端",charIndex:1009},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:1265},{level:3,title:"访问服务端",slug:"访问服务端",normalizedTitle:"访问服务端",charIndex:1643},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:1796},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:1806},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:1857},{level:2,title:"愉快的使用",slug:"愉快的使用",normalizedTitle:"愉快的使用",charIndex:2019}],headersStr:"前言 需要准备的环境 获取安装包 上传安装包到服务器中 安装插件端 安装服务端 访问服务端 初始化服务端 添加超级管理账号 开启账号 MFA 愉快的使用",content:"# 前言\n\n> 本文主要介绍： 如何从零开始采用离线的方式安装 Jpom 服务端+插件端\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意：本文基于 2.9.13 版本讲解,系统为 centos7\n\n\n# 需要准备的环境\n\n 1. 一台 centos7 的服务器\n 2. 服务器中已经安装 jdk（建议 HotSpot JDK 1.8）\n\n提示\n\n本文默认您已经在服务器中安装好 jdk,并且正确的配置了 java 环境变量\n\n环境变量示例：\n\n# cat /etc/profile\nexport JAVA_HOME=/usr/java/jdk1.8.0_251\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n\n\n1\n2\n3\n4\n\n\n\n# 获取安装包\n\nJpom 目前安装包都会发布到：下载中心 提供大家下载\n\n发布的包一般包含如下文件：\n\n * jpom-x.x.x.zip\n * server-x.x.x-release.tar.gz\n * server-x.x.x-release.zip.sha1（sha1sum）\n * server-x.x.x-release.zip\n * server-x.x.x-release.zip.sha1（sha1sum）\n * agent-x.x.x-release.tar.gz\n * agent-x.x.x-release.tar.gz.sha1（sha1sum）\n * agent-x.x.x-release.zip\n * agent-x.x.x-release.zip.sha1（sha1sum）\n\n文件大致有：zip 包、tar.gz 包、sha1sum 校验文件\n\njpom-x.x.x.zip 文件为：server-x.x.x-release.zip、agent-x.x.x-release.zip 合并压缩包，一般用于一并下载服务端和插件端安装包。\n\n本文使用 tar.gz 包 来安装：\n\n 1. server-x.x.x-release.tar.gz\n 2. agent-x.x.x-release.tar.gz\n\n\n# 上传安装包到服务器中\n\n\n\n\n# 安装插件端\n\n创建插件端的安装目录：\n\nmkdir -p /usr/local/jpom-agent/\n\n\n1\n\n\n解压安装包\n\ntar -zxf agent-2.9.13-release.tar.gz -C /usr/local/jpom-agent/\n\n\n1\n\n\n切换到安装目录\n\ncd /usr/local/jpom-agent/\n\n\n1\n\n\n\n\n启动插件端\n\nbash ./Agent.sh start\n\n\n1\n\n\n\n\n等待执行结果，查看控制台输出插件端账号密码。\n\n插件端默认端口为：2123\n\n\n# 安装服务端\n\n创建服务端的安装目录：\n\nmkdir -p /usr/local/jpom-server/\n\n\n1\n\n\n解压安装包(注意：需要切回到安装包存放路径奥)\n\ntar -zxf server-2.9.13-release.tar.gz -C /usr/local/jpom-server/\n\n\n1\n\n\n切换到安装目录\n\ncd /usr/local/jpom-server/\n\n\n1\n\n\n\n\n启动服务端\n\nbash ./Server.sh start\n\n\n1\n\n\n\n\n注意：如果服务器中没有安装 docker 控制台中可以输出：There is no docker service local java.io.IOException: xxxx 相关错误忽略即可，因为服务端默认会自动添加本机 docker 服务到 Jpom 中方便后续使用\n\n\n# 访问服务端\n\n地址：服务端IP:2122，我这里服务器的IP 地址是：192.168.127.147\n\n那么实际访问地址是：http://192.168.127.147:2122/\n\n\n\n注意事项\n\n如果出现无法访问，请检查服务器的防火墙是否开放规则,云服务器需要检查安全组是否开发等网络限制原因\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n温馨提示\n\nJpom 默认会自动检查当前服务器是否存在未被绑定的插件端，如果存在插件端未添加到服务端中，程序将自动添加插件端到节点中（工作空间为默认）\n\n此方式仅在节点列表为空并且在启动服务端时候存在运行中的插件端才生效\n\n\n\n\n# 愉快的使用\n\n这样就完成 Jpom 的安装流程拉，可以根据需要使用其他功能",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何从零开始采用离线的方式安装 jpom 服务端+插件端\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意：本文基于 2.9.13 版本讲解,系统为 centos7\n\n\n# 需要准备的环境\n\n 1. 一台 centos7 的服务器\n 2. 服务器中已经安装 jdk（建议 hotspot jdk 1.8）\n\n提示\n\n本文默认您已经在服务器中安装好 jdk,并且正确的配置了 java 环境变量\n\n环境变量示例：\n\n# cat /etc/profile\nexport java_home=/usr/java/jdk1.8.0_251\nexport classpath=.:$java_home/lib/dt.jar:$java_home/lib/tools.jar\nexport path=$path:$java_home/bin\n\n\n1\n2\n3\n4\n\n\n\n# 获取安装包\n\njpom 目前安装包都会发布到：下载中心 提供大家下载\n\n发布的包一般包含如下文件：\n\n * jpom-x.x.x.zip\n * server-x.x.x-release.tar.gz\n * server-x.x.x-release.zip.sha1（sha1sum）\n * server-x.x.x-release.zip\n * server-x.x.x-release.zip.sha1（sha1sum）\n * agent-x.x.x-release.tar.gz\n * agent-x.x.x-release.tar.gz.sha1（sha1sum）\n * agent-x.x.x-release.zip\n * agent-x.x.x-release.zip.sha1（sha1sum）\n\n文件大致有：zip 包、tar.gz 包、sha1sum 校验文件\n\njpom-x.x.x.zip 文件为：server-x.x.x-release.zip、agent-x.x.x-release.zip 合并压缩包，一般用于一并下载服务端和插件端安装包。\n\n本文使用 tar.gz 包 来安装：\n\n 1. server-x.x.x-release.tar.gz\n 2. agent-x.x.x-release.tar.gz\n\n\n# 上传安装包到服务器中\n\n\n\n\n# 安装插件端\n\n创建插件端的安装目录：\n\nmkdir -p /usr/local/jpom-agent/\n\n\n1\n\n\n解压安装包\n\ntar -zxf agent-2.9.13-release.tar.gz -c /usr/local/jpom-agent/\n\n\n1\n\n\n切换到安装目录\n\ncd /usr/local/jpom-agent/\n\n\n1\n\n\n\n\n启动插件端\n\nbash ./agent.sh start\n\n\n1\n\n\n\n\n等待执行结果，查看控制台输出插件端账号密码。\n\n插件端默认端口为：2123\n\n\n# 安装服务端\n\n创建服务端的安装目录：\n\nmkdir -p /usr/local/jpom-server/\n\n\n1\n\n\n解压安装包(注意：需要切回到安装包存放路径奥)\n\ntar -zxf server-2.9.13-release.tar.gz -c /usr/local/jpom-server/\n\n\n1\n\n\n切换到安装目录\n\ncd /usr/local/jpom-server/\n\n\n1\n\n\n\n\n启动服务端\n\nbash ./server.sh start\n\n\n1\n\n\n\n\n注意：如果服务器中没有安装 docker 控制台中可以输出：there is no docker service local java.io.ioexception: xxxx 相关错误忽略即可，因为服务端默认会自动添加本机 docker 服务到 jpom 中方便后续使用\n\n\n# 访问服务端\n\n地址：服务端ip:2122，我这里服务器的ip 地址是：192.168.127.147\n\n那么实际访问地址是：http://192.168.127.147:2122/\n\n\n\n注意事项\n\n如果出现无法访问，请检查服务器的防火墙是否开放规则,云服务器需要检查安全组是否开发等网络限制原因\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n温馨提示\n\njpom 默认会自动检查当前服务器是否存在未被绑定的插件端，如果存在插件端未添加到服务端中，程序将自动添加插件端到节点中（工作空间为默认）\n\n此方式仅在节点列表为空并且在启动服务端时候存在运行中的插件端才生效\n\n\n\n\n# 愉快的使用\n\n这样就完成 jpom 的安装流程拉，可以根据需要使用其他功能",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"Docker 容器安装实践",frontmatter:{title:"Docker 容器安装实践",date:"2022-11-04T13:20:29.000Z",permalink:"/pages/practice/c846d3/",categories:["docs","实践案例","解决方案"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/9998.V2.9.X/0092.Docker%20%E5%AE%B9%E5%99%A8%E5%AE%89%E8%A3%85%E5%AE%9E%E8%B7%B5.html",relativePath:"实践案例/009.解决方案/9998.V2.9.X/0092.Docker 容器安装实践.md",key:"v-6d658deb",path:"/pages/practice/c846d3/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:153},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:206},{level:3,title:"创建挂载目录",slug:"创建挂载目录",normalizedTitle:"创建挂载目录",charIndex:366},{level:3,title:"创建容器",slug:"创建容器",normalizedTitle:"创建容器",charIndex:483},{level:3,title:"访问服务端",slug:"访问服务端",normalizedTitle:"访问服务端",charIndex:1248},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:1386},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:1396},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:1447},{level:2,title:"安装插件端",slug:"安装插件端",normalizedTitle:"安装插件端",charIndex:1495},{level:3,title:"添加节点",slug:"添加节点",normalizedTitle:"添加节点",charIndex:1946},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:98},{level:4,title:"节点网络连接异常或超时",slug:"节点网络连接异常或超时",normalizedTitle:"节点网络连接异常或超时",charIndex:2345},{level:4,title:"授权信息错误",slug:"授权信息错误",normalizedTitle:"授权信息错误",charIndex:2542},{level:2,title:"服务端添加 Docker",slug:"服务端添加-docker",normalizedTitle:"服务端添加 docker",charIndex:2765},{level:2,title:"愉快的使用",slug:"愉快的使用",normalizedTitle:"愉快的使用",charIndex:2323}],headersStr:"前言 需要准备的环境 安装服务端 创建挂载目录 创建容器 访问服务端 初始化服务端 添加超级管理账号 开启账号 MFA 安装插件端 添加节点 注意 节点网络连接异常或超时 授权信息错误 服务端添加 Docker 愉快的使用",content:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 Docker 容器安装 Jpom 服务端+插件端配置\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意：本文基于 2.9.13 版本讲解,系统为 centos7,docker 版本：20.10.21\n\n\n# 需要准备的环境\n\n 1. 一台 centos7 的服务器\n 2. 服务器中已经安装 docker\n\n\n# 安装服务端\n\n本文默认您已经在服务器中安装好 docker 。(一键安装docker 命令：curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun)\n\n使用容器安装建议将数据目录挂载出来，这样方便后面维护管理 Jpom 服务端的数据\n\n\n# 创建挂载目录\n\nmkdir -p /home/jpom-server/logs\nmkdir -p /home/jpom-server/data\nmkdir -p /home/jpom-server/conf\n\n\n1\n2\n3\n\n\n\n# 创建容器\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n注意\n\n在低版本 docker 中运行可能出现 ls: cannot access'/usr/local/jpom-server/lib/': Operation not permitted 错误，此时需要添加 --privileged 参数 如：docker run -p 2122:2122 --name jpom jpomdocker/jpom --privileged\n\n\n# 访问服务端\n\n地址：服务端IP:2122，我这里服务器的IP 地址是：192.168.127.147\n\n那么实际访问地址是：http://192.168.127.147:2122/\n\n\n\n注意：建议使用宿主机的 IP 地址，不要使用 docker 网卡的 IP 地址\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n\n# 安装插件端\n\n提示内容\n\n容器化安装仅提供服务端版。由于容器和宿主机环境隔离，而导致插件端的很多功能无法正常使用，因此对插件端容器化意义不大。\n\n这里我们采用一键安装的方式来安装插件端\n\n# 如果服务器中没有 jdk 会自动安装 jdk-8u251\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n在执行命令后会提示您安装的路径\n\n提示内容\n\n默认安装目录 /usr/local/jpom-agent, 是否使用此目录作为安装目录? 输入 y 确定, 否则请输入安装目录, 需要使用绝对路径 (注意: agent 和 server 不能装到同一个目录!)：\n\n我们一般采用默认的输入 y 即可（如果不输入任何内容则会安装在您执行命令的当前路径）\n\n\n\n等待执行结果，查看控制台输出插件端账号密码。\n\n\n# 添加节点\n\n接下来我们需要将这个插件端添加到 Jpom 服务端中的节点里面来使用后续功能\n\n\n\n\n\n注意：\n\n 1. 这里的节点 IP 不能使用 127.0.0.1，因为容器安装 127.0.0.1 表示容器里面的网络，并不能直接通讯到宿主机的网络\n 2. 节点密码为安装插件端时控制台输出的账号密码\n    \n    1. > Automatically generate authorized account:jpomAgent password:t9anfy2buv Authorization information storage location：/usr/local/jpom-agent/data/agent_authorize.json\n\n\n\n至此，我们就已经成功使用容器安装 Jpom 服务端和安装插件端并且配置到服务端中的节点，可以愉快的使用其他功能拉。\n\n\n# 注意\n\n# 节点网络连接异常或超时\n\n添加时候可能出现：xxx节点网络连接异常或超时,请优先检查插件端运行状态再检查 IP 地址、端口号是否配置正确,防火墙规则,云服务器的安全组配置等网络相关问题排查定位。xxxx\n\n\n\n这里一般需要检查防火墙、安全组以及 IP 地址是否正常等相关问题。\n\n出现这种提升还有可能是当前插件端的服务未运行，需要检查一下插件端是否正常运行。\n\n防火墙、安全组 更多说明\n\n# 授权信息错误\n\n添加时候可能出现：xxxx节点异常：授权信息错误\n\n\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 Agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 extConfig.yml 自定义配置了账号密码不会出现此文件)\n\n\n# 服务端添加 Docker\n\nJpom 提供了 docker 的基础管理相关功能：\n\n 1. 在线构建使用容器构建\n 2. 容器的基础管理（启动、停止、重启、删除、查看日志、进行终端等）\n 3. 镜像的基础管理\n 4. 查看卷相关信息\n 5. 查看网络相关信息\n 6. 管理 docker swarm 集群\n\n这样就需要将 docker 添加到 jpom 的服务端来实现管理。\n\n详细的添加 docker 教程>>\n\n\n# 愉快的使用\n\n这样就完成 Jpom 的安装流程拉，可以根据需要使用其他功能",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 docker 容器安装 jpom 服务端+插件端配置\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意：本文基于 2.9.13 版本讲解,系统为 centos7,docker 版本：20.10.21\n\n\n# 需要准备的环境\n\n 1. 一台 centos7 的服务器\n 2. 服务器中已经安装 docker\n\n\n# 安装服务端\n\n本文默认您已经在服务器中安装好 docker 。(一键安装docker 命令：curl -fssl https://get.docker.com | bash -s docker --mirror aliyun)\n\n使用容器安装建议将数据目录挂载出来，这样方便后面维护管理 jpom 服务端的数据\n\n\n# 创建挂载目录\n\nmkdir -p /home/jpom-server/logs\nmkdir -p /home/jpom-server/data\nmkdir -p /home/jpom-server/conf\n\n\n1\n2\n3\n\n\n\n# 创建容器\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n注意\n\n在低版本 docker 中运行可能出现 ls: cannot access'/usr/local/jpom-server/lib/': operation not permitted 错误，此时需要添加 --privileged 参数 如：docker run -p 2122:2122 --name jpom jpomdocker/jpom --privileged\n\n\n# 访问服务端\n\n地址：服务端ip:2122，我这里服务器的ip 地址是：192.168.127.147\n\n那么实际访问地址是：http://192.168.127.147:2122/\n\n\n\n注意：建议使用宿主机的 ip 地址，不要使用 docker 网卡的 ip 地址\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n\n# 安装插件端\n\n提示内容\n\n容器化安装仅提供服务端版。由于容器和宿主机环境隔离，而导致插件端的很多功能无法正常使用，因此对插件端容器化意义不大。\n\n这里我们采用一键安装的方式来安装插件端\n\n# 如果服务器中没有 jdk 会自动安装 jdk-8u251\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n在执行命令后会提示您安装的路径\n\n提示内容\n\n默认安装目录 /usr/local/jpom-agent, 是否使用此目录作为安装目录? 输入 y 确定, 否则请输入安装目录, 需要使用绝对路径 (注意: agent 和 server 不能装到同一个目录!)：\n\n我们一般采用默认的输入 y 即可（如果不输入任何内容则会安装在您执行命令的当前路径）\n\n\n\n等待执行结果，查看控制台输出插件端账号密码。\n\n\n# 添加节点\n\n接下来我们需要将这个插件端添加到 jpom 服务端中的节点里面来使用后续功能\n\n\n\n\n\n注意：\n\n 1. 这里的节点 ip 不能使用 127.0.0.1，因为容器安装 127.0.0.1 表示容器里面的网络，并不能直接通讯到宿主机的网络\n 2. 节点密码为安装插件端时控制台输出的账号密码\n    \n    1. > automatically generate authorized account:jpomagent password:t9anfy2buv authorization information storage location：/usr/local/jpom-agent/data/agent_authorize.json\n\n\n\n至此，我们就已经成功使用容器安装 jpom 服务端和安装插件端并且配置到服务端中的节点，可以愉快的使用其他功能拉。\n\n\n# 注意\n\n# 节点网络连接异常或超时\n\n添加时候可能出现：xxx节点网络连接异常或超时,请优先检查插件端运行状态再检查 ip 地址、端口号是否配置正确,防火墙规则,云服务器的安全组配置等网络相关问题排查定位。xxxx\n\n\n\n这里一般需要检查防火墙、安全组以及 ip 地址是否正常等相关问题。\n\n出现这种提升还有可能是当前插件端的服务未运行，需要检查一下插件端是否正常运行。\n\n防火墙、安全组 更多说明\n\n# 授权信息错误\n\n添加时候可能出现：xxxx节点异常：授权信息错误\n\n\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 extconfig.yml 自定义配置了账号密码不会出现此文件)\n\n\n# 服务端添加 docker\n\njpom 提供了 docker 的基础管理相关功能：\n\n 1. 在线构建使用容器构建\n 2. 容器的基础管理（启动、停止、重启、删除、查看日志、进行终端等）\n 3. 镜像的基础管理\n 4. 查看卷相关信息\n 5. 查看网络相关信息\n 6. 管理 docker swarm 集群\n\n这样就需要将 docker 添加到 jpom 的服务端来实现管理。\n\n详细的添加 docker 教程>>\n\n\n# 愉快的使用\n\n这样就完成 jpom 的安装流程拉，可以根据需要使用其他功能",charsets:{cjk:!0},lastUpdated:"2024/12/02, 02:18:13",lastUpdatedTimestamp:1733105893e3},{title:"一键安装实践",frontmatter:{title:"一键安装实践",date:"2022-11-03T21:42:10.000Z",permalink:"/pages/practice/15b7a2/",categories:["docs","实践案例","解决方案"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/9999.V2.8.X/0091.%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E5%AE%9E%E8%B7%B5.html",relativePath:"实践案例/009.解决方案/9999.V2.8.X/0091.一键安装实践.md",key:"v-eab1ac62",path:"/pages/practice/15b7a2/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:137},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:192},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:404},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:414},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:465},{level:2,title:"安装插件端",slug:"安装插件端",normalizedTitle:"安装插件端",charIndex:513},{level:2,title:"添加节点",slug:"添加节点",normalizedTitle:"添加节点",charIndex:720},{level:2,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:95},{level:3,title:"点网络连接异常或超时",slug:"点网络连接异常或超时",normalizedTitle:"点网络连接异常或超时",charIndex:955},{level:3,title:"授权信息错误",slug:"授权信息错误",normalizedTitle:"授权信息错误",charIndex:1152},{level:2,title:"愉快的使用",slug:"愉快的使用",normalizedTitle:"愉快的使用",charIndex:1375}],headersStr:"前言 需要准备的环境 安装服务端 初始化服务端 添加超级管理账号 开启账号 MFA 安装插件端 添加节点 注意 点网络连接异常或超时 授权信息错误 愉快的使用",content:"# 前言\n\n> 本文主要介绍： 如何从零开始使用一键安装的方式安装 Jpom 服务端+插件端配置\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端、Jpom 插件端（安装 jpom 需要 java 环境）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 注意\n\n 1. 添加节点的 IP 需要根据您业务环境中的实际 IP 来填写（插件端控制台输出的 IP 是获取当前机器的第一个活跃网卡 IP 仅供参考！实际使用需要更换为和服务端能正常通讯的 IP）\n 2. 端口默认为 2123 ,如果修改后需要填写修改后的\n\n\n# 点网络连接异常或超时\n\n添加时候可能出现：xxx节点网络连接异常或超时,请优先检查插件端运行状态再检查 IP 地址、端口号是否配置正确,防火墙规则,云服务器的安全组配置等网络相关问题排查定位。xxxx\n\n\n\n这里一般需要检查防火墙、安全组以及 IP 地址是否正常等相关问题。\n\n出现这种提升还有可能是当前插件端的服务未运行，需要检查一下插件端是否正常运行。\n\n防火墙、安全组 更多说明\n\n\n# 授权信息错误\n\n添加时候可能出现：xxxx节点异常：授权信息错误\n\n\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 Agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 extConfig.yml 自定义配置了账号密码不会出现此文件)\n\n\n# 愉快的使用\n\n这样就完成 Jpom 的安装流程拉，可以根据需要使用其他功能",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何从零开始使用一键安装的方式安装 jpom 服务端+插件端配置\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. jpom 服务端、jpom 插件端（安装 jpom 需要 java 环境）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 注意\n\n 1. 添加节点的 ip 需要根据您业务环境中的实际 ip 来填写（插件端控制台输出的 ip 是获取当前机器的第一个活跃网卡 ip 仅供参考！实际使用需要更换为和服务端能正常通讯的 ip）\n 2. 端口默认为 2123 ,如果修改后需要填写修改后的\n\n\n# 点网络连接异常或超时\n\n添加时候可能出现：xxx节点网络连接异常或超时,请优先检查插件端运行状态再检查 ip 地址、端口号是否配置正确,防火墙规则,云服务器的安全组配置等网络相关问题排查定位。xxxx\n\n\n\n这里一般需要检查防火墙、安全组以及 ip 地址是否正常等相关问题。\n\n出现这种提升还有可能是当前插件端的服务未运行，需要检查一下插件端是否正常运行。\n\n防火墙、安全组 更多说明\n\n\n# 授权信息错误\n\n添加时候可能出现：xxxx节点异常：授权信息错误\n\n\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 extconfig.yml 自定义配置了账号密码不会出现此文件)\n\n\n# 愉快的使用\n\n这样就完成 jpom 的安装流程拉，可以根据需要使用其他功能",charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"本地构建 + Jpom Server 使用 SCP 发布项目",frontmatter:{title:"本地构建 + Jpom Server 使用 SCP 发布项目",date:"2023-03-31T15:33:14.000Z",permalink:"/pages/practice/jpom-server-scp-upload/",tags:["SSH","SCP","Java","在线构建"],categories:["docs","文档","实践案例"],author:{name:"Hotstrip",link:"https://gitee.com/hotstrip"},readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/0000.V2.10.X/0101.jpom-server-scp-upload.html",relativePath:"实践案例/010.在线构建/0000.V2.10.X/0101.jpom-server-scp-upload.md",key:"v-46e4df80",path:"/pages/practice/jpom-server-scp-upload/",headers:[{level:2,title:"1. 序",slug:"_1-序",normalizedTitle:"1. 序",charIndex:25},{level:2,title:"2. 步骤概览",slug:"_2-步骤概览",normalizedTitle:"2. 步骤概览",charIndex:409},{level:2,title:"3. 实践步骤",slug:"_3-实践步骤",normalizedTitle:"3. 实践步骤",charIndex:451},{level:3,title:"3.1 安装 Jpom Server 端",slug:"_3-1-安装-jpom-server-端",normalizedTitle:"3.1 安装 jpom server 端",charIndex:463},{level:3,title:"3.2 创建项目仓库",slug:"_3-2-创建项目仓库",normalizedTitle:"3.2 创建项目仓库",charIndex:524},{level:3,title:"3.3 配置 SSH 免密登录",slug:"_3-3-配置-ssh-免密登录",normalizedTitle:"3.3 配置 ssh 免密登录",charIndex:928},{level:3,title:"3.4 新增构建",slug:"_3-4-新增构建",normalizedTitle:"3.4 新增构建",charIndex:1595},{level:3,title:"3.5 执行构建发布",slug:"_3-5-执行构建发布",normalizedTitle:"3.5 执行构建发布",charIndex:2275},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:2370}],headersStr:"1. 序 2. 步骤概览 3. 实践步骤 3.1 安装 Jpom Server 端 3.2 创建项目仓库 3.3 配置 SSH 免密登录 3.4 新增构建 3.5 执行构建发布 总结",content:"# Jpom 使用 Scp 发布实践案例\n\n\n# 1. 序\n\n> 使用说明：本案例使用 Jpom Server 端 2.10.37 版本作为演示，适用于支持 SSH 、SCP 命令的主机上（比如 Linux 服务器、MacOS 系统电脑、乌班图系统电脑等）\n\n先说说使用使用场景吧，任何东西脱离了实际的使用场景都是耍流氓。只有明确了使用场景，才能体会到这个案例解决的是什么问题。\n\n本篇文章所适用的场景如下：\n\n 1. 我已经有一台 Linux 服务器部署了 Jpom Server，希望能通过这台服务器上的 Jpom 自动拉取代码，打包，然后直接推送打包之后的文件到其他服务器上去\n 2. 我想在本地环境（比如 MacOS 电脑）直接把仓库的代码打包，并且直接上传到远程服务器，相当于使用 Jpom Server 替代 Sftp 工具的作用\n\n若是您的想法与上述场景不符合，可能本篇文章的内容就不太适合您。\n\n\n# 2. 步骤概览\n\n想要完成我们上面第一步的需求，我们需要下面这些步骤：\n\n\n\n\n# 3. 实践步骤\n\n\n# 3.1 安装 Jpom Server 端\n\n此项内容轻轻参考文档：一键安装实践 | Jpom，本文不做额外说明。\n\n\n# 3.2 创建项目仓库\n\n项目仓库我们以这个 Hello-world 项目来演示，仓库地址：hello-world-java: use Java write hello-world (gitee.com)。功能就是一个简单的 http://localhost:8080/ 接口，返回 hello world 字符串。\n\n下面是实际操作步骤：\n\n 1. 打开 Jpom Server 的管理页面，找到「在线构建」——「仓库信息」菜单\n 2. 点击新增按钮，在弹出框中输入仓库名称、仓库地址、账号、密码信息，完成后点击确定\n 3. 确认完成后能在列表中看到刚刚添加的仓库信息\n\n\n\n\n\n到此为止，仓库信息就已经添加好了，是不是很简单？\n\n完成了上面的步骤，我们需要暂时转移下注意力，转移到装有 Jpom Server 的服务器主机（也可以是本地开发环境电脑），以及我们想要把程序推送给远程服务器主机上面。\n\n\n# 3.3 配置 SSH 免密登录\n\n> 注意：这一小节内容与 Jpom 无关，仅仅与运行 Jpom Server 程序的主机和远程服务器（也就是最终项目运行的主机）有关。\n\n配置 SSH 免密登录的原因是让我们后续使用 SCP 命令上传文件时不会被阻塞，也无需输入密码。我们需要按照下面的步骤去完成配置 SSH 免密登录：\n\n 1. 生成 SSH 密钥（这一步是可选的，如果您的主机上已经生成过 SSH 密钥，可以跳过该步骤）\n\n在本地主机上使用以下命令生成 SSH 密钥：\n\nssh-keygen -t rsa\n\n\n1\n\n\n这个命令会生成一对公钥和私钥，分别保存在 ~/.ssh/id_rsa.pub 和 ~/.ssh/id_rsa 文件中。\n\n 2. 将公钥添加到远程服务器\n\n使用以下命令将公钥添加到远程服务器中：\n\nssh-copy-id user@remote_host\n\n\n1\n\n\n这个命令会将公钥添加到远程服务器 user 用户的 ~/.ssh/authorized_keys 文件中，从而实现免密登录。\n\n执行该命令之后会让您输入密码，完成后出现类似下面的信息就表示已经配置成功了，可以再次使用 SSH 登录命令去验证下是否不再需要输入密码。\n\n\n\n 3. 使用 SCP 进行文件传输\n\n使用以下命令进行从本地主机到远程服务器的传输：\n\nscp local_file user@remote_host:remote_file\n\n\n1\n\n\n该命令执行完毕后，可以在远程服务器上去看看是否把文件上传到了指定的位置。\n\n\n# 3.4 新增构建\n\n我们再次回到 Jpom Server 的管理页面，进行新增构建操作：\n\n 1. 打开 Jpom Server 的管理页面，找到「在线构建」——「构建列表」菜单\n 2. 点击新增按钮，在弹出框中输入名称、源仓库、构建方式、发布命令信息，完成后点击保存\n 3. 确认完成后能在列表中看到刚刚添加的仓库信息\n\n\n\n\n\n这里面需要注意几个地方：\n\n * 构建方式使用本地，这里的「本地」是指当前安装 Jpom Server 的主机\n\n * 构建命令：也就是当前主机所支持的命令，不能在 Windows 主机上去执行 Windows 本身不支持的命令（比如 rm -rf）。\n   \n   * 我们构建命令需要先进入 demo 目录，然后再使用 mvn 命令打包\n   \n   * demo 是源仓库 hello-world 里面的子目录，里面存放了源代码\n   \n   * 这里进入到 demo 目录之后可以直接使用 mvn 命令，是因为该项目自己集成了 maven 插件，参考下图：\n     \n     \n\n * 产物目录：跟构建类似，产物目录在 demo/target 里面\n\n * 发布操作：由于我们的使用场景是使用 Jpom Server 所在的主机通过 SCP 上传文件，所以这里选择本地命令（跟上面的构建方式选择本地类似）\n\n * 发布后命令：这里我们就是直接使用 SCP 上传文件到指定目录就可以了，值得注意的是 SCP 命令指定端口号参数是大写的 P，由于我们提前配置了 SSH 的免密，所以这里使用 SCP 不会被阻塞\n\n\n# 3.5 执行构建发布\n\n然后我们在「在线构建」——「构建列表」页面找到我们添加的构建记录，点击构建按钮，就能看到输出的日志了。\n\n\n\n最后登录远程服务器上去看看有没有上传成功。\n\n\n\n\n# 总结\n\n我们再来总结下，使用 Jpom Server 完成 SCP 命令发布程序其实涉及到的 Jpom 功能并不多。\n\n从功能菜单上看，就一个「在线构建」一级菜单，里面包含 3 个二级菜单，除此之外没有别的了。\n\n从整个操作步骤上看，就在新增构建的时候会涉及多一点的配置，还需要理解 Jpom 的构建命令、产物目录等名词的定义。\n\n剩下的就是服务器相关的知识了，比如 SSH、SCP 命令。",normalizedContent:"# jpom 使用 scp 发布实践案例\n\n\n# 1. 序\n\n> 使用说明：本案例使用 jpom server 端 2.10.37 版本作为演示，适用于支持 ssh 、scp 命令的主机上（比如 linux 服务器、macos 系统电脑、乌班图系统电脑等）\n\n先说说使用使用场景吧，任何东西脱离了实际的使用场景都是耍流氓。只有明确了使用场景，才能体会到这个案例解决的是什么问题。\n\n本篇文章所适用的场景如下：\n\n 1. 我已经有一台 linux 服务器部署了 jpom server，希望能通过这台服务器上的 jpom 自动拉取代码，打包，然后直接推送打包之后的文件到其他服务器上去\n 2. 我想在本地环境（比如 macos 电脑）直接把仓库的代码打包，并且直接上传到远程服务器，相当于使用 jpom server 替代 sftp 工具的作用\n\n若是您的想法与上述场景不符合，可能本篇文章的内容就不太适合您。\n\n\n# 2. 步骤概览\n\n想要完成我们上面第一步的需求，我们需要下面这些步骤：\n\n\n\n\n# 3. 实践步骤\n\n\n# 3.1 安装 jpom server 端\n\n此项内容轻轻参考文档：一键安装实践 | jpom，本文不做额外说明。\n\n\n# 3.2 创建项目仓库\n\n项目仓库我们以这个 hello-world 项目来演示，仓库地址：hello-world-java: use java write hello-world (gitee.com)。功能就是一个简单的 http://localhost:8080/ 接口，返回 hello world 字符串。\n\n下面是实际操作步骤：\n\n 1. 打开 jpom server 的管理页面，找到「在线构建」——「仓库信息」菜单\n 2. 点击新增按钮，在弹出框中输入仓库名称、仓库地址、账号、密码信息，完成后点击确定\n 3. 确认完成后能在列表中看到刚刚添加的仓库信息\n\n\n\n\n\n到此为止，仓库信息就已经添加好了，是不是很简单？\n\n完成了上面的步骤，我们需要暂时转移下注意力，转移到装有 jpom server 的服务器主机（也可以是本地开发环境电脑），以及我们想要把程序推送给远程服务器主机上面。\n\n\n# 3.3 配置 ssh 免密登录\n\n> 注意：这一小节内容与 jpom 无关，仅仅与运行 jpom server 程序的主机和远程服务器（也就是最终项目运行的主机）有关。\n\n配置 ssh 免密登录的原因是让我们后续使用 scp 命令上传文件时不会被阻塞，也无需输入密码。我们需要按照下面的步骤去完成配置 ssh 免密登录：\n\n 1. 生成 ssh 密钥（这一步是可选的，如果您的主机上已经生成过 ssh 密钥，可以跳过该步骤）\n\n在本地主机上使用以下命令生成 ssh 密钥：\n\nssh-keygen -t rsa\n\n\n1\n\n\n这个命令会生成一对公钥和私钥，分别保存在 ~/.ssh/id_rsa.pub 和 ~/.ssh/id_rsa 文件中。\n\n 2. 将公钥添加到远程服务器\n\n使用以下命令将公钥添加到远程服务器中：\n\nssh-copy-id user@remote_host\n\n\n1\n\n\n这个命令会将公钥添加到远程服务器 user 用户的 ~/.ssh/authorized_keys 文件中，从而实现免密登录。\n\n执行该命令之后会让您输入密码，完成后出现类似下面的信息就表示已经配置成功了，可以再次使用 ssh 登录命令去验证下是否不再需要输入密码。\n\n\n\n 3. 使用 scp 进行文件传输\n\n使用以下命令进行从本地主机到远程服务器的传输：\n\nscp local_file user@remote_host:remote_file\n\n\n1\n\n\n该命令执行完毕后，可以在远程服务器上去看看是否把文件上传到了指定的位置。\n\n\n# 3.4 新增构建\n\n我们再次回到 jpom server 的管理页面，进行新增构建操作：\n\n 1. 打开 jpom server 的管理页面，找到「在线构建」——「构建列表」菜单\n 2. 点击新增按钮，在弹出框中输入名称、源仓库、构建方式、发布命令信息，完成后点击保存\n 3. 确认完成后能在列表中看到刚刚添加的仓库信息\n\n\n\n\n\n这里面需要注意几个地方：\n\n * 构建方式使用本地，这里的「本地」是指当前安装 jpom server 的主机\n\n * 构建命令：也就是当前主机所支持的命令，不能在 windows 主机上去执行 windows 本身不支持的命令（比如 rm -rf）。\n   \n   * 我们构建命令需要先进入 demo 目录，然后再使用 mvn 命令打包\n   \n   * demo 是源仓库 hello-world 里面的子目录，里面存放了源代码\n   \n   * 这里进入到 demo 目录之后可以直接使用 mvn 命令，是因为该项目自己集成了 maven 插件，参考下图：\n     \n     \n\n * 产物目录：跟构建类似，产物目录在 demo/target 里面\n\n * 发布操作：由于我们的使用场景是使用 jpom server 所在的主机通过 scp 上传文件，所以这里选择本地命令（跟上面的构建方式选择本地类似）\n\n * 发布后命令：这里我们就是直接使用 scp 上传文件到指定目录就可以了，值得注意的是 scp 命令指定端口号参数是大写的 p，由于我们提前配置了 ssh 的免密，所以这里使用 scp 不会被阻塞\n\n\n# 3.5 执行构建发布\n\n然后我们在「在线构建」——「构建列表」页面找到我们添加的构建记录，点击构建按钮，就能看到输出的日志了。\n\n\n\n最后登录远程服务器上去看看有没有上传成功。\n\n\n\n\n# 总结\n\n我们再来总结下，使用 jpom server 完成 scp 命令发布程序其实涉及到的 jpom 功能并不多。\n\n从功能菜单上看，就一个「在线构建」一级菜单，里面包含 3 个二级菜单，除此之外没有别的了。\n\n从整个操作步骤上看，就在新增构建的时候会涉及多一点的配置，还需要理解 jpom 的构建命令、产物目录等名词的定义。\n\n剩下的就是服务器相关的知识了，比如 ssh、scp 命令。",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"Gitee 提交代码后自动执行构建",frontmatter:{title:"Gitee 提交代码后自动执行构建",date:"2022-07-25T20:25:42.000Z",permalink:"/pages/practice/gitee-webhook-trigger-build/",categories:["docs","实践案例","在线构建"],tags:["Gitee","构建"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/0109.Gitee%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%90%8E%E8%87%AA%E5%8A%A8%E6%89%A7%E8%A1%8C%E6%9E%84%E5%BB%BA.html",relativePath:"实践案例/010.在线构建/0109.Gitee提交代码后自动执行构建.md",key:"v-7107d482",path:"/pages/practice/gitee-webhook-trigger-build/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:144},{level:2,title:"生成触发器",slug:"生成触发器",normalizedTitle:"生成触发器",charIndex:216},{level:2,title:"给 Gitee 仓库配置 webhook",slug:"给-gitee-仓库配置-webhook",normalizedTitle:"给 gitee 仓库配置 webhook",charIndex:283},{level:2,title:"如何避免重复构建",slug:"如何避免重复构建",normalizedTitle:"如何避免重复构建",charIndex:409}],headersStr:"前言 需要准备的环境 生成触发器 给 Gitee 仓库配置 webhook 如何避免重复构建",content:"# 前言\n\n> 本文主要介绍： 如何使用 Jpom 中的构建触发器实现在 Gitee 仓库提交代码后自动触发构建\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 Jpom 服务端并且配置好仓库和构建\n\n\n# 需要准备的环境\n\n 1. 为 Jpom 服务端开放公网可以访问（如果服务端不支持公网访问，Gitee 的 webhook 将无法访问）\n\n\n# 生成触发器\n\n\n\n\n\n地址示例：\n\nhttps://xxx.xxxx.cn/api/build2/xxx/xxxx\n\n\n1\n\n\n\n# 给 Gitee 仓库配置 webhook\n\n\n\n可以根据自己的需求勾选触发事件\n\n注意：Jpom 中的 webhook 目前都是免密，不用填写密码或者签名\n\n\n\n\n\n这样配置后您在这个仓库提交代码后将自动触发 Jpom 中的此构建（执行构建）\n\n\n# 如何避免重复构建\n\n目前 Jpom 中的触发器并未解析触发事件信息，相当于只要请求了该接口就将执行构建。\n\n问： 那么该如何避免提交非构建分支时候触发构建呢？\n\n答： 开启差异构建，差异构建是指构建时候是否判断仓库代码有变动，如果没有变动则不执行构建\n\n",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何使用 jpom 中的构建触发器实现在 gitee 仓库提交代码后自动触发构建\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 jpom 服务端并且配置好仓库和构建\n\n\n# 需要准备的环境\n\n 1. 为 jpom 服务端开放公网可以访问（如果服务端不支持公网访问，gitee 的 webhook 将无法访问）\n\n\n# 生成触发器\n\n\n\n\n\n地址示例：\n\nhttps://xxx.xxxx.cn/api/build2/xxx/xxxx\n\n\n1\n\n\n\n# 给 gitee 仓库配置 webhook\n\n\n\n可以根据自己的需求勾选触发事件\n\n注意：jpom 中的 webhook 目前都是免密，不用填写密码或者签名\n\n\n\n\n\n这样配置后您在这个仓库提交代码后将自动触发 jpom 中的此构建（执行构建）\n\n\n# 如何避免重复构建\n\n目前 jpom 中的触发器并未解析触发事件信息，相当于只要请求了该接口就将执行构建。\n\n问： 那么该如何避免提交非构建分支时候触发构建呢？\n\n答： 开启差异构建，差异构建是指构建时候是否判断仓库代码有变动，如果没有变动则不执行构建\n\n",charsets:{cjk:!0},lastUpdated:"2022/07/25, 12:57:08",lastUpdatedTimestamp:1658753828e3},{title:"万能的 DSL 项目模板（Java）",frontmatter:{title:"万能的 DSL 项目模板（Java）",date:"2022-12-02T11:00:14.000Z",permalink:"/pages/practice/4756ec/",categories:["docs","实践案例","解决方案"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/009.%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/9999.V2.8.X/0089.DSL%20%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF.html",relativePath:"实践案例/009.解决方案/9999.V2.8.X/0089.DSL 项目模板.md",key:"v-fe35c9bc",path:"/pages/practice/4756ec/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:411},{level:2,title:"使用指南",slug:"使用指南",normalizedTitle:"使用指南",charIndex:1345},{level:3,title:"创建项目",slug:"创建项目",normalizedTitle:"创建项目",charIndex:1397},{level:3,title:"配置构建",slug:"配置构建",normalizedTitle:"配置构建",charIndex:2198},{level:3,title:"管理项目",slug:"管理项目",normalizedTitle:"管理项目",charIndex:2339},{level:2,title:"如何管理项目日志",slug:"如何管理项目日志",normalizedTitle:"如何管理项目日志",charIndex:2564},{level:3,title:"实时阅读",slug:"实时阅读",normalizedTitle:"实时阅读",charIndex:2653},{level:3,title:"日志阅读（搜索）",slug:"日志阅读-搜索",normalizedTitle:"日志阅读（搜索）",charIndex:2661},{level:2,title:"DSL 脚本说明",slug:"dsl-脚本说明",normalizedTitle:"dsl 脚本说明",charIndex:2943},{level:2,title:"附件",slug:"附件",normalizedTitle:"附件",charIndex:3343},{level:3,title:"项目 pom.xml 内容",slug:"项目-pom-xml-内容",normalizedTitle:"项目 pom.xml 内容",charIndex:3350},{level:3,title:"assembly/release.xml 内容",slug:"assembly-release-xml-内容",normalizedTitle:"assembly/release.xml 内容",charIndex:8206},{level:3,title:"command.sh 内容",slug:"command-sh-内容",normalizedTitle:"command.sh 内容",charIndex:9811}],headersStr:"前言 需要准备的环境 使用指南 创建项目 配置构建 管理项目 如何管理项目日志 实时阅读 日志阅读（搜索） DSL 脚本说明 附件 项目 pom.xml 内容 assembly/release.xml 内容 command.sh 内容",content:'# 前言\n\nJpom 在之前很长的一段时间都只支持管理 Java 项目并且管理的项目方式也比较简单粗暴，不能管理一些多目录结构等复杂的项目。\n\n自从 Jpom 2.8.6版本上线 DSL 模式项目后，经过大家的使用反馈在 2.8.6 ~ 2.9.18 20+个版本迭代后，现在 Jpom 可以很灵活的实现自定义项目管理\n\n温馨提醒\n\n如果您现在已经安装 Jpom 并且使用的非 2.9.18 版本，建议先更新到 2.9.18 版本后再使用，最新版本优化和修改了 DSL 相关功能\n\n本文主要使用一个典型的 Java 多目录层级项目、并且自定义启动、停止、查询状态、重启流程脚本来讲解，并且本文也会提到在 Jpom 中如何查看自定义项目的日志\n\n> 如果您还不了解 Jpom 中的 DSL 模式是什么可以查看文档：DSL 介绍>>\n\n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端（已经安装好、并且配置好了 maven 环境）\n 2. Jpom 插件端（已经安装好）\n 3. 一个 Java 项目仓库 并且已经有管理脚本\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * Docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 Jpom 服务端的方式\n\n本文使用的项目案例是一个 SpringBoot 项目\n\n 1. 项目采用胖 jar 的方式运行（您可以根据自己需求修改为 classpath 模式）\n 2. 项目使用 maven-assembly-plugin插件打包\n 3. 项目采用外置：application.yml、logback.xml 配置文件\n 4. 使用 G1GC 垃圾回收机制（具体请参考 ./bin/command.sh ）\n\n案例仓库地址：https://gitee.com/keepbx/Jpom-demo-case/ -> springboot-test-jar2\n\n> 项目相关的配置文件会附到文章末尾，可以自取（copy）、或者进入仓库查看完整代码\n\n项目目录结构如下：\n\n.\n├── conf    \t\t        => 配置文件目录\n├──── application.yml \t\t=> springboot 核心配置文件\n├──── logback.xml \t\t    => logback 日志配置文件\n├── bin      \t\t        => 项目管理命令目录\n├──── command.sh \t\t    => 目管理命令文件\n├── logs   \t\t            => 项目日志目录\n├──── stdout.log \t\t    => 项目控制台日志文件\n├──── application.log \t\t=> 项目 logback 日志文件\n├── lib      \t\t        => 项目运行 jar 目录\n└──── xxxxx.jar      \t\t=> 项目运行 胖 jar 文件\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 使用指南\n\n本文默认您已经安装 Jpom、并且已经配置好节点信息了。还不会的请参考其他相关文档\n\n\n# 创建项目\n\n\n\n\n\n温馨提醒\n\n这时在项目列表中运行状态出现感叹号，不要慌忽略即可。因为现在项目文件夹还是空的没有办法正常执行脚本\n\nDSL 配置内容\n\n# scriptId 可以是项目路径下脚本文件名或者系统中的脚本模版ID\ndescription: 测试\nrun:\n  start:\n    scriptId: ./bin/command.sh\n    scriptArgs: start exit --spring.profiles.active=test\n    scriptEnv:\n      "USR_JVM_SIZE": -Xms256m -Xmx1024m\n  status:\n    scriptId: ./bin/command.sh\n    scriptArgs: status\n  stop:\n    scriptId: ./bin/command.sh\n    scriptArgs: stop\n  restart:\n    scriptId: ./bin/command.sh\n    scriptArgs: restart exit --spring.profiles.active=test\n    scriptEnv:\n      "USR_JVM_SIZE": -Xms256m -Xmx1024m\nfile:\n# 备份文件保留个数\n#  backupCount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupSuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autoBackToFile: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n\n# 配置构建\n\n这里我们主要是演示和介绍使用 Jpom 在线构建来发布项目\n\n本文自动忽略配置仓库环节，直接上手配置构建（不会配置仓库的也请查阅相关文档即可），并且文使用在本地构建来执行（需要提前配置 maven 环境，不会也请查阅相关文档即可）\n\n\n\n\n\n * 执行构建\n\n\n\n\n# 管理项目\n\n回到项目列表中，查看项目状态已经是运行中了\n\n\n\n * 项目控制台管理\n\n\n\n在项目控制台中我们可以查看到在执行项目脚本中产生的日志信息，这样可以方便我们定位项目执行过程中的信息\n\n完美实现\n\n到这里我们已经把已经自定义项目部署在 Jpom 中了，并且可以在线查看项目状态，启动、停止、重启等操作，而且搭配上项目监控还可以实时掌握项目宕机情况\n\n相关文档：\n\n * DSL 项目接口探活监控报警\n * 监控项目 + 邮件报警通知\n\n\n# 如何管理项目日志\n\n目前已经将项目部署到 Jpom 中啦，并且可以很方便管理项目，但是不知道该如何管理项目日志呢？\n\n不要慌、Jpom 目前提供了两种方式来管理项目日志\n\n * 实时阅读\n * 日志阅读（搜索）\n\n\n# 实时阅读\n\nJpom 里面为项目文件中的文本文件提供了实时阅读功能，这样方便您在 Jpom 中实时查看您项目运行的日志信息\n\n默认并未开启文件阅读功能，需要配置文本文件授权（白名单）\n\n\n\n这里建议配置一些常用的文本文件后缀即可，比如：log、sh、html、yml等\n\n配置好后到项目文件夹找到您需要查阅的文件在文件名栏右键\n\n\n\n\n\n这样您就可以实时查看这个文件的信息了。\n\n\n# 日志阅读（搜索）\n\nJpom 里面为项目文件中的文本文件阅读搜索\n\n作用主要是用于日志文件较大时想查找指定关键词相关的日志信息\n\n\n\n\n\n\n\n\n\n\n# DSL 脚本说明\n\nDSL 介绍>>\n\n * 脚本里面至少需要实现的三件事：启动、停止、查状态，可选实现重启事件（默认重启流程是调用 stop 再调用 start）\n * 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n\n提供的示例里面将使用四个函数来实现：start、stop、status、restart\n\n再实际使用中可以随意发挥，不限于只是用来管理 Java 项目，您可以根据您业务需求还实现很多种效果，里面的细节这里不过多的说明，可以自由发挥（给您足够的空间）\n\n脚本里面支持的变量有：${PROJECT_ID}、${PROJECT_NAME}、${PROJECT_PATH}\n\n如果多个项目管理方式相同，推荐提前将脚本添加到脚本模版里面，这样可以多个项目重复使用奥（并非一个项目对应一个脚本模版）\n\n\n# 附件\n\n\n# 项目 pom.xml 内容\n\n> pom.xml 中依赖相关可以直接忽略，参考 build>plugins 相关即可\n\n<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>cn.keepbx</groupId>\n    <artifactId>springboot-test-jar2</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.7.1</version>\n    </parent>\n    <packaging>jar</packaging>\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>1.8</java.version>\n        <spring-boot.version>2.7.1</spring-boot.version>\n        <start-class>cn.keepbx.SpringBootApp</start-class>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupId>cn.jiangzeyin.fast-boot</groupId>\n            <artifactId>common-boot</artifactId>\n            <version>[2.3.0,2.3.99]</version>\n        </dependency>\n\n\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>${java.version}</source>\n                    <target>${java.version}</target>\n                    <encoding>${project.build.sourceEncoding}</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.3.0</version>\n                <configuration>\n                    <archive>\n                        <addMavenDescriptor>true</addMavenDescriptor>\n                        <manifest>\n                            <mainClass>${start-class}</mainClass>\n                            \x3c!-- 是否指定项目classpath下的依赖 --\x3e\n                            <addClasspath>true</addClasspath>\n                            \x3c!-- 指定依赖的时候声明前缀 --\x3e\n                            <classpathPrefix>./</classpathPrefix>\n                        </manifest>\n                    </archive>\n                    <excludes>\n                        <exclude>**/logback**.xml</exclude>\n                        <exclude>**/application**.yml</exclude>\n                    </excludes>\n\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <fork>true</fork>\n                    <mainClass>${start-class}</mainClass>\n                    <jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <version>3.4.2</version>\n                <configuration>\n                    <encoding>${project.build.sourceEncoding}</encoding>\n                    <descriptors>\n                        <descriptor>${basedir}/src/main/assembly/release.xml</descriptor>\n                    </descriptors>\n                    \x3c!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactId以示区分 --\x3e\n                    <finalName>${project.artifactId}-${project.version}</finalName>\n                    \x3c!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 --\x3e\n                    <outputDirectory>target</outputDirectory>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>make-assembly</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>single</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n\n * * \n * * \n\n\n# assembly/release.xml 内容\n\n<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0"\n          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd">\n    <id>release</id>\n    <formats>\n        <format>dir</format>\n        <format>tar.gz</format>\n    </formats>\n    <includeBaseDirectory>false</includeBaseDirectory>\n    <fileSets>\n        <fileSet>\n            <directory>./src/main/bin</directory>\n            <outputDirectory>bin</outputDirectory>\n            <includes>\n                <include>**/*</include>\n            </includes>\n            <fileMode>0755</fileMode>\n        </fileSet>\n\n    </fileSets>\n    <files>\n        <file>\n            <source>./src/main/resources/logback-release.xml</source>\n            <outputDirectory>/conf</outputDirectory>\n            <destName>logback.xml</destName>\n        </file>\n        <file>\n            <source>./src/main/resources/application.yml</source>\n            <outputDirectory>/conf</outputDirectory>\n            <destName>application.yml</destName>\n        </file>\n    </files>\n\n    <dependencySets>\n        <dependencySet>\n            <outputDirectory>lib</outputDirectory>\n            <includes>\n                <include>cn.keepbx:springboot-test-jar2</include>\n            </includes>\n        </dependencySet>\n    </dependencySets>\n</assembly>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# command.sh 内容\n\n# description: Auto-starts boot\n\ncase "$(uname)" in\nLinux)\n  bin_abs_path=$(readlink -f $(dirname $0))\n  ;;\n*)\n  bin_abs_path=$(\n    cd $(dirname $0)\n    pwd\n  )\n  ;;\nesac\n\ncygwin=false\nlinux=false\ncase "$(uname)" in\nCYGWIN*)\n  cygwin=true\n  ;;\nLinux*)\n  linux=true\n  ;;\nesac\n\nbase=${bin_abs_path}/..\n\nconf_path="${base}/conf"\nLib="${base}/lib/"\nLogPath="${base}/logs/"\nLog="${LogPath}/stdout.log"\nlogback_configurationFile="${conf_path}/logback.xml"\napplication_conf="${conf_path}/application.yml"\n\nPID_TAG="test-jar-application-${PROJECT_ID}"\nAllLog="${LogPath}/application.log"\n\n#-Xms1g -Xmx2g\nif [[ -z "${USR_JVM_SIZE}" ]]; then\n  USR_JVM_SIZE="-Xms256m -Xmx1024m"\nfi\n\nJVM_ARGS="-server ${USR_JVM_SIZE} -XX:+UseG1GC -Dfile.encoding=UTF-8"\nJVM_ARGS="${JVM_ARGS} -XX:MaxGCPauseMillis=250 -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true"\nJVM_ARGS="${JVM_ARGS} -Xss256k -XX:+AggressiveOpts -XX:-UseBiasedLocking -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$LogPath"\nJVM_ARGS="${JVM_ARGS} -XX:+UseFastAccessorMethods -XX:+PrintAdaptiveSizePolicy -XX:+PrintTenuringDistribution"\nJVM_ARGS="${JVM_ARGS} -Dlogging.config=$logback_configurationFile -Dspring.config.location=$application_conf"\nMAIN_ARGS="$*"\n\nWAIT_LOG="$2"\nRUN_JAR="${RUN_JAR}"\n\nfunction checkConfig() {\n  if [ ! -d "$LogPath" ]; then\n    mkdir -p "$LogPath"\n  fi\n  if [[ ! -f "$logback_configurationFile" ]] || [[ ! -f "$application_conf" ]]; then\n    echo "Cannot find $application_conf or $logback_configurationFile"\n    exit 1\n  fi\n  if [[ -z "${RUN_JAR}" ]]; then\n    RUN_JAR=$(ls -t "${Lib}" | grep \'.jar$\' | head -1)\n    # error\n    if [[ -z "${RUN_JAR}" ]]; then\n      echo "Jar not found"\n      exit 2\n    fi\n    echo "automatic running：${RUN_JAR}"\n  fi\n}\n\nfunction getPid() {\n  if $cygwin; then\n    JAVA_CMD="$JAVA_HOME\\bin\\java"\n    JAVA_CMD=$(cygpath --path --unix $JAVA_CMD)\n    JAVA_PID=$(ps | grep $JAVA_CMD | awk \'{print $1}\')\n  else\n    if $linux; then\n      JAVA_PID=$(ps -C java -f --width 1000 | grep "$PID_TAG" | grep -v grep | awk \'{print $2}\')\n    else\n      JAVA_PID=$(ps aux | grep "$PID_TAG" | grep -v grep | awk \'{print $2}\')\n    fi\n  fi\n  echo $JAVA_PID\n}\n\n# See how we were called.\nfunction start() {\n  echo $PID_TAG\n  checkConfig\n  if [ ! -f $Log ]; then\n    touch $Log\n  fi\n  # check running\n  pid=$(getPid)\n  #echo "$pid"\n  if [ "$pid" != "" ]; then\n    echo "Running, please do not run repeatedly:$pid"\n    exit 1\n  fi\n  # start\n  nohup java -Dappliction=${PID_TAG} ${JVM_ARGS} -jar ${Lib}${RUN_JAR} ${MAIN_ARGS} >$Log 2>&1 &\n  if [[ ${WAIT_LOG} == "tail" ]]; then\n    sleep 2s\n    tail -f $AllLog\n  fi\n  echo "auto exit 0"\n  sleep 1s\n  exit 0\n}\n\nfunction stop() {\n  pid=$(getPid)\n  if [ "$pid" != "" ]; then\n    echo -n "boot ( pid $pid) is running"\n    echo\n    echo -n $"Shutting down boot: "\n    kill $pid\n\n    LOOPS=0\n    while (true); do\n      pid=$(getPid)\n      if [ "$pid" == "" ]; then\n        echo "Stop and end, in $LOOPS seconds"\n        break\n      fi\n      let LOOPS=LOOPS+1\n      sleep 1\n    done\n  else\n    echo "boot is stopped"\n  fi\n}\n\nfunction status() {\n  pid=$(getPid)\n  #echo "$pid"\n  if [ "$pid" != "" ]; then\n    echo "running:$pid"\n  else\n    echo "boot is stopped"\n  fi\n}\n\nfunction usage() {\n  echo "Usage: $0 {start|stop|restart|status}"\n  RETVAL="2"\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\nstart)\n  start\n  ;;\nstop)\n  stop\n  ;;\nrestart)\n  stop\n  start\n  ;;\nstatus)\n  status\n  ;;\n*)\n  usage\n  ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n\n * * \n * * \n * * \n\n脚本的几种用法如下：\n\n * 后台启动项目：bash ./command.sh start\n * 查看项目状态：bash ./command.sh status\n * 停止项目：bash ./command.sh stop\n * 后台重启项目：bash ./command.sh restart\n * 启动项目并查看日志：bash ./command.sh start tail\n * 重启项目并查看日志：bash ./command.sh restart tail\n * 后台启动项目并传入参数：bash ./command.sh start --spring.profiles.active=pro --server.port=8080\n * 后台重启项目并传入参数：bash ./command.sh restart --spring.profiles.active=pro --server.port=8080',normalizedContent:'# 前言\n\njpom 在之前很长的一段时间都只支持管理 java 项目并且管理的项目方式也比较简单粗暴，不能管理一些多目录结构等复杂的项目。\n\n自从 jpom 2.8.6版本上线 dsl 模式项目后，经过大家的使用反馈在 2.8.6 ~ 2.9.18 20+个版本迭代后，现在 jpom 可以很灵活的实现自定义项目管理\n\n温馨提醒\n\n如果您现在已经安装 jpom 并且使用的非 2.9.18 版本，建议先更新到 2.9.18 版本后再使用，最新版本优化和修改了 dsl 相关功能\n\n本文主要使用一个典型的 java 多目录层级项目、并且自定义启动、停止、查询状态、重启流程脚本来讲解，并且本文也会提到在 jpom 中如何查看自定义项目的日志\n\n> 如果您还不了解 jpom 中的 dsl 模式是什么可以查看文档：dsl 介绍>>\n\n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. jpom 服务端（已经安装好、并且配置好了 maven 环境）\n 2. jpom 插件端（已经安装好）\n 3. 一个 java 项目仓库 并且已经有管理脚本\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 jpom 服务端的方式\n\n本文使用的项目案例是一个 springboot 项目\n\n 1. 项目采用胖 jar 的方式运行（您可以根据自己需求修改为 classpath 模式）\n 2. 项目使用 maven-assembly-plugin插件打包\n 3. 项目采用外置：application.yml、logback.xml 配置文件\n 4. 使用 g1gc 垃圾回收机制（具体请参考 ./bin/command.sh ）\n\n案例仓库地址：https://gitee.com/keepbx/jpom-demo-case/ -> springboot-test-jar2\n\n> 项目相关的配置文件会附到文章末尾，可以自取（copy）、或者进入仓库查看完整代码\n\n项目目录结构如下：\n\n.\n├── conf    \t\t        => 配置文件目录\n├──── application.yml \t\t=> springboot 核心配置文件\n├──── logback.xml \t\t    => logback 日志配置文件\n├── bin      \t\t        => 项目管理命令目录\n├──── command.sh \t\t    => 目管理命令文件\n├── logs   \t\t            => 项目日志目录\n├──── stdout.log \t\t    => 项目控制台日志文件\n├──── application.log \t\t=> 项目 logback 日志文件\n├── lib      \t\t        => 项目运行 jar 目录\n└──── xxxxx.jar      \t\t=> 项目运行 胖 jar 文件\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 使用指南\n\n本文默认您已经安装 jpom、并且已经配置好节点信息了。还不会的请参考其他相关文档\n\n\n# 创建项目\n\n\n\n\n\n温馨提醒\n\n这时在项目列表中运行状态出现感叹号，不要慌忽略即可。因为现在项目文件夹还是空的没有办法正常执行脚本\n\ndsl 配置内容\n\n# scriptid 可以是项目路径下脚本文件名或者系统中的脚本模版id\ndescription: 测试\nrun:\n  start:\n    scriptid: ./bin/command.sh\n    scriptargs: start exit --spring.profiles.active=test\n    scriptenv:\n      "usr_jvm_size": -xms256m -xmx1024m\n  status:\n    scriptid: ./bin/command.sh\n    scriptargs: status\n  stop:\n    scriptid: ./bin/command.sh\n    scriptargs: stop\n  restart:\n    scriptid: ./bin/command.sh\n    scriptargs: restart exit --spring.profiles.active=test\n    scriptenv:\n      "usr_jvm_size": -xms256m -xmx1024m\nfile:\n# 备份文件保留个数\n#  backupcount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupsuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autobacktofile: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n\n# 配置构建\n\n这里我们主要是演示和介绍使用 jpom 在线构建来发布项目\n\n本文自动忽略配置仓库环节，直接上手配置构建（不会配置仓库的也请查阅相关文档即可），并且文使用在本地构建来执行（需要提前配置 maven 环境，不会也请查阅相关文档即可）\n\n\n\n\n\n * 执行构建\n\n\n\n\n# 管理项目\n\n回到项目列表中，查看项目状态已经是运行中了\n\n\n\n * 项目控制台管理\n\n\n\n在项目控制台中我们可以查看到在执行项目脚本中产生的日志信息，这样可以方便我们定位项目执行过程中的信息\n\n完美实现\n\n到这里我们已经把已经自定义项目部署在 jpom 中了，并且可以在线查看项目状态，启动、停止、重启等操作，而且搭配上项目监控还可以实时掌握项目宕机情况\n\n相关文档：\n\n * dsl 项目接口探活监控报警\n * 监控项目 + 邮件报警通知\n\n\n# 如何管理项目日志\n\n目前已经将项目部署到 jpom 中啦，并且可以很方便管理项目，但是不知道该如何管理项目日志呢？\n\n不要慌、jpom 目前提供了两种方式来管理项目日志\n\n * 实时阅读\n * 日志阅读（搜索）\n\n\n# 实时阅读\n\njpom 里面为项目文件中的文本文件提供了实时阅读功能，这样方便您在 jpom 中实时查看您项目运行的日志信息\n\n默认并未开启文件阅读功能，需要配置文本文件授权（白名单）\n\n\n\n这里建议配置一些常用的文本文件后缀即可，比如：log、sh、html、yml等\n\n配置好后到项目文件夹找到您需要查阅的文件在文件名栏右键\n\n\n\n\n\n这样您就可以实时查看这个文件的信息了。\n\n\n# 日志阅读（搜索）\n\njpom 里面为项目文件中的文本文件阅读搜索\n\n作用主要是用于日志文件较大时想查找指定关键词相关的日志信息\n\n\n\n\n\n\n\n\n\n\n# dsl 脚本说明\n\ndsl 介绍>>\n\n * 脚本里面至少需要实现的三件事：启动、停止、查状态，可选实现重启事件（默认重启流程是调用 stop 再调用 start）\n * 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n\n提供的示例里面将使用四个函数来实现：start、stop、status、restart\n\n再实际使用中可以随意发挥，不限于只是用来管理 java 项目，您可以根据您业务需求还实现很多种效果，里面的细节这里不过多的说明，可以自由发挥（给您足够的空间）\n\n脚本里面支持的变量有：${project_id}、${project_name}、${project_path}\n\n如果多个项目管理方式相同，推荐提前将脚本添加到脚本模版里面，这样可以多个项目重复使用奥（并非一个项目对应一个脚本模版）\n\n\n# 附件\n\n\n# 项目 pom.xml 内容\n\n> pom.xml 中依赖相关可以直接忽略，参考 build>plugins 相关即可\n\n<?xml version="1.0" encoding="utf-8"?>\n<project xmlns="http://maven.apache.org/pom/4.0.0"\n         xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n         xsi:schemalocation="http://maven.apache.org/pom/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelversion>4.0.0</modelversion>\n\n    <groupid>cn.keepbx</groupid>\n    <artifactid>springboot-test-jar2</artifactid>\n    <version>0.0.1-snapshot</version>\n\n    <parent>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-parent</artifactid>\n        <version>2.7.1</version>\n    </parent>\n    <packaging>jar</packaging>\n    <properties>\n        <project.build.sourceencoding>utf-8</project.build.sourceencoding>\n        <project.reporting.outputencoding>utf-8</project.reporting.outputencoding>\n        <java.version>1.8</java.version>\n        <spring-boot.version>2.7.1</spring-boot.version>\n        <start-class>cn.keepbx.springbootapp</start-class>\n    </properties>\n    <dependencies>\n        <dependency>\n            <groupid>cn.jiangzeyin.fast-boot</groupid>\n            <artifactid>common-boot</artifactid>\n            <version>[2.3.0,2.3.99]</version>\n        </dependency>\n\n\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupid>org.apache.maven.plugins</groupid>\n                <artifactid>maven-compiler-plugin</artifactid>\n                <configuration>\n                    <source>${java.version}</source>\n                    <target>${java.version}</target>\n                    <encoding>${project.build.sourceencoding}</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupid>org.apache.maven.plugins</groupid>\n                <artifactid>maven-jar-plugin</artifactid>\n                <version>3.3.0</version>\n                <configuration>\n                    <archive>\n                        <addmavendescriptor>true</addmavendescriptor>\n                        <manifest>\n                            <mainclass>${start-class}</mainclass>\n                            \x3c!-- 是否指定项目classpath下的依赖 --\x3e\n                            <addclasspath>true</addclasspath>\n                            \x3c!-- 指定依赖的时候声明前缀 --\x3e\n                            <classpathprefix>./</classpathprefix>\n                        </manifest>\n                    </archive>\n                    <excludes>\n                        <exclude>**/logback**.xml</exclude>\n                        <exclude>**/application**.yml</exclude>\n                    </excludes>\n\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupid>org.springframework.boot</groupid>\n                <artifactid>spring-boot-maven-plugin</artifactid>\n                <configuration>\n                    <fork>true</fork>\n                    <mainclass>${start-class}</mainclass>\n                    <jvmarguments>-dfile.encoding=utf-8</jvmarguments>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupid>org.apache.maven.plugins</groupid>\n                <artifactid>maven-assembly-plugin</artifactid>\n                <version>3.4.2</version>\n                <configuration>\n                    <encoding>${project.build.sourceencoding}</encoding>\n                    <descriptors>\n                        <descriptor>${basedir}/src/main/assembly/release.xml</descriptor>\n                    </descriptors>\n                    \x3c!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactid以示区分 --\x3e\n                    <finalname>${project.artifactid}-${project.version}</finalname>\n                    \x3c!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 --\x3e\n                    <outputdirectory>target</outputdirectory>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>make-assembly</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>single</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n\n * * \n * * \n\n\n# assembly/release.xml 内容\n\n<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0"\n          xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n          xsi:schemalocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.0 http://maven.apache.org/xsd/assembly-1.1.0.xsd">\n    <id>release</id>\n    <formats>\n        <format>dir</format>\n        <format>tar.gz</format>\n    </formats>\n    <includebasedirectory>false</includebasedirectory>\n    <filesets>\n        <fileset>\n            <directory>./src/main/bin</directory>\n            <outputdirectory>bin</outputdirectory>\n            <includes>\n                <include>**/*</include>\n            </includes>\n            <filemode>0755</filemode>\n        </fileset>\n\n    </filesets>\n    <files>\n        <file>\n            <source>./src/main/resources/logback-release.xml</source>\n            <outputdirectory>/conf</outputdirectory>\n            <destname>logback.xml</destname>\n        </file>\n        <file>\n            <source>./src/main/resources/application.yml</source>\n            <outputdirectory>/conf</outputdirectory>\n            <destname>application.yml</destname>\n        </file>\n    </files>\n\n    <dependencysets>\n        <dependencyset>\n            <outputdirectory>lib</outputdirectory>\n            <includes>\n                <include>cn.keepbx:springboot-test-jar2</include>\n            </includes>\n        </dependencyset>\n    </dependencysets>\n</assembly>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# command.sh 内容\n\n# description: auto-starts boot\n\ncase "$(uname)" in\nlinux)\n  bin_abs_path=$(readlink -f $(dirname $0))\n  ;;\n*)\n  bin_abs_path=$(\n    cd $(dirname $0)\n    pwd\n  )\n  ;;\nesac\n\ncygwin=false\nlinux=false\ncase "$(uname)" in\ncygwin*)\n  cygwin=true\n  ;;\nlinux*)\n  linux=true\n  ;;\nesac\n\nbase=${bin_abs_path}/..\n\nconf_path="${base}/conf"\nlib="${base}/lib/"\nlogpath="${base}/logs/"\nlog="${logpath}/stdout.log"\nlogback_configurationfile="${conf_path}/logback.xml"\napplication_conf="${conf_path}/application.yml"\n\npid_tag="test-jar-application-${project_id}"\nalllog="${logpath}/application.log"\n\n#-xms1g -xmx2g\nif [[ -z "${usr_jvm_size}" ]]; then\n  usr_jvm_size="-xms256m -xmx1024m"\nfi\n\njvm_args="-server ${usr_jvm_size} -xx:+useg1gc -dfile.encoding=utf-8"\njvm_args="${jvm_args} -xx:maxgcpausemillis=250 -xx:+usegcoverheadlimit -xx:+explicitgcinvokesconcurrent -djava.awt.headless=true -djava.net.preferipv4stack=true"\njvm_args="${jvm_args} -xss256k -xx:+aggressiveopts -xx:-usebiasedlocking -xx:-omitstacktraceinfastthrow -xx:+heapdumponoutofmemoryerror -xx:heapdumppath=$logpath"\njvm_args="${jvm_args} -xx:+usefastaccessormethods -xx:+printadaptivesizepolicy -xx:+printtenuringdistribution"\njvm_args="${jvm_args} -dlogging.config=$logback_configurationfile -dspring.config.location=$application_conf"\nmain_args="$*"\n\nwait_log="$2"\nrun_jar="${run_jar}"\n\nfunction checkconfig() {\n  if [ ! -d "$logpath" ]; then\n    mkdir -p "$logpath"\n  fi\n  if [[ ! -f "$logback_configurationfile" ]] || [[ ! -f "$application_conf" ]]; then\n    echo "cannot find $application_conf or $logback_configurationfile"\n    exit 1\n  fi\n  if [[ -z "${run_jar}" ]]; then\n    run_jar=$(ls -t "${lib}" | grep \'.jar$\' | head -1)\n    # error\n    if [[ -z "${run_jar}" ]]; then\n      echo "jar not found"\n      exit 2\n    fi\n    echo "automatic running：${run_jar}"\n  fi\n}\n\nfunction getpid() {\n  if $cygwin; then\n    java_cmd="$java_home\\bin\\java"\n    java_cmd=$(cygpath --path --unix $java_cmd)\n    java_pid=$(ps | grep $java_cmd | awk \'{print $1}\')\n  else\n    if $linux; then\n      java_pid=$(ps -c java -f --width 1000 | grep "$pid_tag" | grep -v grep | awk \'{print $2}\')\n    else\n      java_pid=$(ps aux | grep "$pid_tag" | grep -v grep | awk \'{print $2}\')\n    fi\n  fi\n  echo $java_pid\n}\n\n# see how we were called.\nfunction start() {\n  echo $pid_tag\n  checkconfig\n  if [ ! -f $log ]; then\n    touch $log\n  fi\n  # check running\n  pid=$(getpid)\n  #echo "$pid"\n  if [ "$pid" != "" ]; then\n    echo "running, please do not run repeatedly:$pid"\n    exit 1\n  fi\n  # start\n  nohup java -dappliction=${pid_tag} ${jvm_args} -jar ${lib}${run_jar} ${main_args} >$log 2>&1 &\n  if [[ ${wait_log} == "tail" ]]; then\n    sleep 2s\n    tail -f $alllog\n  fi\n  echo "auto exit 0"\n  sleep 1s\n  exit 0\n}\n\nfunction stop() {\n  pid=$(getpid)\n  if [ "$pid" != "" ]; then\n    echo -n "boot ( pid $pid) is running"\n    echo\n    echo -n $"shutting down boot: "\n    kill $pid\n\n    loops=0\n    while (true); do\n      pid=$(getpid)\n      if [ "$pid" == "" ]; then\n        echo "stop and end, in $loops seconds"\n        break\n      fi\n      let loops=loops+1\n      sleep 1\n    done\n  else\n    echo "boot is stopped"\n  fi\n}\n\nfunction status() {\n  pid=$(getpid)\n  #echo "$pid"\n  if [ "$pid" != "" ]; then\n    echo "running:$pid"\n  else\n    echo "boot is stopped"\n  fi\n}\n\nfunction usage() {\n  echo "usage: $0 {start|stop|restart|status}"\n  retval="2"\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\nstart)\n  start\n  ;;\nstop)\n  stop\n  ;;\nrestart)\n  stop\n  start\n  ;;\nstatus)\n  status\n  ;;\n*)\n  usage\n  ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n\n * * \n * * \n * * \n\n脚本的几种用法如下：\n\n * 后台启动项目：bash ./command.sh start\n * 查看项目状态：bash ./command.sh status\n * 停止项目：bash ./command.sh stop\n * 后台重启项目：bash ./command.sh restart\n * 启动项目并查看日志：bash ./command.sh start tail\n * 重启项目并查看日志：bash ./command.sh restart tail\n * 后台启动项目并传入参数：bash ./command.sh start --spring.profiles.active=pro --server.port=8080\n * 后台重启项目并传入参数：bash ./command.sh restart --spring.profiles.active=pro --server.port=8080',charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"使用 gradle 本地构建打包项目并发布到节点",frontmatter:{title:"使用 gradle 本地构建打包项目并发布到节点",date:"2022-08-08T18:57:15.000Z",permalink:"/pages/practice/build-gradle-node-release/",categories:["docs","实践案例","在线构建"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/0110.%E4%BD%BF%E7%94%A8%20gradle%20%E6%9C%AC%E5%9C%B0%E6%9E%84%E5%BB%BA%E6%89%93%E5%8C%85%E9%A1%B9%E7%9B%AE%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0%E8%8A%82%E7%82%B9.html",relativePath:"实践案例/010.在线构建/0110.使用 gradle 本地构建打包项目并发布到节点.md",key:"v-e4b62408",path:"/pages/practice/build-gradle-node-release/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:152},{level:2,title:"安装 gradle",slug:"安装-gradle",normalizedTitle:"安装 gradle",charIndex:24},{level:3,title:"下载 gradle 并解压",slug:"下载-gradle-并解压",normalizedTitle:"下载 gradle 并解压",charIndex:325},{level:3,title:"配置 gradle 环境变量",slug:"配置-gradle-环境变量",normalizedTitle:"配置 gradle 环境变量",charIndex:624},{level:3,title:"重启 Jpom 服务端",slug:"重启-jpom-服务端",normalizedTitle:"重启 jpom 服务端",charIndex:808},{level:2,title:"配置 gradle 项目仓库",slug:"配置-gradle-项目仓库",normalizedTitle:"配置 gradle 项目仓库",charIndex:892},{level:2,title:"配置节点项目",slug:"配置节点项目",normalizedTitle:"配置节点项目",charIndex:991},{level:2,title:"配置本地构建",slug:"配置本地构建",normalizedTitle:"配置本地构建",charIndex:1036},{level:3,title:"配置构建信息",slug:"配置构建信息",normalizedTitle:"配置构建信息",charIndex:1047},{level:4,title:"构建命令",slug:"构建命令",normalizedTitle:"构建命令",charIndex:1061},{level:4,title:"产物目录",slug:"产物目录",normalizedTitle:"产物目录",charIndex:1256},{level:3,title:"执行构建",slug:"执行构建",normalizedTitle:"执行构建",charIndex:1403},{level:2,title:"查看项目状态",slug:"查看项目状态",normalizedTitle:"查看项目状态",charIndex:1542},{level:3,title:"项目控制台",slug:"项目控制台",normalizedTitle:"项目控制台",charIndex:1555},{level:2,title:"完美使用",slug:"完美使用",normalizedTitle:"完美使用",charIndex:1569}],headersStr:"前言 需要准备的环境 安装 gradle 下载 gradle 并解压 配置 gradle 环境变量 重启 Jpom 服务端 配置 gradle 项目仓库 配置节点项目 配置本地构建 配置构建信息 构建命令 产物目录 执行构建 查看项目状态 项目控制台 完美使用",content:'# 前言\n\n> 本文主要介绍： 如何从在服务器中安装 gradle、使用 Jpom 构建发布项目到节点中\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 Jpom 服务端、Jpom 插件端(需要发布到的节点服务器)\n\n\n# 需要准备的环境\n\n> 环境准备请自行查阅 Jpom 安装相关文档准备奥\n\n 1. Jpom 服务端\n 2. Jpom 插件端(并且配置到 Jpom 服务端中)\n 3. 一个 gradle 项目\n\n\n# 安装 gradle\n\n注意：本地构建是在服务端所在到服务器中执行命令,所以需要将 gradle 安装到 Jpom 服务端所在到服务器中\n\n\n# 下载 gradle 并解压\n\nyum install unzip -y\nmkdir -p /usr/gradle/ && cd /usr/gradle/\nwget -O /usr/gradle/gradle-7.5.1-bin.zip https://downloads.gradle-dn.com/distributions/gradle-7.5.1-bin.zip\nunzip -d /usr/gradle/ -o /usr/gradle/gradle-7.5.1-bin.zip\nrm -f /usr/gradle/gradle-7.5.1-bin.zip\n\n\n1\n2\n3\n4\n5\n\n\n\n# 配置 gradle 环境变量\n\nvim /etc/profile\n\n\n1\n\n\n在文件最后添加如下代码\n\nexport GRADLE_HOME=/usr/gradle/gradle-7.5.1/\nexport PATH=$PATH:$GRADLE_HOME/bin\n\n\n1\n2\n\n\nsource /etc/profile && gradle -v\n\n\n1\n\n\n\n\n\n# 重启 Jpom 服务端\n\n因为环境变量已经变化，需要重启来让环境变量在 Jpom 中生效\n\nbash /xxxx/Server.sh restart\n\n\n1\n\n\n\n# 配置 gradle 项目仓库\n\n这里我们使用 Jpom 案例代码是测试，实际中请配置为自己业务仓库\n\nhttps://gitee.com/keepbx/Jpom-demo-case\n\n\n\n\n\n\n# 配置节点项目\n\n文档中已经默认您已经安装好节点，并配置到服务端中\n\n\n\n\n\n\n\n\n\n\n# 配置本地构建\n\n\n# 配置构建信息\n\n\n\n\n\n# 构建命令\n\n因为该项目在本仓库的 test-gradle 目录,所以需要 cd 到对应目录,如果项目在您仓库根路径则不需要 cd\n\n相关执行命令仅供参考,实际中需要根据您到业务来配置相关构建命令\n\ncd test-gradle && gradle wrapper\ncd test-gradle && ./gradlew clean && ./gradlew build\n\n\n1\n2\n\n\n# 产物目录\n\n因为该项目在本仓库的 test-gradle 目录,所以增加一层 test-gradle,如果项目在您仓库根路径则：/build/libs/xxxx.jar\n\ntest-gradle/build/libs/test-gradle-1.0-SNAPSHOT.jar\n\n\n1\n\n\n\n# 执行构建\n\n\n\n\n\n等待执行构建结果（初次构建需要下载相关依赖，可能需要较长时间来执行）\n\n\n\n\n\n当看类似关键字：发布项目包成功：{"code":200,"msg":"上传成功并重启：running:11087,"} 表示构建成功并且发布到对应节点项目中并且重启成功\n\n\n# 查看项目状态\n\n\n\n\n# 项目控制台\n\n\n\n\n\n\n# 完美使用\n\n这样就实现使用 Jpom 构建 gradle 项目',normalizedContent:'# 前言\n\n> 本文主要介绍： 如何从在服务器中安装 gradle、使用 jpom 构建发布项目到节点中\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 jpom 服务端、jpom 插件端(需要发布到的节点服务器)\n\n\n# 需要准备的环境\n\n> 环境准备请自行查阅 jpom 安装相关文档准备奥\n\n 1. jpom 服务端\n 2. jpom 插件端(并且配置到 jpom 服务端中)\n 3. 一个 gradle 项目\n\n\n# 安装 gradle\n\n注意：本地构建是在服务端所在到服务器中执行命令,所以需要将 gradle 安装到 jpom 服务端所在到服务器中\n\n\n# 下载 gradle 并解压\n\nyum install unzip -y\nmkdir -p /usr/gradle/ && cd /usr/gradle/\nwget -o /usr/gradle/gradle-7.5.1-bin.zip https://downloads.gradle-dn.com/distributions/gradle-7.5.1-bin.zip\nunzip -d /usr/gradle/ -o /usr/gradle/gradle-7.5.1-bin.zip\nrm -f /usr/gradle/gradle-7.5.1-bin.zip\n\n\n1\n2\n3\n4\n5\n\n\n\n# 配置 gradle 环境变量\n\nvim /etc/profile\n\n\n1\n\n\n在文件最后添加如下代码\n\nexport gradle_home=/usr/gradle/gradle-7.5.1/\nexport path=$path:$gradle_home/bin\n\n\n1\n2\n\n\nsource /etc/profile && gradle -v\n\n\n1\n\n\n\n\n\n# 重启 jpom 服务端\n\n因为环境变量已经变化，需要重启来让环境变量在 jpom 中生效\n\nbash /xxxx/server.sh restart\n\n\n1\n\n\n\n# 配置 gradle 项目仓库\n\n这里我们使用 jpom 案例代码是测试，实际中请配置为自己业务仓库\n\nhttps://gitee.com/keepbx/jpom-demo-case\n\n\n\n\n\n\n# 配置节点项目\n\n文档中已经默认您已经安装好节点，并配置到服务端中\n\n\n\n\n\n\n\n\n\n\n# 配置本地构建\n\n\n# 配置构建信息\n\n\n\n\n\n# 构建命令\n\n因为该项目在本仓库的 test-gradle 目录,所以需要 cd 到对应目录,如果项目在您仓库根路径则不需要 cd\n\n相关执行命令仅供参考,实际中需要根据您到业务来配置相关构建命令\n\ncd test-gradle && gradle wrapper\ncd test-gradle && ./gradlew clean && ./gradlew build\n\n\n1\n2\n\n\n# 产物目录\n\n因为该项目在本仓库的 test-gradle 目录,所以增加一层 test-gradle,如果项目在您仓库根路径则：/build/libs/xxxx.jar\n\ntest-gradle/build/libs/test-gradle-1.0-snapshot.jar\n\n\n1\n\n\n\n# 执行构建\n\n\n\n\n\n等待执行构建结果（初次构建需要下载相关依赖，可能需要较长时间来执行）\n\n\n\n\n\n当看类似关键字：发布项目包成功：{"code":200,"msg":"上传成功并重启：running:11087,"} 表示构建成功并且发布到对应节点项目中并且重启成功\n\n\n# 查看项目状态\n\n\n\n\n# 项目控制台\n\n\n\n\n\n\n# 完美使用\n\n这样就实现使用 jpom 构建 gradle 项目',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"GitLab 提交代码后自动执行构建",frontmatter:{title:"GitLab 提交代码后自动执行构建",date:"2022-12-04T17:24:33.000Z",permalink:"/pages/practice/gitlab-webhook-trigger-build/",categories:["docs","实践案例","在线构建"],tags:["GitLab","构建"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/0111.GitLab%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81%E5%90%8E%E8%87%AA%E5%8A%A8%E6%89%A7%E8%A1%8C%E6%9E%84%E5%BB%BA.html",relativePath:"实践案例/010.在线构建/0111.GitLab提交代码后自动执行构建.md",key:"v-48115274",path:"/pages/practice/gitlab-webhook-trigger-build/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:145},{level:2,title:"生成触发器",slug:"生成触发器",normalizedTitle:"生成触发器",charIndex:239},{level:2,title:"给 GitLab 仓库配置 Webhook",slug:"给-gitlab-仓库配置-webhook",normalizedTitle:"给 gitlab 仓库配置 webhook",charIndex:306},{level:2,title:"如何避免重复构建",slug:"如何避免重复构建",normalizedTitle:"如何避免重复构建",charIndex:528}],headersStr:"前言 需要准备的环境 生成触发器 给 GitLab 仓库配置 Webhook 如何避免重复构建",content:"# 前言\n\n> 本文主要介绍： 如何使用 Jpom 中的构建触发器实现在 GitLab 仓库提交代码后自动触发构建\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 Jpom 服务端并且配置好仓库和构建\n\n\n# 需要准备的环境\n\nGitLab 以及 Jpom 服务端。\n\n重要：请确保 Jpom 服务端和 GitLab 服务器之间可以相互访问通信，以排除因为网络不通导致的无法完成自动构建。\n\n\n# 生成触发器\n\n\n\n\n\n地址示例：\n\nhttps://xxx.xxxx.cn/api/build2/xxx/xxxx\n\n\n1\n\n\n\n# 给 GitLab 仓库配置 Webhook\n\n鼠标移到左侧栏的【Settings】上，然后选择【Webhooks】。\n\n在【URL】中填写 Jpom 的 webhook 地址，Trigger 是什么情况下触发构建，选择【Push events】则会每次有新的推送时自动构建。\n\n\n\n注意：Jpom 中的 webhook 目前都是免密，不用填写密码或者签名\n\n这样配置后您在这个仓库提交代码后将自动触发 Jpom 中的此构建（执行构建）\n\n\n# 如何避免重复构建\n\n目前 Jpom 中的触发器并未解析触发事件信息，相当于只要请求了该接口就将执行构建。\n\n问： 那么该如何避免提交非构建分支时候触发构建呢？\n\n答： 开启差异构建，差异构建是指构建时候是否判断仓库代码有变动，如果没有变动则不执行构建\n\n",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何使用 jpom 中的构建触发器实现在 gitlab 仓库提交代码后自动触发构建\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 jpom 服务端并且配置好仓库和构建\n\n\n# 需要准备的环境\n\ngitlab 以及 jpom 服务端。\n\n重要：请确保 jpom 服务端和 gitlab 服务器之间可以相互访问通信，以排除因为网络不通导致的无法完成自动构建。\n\n\n# 生成触发器\n\n\n\n\n\n地址示例：\n\nhttps://xxx.xxxx.cn/api/build2/xxx/xxxx\n\n\n1\n\n\n\n# 给 gitlab 仓库配置 webhook\n\n鼠标移到左侧栏的【settings】上，然后选择【webhooks】。\n\n在【url】中填写 jpom 的 webhook 地址，trigger 是什么情况下触发构建，选择【push events】则会每次有新的推送时自动构建。\n\n\n\n注意：jpom 中的 webhook 目前都是免密，不用填写密码或者签名\n\n这样配置后您在这个仓库提交代码后将自动触发 jpom 中的此构建（执行构建）\n\n\n# 如何避免重复构建\n\n目前 jpom 中的触发器并未解析触发事件信息，相当于只要请求了该接口就将执行构建。\n\n问： 那么该如何避免提交非构建分支时候触发构建呢？\n\n答： 开启差异构建，差异构建是指构建时候是否判断仓库代码有变动，如果没有变动则不执行构建\n\n",charsets:{cjk:!0},lastUpdated:"2023/12/20, 06:50:33",lastUpdatedTimestamp:1703055033e3},{title:"构建状态统一通知推送",frontmatter:{title:"构建状态统一通知推送",date:"2023-09-19T16:09:57.000Z",permalink:"/pages/practice/e33af5/",categories:["docs","实践案例","在线构建"],author:{name:"Caiqy",link:"https://github.com/caiqy"},tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/0112.%E6%9E%84%E5%BB%BA%E7%8A%B6%E6%80%81%E7%BB%9F%E4%B8%80%E9%80%9A%E7%9F%A5%E6%8E%A8%E9%80%81.html",relativePath:"实践案例/010.在线构建/0112.构建状态统一通知推送.md",key:"v-506e45d4",path:"/pages/practice/e33af5/",headers:[{level:2,title:"脚本功能",slug:"脚本功能",normalizedTitle:"脚本功能",charIndex:13},{level:2,title:"配置说明",slug:"配置说明",normalizedTitle:"配置说明",charIndex:84},{level:2,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:419},{level:2,title:"使用流程",slug:"使用流程",normalizedTitle:"使用流程",charIndex:695},{level:3,title:"1. 创建脚本",slug:"_1-创建脚本",normalizedTitle:"1. 创建脚本",charIndex:704},{level:3,title:"2. 填写参数",slug:"_2-填写参数",normalizedTitle:"2. 填写参数",charIndex:766},{level:3,title:"3. 生成触发器",slug:"_3-生成触发器",normalizedTitle:"3. 生成触发器",charIndex:825},{level:3,title:"4. 在构建和监控中填写WebHooks",slug:"_4-在构建和监控中填写webhooks",normalizedTitle:"4. 在构建和监控中填写webhooks",charIndex:866},{level:3,title:"5. 效果图",slug:"_5-效果图",normalizedTitle:"5. 效果图",charIndex:893},{level:2,title:"脚本内容",slug:"脚本内容",normalizedTitle:"脚本内容",charIndex:739}],headersStr:"脚本功能 配置说明 注意事项 使用流程 1. 创建脚本 2. 填写参数 3. 生成触发器 4. 在构建和监控中填写WebHooks 5. 效果图 脚本内容",content:'# 统一通知推送\n\n\n# 脚本功能\n\n实现了构建通知和监控告警功能，配置完成后，钉钉和微信将收到项目构建开始、成功、失败的通知，以及项目监控的异常、恢复通知。\n\n\n# 配置说明\n\n * jpom_url：Jpom的地址，在通知内容中可以点击链接跳转到Jpom\n * dingtalk_token：钉钉群自定义机器人webhook链接中的token\n * wxpusher_apptoken：WxPusher平台创建应用时生成的appToken\n * wxpusher_topic_id：WxPusher平台创建主题时生成的topicId\n * wxpusher_watch_titles：可选内容：构建通知、监控告警，wxpusher关注的事件标题，为避免过度打扰个人微信，wxpusher只推送关注的内容\n * wxpusher_watch_status：可选内容：开始、成功、失败、异常、恢复，wxpusher关注的事件状态\n\n\n# 注意事项\n\n 1. 钉钉群会推送所有内容，微信公众号（WxPusher）仅推送关注的内容\n 2. wxpusher_watch_titles和wxpusher_watch_status只要有一个匹配就会进行推送\n 3. 如果不需要推送到微信，将watch_title和watch_status置空即可\n 4. 注意脚本触发器地址在Jpom所属网络中能否访问，可以通过脚本执行日志查看触发情况\n 5. 钉钉群添加自定义机器人的方式请自行搜索，WxPusher注册链接：WxPusher\n 6. 钉钉机器人不要开启加签，添加自定义关键词：Jpom\n\n\n# 使用流程\n\n\n# 1. 创建脚本\n\n在【脚本管理】⇒【脚本列表】中【新增脚本】，复制下面脚本内容到Script内容即可，示例图：\n\n\n\n\n# 2. 填写参数\n\n按照配置说明在脚本中填写参数后保存脚本，注意：不是默认参数那里添加参数，是直接修改脚本内容\n\n\n# 3. 生成触发器\n\n按图中所示点击按钮生成触发器并复制触发器链接\n\n\n\n\n\n\n# 4. 在构建和监控中填写WebHooks\n\n\n\n\n# 5. 效果图\n\n\n\n\n\n\n\n\n\n\n# 脚本内容\n\n#!/bin/bash\n######################################自定义参数区域#######################################\n# Jpom链接\njpom_url="http://sample.com:2122"\n\n# 钉钉webhook的token，不要打开加签，通过关键词或IP地址过验证\ndingtalk_token="......"\n\n# wxpusher的appToken\nwxpusher_apptoken="......"\n# wxpusher的主题id\nwxpusher_topic_id="12345"\n# wxpusher关注的事件标题\nwxpusher_watch_titles=("监控告警")\n# wxpusher关注的事件状态\nwxpusher_watch_status=("失败")\n######################################自定义参数区域#######################################\n\n# 钉钉推送地址\ndingtalk_url="https://oapi.dingtalk.com/robot/send?access_token=${dingtalk_token}"\n# wxpusher推送地址\nwxpusher_url="https://wxpusher.zjiecode.com/api/send/message"\n\n# URL编码\nurlencode() {\n  local string="$1"\n  local encoded=""\n  local length="${#string}"\n\n  for ((i = 0; i < length; i++)); do\n    local char="${string:i:1}"\n    case "$char" in\n      [a-zA-Z0-9.~_-])\n        encoded+="$char"\n        ;;\n      *)\n        encoded+="$(printf \'%%%02X\' "\'$char")"\n        ;;\n    esac\n  done\n\n  echo "$encoded"\n}\n\n# 检查变量是否存在于数组中\narray_contains() {\n  local target_str=$1\n  local str_list=$2\n\n  for item in "${str_list[@]}"; do\n    if [ "$item" = "${target_str}" ]; then\n      return 0  # 返回状态码 0 表示存在\n    fi\n  done\n\n  return 1  # 返回状态码 1 表示不存在\n}\n\n# 推送到钉钉群\nfunction push_to_dingtalk() {\n  # 推送参数\n  title=$1; status=$2; name=$3; contents=$4;\n  # 拼接ActionCard的text字段，格式为markdown\n  data="# [${title}](${jpom_url})\\n---\\n"\n  # 拼接状态\n  case "${status}" in\n  "开始" )\n    data="${data}- 状态：\\u003cfont color\\u003d#2f54eb\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "成功" | "恢复" )\n    data="${data}- 状态：\\u003cfont color\\u003d#52c41a\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "失败" | "异常" )\n    data="${data}- 状态：\\u003cfont color\\u003d#f5222d\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  esac\n  # 拼接内容列表\n  for content in "${contents[@]}"; do\n    data="${data}- ${content} \\n"\n  done\n  # jpom链接urlencode\n  encoded_jpom_url=$(urlencode "${jpom_url}")\n  # 禁用侧边栏打开的jpom链接\n  dingtalk_jpom_url="dingtalk://dingtalkclient/page/link?url=${encoded_jpom_url}&pc_slide=false"\n  # 构建JSON消息体：ActionCard\n  message_data=\'{\n    "msgtype": "actionCard",\n    "actionCard": {\n      "title": "\'${title}\'",\n      "text": "\'${data}\'",\n      "hideAvatar": "0",\n      "btnOrientation": "0",\n      "btns": [{"title": "Jpom运维平台", "actionURL": "\'${dingtalk_jpom_url}\'"}]\n    }\n  }\'\n  # 发送Curl请求\n  curl -H "Content-Type: application/json" -X POST -d "${message_data}" "${dingtalk_url}"\n}\n\n# 推送到wxpusher\nfunction push_to_wxpusher() {\n  # 推送参数\n  title=$1; status=$2; name=$3; contents=$4;\n  # 拼接text字段，格式为markdown\n  message_content="# [${title}](${jpom_url})\\n---\\n"\n  # 拼接状态\n  case "${status}" in\n  "开始" )\n    message_content="${message_content}- 状态：\\u003cfont color\\u003d#2f54eb\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "成功" | "恢复" )\n    message_content="${message_content}- 状态：\\u003cfont color\\u003d#52c41a\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "失败" | "异常" )\n    message_content="${message_content}- 状态：\\u003cfont color\\u003d#f5222d\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  esac\n  # 拼接内容列表\n  for content in "${contents[@]}"; do\n    message_content="${message_content}- ${content} \\n"\n  done\n  # 构建JSON消息体\n  message_data=\'{\n    "appToken":"\'${wxpusher_apptoken}\'",\n    "content":"\'${message_content}\'",\n    "summary":"\'${title}\'【\'${name}\'】状态【\'${status}\'】",\n    "contentType":3,\n    "topicIds":[\'${wxpusher_topic_id}\'],\n    "url":"\'${jpom_url}\'",\n    "verifyPay":false\n  }\'\n  # 发送Curl请求\n  curl -H "Content-Type: application/json" -X POST -d "${message_data}" "${wxpusher_url}"\n}\n\n# 通用推送\nfunction common_push() {\n  # 推送参数\n  title=$1; status=$2; name=$3; contents=$4;\n\n  # 推送到钉钉群\n  push_to_dingtalk $title $status $name $contents;\n\n  # 推送到wxpusher\n  if array_contains $title $wxpusher_watch_titles; then\n    push_to_wxpusher $title $status $name $contents;\n  elif array_contains $status $wxpusher_watch_status; then\n    push_to_wxpusher $title $status $name $contents;\n  fi\n}\n\n# 构建事件推送\nfunction build_event_push() {\n  title="构建通知";\n  cur_datetime=$(date +"%Y-%m-%d %H:%M:%S")\n  name=$trigger_build_name\n  contents=(\n    "任务：#${trigger_build_number_id}" "项目：${trigger_build_name}"\n    "执行人：${trigger_trigger_user}" "时间：${cur_datetime}"\n  )\n  case "${trigger_type}" in\n  "startReady" )\n    status="开始";\n    common_push $title $status $name $contents;\n    ;;\n  "success" )\n    status="成功";\n    common_push $title $status $name $contents;\n    ;;\n  "stop" | "error" )\n    status="失败";\n    contents+=("错误信息：${trigger_status_msg}");\n    common_push $title $status $name $contents;\n    ;;\n  esac\n}\n\n# 监控事件推送\nfunction monitor_event_push() {\n  title="监控告警";\n  cur_datetime=$(date +"%Y-%m-%d %H:%M:%S")\n  name=$trigger_project_name\n  contents=(\n    "监控：${trigger_monitor_name}" "节点：${trigger_node_name}" "项目：${trigger_project_name}"\n    "时间：${cur_datetime}" "内容：${trigger_title}"\n  )\n  case "${trigger_run_status}" in\n  "true" )\n    status="恢复";\n    common_push $title $status $name $contents;\n    ;;\n  "false" )\n    status="异常";\n    common_push $title $status $name $contents;\n    ;;\n  esac\n}\n\nif [ -n "$trigger_build_id" ]; then\n  # 构建事件\n  build_event_push\nelif [ -n "$trigger_monitor_id" ]; then\n  # 监控事件\n  monitor_event_push\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n',normalizedContent:'# 统一通知推送\n\n\n# 脚本功能\n\n实现了构建通知和监控告警功能，配置完成后，钉钉和微信将收到项目构建开始、成功、失败的通知，以及项目监控的异常、恢复通知。\n\n\n# 配置说明\n\n * jpom_url：jpom的地址，在通知内容中可以点击链接跳转到jpom\n * dingtalk_token：钉钉群自定义机器人webhook链接中的token\n * wxpusher_apptoken：wxpusher平台创建应用时生成的apptoken\n * wxpusher_topic_id：wxpusher平台创建主题时生成的topicid\n * wxpusher_watch_titles：可选内容：构建通知、监控告警，wxpusher关注的事件标题，为避免过度打扰个人微信，wxpusher只推送关注的内容\n * wxpusher_watch_status：可选内容：开始、成功、失败、异常、恢复，wxpusher关注的事件状态\n\n\n# 注意事项\n\n 1. 钉钉群会推送所有内容，微信公众号（wxpusher）仅推送关注的内容\n 2. wxpusher_watch_titles和wxpusher_watch_status只要有一个匹配就会进行推送\n 3. 如果不需要推送到微信，将watch_title和watch_status置空即可\n 4. 注意脚本触发器地址在jpom所属网络中能否访问，可以通过脚本执行日志查看触发情况\n 5. 钉钉群添加自定义机器人的方式请自行搜索，wxpusher注册链接：wxpusher\n 6. 钉钉机器人不要开启加签，添加自定义关键词：jpom\n\n\n# 使用流程\n\n\n# 1. 创建脚本\n\n在【脚本管理】⇒【脚本列表】中【新增脚本】，复制下面脚本内容到script内容即可，示例图：\n\n\n\n\n# 2. 填写参数\n\n按照配置说明在脚本中填写参数后保存脚本，注意：不是默认参数那里添加参数，是直接修改脚本内容\n\n\n# 3. 生成触发器\n\n按图中所示点击按钮生成触发器并复制触发器链接\n\n\n\n\n\n\n# 4. 在构建和监控中填写webhooks\n\n\n\n\n# 5. 效果图\n\n\n\n\n\n\n\n\n\n\n# 脚本内容\n\n#!/bin/bash\n######################################自定义参数区域#######################################\n# jpom链接\njpom_url="http://sample.com:2122"\n\n# 钉钉webhook的token，不要打开加签，通过关键词或ip地址过验证\ndingtalk_token="......"\n\n# wxpusher的apptoken\nwxpusher_apptoken="......"\n# wxpusher的主题id\nwxpusher_topic_id="12345"\n# wxpusher关注的事件标题\nwxpusher_watch_titles=("监控告警")\n# wxpusher关注的事件状态\nwxpusher_watch_status=("失败")\n######################################自定义参数区域#######################################\n\n# 钉钉推送地址\ndingtalk_url="https://oapi.dingtalk.com/robot/send?access_token=${dingtalk_token}"\n# wxpusher推送地址\nwxpusher_url="https://wxpusher.zjiecode.com/api/send/message"\n\n# url编码\nurlencode() {\n  local string="$1"\n  local encoded=""\n  local length="${#string}"\n\n  for ((i = 0; i < length; i++)); do\n    local char="${string:i:1}"\n    case "$char" in\n      [a-za-z0-9.~_-])\n        encoded+="$char"\n        ;;\n      *)\n        encoded+="$(printf \'%%%02x\' "\'$char")"\n        ;;\n    esac\n  done\n\n  echo "$encoded"\n}\n\n# 检查变量是否存在于数组中\narray_contains() {\n  local target_str=$1\n  local str_list=$2\n\n  for item in "${str_list[@]}"; do\n    if [ "$item" = "${target_str}" ]; then\n      return 0  # 返回状态码 0 表示存在\n    fi\n  done\n\n  return 1  # 返回状态码 1 表示不存在\n}\n\n# 推送到钉钉群\nfunction push_to_dingtalk() {\n  # 推送参数\n  title=$1; status=$2; name=$3; contents=$4;\n  # 拼接actioncard的text字段，格式为markdown\n  data="# [${title}](${jpom_url})\\n---\\n"\n  # 拼接状态\n  case "${status}" in\n  "开始" )\n    data="${data}- 状态：\\u003cfont color\\u003d#2f54eb\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "成功" | "恢复" )\n    data="${data}- 状态：\\u003cfont color\\u003d#52c41a\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "失败" | "异常" )\n    data="${data}- 状态：\\u003cfont color\\u003d#f5222d\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  esac\n  # 拼接内容列表\n  for content in "${contents[@]}"; do\n    data="${data}- ${content} \\n"\n  done\n  # jpom链接urlencode\n  encoded_jpom_url=$(urlencode "${jpom_url}")\n  # 禁用侧边栏打开的jpom链接\n  dingtalk_jpom_url="dingtalk://dingtalkclient/page/link?url=${encoded_jpom_url}&pc_slide=false"\n  # 构建json消息体：actioncard\n  message_data=\'{\n    "msgtype": "actioncard",\n    "actioncard": {\n      "title": "\'${title}\'",\n      "text": "\'${data}\'",\n      "hideavatar": "0",\n      "btnorientation": "0",\n      "btns": [{"title": "jpom运维平台", "actionurl": "\'${dingtalk_jpom_url}\'"}]\n    }\n  }\'\n  # 发送curl请求\n  curl -h "content-type: application/json" -x post -d "${message_data}" "${dingtalk_url}"\n}\n\n# 推送到wxpusher\nfunction push_to_wxpusher() {\n  # 推送参数\n  title=$1; status=$2; name=$3; contents=$4;\n  # 拼接text字段，格式为markdown\n  message_content="# [${title}](${jpom_url})\\n---\\n"\n  # 拼接状态\n  case "${status}" in\n  "开始" )\n    message_content="${message_content}- 状态：\\u003cfont color\\u003d#2f54eb\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "成功" | "恢复" )\n    message_content="${message_content}- 状态：\\u003cfont color\\u003d#52c41a\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  "失败" | "异常" )\n    message_content="${message_content}- 状态：\\u003cfont color\\u003d#f5222d\\u003e${status}\\u003c/font\\u003e\\n"\n    ;;\n  esac\n  # 拼接内容列表\n  for content in "${contents[@]}"; do\n    message_content="${message_content}- ${content} \\n"\n  done\n  # 构建json消息体\n  message_data=\'{\n    "apptoken":"\'${wxpusher_apptoken}\'",\n    "content":"\'${message_content}\'",\n    "summary":"\'${title}\'【\'${name}\'】状态【\'${status}\'】",\n    "contenttype":3,\n    "topicids":[\'${wxpusher_topic_id}\'],\n    "url":"\'${jpom_url}\'",\n    "verifypay":false\n  }\'\n  # 发送curl请求\n  curl -h "content-type: application/json" -x post -d "${message_data}" "${wxpusher_url}"\n}\n\n# 通用推送\nfunction common_push() {\n  # 推送参数\n  title=$1; status=$2; name=$3; contents=$4;\n\n  # 推送到钉钉群\n  push_to_dingtalk $title $status $name $contents;\n\n  # 推送到wxpusher\n  if array_contains $title $wxpusher_watch_titles; then\n    push_to_wxpusher $title $status $name $contents;\n  elif array_contains $status $wxpusher_watch_status; then\n    push_to_wxpusher $title $status $name $contents;\n  fi\n}\n\n# 构建事件推送\nfunction build_event_push() {\n  title="构建通知";\n  cur_datetime=$(date +"%y-%m-%d %h:%m:%s")\n  name=$trigger_build_name\n  contents=(\n    "任务：#${trigger_build_number_id}" "项目：${trigger_build_name}"\n    "执行人：${trigger_trigger_user}" "时间：${cur_datetime}"\n  )\n  case "${trigger_type}" in\n  "startready" )\n    status="开始";\n    common_push $title $status $name $contents;\n    ;;\n  "success" )\n    status="成功";\n    common_push $title $status $name $contents;\n    ;;\n  "stop" | "error" )\n    status="失败";\n    contents+=("错误信息：${trigger_status_msg}");\n    common_push $title $status $name $contents;\n    ;;\n  esac\n}\n\n# 监控事件推送\nfunction monitor_event_push() {\n  title="监控告警";\n  cur_datetime=$(date +"%y-%m-%d %h:%m:%s")\n  name=$trigger_project_name\n  contents=(\n    "监控：${trigger_monitor_name}" "节点：${trigger_node_name}" "项目：${trigger_project_name}"\n    "时间：${cur_datetime}" "内容：${trigger_title}"\n  )\n  case "${trigger_run_status}" in\n  "true" )\n    status="恢复";\n    common_push $title $status $name $contents;\n    ;;\n  "false" )\n    status="异常";\n    common_push $title $status $name $contents;\n    ;;\n  esac\n}\n\nif [ -n "$trigger_build_id" ]; then\n  # 构建事件\n  build_event_push\nelif [ -n "$trigger_monitor_id" ]; then\n  # 监控事件\n  monitor_event_push\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"通过私人令牌导入仓库",frontmatter:{title:"通过私人令牌导入仓库",date:"2022-06-25T06:30:05.000Z",permalink:"/pages/practice/privateToken-import-repository/",author:{name:"sam",link:"https://gitee.com/hjk2008"},categories:["文档","在线构建"],tags:["私人令牌"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/9997.V2.9.X/0211.%E9%80%9A%E8%BF%87%E7%A7%81%E4%BA%BA%E4%BB%A4%E7%89%8C%E5%AF%BC%E5%85%A5%E4%BB%93%E5%BA%93.html",relativePath:"实践案例/010.在线构建/9997.V2.9.X/0211.通过私人令牌导入仓库.md",key:"v-3a17c070",path:"/pages/practice/privateToken-import-repository/",headers:[{level:2,title:"导入步骤",slug:"导入步骤",normalizedTitle:"导入步骤",charIndex:94},{level:2,title:"如何生成私人令牌",slug:"如何生成私人令牌",normalizedTitle:"如何生成私人令牌",charIndex:295},{level:3,title:"如何在 Gitee 上生成私人令牌",slug:"如何在-gitee-上生成私人令牌",normalizedTitle:"如何在 gitee 上生成私人令牌",charIndex:308},{level:3,title:"如何在 GitHub 上生成私人令牌",slug:"如何在-github-上生成私人令牌",normalizedTitle:"如何在 github 上生成私人令牌",charIndex:467},{level:3,title:"如何在 GitLab 上生成私人令牌",slug:"如何在-gitlab-上生成私人令牌",normalizedTitle:"如何在 gitlab 上生成私人令牌",charIndex:766}],headersStr:"导入步骤 如何生成私人令牌 如何在 Gitee 上生成私人令牌 如何在 GitHub 上生成私人令牌 如何在 GitLab 上生成私人令牌",content:"> 使用【通过私人令牌导入仓库】功能可以批量导入多个 Git 类型的仓库\n> \n> 本文对如何在 Jpom 管理系统使用私人令牌导入仓库以及如何在远程仓库上生成私人令牌进行了说明\n\n\n# 导入步骤\n\n 1. 登录 Jpom 项目管理系统\n 2. 在左侧侧边栏找到【在线构建】，选择【仓库信息】\n 3. 点击【通过私人令牌导入按钮】\n 4. 选择远程仓库，填写私人令牌\n 5. 填写完成后，点击搜索，等待返回结果\n\n> 从 v2.9.2 版本开始，支持自建 GitLab 仓库，以及按仓库名进行搜索。\n\n\n\n选择【添加】导入您想添加的仓库。\n\n\n\n已导入的仓库会显示【已存在】。\n\n\n\n\n# 如何生成私人令牌\n\n\n# 如何在 Gitee 上生成私人令牌\n\n 1. 登录 Gitee\n 2. 点击右上角的个人头像，在下拉框中选择【设置】\n 3. 在左侧菜单栏中找到并选择【私人令牌】\n 4. 点击【生成新令牌】\n 5. 复制生成后的私人令牌到 Jpom 管理系统中\n\n> 页面关闭后，私人令牌将不再出现，请妥善保存。\n\n\n\n\n\n\n\n\n# 如何在 GitHub 上生成私人令牌\n\n 1. 登录 GitHub\n 2. 点击右上角的个人头像，在下拉框中选择【Settings】\n 3. 在左侧菜单栏最下面找到并选择【Developer settings】\n 4. 在左侧菜单栏选择【Personal access tokens】\n 5. 点击【Generate new token】\n 6. 填写【Note】，设置过期日期，勾选生成 token 拥有的权限，填写完成后拉到最下面点击【Generate token】\n 7. 复制生成后的私人令牌到 Jpom 管理系统中\n\n> 页面关闭后，私人令牌将不再出现，请妥善保存。\n\n\n\n\n\n\n\n\n# 如何在 GitLab 上生成私人令牌\n\n 1. 登录 GitLab\n 2. 点击右上角的个人头像，在下拉框中选择【Settings】\n 3. 在左侧菜单栏最下面找到并选择【Developer settings】\n 4. 在左侧菜单栏选择【Personal access tokens】\n 5. 点击【Generate new token】\n 6. 填写【Note】，设置过期日期，勾选生成 token 拥有的权限，填写完成后拉到最下面点击【Generate token】\n 7. 复制生成后的私人令牌到 Jpom 管理系统中\n\n> 页面关闭后，私人令牌将不再出现，请妥善保存。\n\n",normalizedContent:"> 使用【通过私人令牌导入仓库】功能可以批量导入多个 git 类型的仓库\n> \n> 本文对如何在 jpom 管理系统使用私人令牌导入仓库以及如何在远程仓库上生成私人令牌进行了说明\n\n\n# 导入步骤\n\n 1. 登录 jpom 项目管理系统\n 2. 在左侧侧边栏找到【在线构建】，选择【仓库信息】\n 3. 点击【通过私人令牌导入按钮】\n 4. 选择远程仓库，填写私人令牌\n 5. 填写完成后，点击搜索，等待返回结果\n\n> 从 v2.9.2 版本开始，支持自建 gitlab 仓库，以及按仓库名进行搜索。\n\n\n\n选择【添加】导入您想添加的仓库。\n\n\n\n已导入的仓库会显示【已存在】。\n\n\n\n\n# 如何生成私人令牌\n\n\n# 如何在 gitee 上生成私人令牌\n\n 1. 登录 gitee\n 2. 点击右上角的个人头像，在下拉框中选择【设置】\n 3. 在左侧菜单栏中找到并选择【私人令牌】\n 4. 点击【生成新令牌】\n 5. 复制生成后的私人令牌到 jpom 管理系统中\n\n> 页面关闭后，私人令牌将不再出现，请妥善保存。\n\n\n\n\n\n\n\n\n# 如何在 github 上生成私人令牌\n\n 1. 登录 github\n 2. 点击右上角的个人头像，在下拉框中选择【settings】\n 3. 在左侧菜单栏最下面找到并选择【developer settings】\n 4. 在左侧菜单栏选择【personal access tokens】\n 5. 点击【generate new token】\n 6. 填写【note】，设置过期日期，勾选生成 token 拥有的权限，填写完成后拉到最下面点击【generate token】\n 7. 复制生成后的私人令牌到 jpom 管理系统中\n\n> 页面关闭后，私人令牌将不再出现，请妥善保存。\n\n\n\n\n\n\n\n\n# 如何在 gitlab 上生成私人令牌\n\n 1. 登录 gitlab\n 2. 点击右上角的个人头像，在下拉框中选择【settings】\n 3. 在左侧菜单栏最下面找到并选择【developer settings】\n 4. 在左侧菜单栏选择【personal access tokens】\n 5. 点击【generate new token】\n 6. 填写【note】，设置过期日期，勾选生成 token 拥有的权限，填写完成后拉到最下面点击【generate token】\n 7. 复制生成后的私人令牌到 jpom 管理系统中\n\n> 页面关闭后，私人令牌将不再出现，请妥善保存。\n\n",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"本地构建 + 项目发布 node 项目",frontmatter:{title:"本地构建 + 项目发布 node 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-node-release/",tags:["在线构建","vue"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/9998.V2.8.X/0102.build-node-release.html",relativePath:"实践案例/010.在线构建/9998.V2.8.X/0102.build-node-release.md",key:"v-00f34618",path:"/pages/practice/build-node-release/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:195},{level:2,title:"第一步：安装 Jpom 服务端",slug:"第一步-安装-jpom-服务端",normalizedTitle:"第一步：安装 jpom 服务端",charIndex:306},{level:3,title:"执行命令后控制台输出如下",slug:"执行命令后控制台输出如下",normalizedTitle:"执行命令后控制台输出如下",charIndex:608},{level:2,title:"第二步：安装 node 环境",slug:"第二步-安装-node-环境",normalizedTitle:"第二步：安装 node 环境",charIndex:627},{level:2,title:"第三步：重启服务器端",slug:"第三步-重启服务器端",normalizedTitle:"第三步：重启服务器端",charIndex:1387},{level:2,title:"第四步：安装 Jpom 插件端",slug:"第四步-安装-jpom-插件端",normalizedTitle:"第四步：安装 jpom 插件端",charIndex:1506},{level:2,title:"第五步：安装 nginx 环境",slug:"第五步-安装-nginx-环境",normalizedTitle:"第五步：安装 nginx 环境",charIndex:1817},{level:2,title:"第六步：初始化 Jpom 服务端和插件端",slug:"第六步-初始化-jpom-服务端和插件端",normalizedTitle:"第六步：初始化 jpom 服务端和插件端",charIndex:2163},{level:3,title:"初始化系统管理员",slug:"初始化系统管理员",normalizedTitle:"初始化系统管理员",charIndex:2279},{level:3,title:"添加 Jpom 节点",slug:"添加-jpom-节点",normalizedTitle:"添加 jpom 节点",charIndex:2355},{level:2,title:"第七步：配置节点信息、创建节点项目",slug:"第七步-配置节点信息、创建节点项目",normalizedTitle:"第七步：配置节点信息、创建节点项目",charIndex:2455},{level:2,title:"第八步：创建构建仓库、创建构建信息",slug:"第八步-创建构建仓库、创建构建信息",normalizedTitle:"第八步：创建构建仓库、创建构建信息",charIndex:2703},{level:2,title:"第九步：检查项目文件夹是否正确、配置 nginx 访问",slug:"第九步-检查项目文件夹是否正确、配置-nginx-访问",normalizedTitle:"第九步：检查项目文件夹是否正确、配置 nginx 访问",charIndex:3212},{level:2,title:"第十步：愉快地使用前端项目",slug:"第十步-愉快地使用前端项目",normalizedTitle:"第十步：愉快地使用前端项目",charIndex:3348}],headersStr:"前言 需要准备的环境 第一步：安装 Jpom 服务端 执行命令后控制台输出如下 第二步：安装 node 环境 第三步：重启服务器端 第四步：安装 Jpom 插件端 第五步：安装 nginx 环境 第六步：初始化 Jpom 服务端和插件端 初始化系统管理员 添加 Jpom 节点 第七步：配置节点信息、创建节点项目 第八步：创建构建仓库、创建构建信息 第九步：检查项目文件夹是否正确、配置 nginx 访问 第十步：愉快地使用前端项目",content:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的构建功能实现将 node(vue) 项目从仓库中构建并发布到节点项目中并通过 Jpom 配置 nginx。\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 本文基于 2.8.4 版本讲解\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端、Jpom 插件端（安装 jpom 需要 java 环境）\n 2. 服务端所在服务器需要 node 环境\n 3. 插件端所在服务器需要 nginx 环境\n\n\n# 操作步骤\n\n\n# 第一步：安装 Jpom 服务端\n\n> 目前安装 Jpom 服务端的方式有：一键安装、下载安装、编译打包安装、docker 安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装服务端\n\nmkdir -p /home/jpom/server && cd /home/jpom/server\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n# 第二步：安装 node 环境\n\n> 安装 node 环境、这里演示中我们使用 node 16.13.1 版本（项目实际依赖版本请根据业务情况调整）\n> \n> https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\n下载安装\n\nwget -O node-v16.13.1-linux-x64.tar.gz https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\nmkdir -p /usr/node/ && tar -zxf node-v16.13.1-linux-x64.tar.gz  -C /usr/node/\n\n\n1\n2\n3\n\n\n\n\n配置环境变量\n\necho '# node '>>/etc/profile\necho 'export NODE_HOME=/usr/node/node-v16.13.1-linux-x64'>>/etc/profile\necho 'export PATH=$NODE_HOME/bin:$PATH'>>/etc/profile\nsource /etc/profile\n\n\n1\n2\n3\n4\n\n\n如构建遇到错误提示/bin/bash: npm: command not found，可以执行如下命令建立软连接 ln -s /usr/node/node-v16.13.1-linux-x64/bin/node /usr/local/bin/node ln -s /usr/node/node-v16.13.1-linux-x64/bin/npm /usr/local/bin/npm\n\n\n# 第三步：重启服务器端\n\n> 重启服务器端，由于在启动服务端后安装端 node 环境，所以需要重启服务端让 node 环境在服务端中生效\n\nbash /home/jpom/server/Server.sh restart\n\n\n1\n\n\n\n# 第四步：安装 Jpom 插件端\n\n> 目前安装 Jpom 插件端的方式有：一键安装、下载安装、编译打包安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装插件端\n\nmkdir -p /home/jpom/agent && cd /home/jpom/agent\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Agent jdk\n\n\n1\n2\n3\n\n\n\n\n图 2 中圈出来第为插件端的账号密码\n\n\n# 第五步：安装 nginx 环境\n\n教程中使用 centos7 rpm 方式安装，实际中可以根据环境情况安装(如果是编译安装则需要)\n\nrpm -ivh https://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nyum install -y nginx\n\n\n1\n2\n\n\n配置 nginx\n\nvim /etc/nginx/nginx.conf\n\n\n1\n\n\n建议使用 include /etc/nginx/conf.d/*.conf 方式来授权给 Jpom 来管理 nginx 配置文件\n\n启动 nginx\n\nsystemctl start nginx\n\n\n1\n\n\n\n# 第六步：初始化 Jpom 服务端和插件端\n\n访问：http://IP:2122 这里 ip 请更换为您服务器中第实际 ip\n\n如果无法访问请优先检查 Jpom 访问是否正常运行、服务端防火墙、云服务器的安全组规则等网络原因\n\n\n# 初始化系统管理员\n\n第一次使用系统需要设置一个系统管理员账号（系统管理员账号密码有强度要求，请安装提示设置。同时也请您牢记系统管理员账号）\n\n\n\n\n# 添加 Jpom 节点\n\n节点列表还没有任何节点，我们需要将我们之前安装等插件端添加到服务端中来\n\n\n\n\n\n\n\n图 3 中的节点密码为上面步骤中第四步中安装并启动插件端后控制台输出第账号和密码\n\n\n# 第七步：配置节点信息、创建节点项目\n\n 1. 进入节点管理\n    1. \n 2. 配置授权（白名单）信息\n    1. \n    2. \n    3. 注意这里的项目路径是指，咋们节点项目允许所在的文件夹路径、nginx 路径是指咋们允许在线编辑的 nginx 配置文件的文件夹路径\n    4. nginx 配置建议使用 include /etc/nginx/conf.d/*.conf 来管理\n 3. 进入项目列表\n    1. \n 4. 创建 File 类型项目\n    1. \n\n\n# 第八步：创建构建仓库、创建构建信息\n\n 1. 添加仓库\n    1. \n    2. \n    3. \n 2. 添加构建信息\n    1. \n    2. \n    3. \n    4. 构建命令解释：cd antdv && npm i && npm run build 由于仓库是多模块项目的仓库，首先需要切换到对应到目录（如果项目存在仓库根路径则不需要切换到对应的目录），如果执行对应到构建命令，由于 node 项目构建都需要装包这里先执行 npm i装包再执行 npm run build 多条命令用 && 拼接是为了保证上一条命令执行成功才执行下一条\n    5. 产物目录解释：antdv/dist 由于当前项目存储到 antdv 目录中，构建完成将生成 dist 目录，那么这里需要填写：antdv/dist，这里注意需要添加仓库路径下面到相对路径\n 3. 执行构建\n    1. 第一次构建可能需要较长时间，是因为需要安装依赖包。加快构建速度也可以考虑修改镜像源地址\n    2. 构建中请注意执行构建命令过程中是否发生错误信息影响到没有达到预期到构建结果（没有对应到构建产物）\n    3. \n\n\n# 第九步：检查项目文件夹是否正确、配置 nginx 访问\n\n 1. 查看项目文件夹里面的文件\n    1. 当前项目文件夹 /home/test/vue 由所选的项目路径+添加的文件路径组成\n    2. \n 2. 配置 nginx\n    1. \n    2. \n\n\n# 第十步：愉快地使用前端项目\n\n",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的构建功能实现将 node(vue) 项目从仓库中构建并发布到节点项目中并通过 jpom 配置 nginx。\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 本文基于 2.8.4 版本讲解\n\n\n# 需要准备的环境\n\n 1. jpom 服务端、jpom 插件端（安装 jpom 需要 java 环境）\n 2. 服务端所在服务器需要 node 环境\n 3. 插件端所在服务器需要 nginx 环境\n\n\n# 操作步骤\n\n\n# 第一步：安装 jpom 服务端\n\n> 目前安装 jpom 服务端的方式有：一键安装、下载安装、编译打包安装、docker 安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装服务端\n\nmkdir -p /home/jpom/server && cd /home/jpom/server\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n# 第二步：安装 node 环境\n\n> 安装 node 环境、这里演示中我们使用 node 16.13.1 版本（项目实际依赖版本请根据业务情况调整）\n> \n> https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\n下载安装\n\nwget -o node-v16.13.1-linux-x64.tar.gz https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\nmkdir -p /usr/node/ && tar -zxf node-v16.13.1-linux-x64.tar.gz  -c /usr/node/\n\n\n1\n2\n3\n\n\n\n\n配置环境变量\n\necho '# node '>>/etc/profile\necho 'export node_home=/usr/node/node-v16.13.1-linux-x64'>>/etc/profile\necho 'export path=$node_home/bin:$path'>>/etc/profile\nsource /etc/profile\n\n\n1\n2\n3\n4\n\n\n如构建遇到错误提示/bin/bash: npm: command not found，可以执行如下命令建立软连接 ln -s /usr/node/node-v16.13.1-linux-x64/bin/node /usr/local/bin/node ln -s /usr/node/node-v16.13.1-linux-x64/bin/npm /usr/local/bin/npm\n\n\n# 第三步：重启服务器端\n\n> 重启服务器端，由于在启动服务端后安装端 node 环境，所以需要重启服务端让 node 环境在服务端中生效\n\nbash /home/jpom/server/server.sh restart\n\n\n1\n\n\n\n# 第四步：安装 jpom 插件端\n\n> 目前安装 jpom 插件端的方式有：一键安装、下载安装、编译打包安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装插件端\n\nmkdir -p /home/jpom/agent && cd /home/jpom/agent\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh agent jdk\n\n\n1\n2\n3\n\n\n\n\n图 2 中圈出来第为插件端的账号密码\n\n\n# 第五步：安装 nginx 环境\n\n教程中使用 centos7 rpm 方式安装，实际中可以根据环境情况安装(如果是编译安装则需要)\n\nrpm -ivh https://nginx.org/packages/centos/7/noarch/rpms/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nyum install -y nginx\n\n\n1\n2\n\n\n配置 nginx\n\nvim /etc/nginx/nginx.conf\n\n\n1\n\n\n建议使用 include /etc/nginx/conf.d/*.conf 方式来授权给 jpom 来管理 nginx 配置文件\n\n启动 nginx\n\nsystemctl start nginx\n\n\n1\n\n\n\n# 第六步：初始化 jpom 服务端和插件端\n\n访问：http://ip:2122 这里 ip 请更换为您服务器中第实际 ip\n\n如果无法访问请优先检查 jpom 访问是否正常运行、服务端防火墙、云服务器的安全组规则等网络原因\n\n\n# 初始化系统管理员\n\n第一次使用系统需要设置一个系统管理员账号（系统管理员账号密码有强度要求，请安装提示设置。同时也请您牢记系统管理员账号）\n\n\n\n\n# 添加 jpom 节点\n\n节点列表还没有任何节点，我们需要将我们之前安装等插件端添加到服务端中来\n\n\n\n\n\n\n\n图 3 中的节点密码为上面步骤中第四步中安装并启动插件端后控制台输出第账号和密码\n\n\n# 第七步：配置节点信息、创建节点项目\n\n 1. 进入节点管理\n    1. \n 2. 配置授权（白名单）信息\n    1. \n    2. \n    3. 注意这里的项目路径是指，咋们节点项目允许所在的文件夹路径、nginx 路径是指咋们允许在线编辑的 nginx 配置文件的文件夹路径\n    4. nginx 配置建议使用 include /etc/nginx/conf.d/*.conf 来管理\n 3. 进入项目列表\n    1. \n 4. 创建 file 类型项目\n    1. \n\n\n# 第八步：创建构建仓库、创建构建信息\n\n 1. 添加仓库\n    1. \n    2. \n    3. \n 2. 添加构建信息\n    1. \n    2. \n    3. \n    4. 构建命令解释：cd antdv && npm i && npm run build 由于仓库是多模块项目的仓库，首先需要切换到对应到目录（如果项目存在仓库根路径则不需要切换到对应的目录），如果执行对应到构建命令，由于 node 项目构建都需要装包这里先执行 npm i装包再执行 npm run build 多条命令用 && 拼接是为了保证上一条命令执行成功才执行下一条\n    5. 产物目录解释：antdv/dist 由于当前项目存储到 antdv 目录中，构建完成将生成 dist 目录，那么这里需要填写：antdv/dist，这里注意需要添加仓库路径下面到相对路径\n 3. 执行构建\n    1. 第一次构建可能需要较长时间，是因为需要安装依赖包。加快构建速度也可以考虑修改镜像源地址\n    2. 构建中请注意执行构建命令过程中是否发生错误信息影响到没有达到预期到构建结果（没有对应到构建产物）\n    3. \n\n\n# 第九步：检查项目文件夹是否正确、配置 nginx 访问\n\n 1. 查看项目文件夹里面的文件\n    1. 当前项目文件夹 /home/test/vue 由所选的项目路径+添加的文件路径组成\n    2. \n 2. 配置 nginx\n    1. \n    2. \n\n\n# 第十步：愉快地使用前端项目\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/12, 10:15:40",lastUpdatedTimestamp:170505454e4},{title:"本地构建 + SSH 发布 node 项目",frontmatter:{title:"本地构建 + SSH 发布 node 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-node-ssh-release/",tags:["SSH","vue","在线构建"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/9998.V2.8.X/0103.build-node-ssh-release.html",relativePath:"实践案例/010.在线构建/9998.V2.8.X/0103.build-node-ssh-release.md",key:"v-05df9398",path:"/pages/practice/build-node-ssh-release/",headers:[{level:3,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:153},{level:2,title:"第一步：安装 Jpom 服务端",slug:"第一步-安装-jpom-服务端",normalizedTitle:"第一步：安装 jpom 服务端",charIndex:256},{level:3,title:"执行命令后控制台输出如下",slug:"执行命令后控制台输出如下",normalizedTitle:"执行命令后控制台输出如下",charIndex:558},{level:2,title:"第二步：安装 node 环境",slug:"第二步-安装-node-环境",normalizedTitle:"第二步：安装 node 环境",charIndex:577},{level:2,title:"第三步：重启服务器端",slug:"第三步-重启服务器端",normalizedTitle:"第三步：重启服务器端",charIndex:1143},{level:2,title:"第四步：在 ssh 所在到服务器安装 nginx 环境",slug:"第四步-在-ssh-所在到服务器安装-nginx-环境",normalizedTitle:"第四步：在 ssh 所在到服务器安装 nginx 环境",charIndex:1262},{level:2,title:"第五步：初始化 Jpom 服务端和配置 ssh 信息",slug:"第五步-初始化-jpom-服务端和配置-ssh-信息",normalizedTitle:"第五步：初始化 jpom 服务端和配置 ssh 信息",charIndex:1620},{level:3,title:"初始化系统管理员",slug:"初始化系统管理员",normalizedTitle:"初始化系统管理员",charIndex:1742},{level:3,title:"在 Jpom 中添加 ssh 信息",slug:"在-jpom-中添加-ssh-信息",normalizedTitle:"在 jpom 中添加 ssh 信息",charIndex:1818},{level:2,title:"第六步：创建构建仓库、创建构建信息",slug:"第六步-创建构建仓库、创建构建信息",normalizedTitle:"第六步：创建构建仓库、创建构建信息",charIndex:1909},{level:2,title:"第七步：配置 nginx 访问",slug:"第七步-配置-nginx-访问",normalizedTitle:"第七步：配置 nginx 访问",charIndex:2504},{level:2,title:"第八步：愉快地使用前端项目",slug:"第八步-愉快地使用前端项目",normalizedTitle:"第八步：愉快地使用前端项目",charIndex:2645}],headersStr:"前言 需要准备的环境 第一步：安装 Jpom 服务端 执行命令后控制台输出如下 第二步：安装 node 环境 第三步：重启服务器端 第四步：在 ssh 所在到服务器安装 nginx 环境 第五步：初始化 Jpom 服务端和配置 ssh 信息 初始化系统管理员 在 Jpom 中添加 ssh 信息 第六步：创建构建仓库、创建构建信息 第七步：配置 nginx 访问 第八步：愉快地使用前端项目",content:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的构建功能实现将 node(vue) 项目从仓库中构建并通过 ssh 方式发布到服务器中,再配置 nginx。\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 本文基于 2.8.4 版本讲解\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端（安装 jpom 需要 java 环境）\n 2. 服务端所在服务器需要 node 环境\n 3. ssh 所在服务器需要 nginx 环境\n\n\n# 操作步骤\n\n\n# 第一步：安装 Jpom 服务端\n\n> 目前安装 Jpom 服务端的方式有：一键安装、下载安装、编译打包安装、docker 安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装服务端\n\nmkdir -p /home/jpom/server && cd /home/jpom/server\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n# 第二步：安装 node 环境\n\n> 安装 node 环境、这里演示中我们使用 node 16.13.1 版本（项目实际依赖版本请根据业务情况调整）\n> \n> https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\n下载安装\n\nwget -O node-v16.13.1-linux-x64.tar.gz https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\nmkdir -p /usr/node/ && tar -zxf node-v16.13.1-linux-x64.tar.gz  -C /usr/node/\n\n\n1\n2\n3\n\n\n\n\n配置环境变量\n\necho '# node '>>/etc/profile\necho 'export NODE_HOME=/usr/node/node-v16.13.1-linux-x64'>>/etc/profile\necho 'export PATH=$NODE_HOME/bin:$PATH'>>/etc/profile\nsource /etc/profile\n\n\n1\n2\n3\n4\n\n\n\n# 第三步：重启服务器端\n\n> 重启服务器端，由于在启动服务端后安装端 node 环境，所以需要重启服务端让 node 环境在服务端中生效\n\nbash /home/jpom/server/Server.sh restart\n\n\n1\n\n\n\n# 第四步：在 ssh 所在到服务器安装 nginx 环境\n\n教程中使用 centos7 rpm 方式安装，实际中可以根据环境情况安装(如果是编译安装则需要)\n\nrpm -ivh https://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nyum install -y nginx\n\n\n1\n2\n\n\n配置 nginx\n\nvim /etc/nginx/nginx.conf\n\n\n1\n\n\n建议使用 include /etc/nginx/conf.d/*.conf 方式来授权给 Jpom 来管理 nginx 配置文件\n\n启动 nginx\n\nsystemctl start nginx\n\n\n1\n\n\n\n# 第五步：初始化 Jpom 服务端和配置 ssh 信息\n\n访问：http://IP:2122 这里 ip 请更换为您服务器中第实际 ip\n\n如果无法访问请优先检查 Jpom 访问是否正常运行、服务端防火墙、云服务器的安全组规则等网络原因\n\n\n# 初始化系统管理员\n\n第一次使用系统需要设置一个系统管理员账号（系统管理员账号密码有强度要求，请安装提示设置。同时也请您牢记系统管理员账号）\n\n\n\n\n# 在 Jpom 中添加 ssh 信息\n\n 1. \n 2. \n 3. \n\n注意这里一定要配置：文件目录，文件目录为授权允许在 Jpom 管理的文件夹，这里为后面构建发布会使用到\n\n\n# 第六步：创建构建仓库、创建构建信息\n\n 1. 添加仓库\n    1. \n    2. \n    3. \n 2. 添加构建信息\n    1. \n    2. \n    3. \n    4. 构建命令解释：cd antdv && npm i && npm run build 由于仓库是多模块项目的仓库，首先需要切换到对应到目录（如果项目存在仓库根路径则不需要切换到对应的目录），如果执行对应到构建命令，由于 node 项目构建都需要装包这里先执行 npm i装包再执行 npm run build 多条命令用 && 拼接是为了保证上一条命令执行成功才执行下一条\n    5. 产物目录解释：antdv/dist 由于当前项目存储到 antdv 目录中，构建完成将生成 dist 目录，那么这里需要填写：antdv/dist，这里注意需要添加仓库路径下面到相对路径\n    6. ssh/目录，是选择发布到哪个 ssh 中的哪个目录里面\n    7. 发布命令为文件上传成功后执行的命令，示例中随意执行的一个命令，实际请根据业务情况修改\n 3. 执行构建\n    1. 第一次构建可能需要较长时间，是因为需要安装依赖包。加快构建速度也可以考虑修改镜像源地址\n    2. 构建中请注意执行构建命令过程中是否发生错误信息影响到没有达到预期到构建结果（没有对应到构建产物）\n    3. \n\n\n# 第七步：配置 nginx 访问\n\n 1. 查看文件是否上传成功 /home/web/testvue 2.\n 2. 配置 nginx\n    1. vim /etc/nginx/conf.d/default.conf 实际中请根据业务配置来变更配置路径和方式\n    2. \n\n\n# 第八步：愉快地使用前端项目\n\n",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的构建功能实现将 node(vue) 项目从仓库中构建并通过 ssh 方式发布到服务器中,再配置 nginx。\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 本文基于 2.8.4 版本讲解\n\n\n# 需要准备的环境\n\n 1. jpom 服务端（安装 jpom 需要 java 环境）\n 2. 服务端所在服务器需要 node 环境\n 3. ssh 所在服务器需要 nginx 环境\n\n\n# 操作步骤\n\n\n# 第一步：安装 jpom 服务端\n\n> 目前安装 jpom 服务端的方式有：一键安装、下载安装、编译打包安装、docker 安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装服务端\n\nmkdir -p /home/jpom/server && cd /home/jpom/server\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n# 第二步：安装 node 环境\n\n> 安装 node 环境、这里演示中我们使用 node 16.13.1 版本（项目实际依赖版本请根据业务情况调整）\n> \n> https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\n下载安装\n\nwget -o node-v16.13.1-linux-x64.tar.gz https://oss.npmmirror.com/dist/node/v16.13.1/node-v16.13.1-linux-x64.tar.gz\n\nmkdir -p /usr/node/ && tar -zxf node-v16.13.1-linux-x64.tar.gz  -c /usr/node/\n\n\n1\n2\n3\n\n\n\n\n配置环境变量\n\necho '# node '>>/etc/profile\necho 'export node_home=/usr/node/node-v16.13.1-linux-x64'>>/etc/profile\necho 'export path=$node_home/bin:$path'>>/etc/profile\nsource /etc/profile\n\n\n1\n2\n3\n4\n\n\n\n# 第三步：重启服务器端\n\n> 重启服务器端，由于在启动服务端后安装端 node 环境，所以需要重启服务端让 node 环境在服务端中生效\n\nbash /home/jpom/server/server.sh restart\n\n\n1\n\n\n\n# 第四步：在 ssh 所在到服务器安装 nginx 环境\n\n教程中使用 centos7 rpm 方式安装，实际中可以根据环境情况安装(如果是编译安装则需要)\n\nrpm -ivh https://nginx.org/packages/centos/7/noarch/rpms/nginx-release-centos-7-0.el7.ngx.noarch.rpm\nyum install -y nginx\n\n\n1\n2\n\n\n配置 nginx\n\nvim /etc/nginx/nginx.conf\n\n\n1\n\n\n建议使用 include /etc/nginx/conf.d/*.conf 方式来授权给 jpom 来管理 nginx 配置文件\n\n启动 nginx\n\nsystemctl start nginx\n\n\n1\n\n\n\n# 第五步：初始化 jpom 服务端和配置 ssh 信息\n\n访问：http://ip:2122 这里 ip 请更换为您服务器中第实际 ip\n\n如果无法访问请优先检查 jpom 访问是否正常运行、服务端防火墙、云服务器的安全组规则等网络原因\n\n\n# 初始化系统管理员\n\n第一次使用系统需要设置一个系统管理员账号（系统管理员账号密码有强度要求，请安装提示设置。同时也请您牢记系统管理员账号）\n\n\n\n\n# 在 jpom 中添加 ssh 信息\n\n 1. \n 2. \n 3. \n\n注意这里一定要配置：文件目录，文件目录为授权允许在 jpom 管理的文件夹，这里为后面构建发布会使用到\n\n\n# 第六步：创建构建仓库、创建构建信息\n\n 1. 添加仓库\n    1. \n    2. \n    3. \n 2. 添加构建信息\n    1. \n    2. \n    3. \n    4. 构建命令解释：cd antdv && npm i && npm run build 由于仓库是多模块项目的仓库，首先需要切换到对应到目录（如果项目存在仓库根路径则不需要切换到对应的目录），如果执行对应到构建命令，由于 node 项目构建都需要装包这里先执行 npm i装包再执行 npm run build 多条命令用 && 拼接是为了保证上一条命令执行成功才执行下一条\n    5. 产物目录解释：antdv/dist 由于当前项目存储到 antdv 目录中，构建完成将生成 dist 目录，那么这里需要填写：antdv/dist，这里注意需要添加仓库路径下面到相对路径\n    6. ssh/目录，是选择发布到哪个 ssh 中的哪个目录里面\n    7. 发布命令为文件上传成功后执行的命令，示例中随意执行的一个命令，实际请根据业务情况修改\n 3. 执行构建\n    1. 第一次构建可能需要较长时间，是因为需要安装依赖包。加快构建速度也可以考虑修改镜像源地址\n    2. 构建中请注意执行构建命令过程中是否发生错误信息影响到没有达到预期到构建结果（没有对应到构建产物）\n    3. \n\n\n# 第七步：配置 nginx 访问\n\n 1. 查看文件是否上传成功 /home/web/testvue 2.\n 2. 配置 nginx\n    1. vim /etc/nginx/conf.d/default.conf 实际中请根据业务配置来变更配置路径和方式\n    2. \n\n\n# 第八步：愉快地使用前端项目\n\n",charsets:{cjk:!0},lastUpdated:"2023/12/20, 06:50:33",lastUpdatedTimestamp:1703055033e3},{title:"容器构建 + 项目发布 java 项目",frontmatter:{title:"容器构建 + 项目发布 java 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-docker-java-node-release/",tags:["docker","在线构建"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/9998.V2.8.X/0108.build-docker-java-node-release.html",relativePath:"实践案例/010.在线构建/9998.V2.8.X/0108.build-docker-java-node-release.md",key:"v-23172d18",path:"/pages/practice/build-docker-java-node-release/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:140},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:240},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:452},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:462},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:513},{level:2,title:"安装 docker",slug:"安装-docker",normalizedTitle:"安装 docker",charIndex:561},{level:3,title:"状态管理",slug:"状态管理",normalizedTitle:"状态管理",charIndex:674},{level:3,title:"Docker TLS 证书   （非必须）",slug:"docker-tls-证书-非必须",normalizedTitle:"docker tls 证书   （非必须）",charIndex:null},{level:2,title:"配置 docker",slug:"配置-docker",normalizedTitle:"配置 docker",charIndex:3837},{level:3,title:"查看 docker.service 路径",slug:"查看-docker-service-路径",normalizedTitle:"查看 docker.service 路径",charIndex:3851},{level:3,title:"配置 tcp + tls   （非必须）",slug:"配置-tcp-tls-非必须",normalizedTitle:"配置 tcp + tls   （非必须）",charIndex:null},{level:2,title:"添加 docker",slug:"添加-docker",normalizedTitle:"添加 docker",charIndex:4516},{level:2,title:"安装插件端",slug:"安装插件端",normalizedTitle:"安装插件端",charIndex:4656},{level:3,title:"添加节点",slug:"添加节点",normalizedTitle:"添加节点",charIndex:4863},{level:3,title:"配置授权（白名单）",slug:"配置授权-白名单",normalizedTitle:"配置授权（白名单）",charIndex:4965},{level:3,title:"创建项目（jar）",slug:"创建项目-jar",normalizedTitle:"创建项目（jar）",charIndex:5015},{level:2,title:"添加构建仓库",slug:"添加构建仓库",normalizedTitle:"添加构建仓库",charIndex:5029},{level:2,title:"添加容器构建",slug:"添加容器构建",normalizedTitle:"添加容器构建",charIndex:5068},{level:2,title:"查看项目",slug:"查看项目",normalizedTitle:"查看项目",charIndex:5854}],headersStr:"前言 需要准备的环境 安装服务端 初始化服务端 添加超级管理账号 开启账号 MFA 安装 docker 状态管理 Docker TLS 证书   （非必须） 配置 docker 查看 docker.service 路径 配置 tcp + tls   （非必须） 添加 docker 安装插件端 添加节点 配置授权（白名单） 创建项目（jar） 添加构建仓库 添加容器构建 查看项目",content:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的容器构建 java 项目并发布到节点中\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端、Jpom 插件端（安装 jpom 需要 java 环境）\n 2. 一个安装了 docker 的服务器（可以和安装 Jpom 服务端在同一个服务器）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n\n# 安装 docker\n\n# 这里使用了阿里云镜像，可以更新自己业务选择\ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n\n\n1\n2\n\n\n\n# 状态管理\n\n# 查看状态\nsystemctl status docker\n# 停止\nsystemctl stop docker\n# 启动\nsystemctl start docker\n# 重启\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Docker TLS 证书 （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 Jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\nJpom 使用 docker http 接口是实现和 docker 通讯和管理，但是默认没有开启任何认证这样使得 docker 极不安全，如果端口暴露到公网还容易出现挖矿情况\n\n所以这里 我们强烈建议您使用 TLS 证书来连接 docker 提升安全性\n\n这里提供一个快速生成证书到脚本示例：（使用中请一定修改脚本内的 IP 或者可能无法使用的情况奥）\n\n#\n# -------------------------------------------------------------\n# 自动创建 Docker TLS 证书\n# wget https://gitee.com/dromara/Jpom/raw/master/script/docker-tls.sh\n# curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n# systemctl daemon-reload && systemctl restart docker\n# -------------------------------------------------------------\n# 以下是配置信息\n# --[BEGIN]------------------------------\nNOW_PATH=$(\n\tcd "$(dirname "$0")" || exit\n\tpwd\n)"/"\necho "当前目录：${NOW_PATH} 证书文件将保存在此文件夹下"\nread -p "请输入证书使用的 IP 地址或者 HOST: " HOST\n#\necho "您输入的是：${HOST} 证书只能在这个 IP 或者 HOST 下使用,证书密码和输入的一致"\n# --[INIT PARAMETER]------------------------------\nPASSWORD="$HOST"\nCOUNTRY="CN"\nSTATE="$HOST"\nCITY="$HOST"\nORGANIZATION="$HOST"\nORGANIZATIONAL_UNIT="Dev"\nCOMMON_NAME="$HOST"\nEMAIL="$HOST@docker-tls.com"\n# --[END]--\n# Generate CA key\nopenssl genrsa -aes256 -passout "pass:$PASSWORD" -out "ca-key.pem" 4096\n# Generate CA\nopenssl req -new -x509 -days 365 -key "ca-key.pem" -sha256 -out "ca.pem" -passin "pass:$PASSWORD" -subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORGANIZATION/OU=$ORGANIZATIONAL_UNIT/CN=$COMMON_NAME/emailAddress=$EMAIL"\n# Generate Server key\nopenssl genrsa -out "server-key.pem" 4096\n# Generate Server Certs.\nopenssl req -subj "/CN=$COMMON_NAME" -sha256 -new -key "server-key.pem" -out server.csr\nrm -f extfile.cnf\necho "subjectAltName = DNS.1:$HOST,IP.1:127.0.0.1,IP.2:$HOST" >>extfile.cnf\necho "extendedKeyUsage = serverAuth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "server-cert.pem" -extfile extfile.cnf\n# Generate Client Certs.\nrm -f extfile.cnf\nopenssl genrsa -out "key.pem" 4096\nopenssl req -subj \'/CN=client\' -new -key "key.pem" -out client.csr\necho "extendedKeyUsage = clientAuth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "cert.pem" -extfile extfile.cnf\nrm -f client.csr server.csr ca.srl extfile.cnf\n\n# check\nif [ -f "${NOW_PATH}key.pem" -a -f "${NOW_PATH}ca.pem" -a -f "${NOW_PATH}ca-key.pem" -a -f "${NOW_PATH}server-cert.pem" -a -f "${NOW_PATH}server-key.pem" ]; then\n\techo "证书生成完成"\n\techo "客户端使用文件：key.pem ca.pem cert.pem"\n\techo "Docker 端使用文件：ca.pem server-cert.pem server-key.pem"\n\techo "Docker 推荐配置内容：-H tcp://0.0.0.0:2375 --tlsverify --tlscacert=${NOW_PATH}ca.pem --tlscert=${NOW_PATH}server-cert.pem --tlskey=${NOW_PATH}server-key.pem"\nelse\n\techo "证书生成不完整,请检查配置和根据错误日志排查"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n同时将生成到证书下载到本地 保存使用\n\n证书示例：\n\n\n\n\n# 配置 docker\n\n\n# 查看 docker.service 路径\n\nsystemctl status docker\n\n\n\n\n# 配置 tcp + tls （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 Jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\nvim /lib/systemd/system/docker.service\n\n\n\nExecStart 需要添加内容\n\n--tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375\n\n# 配置示例\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n\n\n\n# 添加 docker\n\n\n\n注意这里 host 为：tcp://127.0.0.1:2375 这里因为连接本地 docker 所有使用 127.0.0.1 实际中请更换\n\n证书为压缩文件，压缩文件需要包含生成证书文件：key.pem ca.pem cert.pem\n\n\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n# 创建项目（jar）\n\n\n# 添加构建仓库\n\n这里使用 jpom 演示的仓库中的 python\n\n\n\n\n# 添加容器构建\n\n这里需要注意构建产物目录：是指仓库下面的相对路径\n\n发布项目需要选择节点再选择项目\n\n\n\nDSL 示例：\n\n# 基础镜像 目前仅支持 ubuntu-latest\nrunsOn: ubuntu-latest\n# 使用哪个 docker 构建,填写 docker 标签 默认查询可用的第一个,如果 tag 查询出多个也选择第一个结果\nfromTag: loacl\nsteps:\n  - uses: java\n    version: 8\n  - uses: maven\n    version: 3.8.5\n# 将容器中的文件缓存到 docker 卷中\n  - uses: cache\n    path: /root/.m2\n  - run: cd ${JPOM_WORKING_DIR} && mvn package -s settings.xml\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n完整示例：✈️进入>>\n\n目前支持都插件有（更多插件尽情期待）：\n\n 1. java\n    1. sdk 镜像使用：https://mirrors.tuna.tsinghua.edu.cn/\n    2. 支持版本有：8, 9, 10, 11, 12, 13, 14, 15, 16, 17\n 2. maven\n    1. sdk 镜像使用：https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/\n 3. node\n    1. sdk 镜像使用：https://registry.npmmirror.com/-/binary/node\n\n执行构建\n\n\n\n\n\n第一次构建需要较长时间，请耐心等待 如果构建中发生非预期错误，请根据错误信息检查或者看看相关环境是否匹配\n\n\n# 查看项目\n\n',normalizedContent:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的容器构建 java 项目并发布到节点中\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. jpom 服务端、jpom 插件端（安装 jpom 需要 java 环境）\n 2. 一个安装了 docker 的服务器（可以和安装 jpom 服务端在同一个服务器）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n\n# 安装 docker\n\n# 这里使用了阿里云镜像，可以更新自己业务选择\ncurl -fssl https://get.docker.com | bash -s docker --mirror aliyun\n\n\n1\n2\n\n\n\n# 状态管理\n\n# 查看状态\nsystemctl status docker\n# 停止\nsystemctl stop docker\n# 启动\nsystemctl start docker\n# 重启\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# docker tls 证书 （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\njpom 使用 docker http 接口是实现和 docker 通讯和管理，但是默认没有开启任何认证这样使得 docker 极不安全，如果端口暴露到公网还容易出现挖矿情况\n\n所以这里 我们强烈建议您使用 tls 证书来连接 docker 提升安全性\n\n这里提供一个快速生成证书到脚本示例：（使用中请一定修改脚本内的 ip 或者可能无法使用的情况奥）\n\n#\n# -------------------------------------------------------------\n# 自动创建 docker tls 证书\n# wget https://gitee.com/dromara/jpom/raw/master/script/docker-tls.sh\n# curl -fssl https://get.docker.com | bash -s docker --mirror aliyun\n# systemctl daemon-reload && systemctl restart docker\n# -------------------------------------------------------------\n# 以下是配置信息\n# --[begin]------------------------------\nnow_path=$(\n\tcd "$(dirname "$0")" || exit\n\tpwd\n)"/"\necho "当前目录：${now_path} 证书文件将保存在此文件夹下"\nread -p "请输入证书使用的 ip 地址或者 host: " host\n#\necho "您输入的是：${host} 证书只能在这个 ip 或者 host 下使用,证书密码和输入的一致"\n# --[init parameter]------------------------------\npassword="$host"\ncountry="cn"\nstate="$host"\ncity="$host"\norganization="$host"\norganizational_unit="dev"\ncommon_name="$host"\nemail="$host@docker-tls.com"\n# --[end]--\n# generate ca key\nopenssl genrsa -aes256 -passout "pass:$password" -out "ca-key.pem" 4096\n# generate ca\nopenssl req -new -x509 -days 365 -key "ca-key.pem" -sha256 -out "ca.pem" -passin "pass:$password" -subj "/c=$country/st=$state/l=$city/o=$organization/ou=$organizational_unit/cn=$common_name/emailaddress=$email"\n# generate server key\nopenssl genrsa -out "server-key.pem" 4096\n# generate server certs.\nopenssl req -subj "/cn=$common_name" -sha256 -new -key "server-key.pem" -out server.csr\nrm -f extfile.cnf\necho "subjectaltname = dns.1:$host,ip.1:127.0.0.1,ip.2:$host" >>extfile.cnf\necho "extendedkeyusage = serverauth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$password" -ca "ca.pem" -cakey "ca-key.pem" -cacreateserial -out "server-cert.pem" -extfile extfile.cnf\n# generate client certs.\nrm -f extfile.cnf\nopenssl genrsa -out "key.pem" 4096\nopenssl req -subj \'/cn=client\' -new -key "key.pem" -out client.csr\necho "extendedkeyusage = clientauth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$password" -ca "ca.pem" -cakey "ca-key.pem" -cacreateserial -out "cert.pem" -extfile extfile.cnf\nrm -f client.csr server.csr ca.srl extfile.cnf\n\n# check\nif [ -f "${now_path}key.pem" -a -f "${now_path}ca.pem" -a -f "${now_path}ca-key.pem" -a -f "${now_path}server-cert.pem" -a -f "${now_path}server-key.pem" ]; then\n\techo "证书生成完成"\n\techo "客户端使用文件：key.pem ca.pem cert.pem"\n\techo "docker 端使用文件：ca.pem server-cert.pem server-key.pem"\n\techo "docker 推荐配置内容：-h tcp://0.0.0.0:2375 --tlsverify --tlscacert=${now_path}ca.pem --tlscert=${now_path}server-cert.pem --tlskey=${now_path}server-key.pem"\nelse\n\techo "证书生成不完整,请检查配置和根据错误日志排查"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n\n\n同时将生成到证书下载到本地 保存使用\n\n证书示例：\n\n\n\n\n# 配置 docker\n\n\n# 查看 docker.service 路径\n\nsystemctl status docker\n\n\n\n\n# 配置 tcp + tls （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\nvim /lib/systemd/system/docker.service\n\n\n\nexecstart 需要添加内容\n\n--tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -h tcp://0.0.0.0:2375\n\n# 配置示例\nexecstart=/usr/bin/dockerd -h fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -h tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n\n\n\n# 添加 docker\n\n\n\n注意这里 host 为：tcp://127.0.0.1:2375 这里因为连接本地 docker 所有使用 127.0.0.1 实际中请更换\n\n证书为压缩文件，压缩文件需要包含生成证书文件：key.pem ca.pem cert.pem\n\n\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n# 创建项目（jar）\n\n\n# 添加构建仓库\n\n这里使用 jpom 演示的仓库中的 python\n\n\n\n\n# 添加容器构建\n\n这里需要注意构建产物目录：是指仓库下面的相对路径\n\n发布项目需要选择节点再选择项目\n\n\n\ndsl 示例：\n\n# 基础镜像 目前仅支持 ubuntu-latest\nrunson: ubuntu-latest\n# 使用哪个 docker 构建,填写 docker 标签 默认查询可用的第一个,如果 tag 查询出多个也选择第一个结果\nfromtag: loacl\nsteps:\n  - uses: java\n    version: 8\n  - uses: maven\n    version: 3.8.5\n# 将容器中的文件缓存到 docker 卷中\n  - uses: cache\n    path: /root/.m2\n  - run: cd ${jpom_working_dir} && mvn package -s settings.xml\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n完整示例：✈️进入>>\n\n目前支持都插件有（更多插件尽情期待）：\n\n 1. java\n    1. sdk 镜像使用：https://mirrors.tuna.tsinghua.edu.cn/\n    2. 支持版本有：8, 9, 10, 11, 12, 13, 14, 15, 16, 17\n 2. maven\n    1. sdk 镜像使用：https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/\n 3. node\n    1. sdk 镜像使用：https://registry.npmmirror.com/-/binary/node\n\n执行构建\n\n\n\n\n\n第一次构建需要较长时间，请耐心等待 如果构建中发生非预期错误，请根据错误信息检查或者看看相关环境是否匹配\n\n\n# 查看项目\n\n',charsets:{cjk:!0},lastUpdated:"2024/12/03, 08:54:50",lastUpdatedTimestamp:173321609e4},{title:"本地构建 + 自定义管理 python 项目",frontmatter:{title:"本地构建 + 自定义管理 python 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/project-dsl-python/",tags:["DSL","python","在线构建"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/9998.V2.8.X/0104.project-dsl-python.html",relativePath:"实践案例/010.在线构建/9998.V2.8.X/0104.project-dsl-python.md",key:"v-f1645dd8",path:"/pages/practice/project-dsl-python/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:258},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:313},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:525},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:535},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:586},{level:2,title:"安装插件端",slug:"安装插件端",normalizedTitle:"安装插件端",charIndex:634},{level:3,title:"添加节点",slug:"添加节点",normalizedTitle:"添加节点",charIndex:841},{level:3,title:"配置授权（白名单）",slug:"配置授权-白名单",normalizedTitle:"配置授权（白名单）",charIndex:943},{level:2,title:"创建脚本",slug:"创建脚本",normalizedTitle:"创建脚本",charIndex:993},{level:2,title:"创建项目",slug:"创建项目",normalizedTitle:"创建项目",charIndex:2933},{level:2,title:"添加构建仓库",slug:"添加构建仓库",normalizedTitle:"添加构建仓库",charIndex:3055},{level:2,title:"添加本地构建",slug:"添加本地构建",normalizedTitle:"添加本地构建",charIndex:3094},{level:2,title:"查看项目",slug:"查看项目",normalizedTitle:"查看项目",charIndex:3193}],headersStr:"前言 需要准备的环境 安装服务端 初始化服务端 添加超级管理账号 开启账号 MFA 安装插件端 添加节点 配置授权（白名单） 创建脚本 创建项目 添加构建仓库 添加本地构建 查看项目",content:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的本地构建+节点项目管理+脚本管理实现自定义管理 Python 项目（自定义启动项目，停止，查状态）\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu 系统自带 python 环境不需要单独安装，教程中系统 python 版本 2.7.17\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端、Jpom 插件端（安装 jpom 需要 java 环境）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n# 创建脚本\n\n注意：Ubuntu/Debian 执行脚本如果出现错误 Syntax error: "(" unexpected 代码对于标准bash而言没有错，因为 Ubuntu/Debian 为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼。\n\n解决方法: 就是取消dash\n\n执行：sudo dpkg-reconfigure dash 在选择项中选No，搞定了！\n\n\n\n脚本内容：\n\n#!/bin/bash\nTag="Application_${PROJECT_ID}"\nLib="${PROJECT_PATH}"\nLog="${PROJECT_PATH}/run.log"\necho $Tag\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n    echo  $Log \n    if [ ! -f $Log ]; then\n        touch $Log\n    fi\n   \n   cd $Lib && nohup python -m SimpleHTTPServer 8000 $Tag > $Log 2>&1 &  \n\tsleep 5\n    head -n 10 $Log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n\n\n>  1. 脚本里面至少需要实现的三件事：启动、停止、查状态\n> \n>  2. 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n\n提供的示例里面将使用三个函数来实现：start、stop、status\n\n里面的细节这里不过多的说明，可以自由发挥（给您足够的空间）\n\n脚本里面支持的变量有：${PROJECT_ID}、${PROJECT_NAME}、${PROJECT_PATH}\n\n如果多个项目管理方式相同，脚本模版可以重复使用奥（并非一个项目对应一个脚本模版）\n\n更新脚本示例：✈️进入>>\n\n\n# 创建项目\n\n\n\n注意：\n\n 1. scriptArgs 为对应环节执行脚本传人的参数,这里可以使用空格隔空传人多个参数\n 2. scriptId 需要填写当前节点里面存在的脚本的 id,脚本ID 可以在编辑脚本弹窗里面查看，如下图\n\n\n\n\n# 添加构建仓库\n\n这里使用 jpom 演示的仓库中的 python\n\n\n\n\n# 添加本地构建\n\n\n\n这里需要注意构建产物目录：是指仓库下面的相对路径\n\n发布项目需要选择节点再选择项目\n\n\n\n构建\n\n\n\n执行构建\n\n\n\n看到最后输出上传成功并重启表示项目已经发布完成\n\n\n\n\n# 查看项目\n\n',normalizedContent:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的本地构建+节点项目管理+脚本管理实现自定义管理 python 项目（自定义启动项目，停止，查状态）\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu 系统自带 python 环境不需要单独安装，教程中系统 python 版本 2.7.17\n\n\n# 需要准备的环境\n\n 1. jpom 服务端、jpom 插件端（安装 jpom 需要 java 环境）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n# 创建脚本\n\n注意：ubuntu/debian 执行脚本如果出现错误 syntax error: "(" unexpected 代码对于标准bash而言没有错，因为 ubuntu/debian 为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼。\n\n解决方法: 就是取消dash\n\n执行：sudo dpkg-reconfigure dash 在选择项中选no，搞定了！\n\n\n\n脚本内容：\n\n#!/bin/bash\ntag="application_${project_id}"\nlib="${project_path}"\nlog="${project_path}/run.log"\necho $tag\nretval="0"\n\n# see how we were called.\nfunction start() {\n    echo  $log \n    if [ ! -f $log ]; then\n        touch $log\n    fi\n   \n   cd $lib && nohup python -m simplehttpserver 8000 $tag > $log 2>&1 &  \n\tsleep 5\n    head -n 10 $log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n\n\n>  1. 脚本里面至少需要实现的三件事：启动、停止、查状态\n> \n>  2. 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n\n提供的示例里面将使用三个函数来实现：start、stop、status\n\n里面的细节这里不过多的说明，可以自由发挥（给您足够的空间）\n\n脚本里面支持的变量有：${project_id}、${project_name}、${project_path}\n\n如果多个项目管理方式相同，脚本模版可以重复使用奥（并非一个项目对应一个脚本模版）\n\n更新脚本示例：✈️进入>>\n\n\n# 创建项目\n\n\n\n注意：\n\n 1. scriptargs 为对应环节执行脚本传人的参数,这里可以使用空格隔空传人多个参数\n 2. scriptid 需要填写当前节点里面存在的脚本的 id,脚本id 可以在编辑脚本弹窗里面查看，如下图\n\n\n\n\n# 添加构建仓库\n\n这里使用 jpom 演示的仓库中的 python\n\n\n\n\n# 添加本地构建\n\n\n\n这里需要注意构建产物目录：是指仓库下面的相对路径\n\n发布项目需要选择节点再选择项目\n\n\n\n构建\n\n\n\n执行构建\n\n\n\n看到最后输出上传成功并重启表示项目已经发布完成\n\n\n\n\n# 查看项目\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/12, 10:15:40",lastUpdatedTimestamp:170505454e4},{title:"本地构建 + SSH 发布 java 项目",frontmatter:{title:"本地构建 + SSH 发布 java 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-java-ssh-release/",tags:["SSH","Java","在线构建"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/010.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/9999.V2.6.X/0100.build-java-ssh-release.html",relativePath:"实践案例/010.在线构建/9999.V2.6.X/0100.build-java-ssh-release.md",key:"v-a4cbab98",path:"/pages/practice/build-java-ssh-release/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"第一步 安装服务端",slug:"第一步-安装服务端",normalizedTitle:"第一步 安装服务端",charIndex:179},{level:4,title:"执行命令后控制台输出如下",slug:"执行命令后控制台输出如下",normalizedTitle:"执行命令后控制台输出如下",charIndex:366},{level:4,title:"服务端访问地址",slug:"服务端访问地址",normalizedTitle:"服务端访问地址",charIndex:388},{level:2,title:"第二步 初始化系统",slug:"第二步-初始化系统",normalizedTitle:"第二步 初始化系统",charIndex:458},{level:2,title:"第三步 配置 ssh 信息",slug:"第三步-配置-ssh-信息",normalizedTitle:"第三步 配置 ssh 信息",charIndex:552},{level:4,title:"备注：文件目录为给对应 ssh 授权部分目录可以在 Jpom 中使用，一般用于构建发布目录、ssh 文件管理",slug:"备注-文件目录为给对应-ssh-授权部分目录可以在-jpom-中使用-一般用于构建发布目录、ssh-文件管理",normalizedTitle:"备注：文件目录为给对应 ssh 授权部分目录可以在 jpom 中使用，一般用于构建发布目录、ssh 文件管理",charIndex:649},{level:2,title:"第四步 配置构建信息",slug:"第四步-配置构建信息",normalizedTitle:"第四步 配置构建信息",charIndex:708},{level:4,title:"Java 项目发布命令示例",slug:"java-项目发布命令示例",normalizedTitle:"java 项目发布命令示例",charIndex:1034},{level:4,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:534}],headersStr:"前言 第一步 安装服务端 执行命令后控制台输出如下 服务端访问地址 第二步 初始化系统 第三步 配置 ssh 信息 备注：文件目录为给对应 ssh 授权部分目录可以在 Jpom 中使用，一般用于构建发布目录、ssh 文件管理 第四步 配置构建信息 Java 项目发布命令示例 注意",content:'# 前言\n\n> 本文主要介绍：如何从零开始使用 Jpom 中的构建功能快速实现将项目从仓库中构建并发布到服务器中并启动项目。\n\n> 「那么如何从零开始使用 Jpom 中的构建功能(不安装插件端 Agent)快速实现将项目从仓库中构建并发布到服务器中启动项目呢？」下面我们一起具体来看看👇👇\n\n> 本文基于 2.6.1 版本讲解\n\n\n# 操作步骤\n\n\n# 第一步 安装服务端\n\n> 使用一键安装的命令安装服务端\n\n# 这里我们选择快速安装 jdk 和 maven ,实际中请根据自己情况选择\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk+mvn\n\n\n1\n2\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n\n\n\n# 服务端访问地址\n\n> > http://IP:2122 IP则为部署 Jpom 服务端的IP地址，也可以使用 nginx 代理访问\n\n\n# 第二步 初始化系统\n\n> 为 Jpom 系统设备一个系统管理员账号密码，方便日后登录使用\n\n 1. 需要设置 Jpom 系统中的管理员账号密码\n 2. 注意超级管理的密码强度\n\n\n\n\n# 第三步 配置 ssh 信息\n\n> 配置 ssh 信息、便于构建后发布到对应服务器中\n\n 1. 服务器IP\n 2. ssh 端口\n 3. 登录的账号信息（账号、密码）\n 4. 文件目录\n\n\n\n# 备注：文件目录为给对应 ssh 授权部分目录可以在 Jpom 中使用，一般用于构建发布目录、ssh 文件管理\n\n\n# 第四步 配置构建信息\n\n> 配置项目查看构建信息，用于管理项目发布流程\n\n\n\n 1. 构建的项目（仓库）信息\n 2. 项目的构建命令（依赖的构建环境：maven、vue、python、php）\n    1. mvn clean package\n    2. npm run build\n    3. ......\n 3. 构建产物的目录（项目中的相对路径）\n    1. java 项目一般位于当前项目 target 目录下的某个文件\n    2. vue 项目一般位于当前项目 dist 文件夹\n 4. 发布目录：项目将发布服务器到哪个目录（需要已经配置到 ssh 文件目录中）\n 5. 发布命令：执行发布后执行的命令，如：配置停止、启动项目\n\n# Java 项目发布命令示例\n\nTag="jpom-test-jar"\n\n# 检查进程状态\npid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\nif [ "$pid" != "" ]; then      \n  echo -n "boot ( pid $pid) is running" \n  echo \n  echo -n $"Shutting down boot: "\n  pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n  if [ "$pid" != "" ]; then\n    echo "kill boot process"\n    # kill  "$pid"\n    kill -9 "$pid"\n  fi\nelse \n   echo "boot is stopped" \nfi\n# 启动项目\nnohup java -Dappliction=$Tag -jar /home/java/test/springboot-test-jar-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 注意\n\n> 构建命令、发布命令都需要使用非阻塞命令',normalizedContent:'# 前言\n\n> 本文主要介绍：如何从零开始使用 jpom 中的构建功能快速实现将项目从仓库中构建并发布到服务器中并启动项目。\n\n> 「那么如何从零开始使用 jpom 中的构建功能(不安装插件端 agent)快速实现将项目从仓库中构建并发布到服务器中启动项目呢？」下面我们一起具体来看看👇👇\n\n> 本文基于 2.6.1 版本讲解\n\n\n# 操作步骤\n\n\n# 第一步 安装服务端\n\n> 使用一键安装的命令安装服务端\n\n# 这里我们选择快速安装 jdk 和 maven ,实际中请根据自己情况选择\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk+mvn\n\n\n1\n2\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n\n\n\n# 服务端访问地址\n\n> > http://ip:2122 ip则为部署 jpom 服务端的ip地址，也可以使用 nginx 代理访问\n\n\n# 第二步 初始化系统\n\n> 为 jpom 系统设备一个系统管理员账号密码，方便日后登录使用\n\n 1. 需要设置 jpom 系统中的管理员账号密码\n 2. 注意超级管理的密码强度\n\n\n\n\n# 第三步 配置 ssh 信息\n\n> 配置 ssh 信息、便于构建后发布到对应服务器中\n\n 1. 服务器ip\n 2. ssh 端口\n 3. 登录的账号信息（账号、密码）\n 4. 文件目录\n\n\n\n# 备注：文件目录为给对应 ssh 授权部分目录可以在 jpom 中使用，一般用于构建发布目录、ssh 文件管理\n\n\n# 第四步 配置构建信息\n\n> 配置项目查看构建信息，用于管理项目发布流程\n\n\n\n 1. 构建的项目（仓库）信息\n 2. 项目的构建命令（依赖的构建环境：maven、vue、python、php）\n    1. mvn clean package\n    2. npm run build\n    3. ......\n 3. 构建产物的目录（项目中的相对路径）\n    1. java 项目一般位于当前项目 target 目录下的某个文件\n    2. vue 项目一般位于当前项目 dist 文件夹\n 4. 发布目录：项目将发布服务器到哪个目录（需要已经配置到 ssh 文件目录中）\n 5. 发布命令：执行发布后执行的命令，如：配置停止、启动项目\n\n# java 项目发布命令示例\n\ntag="jpom-test-jar"\n\n# 检查进程状态\npid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\nif [ "$pid" != "" ]; then      \n  echo -n "boot ( pid $pid) is running" \n  echo \n  echo -n $"shutting down boot: "\n  pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n  if [ "$pid" != "" ]; then\n    echo "kill boot process"\n    # kill  "$pid"\n    kill -9 "$pid"\n  fi\nelse \n   echo "boot is stopped" \nfi\n# 启动项目\nnohup java -dappliction=$tag -jar /home/java/test/springboot-test-jar-0.0.1-snapshot.jar > /dev/null 2>&1 &\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n# 注意\n\n> 构建命令、发布命令都需要使用非阻塞命令',charsets:{cjk:!0},lastUpdated:"2023/12/20, 06:50:33",lastUpdatedTimestamp:1703055033e3},{title:"构建web镜像并推送至仓库",frontmatter:{title:"构建web镜像并推送至仓库",date:"2024-06-26T17:29:29.000Z",permalink:"/pages/practice/9c1641/",categories:["docs","实践案例","docker"],author:{name:"Smith",link:"https://gitee.com/autools"},tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/011.docker/9997.V2.11.X/0111.%E6%9E%84%E5%BB%BAweb%E9%95%9C%E5%83%8F%E5%B9%B6%E6%8E%A8%E9%80%81%E8%87%B3%E4%BB%93%E5%BA%93.html",relativePath:"实践案例/011.docker/9997.V2.11.X/0111.构建web镜像并推送至仓库.md",key:"v-d1395446",path:"/pages/practice/9c1641/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:205},{level:2,title:"操作指南",slug:"操作指南",normalizedTitle:"操作指南",charIndex:451},{level:3,title:"配置 docker 到 Jpom",slug:"配置-docker-到-jpom",normalizedTitle:"配置 docker 到 jpom",charIndex:460},{level:3,title:"配置 docker 仓库授权",slug:"配置-docker-仓库授权",normalizedTitle:"配置 docker 仓库授权",charIndex:713},{level:3,title:"配置项目仓库",slug:"配置项目仓库",normalizedTitle:"配置项目仓库",charIndex:771},{level:3,title:"配置在线构建",slug:"配置在线构建",normalizedTitle:"配置在线构建",charIndex:792},{level:3,title:"执行构建",slug:"执行构建",normalizedTitle:"执行构建",charIndex:1989},{level:3,title:"查看远程仓库中的镜像",slug:"查看远程仓库中的镜像",normalizedTitle:"查看远程仓库中的镜像",charIndex:2307},{level:2,title:"补充说明",slug:"补充说明",normalizedTitle:"补充说明",charIndex:2360},{level:3,title:"命令空间",slug:"命令空间",normalizedTitle:"命令空间",charIndex:2414},{level:3,title:"镜像仓库",slug:"镜像仓库",normalizedTitle:"镜像仓库",charIndex:738},{level:2,title:"附件",slug:"附件",normalizedTitle:"附件",charIndex:2436}],headersStr:"前言 需要准备的环境 操作指南 配置 docker 到 Jpom 配置 docker 仓库授权 配置项目仓库 配置在线构建 执行构建 查看远程仓库中的镜像 补充说明 命令空间 镜像仓库 附件",content:"# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 Jpom 中的容器构建来实现构建 docker 镜像并推送到远程仓库的流程\n\n需要使用到的功能有：\n\n 1. 仓库管理\n 2. 在线构建 -> 构建列表：将仓库代码打包出运行文件\n 3. docker 管理\n 4. 在线构建发布到 docker 镜像并推送到远程仓库\n\n> 注意：本文采用一键安装同时基于 2.11.6版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端（已经安装好、并且配置好了 node 环境）\n 2. 一个 web 项目仓库 并且已经有 DockerFile 文件\n 3. nginx配置文件，下文会贴出示例\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * Docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 Jpom 服务端的方式\n\n案例仓库地址：https://gitee.com/autools/vue-demo\n\n\n# 操作指南\n\n\n# 配置 docker 到 Jpom\n\n这个步骤主要是在 Jpom 添加 docker 服务，这样可以使用 Jpom 来管理 docker\n\n详细操作步骤：操作文档>> (本文默认您已经配置好了)\n\n\n\n这里我们为 docker 添加一个标签值为：local （注意这个值后续会用到）\n\n\n\n> 如果服务端所在服务器中存在 docker 建议使用自动探测方式来添加\n\n> 本文因为服务端所在的服务器存在 docker，所以 docker 地址为：unix:///var/run/docker.sock\n\n\n# 配置 docker 仓库授权\n\n本次采用阿里云容器镜像仓库为示例，其他 docker 仓库基本大同小异\n\n\n\n\n# 配置项目仓库\n\n\n\n仓库目录截图\n\n\n# 配置在线构建\n\n\n\n\n\n仓库构建命令： DockerFile\n\n  # 基础镜像 目前仅支持 ubuntu-latest\n  runsOn: ubuntu-latest\n  # 使用哪个 docker 构建,填写 docker 标签 默认查询可用的第一个,如果 tag 查询出多个也选择第一个结果\n  fromTag: local\n  steps:\n    - uses: node\n      version: 16.3.0\n  # 将此目录缓存到全局（多个构建可以共享此缓存目录）\n      type: global\n    - run: npm config set registry https://registry.npmmirror.com\n  # 内置变量 ${JPOM_WORKING_DIR} ${JPOM_BUILD_ID}\n    - run: cd  ${JPOM_WORKING_DIR}/ && npm i && npm run build\n  # 给容器新增环境变量\n  env:\n    NODE_OPTIONS: --max-old-space-size=900\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n您需要根据的项目来确定打包命令\n\n仓库产物目录：dist 您需要根据的项目来确定产物目录（不了解产物目录该怎么填写的可以查看：说明文档）\n\n执行容器：这里填写在 Jpom 添加 docker 的标签值 ，我们前面为 docker 添加的标签值为 local，这里我们填它即可\n\n> 执行容器指使用哪个 docker 构建,填写 docker 标签（ 标签在 docker 编辑页面配置） 默认查询可用的第一个,如果 tag 查询出多个将依次构建\n\n镜像 tag：registry.cn-shanghai.aliyuncs.com/jpom-demo/vue-demo:1.1\n\n这里注意：一定要写对命名空间不然没有办法正常推送到远程仓库\n\n> 容器标签,如：xxxx:latest 多个使用逗号隔开\n> \n> 这里根据您您的项目情况来填写您需要的镜像标签名，注意这里支持使用仓库目录下的变量文件替换变量来实现动态标签名（tag 名）\n\n> 在 2.9.19+ 版本 需要手动配置 附加环境变量 来实现加载仓库目录下 .env 文件环境变量\n\n> 使用变量替换示例：xxxx:${VERSION}，添加 附加环境变量 .env 文件 后，如果 .env 文件存在 VERSION=1.2 那么替换后为：xxxx:1.2\n\nDockerfile：这里添加的 `Dockerfile\n\n> 如果您的 Dockerfile 在仓库根路径，直接填写对应的文件名即可。这里支持二级目录的作用主要是用于指定到二级目录里面执行构建，因为部分 Dockerfile 里面 ADD COPY 指令是相对路径的情况\n\n版本递增\n\n> 开启 dockerTag 版本递增后将在每次构建时自动将版本号最后一位数字同步为构建序号ID\n> \n> 如：当前构建为第 100 次构建\n> \n> testtag:1.0 -> testtag:1.100\n> \n> testtag:1.0.release -> testtag:1.100.release\n> \n> 如果没有匹配到数字将忽略递增操作\n\n\n# 执行构建\n\n\n\n\n\n这里的镜像标签最终转换为：registry.cn-shanghai.aliyuncs.com/jpom-demo/vue-demo:1.1\n\n\n\n\n# 查看远程仓库中的镜像\n\n\n\n至此我们就可以通过 Jpom 来实现构建镜像并且可以推送到远程仓库了\n\n\n# 补充说明\n\n使用阿里云镜像仓库需要创建命名空间、镜像仓库，具体操作可以登录阿里云镜像仓库控制台查看\n\n\n# 命令空间\n\n\n\n\n# 镜像仓库\n\n\n\n\n# 附件\n\nDockerFile\n\n# production environment\nFROM library/nginx:1.18.0-alpine\nCOPY  ${JPOM_WORKING_DIR}/build /usr/share/nginx/html\nCOPY tools/default.conf /etc/nginx/conf.d/default.conf\n\n\n1\n2\n3\n4\n",normalizedContent:"# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 jpom 中的容器构建来实现构建 docker 镜像并推送到远程仓库的流程\n\n需要使用到的功能有：\n\n 1. 仓库管理\n 2. 在线构建 -> 构建列表：将仓库代码打包出运行文件\n 3. docker 管理\n 4. 在线构建发布到 docker 镜像并推送到远程仓库\n\n> 注意：本文采用一键安装同时基于 2.11.6版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. jpom 服务端（已经安装好、并且配置好了 node 环境）\n 2. 一个 web 项目仓库 并且已经有 dockerfile 文件\n 3. nginx配置文件，下文会贴出示例\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 jpom 服务端的方式\n\n案例仓库地址：https://gitee.com/autools/vue-demo\n\n\n# 操作指南\n\n\n# 配置 docker 到 jpom\n\n这个步骤主要是在 jpom 添加 docker 服务，这样可以使用 jpom 来管理 docker\n\n详细操作步骤：操作文档>> (本文默认您已经配置好了)\n\n\n\n这里我们为 docker 添加一个标签值为：local （注意这个值后续会用到）\n\n\n\n> 如果服务端所在服务器中存在 docker 建议使用自动探测方式来添加\n\n> 本文因为服务端所在的服务器存在 docker，所以 docker 地址为：unix:///var/run/docker.sock\n\n\n# 配置 docker 仓库授权\n\n本次采用阿里云容器镜像仓库为示例，其他 docker 仓库基本大同小异\n\n\n\n\n# 配置项目仓库\n\n\n\n仓库目录截图\n\n\n# 配置在线构建\n\n\n\n\n\n仓库构建命令： dockerfile\n\n  # 基础镜像 目前仅支持 ubuntu-latest\n  runson: ubuntu-latest\n  # 使用哪个 docker 构建,填写 docker 标签 默认查询可用的第一个,如果 tag 查询出多个也选择第一个结果\n  fromtag: local\n  steps:\n    - uses: node\n      version: 16.3.0\n  # 将此目录缓存到全局（多个构建可以共享此缓存目录）\n      type: global\n    - run: npm config set registry https://registry.npmmirror.com\n  # 内置变量 ${jpom_working_dir} ${jpom_build_id}\n    - run: cd  ${jpom_working_dir}/ && npm i && npm run build\n  # 给容器新增环境变量\n  env:\n    node_options: --max-old-space-size=900\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n您需要根据的项目来确定打包命令\n\n仓库产物目录：dist 您需要根据的项目来确定产物目录（不了解产物目录该怎么填写的可以查看：说明文档）\n\n执行容器：这里填写在 jpom 添加 docker 的标签值 ，我们前面为 docker 添加的标签值为 local，这里我们填它即可\n\n> 执行容器指使用哪个 docker 构建,填写 docker 标签（ 标签在 docker 编辑页面配置） 默认查询可用的第一个,如果 tag 查询出多个将依次构建\n\n镜像 tag：registry.cn-shanghai.aliyuncs.com/jpom-demo/vue-demo:1.1\n\n这里注意：一定要写对命名空间不然没有办法正常推送到远程仓库\n\n> 容器标签,如：xxxx:latest 多个使用逗号隔开\n> \n> 这里根据您您的项目情况来填写您需要的镜像标签名，注意这里支持使用仓库目录下的变量文件替换变量来实现动态标签名（tag 名）\n\n> 在 2.9.19+ 版本 需要手动配置 附加环境变量 来实现加载仓库目录下 .env 文件环境变量\n\n> 使用变量替换示例：xxxx:${version}，添加 附加环境变量 .env 文件 后，如果 .env 文件存在 version=1.2 那么替换后为：xxxx:1.2\n\ndockerfile：这里添加的 `dockerfile\n\n> 如果您的 dockerfile 在仓库根路径，直接填写对应的文件名即可。这里支持二级目录的作用主要是用于指定到二级目录里面执行构建，因为部分 dockerfile 里面 add copy 指令是相对路径的情况\n\n版本递增\n\n> 开启 dockertag 版本递增后将在每次构建时自动将版本号最后一位数字同步为构建序号id\n> \n> 如：当前构建为第 100 次构建\n> \n> testtag:1.0 -> testtag:1.100\n> \n> testtag:1.0.release -> testtag:1.100.release\n> \n> 如果没有匹配到数字将忽略递增操作\n\n\n# 执行构建\n\n\n\n\n\n这里的镜像标签最终转换为：registry.cn-shanghai.aliyuncs.com/jpom-demo/vue-demo:1.1\n\n\n\n\n# 查看远程仓库中的镜像\n\n\n\n至此我们就可以通过 jpom 来实现构建镜像并且可以推送到远程仓库了\n\n\n# 补充说明\n\n使用阿里云镜像仓库需要创建命名空间、镜像仓库，具体操作可以登录阿里云镜像仓库控制台查看\n\n\n# 命令空间\n\n\n\n\n# 镜像仓库\n\n\n\n\n# 附件\n\ndockerfile\n\n# production environment\nfrom library/nginx:1.18.0-alpine\ncopy  ${jpom_working_dir}/build /usr/share/nginx/html\ncopy tools/default.conf /etc/nginx/conf.d/default.conf\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"在线构建 docker 镜像",frontmatter:{title:"在线构建 docker 镜像",date:"2022-12-03T14:03:18.000Z",permalink:"/pages/practice/d4a57d/",categories:["docs","实践案例","docker"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/011.docker/9998.V2.9.X/0108.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA%20docker%20%E9%95%9C%E5%83%8F.html",relativePath:"实践案例/011.docker/9998.V2.9.X/0108.在线构建 docker 镜像.md",key:"v-2be7dac6",path:"/pages/practice/d4a57d/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:190},{level:2,title:"操作指南",slug:"操作指南",normalizedTitle:"操作指南",charIndex:445},{level:3,title:"配置 docker 到 Jpom",slug:"配置-docker-到-jpom",normalizedTitle:"配置 docker 到 jpom",charIndex:454},{level:3,title:"配置项目仓库",slug:"配置项目仓库",normalizedTitle:"配置项目仓库",charIndex:706},{level:3,title:"配置在线构建",slug:"配置在线构建",normalizedTitle:"配置在线构建",charIndex:729},{level:3,title:"执行构建",slug:"执行构建",normalizedTitle:"执行构建",charIndex:1420},{level:3,title:"管理镜像",slug:"管理镜像",normalizedTitle:"管理镜像",charIndex:1842},{level:3,title:"通过镜像创建容器",slug:"通过镜像创建容器",normalizedTitle:"通过镜像创建容器",charIndex:1893},{level:2,title:"附件",slug:"附件",normalizedTitle:"附件",charIndex:1956}],headersStr:"前言 需要准备的环境 操作指南 配置 docker 到 Jpom 配置项目仓库 配置在线构建 执行构建 管理镜像 通过镜像创建容器 附件",content:'# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 Jpom 中的在线构建来实现构建 docker 镜像的流程\n\n需要使用到的功能有：\n\n 1. 仓库管理\n 2. 在线构建 -> 本地构建：将仓库代码打包出运行文件\n 3. docker 管理\n 4. 在线构建发布到 docker 镜像\n\n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端（已经安装好、并且配置好了 maven 环境）\n 2. 一个 Java 项目仓库 并且已经有 DockerFile 文件\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * Docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 Jpom 服务端的方式\n\n案例仓库地址：https://gitee.com/keepbx/Jpom-demo-case/ -> springboot-test-jar\n\n\n# 操作指南\n\n\n# 配置 docker 到 Jpom\n\n这个步骤主要是在 Jpom 添加 docker 服务，这样可以使用 Jpom 来管理 docker\n\n详细操作步骤：操作文档>> (本文默认您已经配置好了)\n\n\n\n这里我们为 docker 添加一个标签值为：test （注意这个值后续会用到）\n\n\n\n> 如果服务端所在服务器中存在 docker 建议使用自动探测方式来添加\n\n> 本文因为服务端所在的服务器存在 docker，所以 docker 地址为：unix:///var/run/docker.sock\n\n\n# 配置项目仓库\n\n\n\n仓库目录截图\n\n\n\n\n# 配置在线构建\n\n\n\n仓库构建命令：mvn clean package -DskipTests 您需要根据的项目来确定打包命令\n\n仓库产物目录：springboot-test-jar/target/springboot-test-jar-0.0.1-SNAPSHOT.jar 您需要根据的项目来确定产物目录（不了解产物目录该怎么填写的可以查看：说明文档）\n\n执行容器：这里填写在 Jpom 添加 docker 的标签值 ，我们前面为 docker 添加的标签值为 test，这里我们填它即可\n\n> 执行容器指使用哪个 docker 构建,填写 docker 标签（ 标签在 docker 编辑页面配置） 默认查询可用的第一个,如果 tag 查询出多个将依次构建\n\n镜像 tag：jpom-test:1.0\n\n> 容器标签,如：xxxx:latest 多个使用逗号隔开\n> \n> 这里根据您您的项目情况来填写您需要的镜像标签名，注意这里支持使用仓库目录下的变量文件替换变量来实现动态标签名（tag 名）\n\n> 在 2.9.19+ 版本 需要手动配置 附加环境变量 来实现加载仓库目录下 .env 文件环境变量\n\n> 使用变量替换示例：xxxx:${VERSION}，添加 附加环境变量 .env 文件 后，如果 .env 文件存在 VERSION=1.2 那么替换后为：xxxx:1.2\n\nDockerfile：这里添加的 springboot-test-jar:springboot-test-jar/Dockerfile\n\n> 指使用哪个仓库里面的哪个 Dockerfile 文件来执行构建操作,如果多文件夹查看可以指定二级目录如果 springboot-test-jar:springboot-test-jar/Dockerfile\n\n> 如果您的 Dockerfile 在仓库根路径，直接填写对应的文件名即可。这里支持二级目录的作用主要是用于指定到二级目录里面执行构建，因为部分 Dockerfile 里面 ADD COPY 指令是相对路径的情况\n\n版本递增\n\n> 开启 dockerTag 版本递增后将在每次构建时自动将版本号最后一位数字同步为构建序号ID\n> \n> 如：当前构建为第 100 次构建\n> \n> testtag:1.0 -> testtag:1.100\n> \n> testtag:1.0.release -> testtag:1.100.release\n> \n> 如果没有匹配到数字将忽略递增操作\n\n\n# 执行构建\n\n\n\n\n\n这里可以看到我们的镜像标签最终转换为：jpom-test:1.1\n\n\n\n\n# 管理镜像\n\n\n\n\n\n到这里我们可以看到我们构建出现的镜像了，接下来就是我们将这个镜像运行起来\n\n\n# 通过镜像创建容器\n\n\n\n\n\n\n\n至此我们就可以通过 Jpom 来实现构建镜像，通过镜像创建容器并且可以查看容器日志了\n\n\n# 附件\n\nDockerFile\n\nFROM openjdk:8\n\nENV WORK_PATH=/home/jpom-test/\n\nENV RUN_LOG=/home/jpom-test-log/\n\nENV JAR_NAME=springboot-test-jar-0.0.1-SNAPSHOT.jar\n\nENV CODE_DIR=${WORK_PATH}\n\nWORKDIR ${WORK_PATH}\n\n#ADD  ./target/ .\n\nADD ./target ${WORK_PATH}\n\nADD ./script/run.sh ${WORK_PATH}/run.sh\n\nEXPOSE 8084\n\n#ENTRYPOINT [ "java","-Djava.security.egd=file:/dev/./urandom", "-jar","/${jarName}"]\nENTRYPOINT ["/bin/bash", "/home/jpom-test/run.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 jpom 中的在线构建来实现构建 docker 镜像的流程\n\n需要使用到的功能有：\n\n 1. 仓库管理\n 2. 在线构建 -> 本地构建：将仓库代码打包出运行文件\n 3. docker 管理\n 4. 在线构建发布到 docker 镜像\n\n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. jpom 服务端（已经安装好、并且配置好了 maven 环境）\n 2. 一个 java 项目仓库 并且已经有 dockerfile 文件\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 jpom 服务端的方式\n\n案例仓库地址：https://gitee.com/keepbx/jpom-demo-case/ -> springboot-test-jar\n\n\n# 操作指南\n\n\n# 配置 docker 到 jpom\n\n这个步骤主要是在 jpom 添加 docker 服务，这样可以使用 jpom 来管理 docker\n\n详细操作步骤：操作文档>> (本文默认您已经配置好了)\n\n\n\n这里我们为 docker 添加一个标签值为：test （注意这个值后续会用到）\n\n\n\n> 如果服务端所在服务器中存在 docker 建议使用自动探测方式来添加\n\n> 本文因为服务端所在的服务器存在 docker，所以 docker 地址为：unix:///var/run/docker.sock\n\n\n# 配置项目仓库\n\n\n\n仓库目录截图\n\n\n\n\n# 配置在线构建\n\n\n\n仓库构建命令：mvn clean package -dskiptests 您需要根据的项目来确定打包命令\n\n仓库产物目录：springboot-test-jar/target/springboot-test-jar-0.0.1-snapshot.jar 您需要根据的项目来确定产物目录（不了解产物目录该怎么填写的可以查看：说明文档）\n\n执行容器：这里填写在 jpom 添加 docker 的标签值 ，我们前面为 docker 添加的标签值为 test，这里我们填它即可\n\n> 执行容器指使用哪个 docker 构建,填写 docker 标签（ 标签在 docker 编辑页面配置） 默认查询可用的第一个,如果 tag 查询出多个将依次构建\n\n镜像 tag：jpom-test:1.0\n\n> 容器标签,如：xxxx:latest 多个使用逗号隔开\n> \n> 这里根据您您的项目情况来填写您需要的镜像标签名，注意这里支持使用仓库目录下的变量文件替换变量来实现动态标签名（tag 名）\n\n> 在 2.9.19+ 版本 需要手动配置 附加环境变量 来实现加载仓库目录下 .env 文件环境变量\n\n> 使用变量替换示例：xxxx:${version}，添加 附加环境变量 .env 文件 后，如果 .env 文件存在 version=1.2 那么替换后为：xxxx:1.2\n\ndockerfile：这里添加的 springboot-test-jar:springboot-test-jar/dockerfile\n\n> 指使用哪个仓库里面的哪个 dockerfile 文件来执行构建操作,如果多文件夹查看可以指定二级目录如果 springboot-test-jar:springboot-test-jar/dockerfile\n\n> 如果您的 dockerfile 在仓库根路径，直接填写对应的文件名即可。这里支持二级目录的作用主要是用于指定到二级目录里面执行构建，因为部分 dockerfile 里面 add copy 指令是相对路径的情况\n\n版本递增\n\n> 开启 dockertag 版本递增后将在每次构建时自动将版本号最后一位数字同步为构建序号id\n> \n> 如：当前构建为第 100 次构建\n> \n> testtag:1.0 -> testtag:1.100\n> \n> testtag:1.0.release -> testtag:1.100.release\n> \n> 如果没有匹配到数字将忽略递增操作\n\n\n# 执行构建\n\n\n\n\n\n这里可以看到我们的镜像标签最终转换为：jpom-test:1.1\n\n\n\n\n# 管理镜像\n\n\n\n\n\n到这里我们可以看到我们构建出现的镜像了，接下来就是我们将这个镜像运行起来\n\n\n# 通过镜像创建容器\n\n\n\n\n\n\n\n至此我们就可以通过 jpom 来实现构建镜像，通过镜像创建容器并且可以查看容器日志了\n\n\n# 附件\n\ndockerfile\n\nfrom openjdk:8\n\nenv work_path=/home/jpom-test/\n\nenv run_log=/home/jpom-test-log/\n\nenv jar_name=springboot-test-jar-0.0.1-snapshot.jar\n\nenv code_dir=${work_path}\n\nworkdir ${work_path}\n\n#add  ./target/ .\n\nadd ./target ${work_path}\n\nadd ./script/run.sh ${work_path}/run.sh\n\nexpose 8084\n\n#entrypoint [ "java","-djava.security.egd=file:/dev/./urandom", "-jar","/${jarname}"]\nentrypoint ["/bin/bash", "/home/jpom-test/run.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"docker 安装 redis 流程",frontmatter:{title:"docker 安装 redis 流程",date:"2022-12-04T13:40:49.000Z",permalink:"/pages/practice/988404/",categories:["docs","实践案例","docker"],author:{name:"碎花爱洋裙",link:"https://lizhongyuan3.gitee.io/"},tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/011.docker/9998.V2.9.X/0110.%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85%20reids%20%E6%B5%81%E7%A8%8B.html",relativePath:"实践案例/011.docker/9998.V2.9.X/0110.界面安装 reids 流程.md",key:"v-3f9189c1",path:"/pages/practice/988404/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:99},{level:2,title:"操作指南",slug:"操作指南",normalizedTitle:"操作指南",charIndex:262},{level:3,title:"下载 redis 镜像",slug:"下载-redis-镜像",normalizedTitle:"下载 redis 镜像",charIndex:271},{level:3,title:"使用当前镜像创建容器",slug:"使用当前镜像创建容器",normalizedTitle:"使用当前镜像创建容器",charIndex:303},{level:3,title:"参数设置",slug:"参数设置",normalizedTitle:"参数设置",charIndex:320},{level:3,title:"自定义配置文件",slug:"自定义配置文件",normalizedTitle:"自定义配置文件",charIndex:504}],headersStr:"前言 需要准备的环境 操作指南 下载 redis 镜像 使用当前镜像创建容器 参数设置 自定义配置文件",content:"# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 Jpom 中的 docker ui 界面管理实现安装 reids 流程\n> \n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解\n\n\n# 需要准备的环境\n\n 1. 一台已经安装 docker 的服务器\n 2. Jpom 服务端（已经安装好、并且配置好了 docker）\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * Docker 容器安装\n * 离线安装\n * Jpom 配置 Docker 文档\n\n\n# 操作指南\n\n\n# 下载 redis 镜像\n\n\n\n\n\n等待下载结束即可\n\n\n\n\n# 使用当前镜像创建容器\n\n\n\n\n# 参数设置\n\n\n\n 1. 命令中的 redis-server 必须要填写，否则启动日志会报错 /usr/local/bin/docker-entrypoint.sh: 24: exec: : Permission denied\n 2. appendonly:redis启动后数据持久化\n 3. requirepass:为redis设置访问密码\n\n启动成功效果图\n\n\n# 自定义配置文件\n\n使用docker的方式安装的redis默认没有配置文件 因此，需要去redis的官方网站下载对应版本的redis，使用里面的配置文件即可 redis 下载地址\n\n",normalizedContent:"# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 jpom 中的 docker ui 界面管理实现安装 reids 流程\n> \n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解\n\n\n# 需要准备的环境\n\n 1. 一台已经安装 docker 的服务器\n 2. jpom 服务端（已经安装好、并且配置好了 docker）\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * docker 容器安装\n * 离线安装\n * jpom 配置 docker 文档\n\n\n# 操作指南\n\n\n# 下载 redis 镜像\n\n\n\n\n\n等待下载结束即可\n\n\n\n\n# 使用当前镜像创建容器\n\n\n\n\n# 参数设置\n\n\n\n 1. 命令中的 redis-server 必须要填写，否则启动日志会报错 /usr/local/bin/docker-entrypoint.sh: 24: exec: : permission denied\n 2. appendonly:redis启动后数据持久化\n 3. requirepass:为redis设置访问密码\n\n启动成功效果图\n\n\n# 自定义配置文件\n\n使用docker的方式安装的redis默认没有配置文件 因此，需要去redis的官方网站下载对应版本的redis，使用里面的配置文件即可 redis 下载地址\n\n",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"在线构建 docker 镜像并推送至远程仓库",frontmatter:{title:"在线构建 docker 镜像并推送至远程仓库",date:"2022-12-03T17:29:29.000Z",permalink:"/pages/practice/9c1640/",categories:["docs","实践案例","docker"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/011.docker/9998.V2.9.X/0109.%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F%E5%B9%B6%E6%8E%A8%E9%80%81%E8%87%B3%E4%BB%93%E5%BA%93.html",relativePath:"实践案例/011.docker/9998.V2.9.X/0109.构建镜像并推送至仓库.md",key:"v-f0e78466",path:"/pages/practice/9c1640/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:206},{level:2,title:"操作指南",slug:"操作指南",normalizedTitle:"操作指南",charIndex:461},{level:3,title:"配置 docker 到 Jpom",slug:"配置-docker-到-jpom",normalizedTitle:"配置 docker 到 jpom",charIndex:470},{level:3,title:"配置 docker 仓库授权",slug:"配置-docker-仓库授权",normalizedTitle:"配置 docker 仓库授权",charIndex:722},{level:3,title:"配置项目仓库",slug:"配置项目仓库",normalizedTitle:"配置项目仓库",charIndex:780},{level:3,title:"配置在线构建",slug:"配置在线构建",normalizedTitle:"配置在线构建",charIndex:803},{level:3,title:"执行构建",slug:"执行构建",normalizedTitle:"执行构建",charIndex:1593},{level:3,title:"查看远程仓库中的镜像",slug:"查看远程仓库中的镜像",normalizedTitle:"查看远程仓库中的镜像",charIndex:2064},{level:2,title:"补充说明",slug:"补充说明",normalizedTitle:"补充说明",charIndex:2117},{level:3,title:"命令空间",slug:"命令空间",normalizedTitle:"命令空间",charIndex:2171},{level:3,title:"镜像仓库",slug:"镜像仓库",normalizedTitle:"镜像仓库",charIndex:747},{level:2,title:"附件",slug:"附件",normalizedTitle:"附件",charIndex:2193}],headersStr:"前言 需要准备的环境 操作指南 配置 docker 到 Jpom 配置 docker 仓库授权 配置项目仓库 配置在线构建 执行构建 查看远程仓库中的镜像 补充说明 命令空间 镜像仓库 附件",content:'# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 Jpom 中的在线构建来实现构建 docker 镜像并推送到远程仓库的流程\n\n需要使用到的功能有：\n\n 1. 仓库管理\n 2. 在线构建 -> 本地构建：将仓库代码打包出运行文件\n 3. docker 管理\n 4. 在线构建发布到 docker 镜像并推送到远程仓库\n\n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端（已经安装好、并且配置好了 maven 环境）\n 2. 一个 Java 项目仓库 并且已经有 DockerFile 文件\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * Docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 Jpom 服务端的方式\n\n案例仓库地址：https://gitee.com/keepbx/Jpom-demo-case/ -> springboot-test-jar\n\n\n# 操作指南\n\n\n# 配置 docker 到 Jpom\n\n这个步骤主要是在 Jpom 添加 docker 服务，这样可以使用 Jpom 来管理 docker\n\n详细操作步骤：操作文档>> (本文默认您已经配置好了)\n\n\n\n这里我们为 docker 添加一个标签值为：test （注意这个值后续会用到）\n\n\n\n> 如果服务端所在服务器中存在 docker 建议使用自动探测方式来添加\n\n> 本文因为服务端所在的服务器存在 docker，所以 docker 地址为：unix:///var/run/docker.sock\n\n\n# 配置 docker 仓库授权\n\n本次采用阿里云容器镜像仓库为示例，其他 docker 仓库基本大同小异\n\n\n\n\n# 配置项目仓库\n\n\n\n仓库目录截图\n\n\n\n\n# 配置在线构建\n\n\n\n\n\n仓库构建命令：mvn clean package -DskipTests 您需要根据的项目来确定打包命令\n\n仓库产物目录：springboot-test-jar/target/springboot-test-jar-0.0.1-SNAPSHOT.jar 您需要根据的项目来确定产物目录（不了解产物目录该怎么填写的可以查看：说明文档）\n\n执行容器：这里填写在 Jpom 添加 docker 的标签值 ，我们前面为 docker 添加的标签值为 test，这里我们填它即可\n\n> 执行容器指使用哪个 docker 构建,填写 docker 标签（ 标签在 docker 编辑页面配置） 默认查询可用的第一个,如果 tag 查询出多个将依次构建\n\n镜像 tag：registry.cn-shanghai.aliyuncs.com/jpom-demo/jpomtestdocker:1.0\n\n这里注意：一定要写对命名空间不然没有办法正常推送到远程仓库\n\n阿里云仓库可以参考页面提示\n\n\n\n> 容器标签,如：xxxx:latest 多个使用逗号隔开\n> \n> 这里根据您您的项目情况来填写您需要的镜像标签名，注意这里支持使用仓库目录下的变量文件替换变量来实现动态标签名（tag 名）\n\n> 在 2.9.19+ 版本 需要手动配置 附加环境变量 来实现加载仓库目录下 .env 文件环境变量\n\n> 使用变量替换示例：xxxx:${VERSION}，添加 附加环境变量 .env 文件 后，如果 .env 文件存在 VERSION=1.2 那么替换后为：xxxx:1.2\n\nDockerfile：这里添加的 springboot-test-jar:springboot-test-jar/Dockerfile\n\n> 指使用哪个仓库里面的哪个 Dockerfile 文件来执行构建操作,如果多文件夹查看可以指定二级目录如果 springboot-test-jar:springboot-test-jar/Dockerfile\n\n> 如果您的 Dockerfile 在仓库根路径，直接填写对应的文件名即可。这里支持二级目录的作用主要是用于指定到二级目录里面执行构建，因为部分 Dockerfile 里面 ADD COPY 指令是相对路径的情况\n\n版本递增\n\n> 开启 dockerTag 版本递增后将在每次构建时自动将版本号最后一位数字同步为构建序号ID\n> \n> 如：当前构建为第 100 次构建\n> \n> testtag:1.0 -> testtag:1.100\n> \n> testtag:1.0.release -> testtag:1.100.release\n> \n> 如果没有匹配到数字将忽略递增操作\n\n\n# 执行构建\n\n\n\n\n\n这里可以看到我们的镜像标签最终转换为：registry.cn-shanghai.aliyuncs.com/jpom-demo/jpomtestdocker:1.1\n\n\n\n\n# 查看远程仓库中的镜像\n\n\n\n至此我们就可以通过 Jpom 来实现构建镜像并且可以推送到远程仓库了\n\n\n# 补充说明\n\n使用阿里云镜像仓库需要创建命名空间、镜像仓库，具体操作可以登录阿里云镜像仓库控制台查看\n\n\n# 命令空间\n\n\n\n\n# 镜像仓库\n\n\n\n\n# 附件\n\nDockerFile\n\nFROM openjdk:8\n\nENV WORK_PATH=/home/jpom-test/\n\nENV RUN_LOG=/home/jpom-test-log/\n\nENV JAR_NAME=springboot-test-jar-0.0.1-SNAPSHOT.jar\n\nENV CODE_DIR=${WORK_PATH}\n\nWORKDIR ${WORK_PATH}\n\n#ADD  ./target/ .\n\nADD ./target ${WORK_PATH}\n\nADD ./script/run.sh ${WORK_PATH}/run.sh\n\nEXPOSE 8084\n\n#ENTRYPOINT [ "java","-Djava.security.egd=file:/dev/./urandom", "-jar","/${jarName}"]\nENTRYPOINT ["/bin/bash", "/home/jpom-test/run.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',normalizedContent:'# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 jpom 中的在线构建来实现构建 docker 镜像并推送到远程仓库的流程\n\n需要使用到的功能有：\n\n 1. 仓库管理\n 2. 在线构建 -> 本地构建：将仓库代码打包出运行文件\n 3. docker 管理\n 4. 在线构建发布到 docker 镜像并推送到远程仓库\n\n> 注意：本文采用一键安装同时基于 2.9.18 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. jpom 服务端（已经安装好、并且配置好了 maven 环境）\n 2. 一个 java 项目仓库 并且已经有 dockerfile 文件\n\n本文就不再从零开始讲解安装教程，如果有不知道该如何安装的可以查看相关文档\n\n * 一键安装实践\n * docker 容器安装\n * 离线安装\n\n本文使用物理机直接安装 jpom 服务端的方式\n\n案例仓库地址：https://gitee.com/keepbx/jpom-demo-case/ -> springboot-test-jar\n\n\n# 操作指南\n\n\n# 配置 docker 到 jpom\n\n这个步骤主要是在 jpom 添加 docker 服务，这样可以使用 jpom 来管理 docker\n\n详细操作步骤：操作文档>> (本文默认您已经配置好了)\n\n\n\n这里我们为 docker 添加一个标签值为：test （注意这个值后续会用到）\n\n\n\n> 如果服务端所在服务器中存在 docker 建议使用自动探测方式来添加\n\n> 本文因为服务端所在的服务器存在 docker，所以 docker 地址为：unix:///var/run/docker.sock\n\n\n# 配置 docker 仓库授权\n\n本次采用阿里云容器镜像仓库为示例，其他 docker 仓库基本大同小异\n\n\n\n\n# 配置项目仓库\n\n\n\n仓库目录截图\n\n\n\n\n# 配置在线构建\n\n\n\n\n\n仓库构建命令：mvn clean package -dskiptests 您需要根据的项目来确定打包命令\n\n仓库产物目录：springboot-test-jar/target/springboot-test-jar-0.0.1-snapshot.jar 您需要根据的项目来确定产物目录（不了解产物目录该怎么填写的可以查看：说明文档）\n\n执行容器：这里填写在 jpom 添加 docker 的标签值 ，我们前面为 docker 添加的标签值为 test，这里我们填它即可\n\n> 执行容器指使用哪个 docker 构建,填写 docker 标签（ 标签在 docker 编辑页面配置） 默认查询可用的第一个,如果 tag 查询出多个将依次构建\n\n镜像 tag：registry.cn-shanghai.aliyuncs.com/jpom-demo/jpomtestdocker:1.0\n\n这里注意：一定要写对命名空间不然没有办法正常推送到远程仓库\n\n阿里云仓库可以参考页面提示\n\n\n\n> 容器标签,如：xxxx:latest 多个使用逗号隔开\n> \n> 这里根据您您的项目情况来填写您需要的镜像标签名，注意这里支持使用仓库目录下的变量文件替换变量来实现动态标签名（tag 名）\n\n> 在 2.9.19+ 版本 需要手动配置 附加环境变量 来实现加载仓库目录下 .env 文件环境变量\n\n> 使用变量替换示例：xxxx:${version}，添加 附加环境变量 .env 文件 后，如果 .env 文件存在 version=1.2 那么替换后为：xxxx:1.2\n\ndockerfile：这里添加的 springboot-test-jar:springboot-test-jar/dockerfile\n\n> 指使用哪个仓库里面的哪个 dockerfile 文件来执行构建操作,如果多文件夹查看可以指定二级目录如果 springboot-test-jar:springboot-test-jar/dockerfile\n\n> 如果您的 dockerfile 在仓库根路径，直接填写对应的文件名即可。这里支持二级目录的作用主要是用于指定到二级目录里面执行构建，因为部分 dockerfile 里面 add copy 指令是相对路径的情况\n\n版本递增\n\n> 开启 dockertag 版本递增后将在每次构建时自动将版本号最后一位数字同步为构建序号id\n> \n> 如：当前构建为第 100 次构建\n> \n> testtag:1.0 -> testtag:1.100\n> \n> testtag:1.0.release -> testtag:1.100.release\n> \n> 如果没有匹配到数字将忽略递增操作\n\n\n# 执行构建\n\n\n\n\n\n这里可以看到我们的镜像标签最终转换为：registry.cn-shanghai.aliyuncs.com/jpom-demo/jpomtestdocker:1.1\n\n\n\n\n# 查看远程仓库中的镜像\n\n\n\n至此我们就可以通过 jpom 来实现构建镜像并且可以推送到远程仓库了\n\n\n# 补充说明\n\n使用阿里云镜像仓库需要创建命名空间、镜像仓库，具体操作可以登录阿里云镜像仓库控制台查看\n\n\n# 命令空间\n\n\n\n\n# 镜像仓库\n\n\n\n\n# 附件\n\ndockerfile\n\nfrom openjdk:8\n\nenv work_path=/home/jpom-test/\n\nenv run_log=/home/jpom-test-log/\n\nenv jar_name=springboot-test-jar-0.0.1-snapshot.jar\n\nenv code_dir=${work_path}\n\nworkdir ${work_path}\n\n#add  ./target/ .\n\nadd ./target ${work_path}\n\nadd ./script/run.sh ${work_path}/run.sh\n\nexpose 8084\n\n#entrypoint [ "java","-djava.security.egd=file:/dev/./urandom", "-jar","/${jarname}"]\nentrypoint ["/bin/bash", "/home/jpom-test/run.sh"]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n',charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"管理编译安装的 nginx",frontmatter:{title:"管理编译安装的 nginx",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/node-nginx/",tags:["nginx"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/012.%E8%8A%82%E7%82%B9%E7%AE%A1%E7%90%86/9999.V2.8.X/0106.node-nginx.html",relativePath:"实践案例/012.节点管理/9999.V2.8.X/0106.node-nginx.md",key:"v-72a4fae5",path:"/pages/practice/node-nginx/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:168},{level:2,title:"操作步骤",slug:"操作步骤",normalizedTitle:"操作步骤",charIndex:247},{level:3,title:"第一步：安装 Jpom 服务端",slug:"第一步-安装-jpom-服务端",normalizedTitle:"第一步：安装 jpom 服务端",charIndex:256},{level:4,title:"执行命令后控制台输出如下",slug:"执行命令后控制台输出如下",normalizedTitle:"执行命令后控制台输出如下",charIndex:557},{level:3,title:"第二步：安装 Jpom 插件端",slug:"第二步-安装-jpom-插件端",normalizedTitle:"第二步：安装 jpom 插件端",charIndex:576},{level:3,title:"第三步：编译安装 nginx",slug:"第三步-编译安装-nginx",normalizedTitle:"第三步：编译安装 nginx",charIndex:887},{level:3,title:"第四步：初始化 Jpom 服务端和插件端",slug:"第四步-初始化-jpom-服务端和插件端",normalizedTitle:"第四步：初始化 jpom 服务端和插件端",charIndex:1599},{level:4,title:"初始化系统管理员",slug:"初始化系统管理员",normalizedTitle:"初始化系统管理员",charIndex:1714},{level:4,title:"添加 Jpom 节点",slug:"添加-jpom-节点",normalizedTitle:"添加 jpom 节点",charIndex:1789},{level:3,title:"第五步：在 Jpom 中配置 nginx",slug:"第五步-在-jpom-中配置-nginx",normalizedTitle:"第五步：在 jpom 中配置 nginx",charIndex:1889},{level:3,title:"第六步：愉快地使用 Jpom 在线编辑、管理 nginx",slug:"第六步-愉快地使用-jpom-在线编辑、管理-nginx",normalizedTitle:"第六步：愉快地使用 jpom 在线编辑、管理 nginx",charIndex:2153},{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:2186}],headersStr:"前言 需要准备的环境 操作步骤 第一步：安装 Jpom 服务端 执行命令后控制台输出如下 第二步：安装 Jpom 插件端 第三步：编译安装 nginx 第四步：初始化 Jpom 服务端和插件端 初始化系统管理员 添加 Jpom 节点 第五步：在 Jpom 中配置 nginx 第六步：愉快地使用 Jpom 在线编辑、管理 nginx 说明",content:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的节点 nginx 管理 （注意：本文采用一键安装）。\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 本文基于 2.8.4 版本讲解\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端、Jpom 插件端（安装 jpom 需要 java 环境）\n 2. 插件端所在服务器需要 nginx 环境\n\n\n# 操作步骤\n\n\n# 第一步：安装 Jpom 服务端\n\n> 目前安装 Jpom 服务端的方式有：一键安装、下载安装、编译打包安装、docker 安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装服务端\n\nmkdir -p /home/jpom/server && cd /home/jpom/server\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n# 第二步：安装 Jpom 插件端\n\n> 目前安装 Jpom 插件端的方式有：一键安装、下载安装、编译打包安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装插件端\n\nmkdir -p /home/jpom/agent && cd /home/jpom/agent\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Agent jdk\n\n\n1\n2\n3\n\n\n\n\n图 2 中圈出来第为插件端的账号密码\n\n\n# 第三步：编译安装 nginx\n\n 1. 安装各种依赖\n\n#gcc安装，nginx源码编译需要\nyum install -y gcc-c++\n\n#PCRE pcre-devel 安装，nginx 的 http 模块使用 pcre 来解析正则表达式\nyum install -y pcre pcre-devel\n\n#zlib安装，nginx 使用zlib对http包的内容进行gzip\nyum install -y zlib zlib-devel\n\n#OpenSSL 安装，强大的安全套接字层密码库，nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http）\nyum install -y openssl openssl-devel\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n 2. 使用 wget 命令下载\n\nmkdir -p /usr/local/nginx && cd /usr/local/nginx\n#下载版本号可根据目前官网最新稳定版自行调整\nwget -O nginx-1.20.2.tar.gz https://nginx.org/download/nginx-1.20.2.tar.gz\n\n\n1\n2\n3\n\n 3. 编译 nginx\n\n#根目录使用ls命令可以看到下载的nginx压缩包，然后解压\ntar -zxvf nginx-1.20.2.tar.gz\n\n#解压后进入目录\ncd nginx-1.20.2\n\n#使用默认配置\n./configure\n\n#编译安装\nmake\nmake install\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 第四步：初始化 Jpom 服务端和插件端\n\n访问：http://IP:2122 这里 ip 请更换为您服务器中第实际 ip\n\n如果无法访问请优先检查 Jpom 访问是否正常运行、服务端防火墙、云服务器的安全组规则等网络原因\n\n# 初始化系统管理员\n\n第一次使用系统需要设置一个系统管理员账号（系统管理员账号密码有强度要求，请安装提示设置。同时也请您牢记系统管理员账号）\n\n\n\n# 添加 Jpom 节点\n\n节点列表还没有任何节点，我们需要将我们之前安装等插件端添加到服务端中来\n\n\n\n\n\n\n\n图 3 中的节点密码为上面步骤中第四步中安装并启动插件端后控制台输出第账号和密码\n\n\n# 第五步：在 Jpom 中配置 nginx\n\n 1. 配置授权（白名单）信息\n    1. \n 2. 配置 nginx 服务\n    1. \n    2. \n    3. 填写的 /usr/local/nginx/sbin/nginx 为 nginx 执行文件绝对路径\n 3. 启动 nginx 服务\n    1. \n\n注意：\n\n 1. 服务名称请一定填写绝对路径\n 2. 如果已经启动的 nginx 再配置服务名称，需要先停止之前启动的服务再由 jpom 中启动，因为 jpom 中使用绝对路径来监控 nginx 状态\n\n\n# 第六步：愉快地使用 Jpom 在线编辑、管理 nginx\n\n\n# 说明\n\n * linux 系统中如果使用 yum 安装或者配置了服务，在配置 nginx 服务名称中则配置对应的服务名称，默认为 nginx\n * windows 系统中则需要为 nginx 配置服务才能正常监控 nginx 状态，建议使用 winsw 来配置",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的节点 nginx 管理 （注意：本文采用一键安装）。\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 本文基于 2.8.4 版本讲解\n\n\n# 需要准备的环境\n\n 1. jpom 服务端、jpom 插件端（安装 jpom 需要 java 环境）\n 2. 插件端所在服务器需要 nginx 环境\n\n\n# 操作步骤\n\n\n# 第一步：安装 jpom 服务端\n\n> 目前安装 jpom 服务端的方式有：一键安装、下载安装、编译打包安装、docker 安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装服务端\n\nmkdir -p /home/jpom/server && cd /home/jpom/server\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n\n\n# 执行命令后控制台输出如下\n\n\n\n\n# 第二步：安装 jpom 插件端\n\n> 目前安装 jpom 插件端的方式有：一键安装、下载安装、编译打包安装，建议按照自己熟悉的方式来安装\n> \n> 教程中使用一键安装的命令安装插件端\n\nmkdir -p /home/jpom/agent && cd /home/jpom/agent\n# 这里我们选择快速安装 jdk 实际中请根据自己情况选择\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh agent jdk\n\n\n1\n2\n3\n\n\n\n\n图 2 中圈出来第为插件端的账号密码\n\n\n# 第三步：编译安装 nginx\n\n 1. 安装各种依赖\n\n#gcc安装，nginx源码编译需要\nyum install -y gcc-c++\n\n#pcre pcre-devel 安装，nginx 的 http 模块使用 pcre 来解析正则表达式\nyum install -y pcre pcre-devel\n\n#zlib安装，nginx 使用zlib对http包的内容进行gzip\nyum install -y zlib zlib-devel\n\n#openssl 安装，强大的安全套接字层密码库，nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http）\nyum install -y openssl openssl-devel\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n 2. 使用 wget 命令下载\n\nmkdir -p /usr/local/nginx && cd /usr/local/nginx\n#下载版本号可根据目前官网最新稳定版自行调整\nwget -o nginx-1.20.2.tar.gz https://nginx.org/download/nginx-1.20.2.tar.gz\n\n\n1\n2\n3\n\n 3. 编译 nginx\n\n#根目录使用ls命令可以看到下载的nginx压缩包，然后解压\ntar -zxvf nginx-1.20.2.tar.gz\n\n#解压后进入目录\ncd nginx-1.20.2\n\n#使用默认配置\n./configure\n\n#编译安装\nmake\nmake install\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 第四步：初始化 jpom 服务端和插件端\n\n访问：http://ip:2122 这里 ip 请更换为您服务器中第实际 ip\n\n如果无法访问请优先检查 jpom 访问是否正常运行、服务端防火墙、云服务器的安全组规则等网络原因\n\n# 初始化系统管理员\n\n第一次使用系统需要设置一个系统管理员账号（系统管理员账号密码有强度要求，请安装提示设置。同时也请您牢记系统管理员账号）\n\n\n\n# 添加 jpom 节点\n\n节点列表还没有任何节点，我们需要将我们之前安装等插件端添加到服务端中来\n\n\n\n\n\n\n\n图 3 中的节点密码为上面步骤中第四步中安装并启动插件端后控制台输出第账号和密码\n\n\n# 第五步：在 jpom 中配置 nginx\n\n 1. 配置授权（白名单）信息\n    1. \n 2. 配置 nginx 服务\n    1. \n    2. \n    3. 填写的 /usr/local/nginx/sbin/nginx 为 nginx 执行文件绝对路径\n 3. 启动 nginx 服务\n    1. \n\n注意：\n\n 1. 服务名称请一定填写绝对路径\n 2. 如果已经启动的 nginx 再配置服务名称，需要先停止之前启动的服务再由 jpom 中启动，因为 jpom 中使用绝对路径来监控 nginx 状态\n\n\n# 第六步：愉快地使用 jpom 在线编辑、管理 nginx\n\n\n# 说明\n\n * linux 系统中如果使用 yum 安装或者配置了服务，在配置 nginx 服务名称中则配置对应的服务名称，默认为 nginx\n * windows 系统中则需要为 nginx 配置服务才能正常监控 nginx 状态，建议使用 winsw 来配置",charsets:{cjk:!0},lastUpdated:"2024/01/12, 10:15:40",lastUpdatedTimestamp:170505454e4},{title:"在 Jpom 中如何使用 DSL 项目来管理 TOMCAT",frontmatter:{title:"在 Jpom 中如何使用 DSL 项目来管理 TOMCAT",date:"2023-02-14T22:05:11.000Z",permalink:"/pages/practice/dc2836/",categories:["docs","实践案例","项目管理"],tags:["tomcat"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/013.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/0000.V2.10.X/0107.DSL%20%E7%AE%A1%E7%90%86%20TOMCAT.html",relativePath:"实践案例/013.项目管理/0000.V2.10.X/0107.DSL 管理 TOMCAT.md",key:"v-79216612",path:"/pages/practice/dc2836/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:113},{level:3,title:"安装插件端推荐命令",slug:"安装插件端推荐命令",normalizedTitle:"安装插件端推荐命令",charIndex:281},{level:3,title:"安装服务端推荐命令",slug:"安装服务端推荐命令",normalizedTitle:"安装服务端推荐命令",charIndex:506},{level:2,title:"创建 tomcat 项目",slug:"创建-tomcat-项目",normalizedTitle:"创建 tomcat 项目",charIndex:901},{level:3,title:"配置项目授权（白名单）",slug:"配置项目授权-白名单",normalizedTitle:"配置项目授权（白名单）",charIndex:918},{level:3,title:"配置远程下载 host",slug:"配置远程下载-host",normalizedTitle:"配置远程下载 host",charIndex:973},{level:3,title:"创建项目",slug:"创建项目",normalizedTitle:"创建项目",charIndex:1034},{level:3,title:"下载 tomcat 安装包",slug:"下载-tomcat-安装包",normalizedTitle:"下载 tomcat 安装包",charIndex:1078},{level:2,title:"配置 DSL 脚本",slug:"配置-dsl-脚本",normalizedTitle:"配置 dsl 脚本",charIndex:1206},{level:2,title:"管理 tomcat",slug:"管理-tomcat",normalizedTitle:"管理 tomcat",charIndex:43},{level:3,title:"启动",slug:"启动",normalizedTitle:"启动",charIndex:1248},{level:3,title:"停止、重启",slug:"停止、重启",normalizedTitle:"停止、重启",charIndex:1550},{level:3,title:"愉快的管理 tomcat",slug:"愉快的管理-tomcat",normalizedTitle:"愉快的管理 tomcat",charIndex:1562},{level:2,title:"构建发布",slug:"构建发布",normalizedTitle:"构建发布",charIndex:1706},{level:3,title:"创建项目仓库",slug:"创建项目仓库",normalizedTitle:"创建项目仓库",charIndex:1715},{level:3,title:"配置构建发布项目",slug:"配置构建发布项目",normalizedTitle:"配置构建发布项目",charIndex:1802},{level:2,title:"附件",slug:"附件",normalizedTitle:"附件",charIndex:1968},{level:3,title:"DSL配置内容",slug:"dsl配置内容",normalizedTitle:"dsl配置内容",charIndex:1975},{level:3,title:"获取 tomcat 状态脚本",slug:"获取-tomcat-状态脚本",normalizedTitle:"获取 tomcat 状态脚本",charIndex:2701}],headersStr:"前言 需要准备的环境 安装插件端推荐命令 安装服务端推荐命令 创建 tomcat 项目 配置项目授权（白名单） 配置远程下载 host 创建项目 下载 tomcat 安装包 配置 DSL 脚本 管理 tomcat 启动 停止、重启 愉快的管理 tomcat 构建发布 创建项目仓库 配置构建发布项目 附件 DSL配置内容 获取 tomcat 状态脚本",content:'# 前言\n\n本文主要讲解如果使用 Jpom 中的 DSL 项目 + 在线构建来实现日常管理 tomcat + 部署相关相关使用流程\n\n> 注意：本文采用一键安装同时基于 2.10.16 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. Jpom 插件端\n    1. 安装 jpom 需要 java 环境\n 3. Tomcat 安装包\n 4. 一个 tomcat war 包项目代码仓库（案例中使用 java 项目）\n\n\n# 安装插件端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 如果不存在将自动安装 jdk。并且将插件端安装到默认目录：/usr/local/jpom-agent\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk 即可\n\n# 安装插件端和 jdk 环境\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent jdk+default\n\n\n1\n2\n\n\n\n# 安装服务端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 和 maven 如果不存在将自动安装 jdk 和 maven。并且将服务端安装到默认目录：/usr/local/jpom-server\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk+mvn 即可\n\n# 安装服务端和 jdk、maven 环境\n# 安装插件端和 jdk 环境\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+mvn+default\n\n\n1\n2\n3\n\n\n😋\n\n案例就默认您已经安装好上述环境（jpom 插件端、jpom 服务端、maven 插件）\n\n😋\n\n案例就默认您已经初始好服务端并且配置了节点\n\n😋\n\n如果对安装流程和初始化流程不是了解有疑问的可以参考其他实践案例和安装说明文档\n\n\n# 创建 tomcat 项目\n\n\n# 配置项目授权（白名单）\n\n需要提前配置授权（白名单）路径奥，不知道授权（白名单）路径作用的请查阅文档\n\n\n# 配置远程下载 host\n\n文档演示中使用远程下载 tomcat 文件并解压，所以需要提前配置下载的 host\n\n\n\n\n# 创建项目\n\n进入节点管理>>管理>>项目管理>>项目列表，进行项目创建\n\n\n\n\n\n\n# 下载 tomcat 安装包\n\n\n\n\n\n\n\n配置剔除文件夹为 1 ,是因为 tomcat 安装包里面会自动包含一层文件夹名（apache-tomcat-10.0.27），我们这里将 tomcat 所有文件解压到项目根目录所以需要剔除第一级文件夹\n\n\n\n\n# 配置 DSL 脚本\n\n这里配置 DSL 脚本是用来获取 tomcat 当前状态，因为启动、停止 tomcat 我们已经使用 tomcat 提供的默认脚本来实现了。\n\n\n\n\n\n保存后点击编辑，查看脚本 id\n\n\n\n复制脚本 id 、到项目 DSL 内容替换 status 的 scriptId 字段\n\n\n\n\n# 管理 tomcat\n\n\n\n\n# 启动\n\n\n\n\n\n这里发现启动时候有错误信息，通过排查文件是肯定存在的。那么就是文件执行权限的问题了，这里我们需要将 tomcat bin 目录添加可执行权限\n\n# 需要自行替换为您的项目实际路径\nchmod +x /data/jpom/tomcat/bin/*.sh\n\n\n1\n2\n\n\n执行前\n\n\n\n执行后\n\n\n\n**再次执行启动\n\n\n\n\n\n\n# 停止、重启\n\n\n\n\n# 愉快的管理 tomcat\n\n到这里您可以通过 tomcat 管理页面来管理 tomcat 的状态、编辑文件、下载文件、上传文件、删除文件）等。\n\n如果您想通过 jpom 查看 tomcat 的日志文件，您可以通过文件追踪、日志阅读（日志搜索）相关功能来实现，详情可以查阅其他文档\n\n\n# 构建发布\n\n\n# 创建项目仓库\n\n这里我们就默认您已经会配置仓库了\n\n文档使用 jpom 案例仓库：https://gitee.com/keepbx/Jpom-demo-case\n\n\n\n\n# 配置构建发布项目\n\n\n\n\n\n产物目录：springboot-test-war/target/springboot-test-war-2.7.1.war 需要根据您项目打包后 war 实际路径替换\n\n二级目录：webapps 这里，我们将 war 发布到 tomcat 项目的目录下的 webapps 目录下\n\n\n\n\n\n\n\n\n\n\n# 附件\n\n\n# DSL配置内容\n\n# scriptId 可以是项目路径下脚本文件名或者系统中的脚本模版ID\ndescription: 测试\nrun:\n  start:\n#    scriptId: project.sh\n    scriptId: ./bin/startup.sh\n    scriptArgs: \n  status:\n#    scriptId: project.sh\n    scriptId: c46d184b642f42e1b210c6c8a036a463\n    scriptArgs: \n  stop:\n#    scriptId: project.sh\n    scriptId: ./bin/shutdown.sh\n    scriptArgs: \n#  restart:\n##    scriptId: project.sh\n#    scriptId: eb16f693147b43a1b06f9eb96aed1bc7\n#    scriptArgs: restart\n#    scriptEnv:\n#      "boot_active": test\nfile:\n# 备份文件保留个数\n#  backupCount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupSuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autoBackToFile: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 获取 tomcat 状态脚本\n\nTag="=${PROJECT_PATH}"\n\npid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n#echo "$pid"\nif [ "$pid" != "" ]; then\n\techo "running:$pid"\nelse\n\techo "boot is stopped"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# 前言\n\n本文主要讲解如果使用 jpom 中的 dsl 项目 + 在线构建来实现日常管理 tomcat + 部署相关相关使用流程\n\n> 注意：本文采用一键安装同时基于 2.10.16 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. jpom 插件端\n    1. 安装 jpom 需要 java 环境\n 3. tomcat 安装包\n 4. 一个 tomcat war 包项目代码仓库（案例中使用 java 项目）\n\n\n# 安装插件端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 如果不存在将自动安装 jdk。并且将插件端安装到默认目录：/usr/local/jpom-agent\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk 即可\n\n# 安装插件端和 jdk 环境\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent jdk+default\n\n\n1\n2\n\n\n\n# 安装服务端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 和 maven 如果不存在将自动安装 jdk 和 maven。并且将服务端安装到默认目录：/usr/local/jpom-server\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk+mvn 即可\n\n# 安装服务端和 jdk、maven 环境\n# 安装插件端和 jdk 环境\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+mvn+default\n\n\n1\n2\n3\n\n\n😋\n\n案例就默认您已经安装好上述环境（jpom 插件端、jpom 服务端、maven 插件）\n\n😋\n\n案例就默认您已经初始好服务端并且配置了节点\n\n😋\n\n如果对安装流程和初始化流程不是了解有疑问的可以参考其他实践案例和安装说明文档\n\n\n# 创建 tomcat 项目\n\n\n# 配置项目授权（白名单）\n\n需要提前配置授权（白名单）路径奥，不知道授权（白名单）路径作用的请查阅文档\n\n\n# 配置远程下载 host\n\n文档演示中使用远程下载 tomcat 文件并解压，所以需要提前配置下载的 host\n\n\n\n\n# 创建项目\n\n进入节点管理>>管理>>项目管理>>项目列表，进行项目创建\n\n\n\n\n\n\n# 下载 tomcat 安装包\n\n\n\n\n\n\n\n配置剔除文件夹为 1 ,是因为 tomcat 安装包里面会自动包含一层文件夹名（apache-tomcat-10.0.27），我们这里将 tomcat 所有文件解压到项目根目录所以需要剔除第一级文件夹\n\n\n\n\n# 配置 dsl 脚本\n\n这里配置 dsl 脚本是用来获取 tomcat 当前状态，因为启动、停止 tomcat 我们已经使用 tomcat 提供的默认脚本来实现了。\n\n\n\n\n\n保存后点击编辑，查看脚本 id\n\n\n\n复制脚本 id 、到项目 dsl 内容替换 status 的 scriptid 字段\n\n\n\n\n# 管理 tomcat\n\n\n\n\n# 启动\n\n\n\n\n\n这里发现启动时候有错误信息，通过排查文件是肯定存在的。那么就是文件执行权限的问题了，这里我们需要将 tomcat bin 目录添加可执行权限\n\n# 需要自行替换为您的项目实际路径\nchmod +x /data/jpom/tomcat/bin/*.sh\n\n\n1\n2\n\n\n执行前\n\n\n\n执行后\n\n\n\n**再次执行启动\n\n\n\n\n\n\n# 停止、重启\n\n\n\n\n# 愉快的管理 tomcat\n\n到这里您可以通过 tomcat 管理页面来管理 tomcat 的状态、编辑文件、下载文件、上传文件、删除文件）等。\n\n如果您想通过 jpom 查看 tomcat 的日志文件，您可以通过文件追踪、日志阅读（日志搜索）相关功能来实现，详情可以查阅其他文档\n\n\n# 构建发布\n\n\n# 创建项目仓库\n\n这里我们就默认您已经会配置仓库了\n\n文档使用 jpom 案例仓库：https://gitee.com/keepbx/jpom-demo-case\n\n\n\n\n# 配置构建发布项目\n\n\n\n\n\n产物目录：springboot-test-war/target/springboot-test-war-2.7.1.war 需要根据您项目打包后 war 实际路径替换\n\n二级目录：webapps 这里，我们将 war 发布到 tomcat 项目的目录下的 webapps 目录下\n\n\n\n\n\n\n\n\n\n\n# 附件\n\n\n# dsl配置内容\n\n# scriptid 可以是项目路径下脚本文件名或者系统中的脚本模版id\ndescription: 测试\nrun:\n  start:\n#    scriptid: project.sh\n    scriptid: ./bin/startup.sh\n    scriptargs: \n  status:\n#    scriptid: project.sh\n    scriptid: c46d184b642f42e1b210c6c8a036a463\n    scriptargs: \n  stop:\n#    scriptid: project.sh\n    scriptid: ./bin/shutdown.sh\n    scriptargs: \n#  restart:\n##    scriptid: project.sh\n#    scriptid: eb16f693147b43a1b06f9eb96aed1bc7\n#    scriptargs: restart\n#    scriptenv:\n#      "boot_active": test\nfile:\n# 备份文件保留个数\n#  backupcount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupsuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autobacktofile: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n\n# 获取 tomcat 状态脚本\n\ntag="=${project_path}"\n\npid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n#echo "$pid"\nif [ "$pid" != "" ]; then\n\techo "running:$pid"\nelse\n\techo "boot is stopped"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"在 Jpom 中如何使用 DSL 项目来管理 elasticsearch",frontmatter:{title:"在 Jpom 中如何使用 DSL 项目来管理 elasticsearch",date:"2023-02-24T19:46:42.000Z",permalink:"/pages/practice/8017a2/",categories:["docs","实践案例","项目管理"],tags:["elasticsearch"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/013.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/0000.V2.10.X/0108.DSL%E7%AE%A1%E7%90%86elasticsearch.html",relativePath:"实践案例/013.项目管理/0000.V2.10.X/0108.DSL管理elasticsearch.md",key:"v-5899f538",path:"/pages/practice/8017a2/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"创建项目",slug:"创建项目",normalizedTitle:"创建项目",charIndex:362},{level:2,title:"配置 DSL 脚本",slug:"配置-dsl-脚本",normalizedTitle:"配置 dsl 脚本",charIndex:1151},{level:3,title:"脚本解释",slug:"脚本解释",normalizedTitle:"脚本解释",charIndex:3e3},{level:2,title:"管理 ES",slug:"管理-es",normalizedTitle:"管理 es",charIndex:3298}],headersStr:"前言 创建项目 配置 DSL 脚本 脚本解释 管理 ES",content:'# 前言\n\n在日常使用中有很多需求是想管理，查看 es 状态，启动、重启、停止等操作。 一般情况是登录服务器去操作，如果您使用了 Jpom 那么可以使用 DSL 项目来实现简单管理 es\n\n本文主要讲解如果使用 Jpom 中的 DSL 项目管理 elasticsearch\n\n> 注意：本文采用一键安装同时基于 2.10.22 版本讲解,系统为 centos\n\n声明\n\n本文档想要建立在您对 Jpom 已经有一定的熟悉度后的高阶操作。 如果您还是新手入门 Jpom ，还想要您看看其他相关文档或者上手操作后再来看看本文档来找解决方案灵感。 并且本文也建立在您已经会管理 elasticsearch 了,本文不提供下载 es、基础安装 jdk 环境的文档、创建启动 es 的用户的文档。（如果您还不会请自行搜索解决）\n\n\n# 创建项目\n\n\n\nDSL 配置内容\n\n# scriptId 可以是项目路径下脚本文件名或者系统中的脚本模版ID\ndescription: 测试\nrun:\n  start:\n#    scriptId: project.sh\n    scriptId: 7a688459a4a24129968d06ebefd3b57c\n    scriptArgs: start\n  status:\n#    scriptId: project.sh\n    scriptId: 7a688459a4a24129968d06ebefd3b57c\n    scriptArgs: status\n  stop:\n#    scriptId: project.sh\n    scriptId: 7a688459a4a24129968d06ebefd3b57c\n    scriptArgs: stop\n#  restart:\n##    scriptId: project.sh\n#    scriptId: eb16f693147b43a1b06f9eb96aed1bc7\n#    scriptArgs: restart\n#    scriptEnv:\n#      "boot_active": test\nfile:\n# 备份文件保留个数\n#  backupCount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupSuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autoBackToFile: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n项目目录\n\n\n\n\n# 配置 DSL 脚本\n\n\n\n脚本内容\n\n#!/bin/bash\nTag="org.elasticsearch.bootstrap.Elasticsearch"\nLib="${PROJECT_PATH}"\nRETVAL="0"\n\ncd "$Lib" || exit\n\n# See how we were called.\nfunction start() {\n\tpwd\n\tsu -c "./bin/elasticsearch -d" es\n}\n\nfunction stop() {\n\tpid=$(ps -ef | grep -v \'grep\' | egrep $Tag | awk \'{printf $2 " "}\')\n\tif [ "$pid" != "" ]; then\n\t\techo -n "boot ( pid $pid) is running"\n\t\techo\n\t\techo -n $"Shutting down boot: "\n\t\tkill "$pid"\n\n\t\tLOOPS=0\n\t\twhile (true); do\n\t\t\tpid=$(ps -ef | grep -v \'grep\' | egrep $Tag | awk \'{printf $2 " "}\')\n\t\t\tif [ "$pid" == "" ]; then\n\t\t\t\techo "Stop and end, in $LOOPS seconds"\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\t((LOOPS++)) || true\n\t\t\tsleep 1\n\t\tdone\n\telse\n\t\techo "boot is stopped"\n\tfi\n\tstatus\n}\n\nfunction get_json_value() {\n\tlocal json=$1\n\tlocal key=$2\n\tlocal value\n\tvalue=$(echo "${json}" | awk -F "[{,:}]" \'{for(i=1;i<=NF;i++){if($i~"\'"${key}"\'"){print $(i+1)}}}\' | sed \'s/\\"//g\')\n\tvalue="$(trim "$value")"\n\techo "${value}"\n}\n\nfunction trim() {\n\tstr=$1\n\techo "${str}" | grep -o "[^ ]\\+\\( \\+[^ ]\\+\\)*"\n}\n\nfunction status() {\n\t#  这里的端口或者url 路径需要跟进您的项目端口和获取项目状态的接口来定\n\tresult_msg=$(curl -s -X GET --header \'Accept: application/json\' --connect-timeout 1 -m 1 \'http://elastic:xxx@127.0.0.1:9200\')\n\tcluster_name=$(get_json_value "${result_msg}" "cluster_name")\n\tif [ "$cluster_name" == "my-application" ]; then\n\t\tpid=$(ps -ef | grep -v \'grep\' | egrep $Tag | awk \'{printf $2 " "}\')\n\t\techo "running:$pid"\n\telse\n\t\techo "$cluster_name"\n\t\techo "not-running"\n\tfi\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\nstart)\n\tstart\n\t;;\nstop)\n\tstop\n\t;;\nstatus)\n\tstatus\n\t;;\n*)\n\tusage\n\t;;\nesac\n\nexit $RETVAL\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n\n\n\n# 脚本解释\n\nsu -c "./bin/elasticsearch -d" es 指使用 es 用户去执行脚本 ./bin/elasticsearch -d，实际中想要替换为您配置的 es 账号名\n\n获取es 状态：使用 curl 调用 es 接口并且判断返回值中是否存在集群名称来判断 es 是否运行中\n\ncurl -s -X GET --header \'Accept: application/json\' --connect-timeout 1 -m 1 \'http://elastic:xxx@127.0.0.1:9200\' 因为案例集群配置了账号密码，随意想要配置账号何密码来访问\n\n\n# 管理 ES\n\n',normalizedContent:'# 前言\n\n在日常使用中有很多需求是想管理，查看 es 状态，启动、重启、停止等操作。 一般情况是登录服务器去操作，如果您使用了 jpom 那么可以使用 dsl 项目来实现简单管理 es\n\n本文主要讲解如果使用 jpom 中的 dsl 项目管理 elasticsearch\n\n> 注意：本文采用一键安装同时基于 2.10.22 版本讲解,系统为 centos\n\n声明\n\n本文档想要建立在您对 jpom 已经有一定的熟悉度后的高阶操作。 如果您还是新手入门 jpom ，还想要您看看其他相关文档或者上手操作后再来看看本文档来找解决方案灵感。 并且本文也建立在您已经会管理 elasticsearch 了,本文不提供下载 es、基础安装 jdk 环境的文档、创建启动 es 的用户的文档。（如果您还不会请自行搜索解决）\n\n\n# 创建项目\n\n\n\ndsl 配置内容\n\n# scriptid 可以是项目路径下脚本文件名或者系统中的脚本模版id\ndescription: 测试\nrun:\n  start:\n#    scriptid: project.sh\n    scriptid: 7a688459a4a24129968d06ebefd3b57c\n    scriptargs: start\n  status:\n#    scriptid: project.sh\n    scriptid: 7a688459a4a24129968d06ebefd3b57c\n    scriptargs: status\n  stop:\n#    scriptid: project.sh\n    scriptid: 7a688459a4a24129968d06ebefd3b57c\n    scriptargs: stop\n#  restart:\n##    scriptid: project.sh\n#    scriptid: eb16f693147b43a1b06f9eb96aed1bc7\n#    scriptargs: restart\n#    scriptenv:\n#      "boot_active": test\nfile:\n# 备份文件保留个数\n#  backupcount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupsuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autobacktofile: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n项目目录\n\n\n\n\n# 配置 dsl 脚本\n\n\n\n脚本内容\n\n#!/bin/bash\ntag="org.elasticsearch.bootstrap.elasticsearch"\nlib="${project_path}"\nretval="0"\n\ncd "$lib" || exit\n\n# see how we were called.\nfunction start() {\n\tpwd\n\tsu -c "./bin/elasticsearch -d" es\n}\n\nfunction stop() {\n\tpid=$(ps -ef | grep -v \'grep\' | egrep $tag | awk \'{printf $2 " "}\')\n\tif [ "$pid" != "" ]; then\n\t\techo -n "boot ( pid $pid) is running"\n\t\techo\n\t\techo -n $"shutting down boot: "\n\t\tkill "$pid"\n\n\t\tloops=0\n\t\twhile (true); do\n\t\t\tpid=$(ps -ef | grep -v \'grep\' | egrep $tag | awk \'{printf $2 " "}\')\n\t\t\tif [ "$pid" == "" ]; then\n\t\t\t\techo "stop and end, in $loops seconds"\n\t\t\t\tbreak\n\t\t\tfi\n\t\t\t((loops++)) || true\n\t\t\tsleep 1\n\t\tdone\n\telse\n\t\techo "boot is stopped"\n\tfi\n\tstatus\n}\n\nfunction get_json_value() {\n\tlocal json=$1\n\tlocal key=$2\n\tlocal value\n\tvalue=$(echo "${json}" | awk -f "[{,:}]" \'{for(i=1;i<=nf;i++){if($i~"\'"${key}"\'"){print $(i+1)}}}\' | sed \'s/\\"//g\')\n\tvalue="$(trim "$value")"\n\techo "${value}"\n}\n\nfunction trim() {\n\tstr=$1\n\techo "${str}" | grep -o "[^ ]\\+\\( \\+[^ ]\\+\\)*"\n}\n\nfunction status() {\n\t#  这里的端口或者url 路径需要跟进您的项目端口和获取项目状态的接口来定\n\tresult_msg=$(curl -s -x get --header \'accept: application/json\' --connect-timeout 1 -m 1 \'http://elastic:xxx@127.0.0.1:9200\')\n\tcluster_name=$(get_json_value "${result_msg}" "cluster_name")\n\tif [ "$cluster_name" == "my-application" ]; then\n\t\tpid=$(ps -ef | grep -v \'grep\' | egrep $tag | awk \'{printf $2 " "}\')\n\t\techo "running:$pid"\n\telse\n\t\techo "$cluster_name"\n\t\techo "not-running"\n\tfi\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\nstart)\n\tstart\n\t;;\nstop)\n\tstop\n\t;;\nstatus)\n\tstatus\n\t;;\n*)\n\tusage\n\t;;\nesac\n\nexit $retval\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n\n\n\n# 脚本解释\n\nsu -c "./bin/elasticsearch -d" es 指使用 es 用户去执行脚本 ./bin/elasticsearch -d，实际中想要替换为您配置的 es 账号名\n\n获取es 状态：使用 curl 调用 es 接口并且判断返回值中是否存在集群名称来判断 es 是否运行中\n\ncurl -s -x get --header \'accept: application/json\' --connect-timeout 1 -m 1 \'http://elastic:xxx@127.0.0.1:9200\' 因为案例集群配置了账号密码，随意想要配置账号何密码来访问\n\n\n# 管理 es\n\n',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"管理 docker",frontmatter:{title:"管理 docker",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/docker-cli/",tags:["docker"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/011.docker/9999.V2.8.X/0107.docker-cli.html",relativePath:"实践案例/011.docker/9999.V2.8.X/0107.docker-cli.md",key:"v-3485e52f",path:"/pages/practice/docker-cli/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:131},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:222},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:434},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:444},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:495},{level:2,title:"安装 docker",slug:"安装-docker",normalizedTitle:"安装 docker",charIndex:543},{level:3,title:"状态管理",slug:"状态管理",normalizedTitle:"状态管理",charIndex:656},{level:3,title:"Docker TLS 证书 （非必须）",slug:"docker-tls-证书-非必须",normalizedTitle:"docker tls 证书 （非必须）",charIndex:828},{level:2,title:"配置 docker",slug:"配置-docker",normalizedTitle:"配置 docker",charIndex:3921},{level:3,title:"查看 docker.service 路径",slug:"查看-docker-service-路径",normalizedTitle:"查看 docker.service 路径",charIndex:3935},{level:3,title:"配置 tcp + tls  （非必须）",slug:"配置-tcp-tls-非必须",normalizedTitle:"配置 tcp + tls  （非必须）",charIndex:null},{level:3,title:"重启 docker",slug:"重启-docker",normalizedTitle:"重启 docker",charIndex:4756},{level:2,title:"添加 docker",slug:"添加-docker",normalizedTitle:"添加 docker",charIndex:4846},{level:2,title:"Jpom 中使用",slug:"jpom-中使用",normalizedTitle:"jpom 中使用",charIndex:4986}],headersStr:"前言 需要准备的环境 安装服务端 初始化服务端 添加超级管理账号 开启账号 MFA 安装 docker 状态管理 Docker TLS 证书 （非必须） 配置 docker 查看 docker.service 路径 配置 tcp + tls  （非必须） 重启 docker 添加 docker Jpom 中使用",content:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的 Docker 管理\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端（安装 jpom 需要 java 环境）\n 2. 一个安装了 docker 的服务器（可以和安装 Jpom 服务端在同一个服务器）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n\n# 安装 docker\n\n# 这里使用了阿里云镜像，可以更新自己业务选择\ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n\n\n1\n2\n\n\n\n# 状态管理\n\n# 查看状态\nsystemctl status docker\n# 停止\nsystemctl stop docker\n# 启动\nsystemctl start docker\n# 重启\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Docker TLS 证书 （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 Jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\n安全提醒\n\n如果 docker 服务全部在内网环境使用可以不配置 TLS 证书,忽略该步骤。如果端口暴露到公网很容易出现被攻击到情况请一定慎重开启端口访问限制\n\n安全提醒\n\nJpom 使用 docker http 接口是实现和 docker 通讯和管理，但是默认没有开启任何认证这样使得 docker 极不安全，如果端口暴露到公网还容易出现挖矿情况\n\n所以这里 我们强烈建议您使用 TLS 证书来连接 docker 提升安全性\n\n这里提供一个快速生成证书到脚本示例：（使用中请一定修改脚本内的 IP 或者可能无法使用的情况奥）\n\n#!/bin/bash\n#\n# -------------------------------------------------------------\n# 自动创建 Docker TLS 证书\n# wget https://gitee.com/dromara/Jpom/raw/master/script/docker-tls.sh\n# curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n# systemctl daemon-reload && systemctl restart docker\n# -------------------------------------------------------------\n# 以下是配置信息\n# --[BEGIN]------------------------------\nNOW_PATH=$(\n\tcd "$(dirname "$0")" || exit\n\tpwd\n)"/"\necho "当前目录：${NOW_PATH} 证书文件将保存在此文件夹下"\nread -p "请输入证书使用的 IP 地址或者 HOST: " HOST\n#\necho "您输入的是：${HOST} 证书只能在这个 IP 或者 HOST 下使用,证书密码和输入的一致"\n# --[INIT PARAMETER]------------------------------\nPASSWORD="$HOST"\nCOUNTRY="CN"\nSTATE="$HOST"\nCITY="$HOST"\nORGANIZATION="$HOST"\nORGANIZATIONAL_UNIT="Dev"\nCOMMON_NAME="$HOST"\nEMAIL="$HOST@docker-tls.com"\n# --[END]--\n# Generate CA key\nopenssl genrsa -aes256 -passout "pass:$PASSWORD" -out "ca-key.pem" 4096\n# Generate CA\nopenssl req -new -x509 -days 365 -key "ca-key.pem" -sha256 -out "ca.pem" -passin "pass:$PASSWORD" -subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORGANIZATION/OU=$ORGANIZATIONAL_UNIT/CN=$COMMON_NAME/emailAddress=$EMAIL"\n# Generate Server key\nopenssl genrsa -out "server-key.pem" 4096\n# Generate Server Certs.\nopenssl req -subj "/CN=$COMMON_NAME" -sha256 -new -key "server-key.pem" -out server.csr\nrm -f extfile.cnf\necho "subjectAltName = DNS.1:$HOST,IP.1:127.0.0.1,IP.2:$HOST" >>extfile.cnf\necho "extendedKeyUsage = serverAuth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "server-cert.pem" -extfile extfile.cnf\n# Generate Client Certs.\nrm -f extfile.cnf\nopenssl genrsa -out "key.pem" 4096\nopenssl req -subj \'/CN=client\' -new -key "key.pem" -out client.csr\necho "extendedKeyUsage = clientAuth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "cert.pem" -extfile extfile.cnf\nrm -f client.csr server.csr ca.srl extfile.cnf\n\n# check\nif [ -f "${NOW_PATH}key.pem" -a -f "${NOW_PATH}ca.pem" -a -f "${NOW_PATH}ca-key.pem" -a -f "${NOW_PATH}server-cert.pem" -a -f "${NOW_PATH}server-key.pem" ]; then\n\techo "证书生成完成"\n\techo "客户端使用文件：key.pem ca.pem cert.pem"\n\techo "Docker 端使用文件：ca.pem server-cert.pem server-key.pem"\n\techo "Docker 推荐配置内容：-H tcp://0.0.0.0:2375 --tlsverify --tlscacert=${NOW_PATH}ca.pem --tlscert=${NOW_PATH}server-cert.pem --tlskey=${NOW_PATH}server-key.pem"\nelse\n\techo "证书生成不完整,请检查配置和根据错误日志排查"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n同时将生成到证书下载到本地 保存使用\n\n证书示例：\n\n\n\n\n# 配置 docker\n\n\n# 查看 docker.service 路径\n\nsystemctl status docker\n\n\n\n\n# 配置 tcp + tls （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 Jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\nvim /lib/systemd/system/docker.service\n\n\n\nExecStart 需要添加内容\n\n--tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375\n\n# 配置示例\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n如果不开启 tls 验证配置示例：\n\n# 配置示例\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n部分情况需要删除：-H fd://\n\n\n\n\n# 重启 docker\n\n> 配置完成后需要重启 才能生效\n\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n\n\n\n# 添加 docker\n\n\n\n注意这里 host 为：tcp://127.0.0.1:2375 这里因为连接本地 docker 所有使用 127.0.0.1 实际中请更换\n\n证书为压缩文件，压缩文件需要包含生成证书文件：key.pem ca.pem cert.pem\n\n\n\n\n\n\n# Jpom 中使用\n\n\n\n> docker 相关更多正在努力开发中💪 敬请期待',normalizedContent:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的 docker 管理\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. jpom 服务端（安装 jpom 需要 java 环境）\n 2. 一个安装了 docker 的服务器（可以和安装 jpom 服务端在同一个服务器）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n\n# 安装 docker\n\n# 这里使用了阿里云镜像，可以更新自己业务选择\ncurl -fssl https://get.docker.com | bash -s docker --mirror aliyun\n\n\n1\n2\n\n\n\n# 状态管理\n\n# 查看状态\nsystemctl status docker\n# 停止\nsystemctl stop docker\n# 启动\nsystemctl start docker\n# 重启\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# docker tls 证书 （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\n安全提醒\n\n如果 docker 服务全部在内网环境使用可以不配置 tls 证书,忽略该步骤。如果端口暴露到公网很容易出现被攻击到情况请一定慎重开启端口访问限制\n\n安全提醒\n\njpom 使用 docker http 接口是实现和 docker 通讯和管理，但是默认没有开启任何认证这样使得 docker 极不安全，如果端口暴露到公网还容易出现挖矿情况\n\n所以这里 我们强烈建议您使用 tls 证书来连接 docker 提升安全性\n\n这里提供一个快速生成证书到脚本示例：（使用中请一定修改脚本内的 ip 或者可能无法使用的情况奥）\n\n#!/bin/bash\n#\n# -------------------------------------------------------------\n# 自动创建 docker tls 证书\n# wget https://gitee.com/dromara/jpom/raw/master/script/docker-tls.sh\n# curl -fssl https://get.docker.com | bash -s docker --mirror aliyun\n# systemctl daemon-reload && systemctl restart docker\n# -------------------------------------------------------------\n# 以下是配置信息\n# --[begin]------------------------------\nnow_path=$(\n\tcd "$(dirname "$0")" || exit\n\tpwd\n)"/"\necho "当前目录：${now_path} 证书文件将保存在此文件夹下"\nread -p "请输入证书使用的 ip 地址或者 host: " host\n#\necho "您输入的是：${host} 证书只能在这个 ip 或者 host 下使用,证书密码和输入的一致"\n# --[init parameter]------------------------------\npassword="$host"\ncountry="cn"\nstate="$host"\ncity="$host"\norganization="$host"\norganizational_unit="dev"\ncommon_name="$host"\nemail="$host@docker-tls.com"\n# --[end]--\n# generate ca key\nopenssl genrsa -aes256 -passout "pass:$password" -out "ca-key.pem" 4096\n# generate ca\nopenssl req -new -x509 -days 365 -key "ca-key.pem" -sha256 -out "ca.pem" -passin "pass:$password" -subj "/c=$country/st=$state/l=$city/o=$organization/ou=$organizational_unit/cn=$common_name/emailaddress=$email"\n# generate server key\nopenssl genrsa -out "server-key.pem" 4096\n# generate server certs.\nopenssl req -subj "/cn=$common_name" -sha256 -new -key "server-key.pem" -out server.csr\nrm -f extfile.cnf\necho "subjectaltname = dns.1:$host,ip.1:127.0.0.1,ip.2:$host" >>extfile.cnf\necho "extendedkeyusage = serverauth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$password" -ca "ca.pem" -cakey "ca-key.pem" -cacreateserial -out "server-cert.pem" -extfile extfile.cnf\n# generate client certs.\nrm -f extfile.cnf\nopenssl genrsa -out "key.pem" 4096\nopenssl req -subj \'/cn=client\' -new -key "key.pem" -out client.csr\necho "extendedkeyusage = clientauth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$password" -ca "ca.pem" -cakey "ca-key.pem" -cacreateserial -out "cert.pem" -extfile extfile.cnf\nrm -f client.csr server.csr ca.srl extfile.cnf\n\n# check\nif [ -f "${now_path}key.pem" -a -f "${now_path}ca.pem" -a -f "${now_path}ca-key.pem" -a -f "${now_path}server-cert.pem" -a -f "${now_path}server-key.pem" ]; then\n\techo "证书生成完成"\n\techo "客户端使用文件：key.pem ca.pem cert.pem"\n\techo "docker 端使用文件：ca.pem server-cert.pem server-key.pem"\n\techo "docker 推荐配置内容：-h tcp://0.0.0.0:2375 --tlsverify --tlscacert=${now_path}ca.pem --tlscert=${now_path}server-cert.pem --tlskey=${now_path}server-key.pem"\nelse\n\techo "证书生成不完整,请检查配置和根据错误日志排查"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n同时将生成到证书下载到本地 保存使用\n\n证书示例：\n\n\n\n\n# 配置 docker\n\n\n# 查看 docker.service 路径\n\nsystemctl status docker\n\n\n\n\n# 配置 tcp + tls （非必须）\n\n> 如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤\n\nvim /lib/systemd/system/docker.service\n\n\n\nexecstart 需要添加内容\n\n--tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -h tcp://0.0.0.0:2375\n\n# 配置示例\nexecstart=/usr/bin/dockerd -h fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -h tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n如果不开启 tls 验证配置示例：\n\n# 配置示例\nexecstart=/usr/bin/dockerd -h fd:// --containerd=/run/containerd/containerd.sock -h tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n部分情况需要删除：-h fd://\n\n\n\n\n# 重启 docker\n\n> 配置完成后需要重启 才能生效\n\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n\n\n\n# 添加 docker\n\n\n\n注意这里 host 为：tcp://127.0.0.1:2375 这里因为连接本地 docker 所有使用 127.0.0.1 实际中请更换\n\n证书为压缩文件，压缩文件需要包含生成证书文件：key.pem ca.pem cert.pem\n\n\n\n\n\n\n# jpom 中使用\n\n\n\n> docker 相关更多正在努力开发中💪 敬请期待',charsets:{cjk:!0},lastUpdated:"2024/12/03, 08:54:50",lastUpdatedTimestamp:173321609e4},{title:"在 Jpom 中如何使用 DSL 项目来管理 NGINX",frontmatter:{title:"在 Jpom 中如何使用 DSL 项目来管理 NGINX",date:"2024-01-02T15:00:00.000Z",permalink:"/pages/practice/dc2837/",categories:["docs","实践案例","项目管理"],tags:["nginx"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/013.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/0000.V2.10.X/0109.DSL%20%E7%AE%A1%E7%90%86%20NGINX.html",relativePath:"实践案例/013.项目管理/0000.V2.10.X/0109.DSL 管理 NGINX.md",key:"v-1ec9d360",path:"/pages/practice/dc2837/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:101},{level:3,title:"安装插件端推荐命令",slug:"安装插件端推荐命令",normalizedTitle:"安装插件端推荐命令",charIndex:283},{level:3,title:"安装服务端推荐命令",slug:"安装服务端推荐命令",normalizedTitle:"安装服务端推荐命令",charIndex:508},{level:2,title:"新建节点脚本",slug:"新建节点脚本",normalizedTitle:"新建节点脚本",charIndex:903},{level:3,title:"配置项目授权（白名单）和文件后缀",slug:"配置项目授权-白名单-和文件后缀",normalizedTitle:"配置项目授权（白名单）和文件后缀",charIndex:914},{level:3,title:"配置节点脚本 - Linux",slug:"配置节点脚本-linux",normalizedTitle:"配置节点脚本 - linux",charIndex:979},{level:3,title:"配置节点脚本 - Windows",slug:"配置节点脚本-windows",normalizedTitle:"配置节点脚本 - windows",charIndex:2411},{level:3,title:"脚本配置完成后，获取到scriptId",slug:"脚本配置完成后-获取到scriptid",normalizedTitle:"脚本配置完成后，获取到scriptid",charIndex:3158},{level:2,title:"新建DSL项目",slug:"新建dsl项目",normalizedTitle:"新建dsl项目",charIndex:3184},{level:3,title:"新建Linux项目（运行方式DSL）",slug:"新建linux项目-运行方式dsl",normalizedTitle:"新建linux项目（运行方式dsl）",charIndex:3196},{level:3,title:"新建Windows项目（运行方式DSL）",slug:"新建windows项目-运行方式dsl",normalizedTitle:"新建windows项目（运行方式dsl）",charIndex:3919},{level:2,title:"控制台说明",slug:"控制台说明",normalizedTitle:"控制台说明",charIndex:4650},{level:2,title:"文件管理",slug:"文件管理",normalizedTitle:"文件管理",charIndex:4707}],headersStr:"前言 需要准备的环境 安装插件端推荐命令 安装服务端推荐命令 新建节点脚本 配置项目授权（白名单）和文件后缀 配置节点脚本 - Linux 配置节点脚本 - Windows 脚本配置完成后，获取到scriptId 新建DSL项目 新建Linux项目（运行方式DSL） 新建Windows项目（运行方式DSL） 控制台说明 文件管理",content:'# 前言\n\n本文主要讲解如果使用 Jpom 中的 DSL 项目 对Nginx的基础管理\n\n> 注意：本文采用一键安装同时基于 2.10.16 版本讲解,系统为 Centos / Windows\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. Jpom 插件端\n    1. 安装 jpom 需要 java 环境\n    2. 服务器：Centos / Windows\n    3. 服务器需安装好Nginx环境，并把nginx添加到操作系统环境变量中\n\n\n# 安装插件端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 如果不存在将自动安装 jdk。并且将插件端安装到默认目录：/usr/local/jpom-agent\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk 即可\n\n# 安装插件端和 jdk 环境\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent jdk+default\n\n\n1\n2\n\n\n\n# 安装服务端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 和 maven 如果不存在将自动安装 jdk 和 maven。并且将服务端安装到默认目录：/usr/local/jpom-server\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk+mvn 即可\n\n# 安装服务端和 jdk、maven 环境\n# 安装插件端和 jdk 环境\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+mvn+default\n\n\n1\n2\n3\n\n\n😋\n\n案例就默认您已经安装好上述环境（jpom 插件端、jpom 服务端、maven 插件）\n\n😋\n\n案例就默认您已经初始好服务端并且配置了节点\n\n😋\n\n如果对安装流程和初始化流程不是了解有疑问的可以参考其他实践案例和安装说明文档\n\n\n# 新建节点脚本\n\n\n# 配置项目授权（白名单）和文件后缀\n\n需要提前配置授权（白名单）路径和文件后缀奥，不知道授权（白名单）路径作用的请查阅文档\n\n\n# 配置节点脚本 - Linux\n\n#!/bin/bash\nTag="nginx"\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n\tnginx\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 `ps -ef | grep "nginx" | grep -v grep | awk \'{print $2}\'`\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\n\nfunction restart() {\n    nginx -s reload\n    status\n}\n\n# See how we were called.\nfunction reload() {\n    nginx -s reload\n    status\n}\n\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    restart)\n        restart\n        ;;\n    status)\n        status\n        ;;\n    reload)\n        reload\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n\n\n\n\n\n# 配置节点脚本 - Windows\n\n@echo off\n\nset NGINX_PATH=%PROJECT_PATH%\\..\\\n\nIF "%1"=="start" goto start\nIF "%1"=="stop" goto stop\nIF "%1"=="restart" goto restart\nIF "%1"=="status" goto status\nIF "%1"=="reload" goto reload\n\n\n@REM start\n:start\n\tcd %NGINX_PATH% & start nginx\ngoto end\n\n@REM restart\n:restart\n\tcd %NGINX_PATH% & nginx -s reload\ngoto end\n\n@REM stop\n:stop\n\tfor /f "tokens=2" %%I in (\'tasklist ^| findstr nginx\') do taskkill /F /pid %%I\ngoto end\n\n@REM reload\n:start\n\tcd %NGINX_PATH% & nginx -s reload\ngoto end\n\n@REM view status\n:status\n\tfor /f "tokens=2" %%I in (\'tasklist ^| findstr nginx\') do @echo running:%%I\ngoto end\n\n:end\n\tEXIT 0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n\n\n# 脚本配置完成后，获取到scriptId\n\n\n\n\n# 新建DSL项目\n\n\n# 新建Linux项目（运行方式DSL）\n\n项目路径可配置到Nginx的配置文件目录，方便直接通过Jpom编辑配置文件 DSL配置如下：\n\n# scriptId 可以是项目路径下脚本文件名或者系统中的脚本模版ID\ndescription: NGINX管理\nrun:\n  start:\n    scriptId: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptArgs: start\n    scriptEnv:\n  restart:\n    scriptId: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptArgs: restart\n    scriptEnv:\n  status:\n    scriptId: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptArgs: status\n    scriptEnv:\n  reload:\n    scriptId: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptArgs: reload\n    scriptEnv:\n  stop:\n    scriptId: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptArgs: stop\n    scriptEnv:\n  fileChangeReload: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\nscriptId替换成上面得到的scriptId\n\n\n# 新建Windows项目（运行方式DSL）\n\n项目路径可配置到Nginx的配置文件目录，方便直接通过Jpom编辑配置文件 DSL配置如下：\n\n# scriptId 可以是项目路径下脚本文件名或者系统中的脚本模版ID\ndescription: NGINX管理\nrun:\n  start:\n    scriptId: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptArgs: start\n    scriptEnv:\n  restart:\n    scriptId: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptArgs: restart\n    scriptEnv:\n  status:\n    scriptId: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptArgs: status\n    scriptEnv:\n  reload:\n    scriptId: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptArgs: reload\n    scriptEnv:      \n  stop:\n    scriptId: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptArgs: stop\n    scriptEnv:\n  fileChangeReload: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\nscriptId替换成上面得到的scriptId\n\n\n# 控制台说明\n\n启动、重启、停止：即调用上面的DSL配置中的run中的start、restart、stop\n\n\n# 文件管理\n\n这里，可以对Nginx的.conf后缀配置文件进行新增修改。文件变更后会自动调用SDL配置中的reload函数实现实时变更并生效。',normalizedContent:'# 前言\n\n本文主要讲解如果使用 jpom 中的 dsl 项目 对nginx的基础管理\n\n> 注意：本文采用一键安装同时基于 2.10.16 版本讲解,系统为 centos / windows\n\n\n# 需要准备的环境\n\n 1. jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. jpom 插件端\n    1. 安装 jpom 需要 java 环境\n    2. 服务器：centos / windows\n    3. 服务器需安装好nginx环境，并把nginx添加到操作系统环境变量中\n\n\n# 安装插件端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 如果不存在将自动安装 jdk。并且将插件端安装到默认目录：/usr/local/jpom-agent\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk 即可\n\n# 安装插件端和 jdk 环境\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent jdk+default\n\n\n1\n2\n\n\n\n# 安装服务端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 和 maven 如果不存在将自动安装 jdk 和 maven。并且将服务端安装到默认目录：/usr/local/jpom-server\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk+mvn 即可\n\n# 安装服务端和 jdk、maven 环境\n# 安装插件端和 jdk 环境\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+mvn+default\n\n\n1\n2\n3\n\n\n😋\n\n案例就默认您已经安装好上述环境（jpom 插件端、jpom 服务端、maven 插件）\n\n😋\n\n案例就默认您已经初始好服务端并且配置了节点\n\n😋\n\n如果对安装流程和初始化流程不是了解有疑问的可以参考其他实践案例和安装说明文档\n\n\n# 新建节点脚本\n\n\n# 配置项目授权（白名单）和文件后缀\n\n需要提前配置授权（白名单）路径和文件后缀奥，不知道授权（白名单）路径作用的请查阅文档\n\n\n# 配置节点脚本 - linux\n\n#!/bin/bash\ntag="nginx"\nretval="0"\n\n# see how we were called.\nfunction start() {\n\tnginx\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 `ps -ef | grep "nginx" | grep -v grep | awk \'{print $2}\'`\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\n\nfunction restart() {\n    nginx -s reload\n    status\n}\n\n# see how we were called.\nfunction reload() {\n    nginx -s reload\n    status\n}\n\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    restart)\n        restart\n        ;;\n    status)\n        status\n        ;;\n    reload)\n        reload\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n\n\n\n\n\n# 配置节点脚本 - windows\n\n@echo off\n\nset nginx_path=%project_path%\\..\\\n\nif "%1"=="start" goto start\nif "%1"=="stop" goto stop\nif "%1"=="restart" goto restart\nif "%1"=="status" goto status\nif "%1"=="reload" goto reload\n\n\n@rem start\n:start\n\tcd %nginx_path% & start nginx\ngoto end\n\n@rem restart\n:restart\n\tcd %nginx_path% & nginx -s reload\ngoto end\n\n@rem stop\n:stop\n\tfor /f "tokens=2" %%i in (\'tasklist ^| findstr nginx\') do taskkill /f /pid %%i\ngoto end\n\n@rem reload\n:start\n\tcd %nginx_path% & nginx -s reload\ngoto end\n\n@rem view status\n:status\n\tfor /f "tokens=2" %%i in (\'tasklist ^| findstr nginx\') do @echo running:%%i\ngoto end\n\n:end\n\texit 0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n\n\n\n\n\n# 脚本配置完成后，获取到scriptid\n\n\n\n\n# 新建dsl项目\n\n\n# 新建linux项目（运行方式dsl）\n\n项目路径可配置到nginx的配置文件目录，方便直接通过jpom编辑配置文件 dsl配置如下：\n\n# scriptid 可以是项目路径下脚本文件名或者系统中的脚本模版id\ndescription: nginx管理\nrun:\n  start:\n    scriptid: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptargs: start\n    scriptenv:\n  restart:\n    scriptid: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptargs: restart\n    scriptenv:\n  status:\n    scriptid: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptargs: status\n    scriptenv:\n  reload:\n    scriptid: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptargs: reload\n    scriptenv:\n  stop:\n    scriptid: 83b2be3f4d654ec0812a50e66b2e8646\n    scriptargs: stop\n    scriptenv:\n  filechangereload: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\nscriptid替换成上面得到的scriptid\n\n\n# 新建windows项目（运行方式dsl）\n\n项目路径可配置到nginx的配置文件目录，方便直接通过jpom编辑配置文件 dsl配置如下：\n\n# scriptid 可以是项目路径下脚本文件名或者系统中的脚本模版id\ndescription: nginx管理\nrun:\n  start:\n    scriptid: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptargs: start\n    scriptenv:\n  restart:\n    scriptid: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptargs: restart\n    scriptenv:\n  status:\n    scriptid: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptargs: status\n    scriptenv:\n  reload:\n    scriptid: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptargs: reload\n    scriptenv:      \n  stop:\n    scriptid: 8cf4a5aa2832414fbb942dcd27feafb6\n    scriptargs: stop\n    scriptenv:\n  filechangereload: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\nscriptid替换成上面得到的scriptid\n\n\n# 控制台说明\n\n启动、重启、停止：即调用上面的dsl配置中的run中的start、restart、stop\n\n\n# 文件管理\n\n这里，可以对nginx的.conf后缀配置文件进行新增修改。文件变更后会自动调用sdl配置中的reload函数实现实时变更并生效。',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"DSL项目接口探活",frontmatter:{title:"DSL项目接口探活",date:"2022-10-21T09:31:18.000Z",permalink:"/pages/practice/ac7b66/",categories:["docs","实践案例","项目管理"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/013.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/9998.V2.9.X/0106.DSL%E9%A1%B9%E7%9B%AE%E6%8E%A5%E5%8F%A3%E6%8E%A2%E6%B4%BB.html",relativePath:"实践案例/013.项目管理/9998.V2.9.X/0106.DSL项目接口探活.md",key:"v-2d7a0750",path:"/pages/practice/ac7b66/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:172},{level:3,title:"安装插件端推荐命令",slug:"安装插件端推荐命令",normalizedTitle:"安装插件端推荐命令",charIndex:310},{level:3,title:"安装服务端推荐命令",slug:"安装服务端推荐命令",normalizedTitle:"安装服务端推荐命令",charIndex:539},{level:2,title:"配置 DSL 脚本",slug:"配置-dsl-脚本",normalizedTitle:"配置 dsl 脚本",charIndex:919},{level:3,title:"脚本内容",slug:"脚本内容",normalizedTitle:"脚本内容",charIndex:965},{level:3,title:"关于脚本的几个说明",slug:"关于脚本的几个说明",normalizedTitle:"关于脚本的几个说明",charIndex:2929},{level:2,title:"配置项目",slug:"配置项目",normalizedTitle:"配置项目",charIndex:3178},{level:3,title:"配置项目授权（白名单）",slug:"配置项目授权-白名单",normalizedTitle:"配置项目授权（白名单）",charIndex:3187},{level:3,title:"创建项目",slug:"创建项目",normalizedTitle:"创建项目",charIndex:3223},{level:2,title:"配置构建并发布到当前项目",slug:"配置构建并发布到当前项目",normalizedTitle:"配置构建并发布到当前项目",charIndex:3890},{level:2,title:"查看项目状态",slug:"查看项目状态",normalizedTitle:"查看项目状态",charIndex:3958}],headersStr:"前言 需要准备的环境 安装插件端推荐命令 安装服务端推荐命令 配置 DSL 脚本 脚本内容 关于脚本的几个说明 配置项目 配置项目授权（白名单） 创建项目 配置构建并发布到当前项目 查看项目状态",content:'# 前言\n\n本文主要介绍如果使用 DSL 模式的项目来实现接口探活管理项目运行状态\n\n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.9.13 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. Jpom 插件端\n    1. 安装 jpom 需要 java 环境\n 3. 一个代码仓库（案例中使用 java 项目）\n\n\n# 安装插件端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 如果不存在将自动安装 jdk\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk 即可\n\n# 安装插件端和 jdk 环境\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk\n\n\n1\n2\n3\n4\n\n\n\n# 安装服务端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 和 maven 如果不存在将自动安装 jdk 和 maven\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk+mvn 即可\n\n# 安装服务端和 jdk、maven 环境\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk+mvn\n\n\n1\n2\n3\n4\n\n\n😋\n\n案例就默认您已经安装好上述环境（jpom 插件端、jpom 服务端、maven 插件）\n\n😋\n\n案例就默认您已经初始好服务端并且配置了节点\n\n😋\n\n如果对安装流程和初始化流程不是了解有疑问的可以参考其他实践案例和安装说明文档\n\n\n# 配置 DSL 脚本\n\n这里的脚本是为了能控制项目的启动、停止、获取项目状态\n\n\n\n\n\n\n# 脚本内容\n\n#!/bin/bash\nTag="Application_${PROJECT_ID}"\nMainClass="org.springframework.boot.loader.JarLauncher"\nLib="${PROJECT_PATH}"\nLog="${PROJECT_PATH}/run.log"\nJVM="-server -Xms128m -Xmx128m -XX:PermSize=32M -XX:MaxNewSize=64m -XX:MaxPermSize=64m -Djava.awt.headless=true -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled"\necho $Tag\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n    echo  $Log \n    if [ ! -f $Log ]; then\n        touch $Log\n    fi\n    nohup java $JVM -Dappliction=$Tag -Djava.ext.dirs=$Lib":${JAVA_HOME}/jre/lib/ext" $MainClass > $Log 2>&1 &\n\tsleep 3\n    head -n 10 $Log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction get_json_value()\n{\n  local json=$1\n  local key=$2\n  local value=$(echo "${json}" | awk -F "[{,:}]" \'{for(i=1;i<=NF;i++){if($i~"\'${key}\'"){print $(i+1)}}}\' | sed \'s/\\"//g\') \n  echo ${value}\n}\n\nfunction status()\n{\n   #  这里的端口或者url 路径需要跟进您的项目端口和获取项目状态的接口来定\n    result_msg=$(curl -s -X GET --header \'Accept: application/json\' --connect-timeout 1 -m 1 \'http://127.0.0.1:8084\')\n    echo "running:`get_json_value "${result_msg}" "pid"`"\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n\n\n\n# 关于脚本的几个说明\n\n可以查阅 DSL 脚本的基础介绍了解基础使用规则\n\n 1. 案例中是管理 Java 项目，实际中可以跟进自己的需求调整脚本内容来管理其他项目\n 2. 注意在使用过 status 方法中修改为当前项目的端口号，url 地址。\n 3. status 请求项目的 url 地址中建议返回当前项目的进程号（pid）\n 4. curl 请求超时时间不要过长，建议控制在 1 秒。因为获取项目状态是串行执行，如果单个项目 status 执行耗时过大会影响查看节点项目状态相关功能\n\n\n# 配置项目\n\n\n# 配置项目授权（白名单）\n\n用于控制项目存储的目录，更多说明\n\n\n\n\n# 创建项目\n\n\n\n\n\n\n\nDSL 配置内容：\n\n# scriptId 可以是项目路径下脚本文件名或者系统中的脚本模版ID\ndescription: 测试\nrun:\n  start:\n#    scriptId: project.sh\n    scriptId: ddda4421102c4a1287718fd939cd31d7\n    scriptArgs: start\n  status:\n#    scriptId: project.sh\n    scriptId: ddda4421102c4a1287718fd939cd31d7\n    scriptArgs: status\n  stop:\n#    scriptId: project.sh\n    scriptId: ddda4421102c4a1287718fd939cd31d7\n    scriptArgs: stop\nfile:\n# 备份文件保留个数\n#  backupCount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupSuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autoBackToFile: true\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n注意：scriptId 需要修改您创建对应的脚本的ID，在编辑弹窗中可以查看到对应脚本的ID\n\n\n\n\n# 配置构建并发布到当前项目\n\n😋\n\n案例就默认您已经会使用构建和项目发布了（不会的可以参考其他实践案例中的说明来操作）\n\n\n\n\n\n\n# 查看项目状态\n\n\n\n\n\n这样就实现使用接口来探活监控项目状态了',normalizedContent:'# 前言\n\n本文主要介绍如果使用 dsl 模式的项目来实现接口探活管理项目运行状态\n\n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.9.13 版本讲解,系统为 centos\n\n\n# 需要准备的环境\n\n 1. jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. jpom 插件端\n    1. 安装 jpom 需要 java 环境\n 3. 一个代码仓库（案例中使用 java 项目）\n\n\n# 安装插件端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 如果不存在将自动安装 jdk\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk 即可\n\n# 安装插件端和 jdk 环境\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk\n\n\n1\n2\n3\n4\n\n\n\n# 安装服务端推荐命令\n\n> 推荐命令会自动检查环境中是否存在 jdk 和 maven 如果不存在将自动安装 jdk 和 maven\n> \n> 一般情况建议自行安装，如果不需要自动安装删除命令最后的 jdk+mvn 即可\n\n# 安装服务端和 jdk、maven 环境\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk+mvn\n\n\n1\n2\n3\n4\n\n\n😋\n\n案例就默认您已经安装好上述环境（jpom 插件端、jpom 服务端、maven 插件）\n\n😋\n\n案例就默认您已经初始好服务端并且配置了节点\n\n😋\n\n如果对安装流程和初始化流程不是了解有疑问的可以参考其他实践案例和安装说明文档\n\n\n# 配置 dsl 脚本\n\n这里的脚本是为了能控制项目的启动、停止、获取项目状态\n\n\n\n\n\n\n# 脚本内容\n\n#!/bin/bash\ntag="application_${project_id}"\nmainclass="org.springframework.boot.loader.jarlauncher"\nlib="${project_path}"\nlog="${project_path}/run.log"\njvm="-server -xms128m -xmx128m -xx:permsize=32m -xx:maxnewsize=64m -xx:maxpermsize=64m -djava.awt.headless=true -xx:+cmsclassunloadingenabled -xx:+cmspermgensweepingenabled"\necho $tag\nretval="0"\n\n# see how we were called.\nfunction start() {\n    echo  $log \n    if [ ! -f $log ]; then\n        touch $log\n    fi\n    nohup java $jvm -dappliction=$tag -djava.ext.dirs=$lib":${java_home}/jre/lib/ext" $mainclass > $log 2>&1 &\n\tsleep 3\n    head -n 10 $log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction get_json_value()\n{\n  local json=$1\n  local key=$2\n  local value=$(echo "${json}" | awk -f "[{,:}]" \'{for(i=1;i<=nf;i++){if($i~"\'${key}\'"){print $(i+1)}}}\' | sed \'s/\\"//g\') \n  echo ${value}\n}\n\nfunction status()\n{\n   #  这里的端口或者url 路径需要跟进您的项目端口和获取项目状态的接口来定\n    result_msg=$(curl -s -x get --header \'accept: application/json\' --connect-timeout 1 -m 1 \'http://127.0.0.1:8084\')\n    echo "running:`get_json_value "${result_msg}" "pid"`"\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n\n\n\n# 关于脚本的几个说明\n\n可以查阅 dsl 脚本的基础介绍了解基础使用规则\n\n 1. 案例中是管理 java 项目，实际中可以跟进自己的需求调整脚本内容来管理其他项目\n 2. 注意在使用过 status 方法中修改为当前项目的端口号，url 地址。\n 3. status 请求项目的 url 地址中建议返回当前项目的进程号（pid）\n 4. curl 请求超时时间不要过长，建议控制在 1 秒。因为获取项目状态是串行执行，如果单个项目 status 执行耗时过大会影响查看节点项目状态相关功能\n\n\n# 配置项目\n\n\n# 配置项目授权（白名单）\n\n用于控制项目存储的目录，更多说明\n\n\n\n\n# 创建项目\n\n\n\n\n\n\n\ndsl 配置内容：\n\n# scriptid 可以是项目路径下脚本文件名或者系统中的脚本模版id\ndescription: 测试\nrun:\n  start:\n#    scriptid: project.sh\n    scriptid: ddda4421102c4a1287718fd939cd31d7\n    scriptargs: start\n  status:\n#    scriptid: project.sh\n    scriptid: ddda4421102c4a1287718fd939cd31d7\n    scriptargs: status\n  stop:\n#    scriptid: project.sh\n    scriptid: ddda4421102c4a1287718fd939cd31d7\n    scriptargs: stop\nfile:\n# 备份文件保留个数\n#  backupcount: 5\n# 限制备份指定文件后缀（支持正则）\n#  backupsuffix: [ \'.jar\',\'.html\',\'^.+\\.(?i)(txt)$\' ]\nconfig:\n# 是否开启日志备份功能\n#  autobacktofile: true\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n注意：scriptid 需要修改您创建对应的脚本的id，在编辑弹窗中可以查看到对应脚本的id\n\n\n\n\n# 配置构建并发布到当前项目\n\n😋\n\n案例就默认您已经会使用构建和项目发布了（不会的可以参考其他实践案例中的说明来操作）\n\n\n\n\n\n\n# 查看项目状态\n\n\n\n\n\n这样就实现使用接口来探活监控项目状态了',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"自定义管理 java 项目",frontmatter:{title:"自定义管理 java 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/project-dsl-java/",tags:["DSL","Java"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/013.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/9999.V2.8.X/0105.project-dsl-java.html",relativePath:"实践案例/013.项目管理/9999.V2.8.X/0105.project-dsl-java.md",key:"v-222bf5c8",path:"/pages/practice/project-dsl-java/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:206},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:261},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:473},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:483},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:534},{level:2,title:"安装插件端",slug:"安装插件端",normalizedTitle:"安装插件端",charIndex:582},{level:3,title:"添加节点",slug:"添加节点",normalizedTitle:"添加节点",charIndex:789},{level:3,title:"配置授权（白名单）",slug:"配置授权-白名单",normalizedTitle:"配置授权（白名单）",charIndex:891},{level:2,title:"创建脚本",slug:"创建脚本",normalizedTitle:"创建脚本",charIndex:941},{level:2,title:"创建项目",slug:"创建项目",normalizedTitle:"创建项目",charIndex:3148},{level:3,title:"上传项目文件",slug:"上传项目文件",normalizedTitle:"上传项目文件",charIndex:3270},{level:3,title:"启动项目",slug:"启动项目",normalizedTitle:"启动项目",charIndex:62}],headersStr:"前言 需要准备的环境 安装服务端 初始化服务端 添加超级管理账号 开启账号 MFA 安装插件端 添加节点 配置授权（白名单） 创建脚本 创建项目 上传项目文件 启动项目",content:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的节点项目管理+脚本管理实现自定义管理 Java 项目（自定义启动项目，停止，查状态）\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端、Jpom 插件端（安装 jpom 需要 java 环境）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n# 创建脚本\n\n注意：Ubuntu/Debian 执行脚本如果出现错误 Syntax error: "(" unexpected 代码对于标准bash而言没有错，因为 Ubuntu/Debian 为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼。\n\n解决方法: 就是取消dash\n\n执行：sudo dpkg-reconfigure dash 在选择项中选No，搞定了！\n\n\n\n脚本内容：\n\n#!/bin/bash\nTag="Application_${PROJECT_ID}"\nMainClass="org.springframework.boot.loader.JarLauncher"\nLib="${PROJECT_PATH}"\nLog="${PROJECT_PATH}/run.log"\nJVM="-server -Xms128m -Xmx128m -XX:PermSize=32M -XX:MaxNewSize=64m -XX:MaxPermSize=64m -Djava.awt.headless=true -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled"\necho $Tag\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n    echo  $Log \n    if [ ! -f $Log ]; then\n        touch $Log\n    fi\n    nohup java $JVM -Dappliction=$Tag -Djava.ext.dirs=$Lib":${JAVA_HOME}/jre/lib/ext" $MainClass > $Log 2>&1 &\n\tsleep 3\n    head -n 10 $Log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n>  1. 脚本里面至少需要实现的三件事：启动、停止、查状态\n> \n>  2. 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n\n提供的示例里面将使用三个函数来实现：start、stop、status\n\n里面的细节这里不过多的说明，可以自由发挥（给您足够的空间）\n\n脚本里面支持的变量有：${PROJECT_ID}、${PROJECT_NAME}、${PROJECT_PATH}\n\n如果多个项目管理方式相同，脚本模版可以重复使用奥（并非一个项目对应一个脚本模版）\n\n更多脚本示例：✈️进入>>\n\n\n# 创建项目\n\n\n\n注意：\n\n 1. scriptArgs 为对应环节执行脚本传入的参数,这里可以使用空格隔空传入多个参数\n 2. scriptId 需要填写当前节点里面存在的脚本的 id,脚本ID 可以在编辑脚本弹窗里面查看，如下图\n\n\n\n\n# 上传项目文件\n\n> 启动项目需要将文件上传到项目目录，这里我们上传一个简单的 SpringBoot 项目\n> \n> 注意：项目里面可以在脚本中 使用 ${PROJECT_PATH} 获取\n\n> 使用小技巧：上传项目文件非必要操作，这里根据脚本内容里面执行的细节来决定是否需要上传，当然您脚本里面可以使用其他目录只不过这个目录就没有跟随当前项目管理而已\n\n\n\n\n# 启动项目\n\n\n\n',normalizedContent:'# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的节点项目管理+脚本管理实现自定义管理 java 项目（自定义启动项目，停止，查状态）\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu\n\n\n# 需要准备的环境\n\n 1. jpom 服务端、jpom 插件端（安装 jpom 需要 java 环境）\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\napt-get install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n# 创建脚本\n\n注意：ubuntu/debian 执行脚本如果出现错误 syntax error: "(" unexpected 代码对于标准bash而言没有错，因为 ubuntu/debian 为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼。\n\n解决方法: 就是取消dash\n\n执行：sudo dpkg-reconfigure dash 在选择项中选no，搞定了！\n\n\n\n脚本内容：\n\n#!/bin/bash\ntag="application_${project_id}"\nmainclass="org.springframework.boot.loader.jarlauncher"\nlib="${project_path}"\nlog="${project_path}/run.log"\njvm="-server -xms128m -xmx128m -xx:permsize=32m -xx:maxnewsize=64m -xx:maxpermsize=64m -djava.awt.headless=true -xx:+cmsclassunloadingenabled -xx:+cmspermgensweepingenabled"\necho $tag\nretval="0"\n\n# see how we were called.\nfunction start() {\n    echo  $log \n    if [ ! -f $log ]; then\n        touch $log\n    fi\n    nohup java $jvm -dappliction=$tag -djava.ext.dirs=$lib":${java_home}/jre/lib/ext" $mainclass > $log 2>&1 &\n\tsleep 3\n    head -n 10 $log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n>  1. 脚本里面至少需要实现的三件事：启动、停止、查状态\n> \n>  2. 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n\n提供的示例里面将使用三个函数来实现：start、stop、status\n\n里面的细节这里不过多的说明，可以自由发挥（给您足够的空间）\n\n脚本里面支持的变量有：${project_id}、${project_name}、${project_path}\n\n如果多个项目管理方式相同，脚本模版可以重复使用奥（并非一个项目对应一个脚本模版）\n\n更多脚本示例：✈️进入>>\n\n\n# 创建项目\n\n\n\n注意：\n\n 1. scriptargs 为对应环节执行脚本传入的参数,这里可以使用空格隔空传入多个参数\n 2. scriptid 需要填写当前节点里面存在的脚本的 id,脚本id 可以在编辑脚本弹窗里面查看，如下图\n\n\n\n\n# 上传项目文件\n\n> 启动项目需要将文件上传到项目目录，这里我们上传一个简单的 springboot 项目\n> \n> 注意：项目里面可以在脚本中 使用 ${project_path} 获取\n\n> 使用小技巧：上传项目文件非必要操作，这里根据脚本内容里面执行的细节来决定是否需要上传，当然您脚本里面可以使用其他目录只不过这个目录就没有跟随当前项目管理而已\n\n\n\n\n# 启动项目\n\n\n\n',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"DSL 项目接口探活监控报警",frontmatter:{title:"DSL 项目接口探活监控报警",date:"2022-10-21T13:20:47.000Z",permalink:"/pages/practice/610387/",categories:["docs","实践案例","项目监控"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/014.%E9%A1%B9%E7%9B%AE%E7%9B%91%E6%8E%A7/0120.DSL%20%E9%A1%B9%E7%9B%AE%E6%8E%A5%E5%8F%A3%E6%8E%A2%E6%B4%BB%E7%9B%91%E6%8E%A7.html",relativePath:"实践案例/014.项目监控/0120.DSL 项目接口探活监控.md",key:"v-ff94b706",path:"/pages/practice/610387/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:313},{level:2,title:"项目的初始化配置",slug:"项目的初始化配置",normalizedTitle:"项目的初始化配置",charIndex:464},{level:3,title:"DSL 脚本示例",slug:"dsl-脚本示例",normalizedTitle:"dsl 脚本示例",charIndex:496},{level:2,title:"配置邮件发送信息",slug:"配置邮件发送信息",normalizedTitle:"配置邮件发送信息",charIndex:2836},{level:3,title:"配置邮件发件人",slug:"配置邮件发件人",normalizedTitle:"配置邮件发件人",charIndex:2849},{level:2,title:"配置监控信息",slug:"配置监控信息",normalizedTitle:"配置监控信息",charIndex:2944},{level:2,title:"愉快使用",slug:"愉快使用",normalizedTitle:"愉快使用",charIndex:2959}],headersStr:"前言 需要准备的环境 项目的初始化配置 DSL 脚本示例 配置邮件发送信息 配置邮件发件人 配置监控信息 愉快使用",content:'# 前言\n\nJpom 中的项目监控是判断项目的运行状态，项目的非 DSL 模式的运行状态又是通过 jps 查找进程 id 来判断项目是否在运行中，这样在一些项目假死的情况是无法监控到的\n\n但是如何能监控到项目的假死状态（假死一般是 CPU 满了，项目无法正常响应处理其他任务、死锁等），一般项目都可以通过是否能正常访问到接口来判断当前项目的状态或者项目的负载情况，以及接口里面可以自动判断条件来决定项目状态\n\n提示\n\n本文主要介绍如果使用 DSL 模式的项目来实现接口探活管理项目运行状态并且监控到异常发送邮件通知\n\n😋\n\n本文是基于DSL项目接口探活实践案例来介绍，查看当前案例前请查阅 DSL项目接口探活 案例\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. Jpom 插件端\n    1. 安装 jpom 需要 java 环境\n 3. 一个代码仓库（案例中使用 java 项目）\n 4. 一个邮件发送账号\n\n\n# 项目的初始化配置\n\n配置细节请参考：DSL项目接口探活\n\n\n# DSL 脚本示例\n\n#!/bin/bash\nTag="Application_${PROJECT_ID}"\nMainClass="org.springframework.boot.loader.JarLauncher"\nLib="${PROJECT_PATH}"\nLog="${PROJECT_PATH}/run.log"\nJVM="-server -Xms128m -Xmx128m -XX:PermSize=32M -XX:MaxNewSize=64m -XX:MaxPermSize=64m -Djava.awt.headless=true -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled"\n\nTestUrl="http://127.0.0.1:8084/random-sleep?max=3"\necho $Tag\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n \t# 先停止\n    stop\n    echo  $Log \n    if [ ! -f $Log ]; then\n        touch $Log\n    fi\n    nohup java $JVM -Dappliction=$Tag -Djava.ext.dirs=$Lib":${JAVA_HOME}/jre/lib/ext" $MainClass > $Log 2>&1 &\n\tsleep 3\n    head -n 10 $Log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction get_json_value()\n{\n  local json=$1\n  local key=$2\n  local value=$(echo "${json}" | awk -F "[{,:}]" \'{for(i=1;i<=NF;i++){if($i~"\'${key}\'"){print $(i+1)}}}\' | sed \'s/\\"//g\') \n  echo ${value}\n}\n\nfunction status()\n{\n   #  这里的端口或者url 路径需要跟进您的项目端口和获取项目状态的接口来定\n    result_msg=$(curl -s -X GET --header \'Accept: application/json\' --connect-timeout 2 -m 2 $TestUrl)\n    #echo $result_msg\n    echo "running:`get_json_value "${result_msg}" "data"`"\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\n说明：这里为了复现假死状态，特意模拟了休眠时间，并且将超时时间修改为 2 秒，实际使用中请修改为自己业务的端口和接口地址，以及超时时间\n\n> curl 请求超时时间不要过长，建议控制在 1 秒。因为获取项目状态是串行执行，如果单个项目 status 执行耗时过大会影响查看节点项目状态相关功能\n\n补充说明\n\n在 Jpom 中，重启流程看下图。在一些极端情况下，可能出现已经无法监控到运行状态了，但是项目进程还存在。这样如果直接执行启动很大可能出现项目端口被占用的情况。目前建议在 DSL 脚本的 start 方法中手动调用一下 stop（后续版本会优化此流程）\n\n\n\n\n# 配置邮件发送信息\n\n\n# 配置邮件发件人\n\n\n\n注意：密码一般为授权码并发邮件的登陆密码，这里使用 QQ 邮箱为例，不同平台获取邮箱授权码方式不一样，实际使用中可以在搜索引擎中搜索查看生成邮箱授权码方法\n\n\n\n\n# 配置监控信息\n\n\n\n\n\n\n# 愉快使用\n\n这样就实现使用接口来探活监控项目状态并且可以邮件报警等，更多配置效果等您来发现！',normalizedContent:'# 前言\n\njpom 中的项目监控是判断项目的运行状态，项目的非 dsl 模式的运行状态又是通过 jps 查找进程 id 来判断项目是否在运行中，这样在一些项目假死的情况是无法监控到的\n\n但是如何能监控到项目的假死状态（假死一般是 cpu 满了，项目无法正常响应处理其他任务、死锁等），一般项目都可以通过是否能正常访问到接口来判断当前项目的状态或者项目的负载情况，以及接口里面可以自动判断条件来决定项目状态\n\n提示\n\n本文主要介绍如果使用 dsl 模式的项目来实现接口探活管理项目运行状态并且监控到异常发送邮件通知\n\n😋\n\n本文是基于dsl项目接口探活实践案例来介绍，查看当前案例前请查阅 dsl项目接口探活 案例\n\n\n# 需要准备的环境\n\n 1. jpom 服务端\n    1. 安装 jpom 需要 java 环境\n    2. 构建需要 maven 环境\n 2. jpom 插件端\n    1. 安装 jpom 需要 java 环境\n 3. 一个代码仓库（案例中使用 java 项目）\n 4. 一个邮件发送账号\n\n\n# 项目的初始化配置\n\n配置细节请参考：dsl项目接口探活\n\n\n# dsl 脚本示例\n\n#!/bin/bash\ntag="application_${project_id}"\nmainclass="org.springframework.boot.loader.jarlauncher"\nlib="${project_path}"\nlog="${project_path}/run.log"\njvm="-server -xms128m -xmx128m -xx:permsize=32m -xx:maxnewsize=64m -xx:maxpermsize=64m -djava.awt.headless=true -xx:+cmsclassunloadingenabled -xx:+cmspermgensweepingenabled"\n\ntesturl="http://127.0.0.1:8084/random-sleep?max=3"\necho $tag\nretval="0"\n\n# see how we were called.\nfunction start() {\n \t# 先停止\n    stop\n    echo  $log \n    if [ ! -f $log ]; then\n        touch $log\n    fi\n    nohup java $jvm -dappliction=$tag -djava.ext.dirs=$lib":${java_home}/jre/lib/ext" $mainclass > $log 2>&1 &\n\tsleep 3\n    head -n 10 $log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction get_json_value()\n{\n  local json=$1\n  local key=$2\n  local value=$(echo "${json}" | awk -f "[{,:}]" \'{for(i=1;i<=nf;i++){if($i~"\'${key}\'"){print $(i+1)}}}\' | sed \'s/\\"//g\') \n  echo ${value}\n}\n\nfunction status()\n{\n   #  这里的端口或者url 路径需要跟进您的项目端口和获取项目状态的接口来定\n    result_msg=$(curl -s -x get --header \'accept: application/json\' --connect-timeout 2 -m 2 $testurl)\n    #echo $result_msg\n    echo "running:`get_json_value "${result_msg}" "data"`"\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n\n\n说明：这里为了复现假死状态，特意模拟了休眠时间，并且将超时时间修改为 2 秒，实际使用中请修改为自己业务的端口和接口地址，以及超时时间\n\n> curl 请求超时时间不要过长，建议控制在 1 秒。因为获取项目状态是串行执行，如果单个项目 status 执行耗时过大会影响查看节点项目状态相关功能\n\n补充说明\n\n在 jpom 中，重启流程看下图。在一些极端情况下，可能出现已经无法监控到运行状态了，但是项目进程还存在。这样如果直接执行启动很大可能出现项目端口被占用的情况。目前建议在 dsl 脚本的 start 方法中手动调用一下 stop（后续版本会优化此流程）\n\n\n\n\n# 配置邮件发送信息\n\n\n# 配置邮件发件人\n\n\n\n注意：密码一般为授权码并发邮件的登陆密码，这里使用 qq 邮箱为例，不同平台获取邮箱授权码方式不一样，实际使用中可以在搜索引擎中搜索查看生成邮箱授权码方法\n\n\n\n\n# 配置监控信息\n\n\n\n\n\n\n# 愉快使用\n\n这样就实现使用接口来探活监控项目状态并且可以邮件报警等，更多配置效果等您来发现！',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"使用节点脚本定时备份 docker 中的 mysql 数据库",frontmatter:{title:"使用节点脚本定时备份 docker 中的 mysql 数据库",date:"2022-08-01T22:34:42.000Z",permalink:"/pages/practice/node-script-backup-docker-mysql/",categories:["docs","实践案例","在线脚本"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/015.%E5%9C%A8%E7%BA%BF%E8%84%9A%E6%9C%AC/01.%E4%BD%BF%E7%94%A8%E8%8A%82%E7%82%B9%E8%84%9A%E6%9C%AC%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD%20docker%20%E4%B8%AD%E7%9A%84%20mysql%20%E6%95%B0%E6%8D%AE%E5%BA%93.html",relativePath:"实践案例/015.在线脚本/01.使用节点脚本定时备份 docker 中的 mysql 数据库.md",key:"v-32cd8c48",path:"/pages/practice/node-script-backup-docker-mysql/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:153},{level:2,title:"创建脚本",slug:"创建脚本",normalizedTitle:"创建脚本",charIndex:260},{level:3,title:"脚本内容",slug:"脚本内容",normalizedTitle:"脚本内容",charIndex:273},{level:3,title:"脚本整体流程是",slug:"脚本整体流程是",normalizedTitle:"脚本整体流程是",charIndex:1510},{level:2,title:"查看执行记录",slug:"查看执行记录",normalizedTitle:"查看执行记录",charIndex:1638},{level:2,title:"备份完成后想上传到其他地方？",slug:"备份完成后想上传到其他地方",normalizedTitle:"备份完成后想上传到其他地方？",charIndex:1653},{level:2,title:"完美实现",slug:"完美实现",normalizedTitle:"完美实现",charIndex:3169}],headersStr:"前言 需要准备的环境 创建脚本 脚本内容 脚本整体流程是 查看执行记录 备份完成后想上传到其他地方？ 完美实现",content:'# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 Jpom 中的节点脚本实现定时备份 docker 容器中的 mysql 数据到物理机中\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 Jpom 服务端并且配置节点\n\n\n# 需要准备的环境\n\n> 环境准备请自行查阅 Jpom 安装相关文档准备奥\n\n 1. Jpom 服务端、\n 2. Jpom 插件端\n 3. 插件端所在到服务器中安装 docker 并且运行了 mysql 容器\n\n\n# 创建脚本\n\n\n\n\n\n\n# 脚本内容\n\n注意：您需要根据自己的情况修改如下信息\n\n * sql 文件保存路径\n * mysql 容器名称\n * mysql 数据库密码\n * 备份全部数据库还是指定数据库\n\n#!/bin/bash\n\necho \'开始备份数据\'\n \nnow=$(date "+%Y%m%d_%H:%M:%S")\nbackup_dir="/data/back_up"\n \n#获取容器id\nmysqlid=`docker ps -aqf "name=xxx-mysql"`\n \n#进入mysql容器\ndocker exec -i ${mysqlid} bash<<\'EOF\'\n \n#mysqldump导出表结构和数据\nif [ ! -d "/backup" ]; then\n    mkdir -p /backup\nfi\n \nif [ -f "/backup/db.sql" ]; then\n    rm -rf /backup/db.sql\nfi\n \nmysqldump --single-transaction -u root -h 127.0.0.1 --password=xxxxx --all-databases > /backup/db.sql\n \necho \'成功制作备份sql\'\n \nif [ $? -ne 0 ]; then\n    echo \'mysqldump运行失败\'\n    exit\n    EOF\nfi\n \nexit\n \nEOF\n \n#将容器内sql文件导出到服务器\nif [ ! -d "${backup_dir}" ]; then\n    mkdir -p "${backup_dir}"\nfi\n \ndocker cp ${mysqlid}:/backup/db.sql ${backup_dir}/db_${now}.sql\n \nif [ $? -ne 0 ]; then\n    echo \'docker cp文件失败\'\n    exit\nfi\necho \'完成备份数据，压缩\'\n\n# ls\n\nfilename="db_${now}.sql"\ntarfilename="db_${now}.sql.tar.gz"\n\nreulst=`tar --totals -czPf ${backup_dir}/${tarfilename} ${backup_dir}/${filename}`\n\necho "压缩完成：${reulst}"\n\n\nrm -rf ${backup_dir}/${filename}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n\n\n\n# 脚本整体流程是\n\n 1. 进入容器 bash 终端\n 2. 使用 mysqldump 导出数据\n 3. 将导出到 sql 文件进行压缩\n 4. 删除备份出到 sql 文件,保留 tar.gz 文件\n\n这里定时是一小时一次,具体可以跟进自己业务调整\n\n\n# 查看执行记录\n\n\n\n\n\n\n# 备份完成后想上传到其他地方？\n\n在到处 sql 文件后可以继续执行您想要的操作，如：使用 scp 上传到其他服务器中\n\n命令示例：\n\n#!/bin/bash\n\necho \'开始备份数据\'\n \nnow=$(date "+%Y%m%d_%H:%M:%S")\nbackup_dir="/data/back_up"\n \n#获取容器id\nmysqlid=`docker ps -aqf "name=xxxx-mysql"`\n \n#进入mysql容器\ndocker exec -i ${mysqlid} bash<<\'EOF\'\n \n#mysqldump导出表结构和数据\nif [ ! -d "/backup" ]; then\n    mkdir -p /backup\nfi\n \nif [ -f "/backup/db.sql" ]; then\n    rm -rf /backup/db.sql\nfi\n \nmysqldump --single-transaction -u root -h 127.0.0.1 --password=xxxxx --all-databases > /backup/db.sql\n \necho \'成功制作备份sql\'\n \nif [ $? -ne 0 ]; then\n    echo \'mysqldump运行失败\'\n    exit\n    EOF\nfi\n \nexit\n \nEOF\n \n#将容器内sql文件导出到服务器\nif [ ! -d "${backup_dir}" ]; then\n    mkdir -p "${backup_dir}"\nfi\n \ndocker cp ${mysqlid}:/backup/db.sql ${backup_dir}/db_${now}.sql\n \nif [ $? -ne 0 ]; then\n    echo \'docker cp文件失败\'\n    exit\nfi\necho \'完成备份数据，压缩+开始转移服务器\'\n\n# ls\n\nfilename="db_${now}.sql"\ntarfilename="db_${now}.sql.tar.gz"\n\nreulst=`tar --totals -czPf ${backup_dir}/${tarfilename} ${backup_dir}/${filename}`\n\necho "压缩完成：${reulst}"\n\necho \'scp to staring\'\nscp ${backup_dir}/${tarfilename}   root@172.19.106.253:/data/mysql/${tarfilename}\n\necho \'scp to done\'\n\nrm -rf ${backup_dir}/${filename}\nrm -rf ${backup_dir}/${tarfilename}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n注意：您需要根据自己的情况修改如下信息\n\n * sql 文件保存路径\n * mysql 容器名称\n * mysql 数据库密码\n * 备份全部数据库还是指定数据库\n * scp 到到服务器 IP （需要提前配置 SSH 信任链接）\n\n\n# 完美实现\n\n节点脚本可以使用如下方式执行：\n\n 1. 定时执行\n 2. 手动执行\n 3. webhook 触发器（钩子）外部调用\n\n您可以根据您到业务需求来搭配不同方式执行',normalizedContent:'# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 jpom 中的节点脚本实现定时备份 docker 容器中的 mysql 数据到物理机中\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 jpom 服务端并且配置节点\n\n\n# 需要准备的环境\n\n> 环境准备请自行查阅 jpom 安装相关文档准备奥\n\n 1. jpom 服务端、\n 2. jpom 插件端\n 3. 插件端所在到服务器中安装 docker 并且运行了 mysql 容器\n\n\n# 创建脚本\n\n\n\n\n\n\n# 脚本内容\n\n注意：您需要根据自己的情况修改如下信息\n\n * sql 文件保存路径\n * mysql 容器名称\n * mysql 数据库密码\n * 备份全部数据库还是指定数据库\n\n#!/bin/bash\n\necho \'开始备份数据\'\n \nnow=$(date "+%y%m%d_%h:%m:%s")\nbackup_dir="/data/back_up"\n \n#获取容器id\nmysqlid=`docker ps -aqf "name=xxx-mysql"`\n \n#进入mysql容器\ndocker exec -i ${mysqlid} bash<<\'eof\'\n \n#mysqldump导出表结构和数据\nif [ ! -d "/backup" ]; then\n    mkdir -p /backup\nfi\n \nif [ -f "/backup/db.sql" ]; then\n    rm -rf /backup/db.sql\nfi\n \nmysqldump --single-transaction -u root -h 127.0.0.1 --password=xxxxx --all-databases > /backup/db.sql\n \necho \'成功制作备份sql\'\n \nif [ $? -ne 0 ]; then\n    echo \'mysqldump运行失败\'\n    exit\n    eof\nfi\n \nexit\n \neof\n \n#将容器内sql文件导出到服务器\nif [ ! -d "${backup_dir}" ]; then\n    mkdir -p "${backup_dir}"\nfi\n \ndocker cp ${mysqlid}:/backup/db.sql ${backup_dir}/db_${now}.sql\n \nif [ $? -ne 0 ]; then\n    echo \'docker cp文件失败\'\n    exit\nfi\necho \'完成备份数据，压缩\'\n\n# ls\n\nfilename="db_${now}.sql"\ntarfilename="db_${now}.sql.tar.gz"\n\nreulst=`tar --totals -czpf ${backup_dir}/${tarfilename} ${backup_dir}/${filename}`\n\necho "压缩完成：${reulst}"\n\n\nrm -rf ${backup_dir}/${filename}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n\n\n\n# 脚本整体流程是\n\n 1. 进入容器 bash 终端\n 2. 使用 mysqldump 导出数据\n 3. 将导出到 sql 文件进行压缩\n 4. 删除备份出到 sql 文件,保留 tar.gz 文件\n\n这里定时是一小时一次,具体可以跟进自己业务调整\n\n\n# 查看执行记录\n\n\n\n\n\n\n# 备份完成后想上传到其他地方？\n\n在到处 sql 文件后可以继续执行您想要的操作，如：使用 scp 上传到其他服务器中\n\n命令示例：\n\n#!/bin/bash\n\necho \'开始备份数据\'\n \nnow=$(date "+%y%m%d_%h:%m:%s")\nbackup_dir="/data/back_up"\n \n#获取容器id\nmysqlid=`docker ps -aqf "name=xxxx-mysql"`\n \n#进入mysql容器\ndocker exec -i ${mysqlid} bash<<\'eof\'\n \n#mysqldump导出表结构和数据\nif [ ! -d "/backup" ]; then\n    mkdir -p /backup\nfi\n \nif [ -f "/backup/db.sql" ]; then\n    rm -rf /backup/db.sql\nfi\n \nmysqldump --single-transaction -u root -h 127.0.0.1 --password=xxxxx --all-databases > /backup/db.sql\n \necho \'成功制作备份sql\'\n \nif [ $? -ne 0 ]; then\n    echo \'mysqldump运行失败\'\n    exit\n    eof\nfi\n \nexit\n \neof\n \n#将容器内sql文件导出到服务器\nif [ ! -d "${backup_dir}" ]; then\n    mkdir -p "${backup_dir}"\nfi\n \ndocker cp ${mysqlid}:/backup/db.sql ${backup_dir}/db_${now}.sql\n \nif [ $? -ne 0 ]; then\n    echo \'docker cp文件失败\'\n    exit\nfi\necho \'完成备份数据，压缩+开始转移服务器\'\n\n# ls\n\nfilename="db_${now}.sql"\ntarfilename="db_${now}.sql.tar.gz"\n\nreulst=`tar --totals -czpf ${backup_dir}/${tarfilename} ${backup_dir}/${filename}`\n\necho "压缩完成：${reulst}"\n\necho \'scp to staring\'\nscp ${backup_dir}/${tarfilename}   root@172.19.106.253:/data/mysql/${tarfilename}\n\necho \'scp to done\'\n\nrm -rf ${backup_dir}/${filename}\nrm -rf ${backup_dir}/${tarfilename}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n注意：您需要根据自己的情况修改如下信息\n\n * sql 文件保存路径\n * mysql 容器名称\n * mysql 数据库密码\n * 备份全部数据库还是指定数据库\n * scp 到到服务器 ip （需要提前配置 ssh 信任链接）\n\n\n# 完美实现\n\n节点脚本可以使用如下方式执行：\n\n 1. 定时执行\n 2. 手动执行\n 3. webhook 触发器（钩子）外部调用\n\n您可以根据您到业务需求来搭配不同方式执行',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"在线管理 SSH 终端以及上传文件(SFTP)和执行命令历史",frontmatter:{title:"在线管理 SSH 终端以及上传文件(SFTP)和执行命令历史",date:"2022-08-01T23:01:54.000Z",permalink:"/pages/practice/ssh-terminal/",categories:["docs","实践案例","SSH管理"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/016.SSH%E7%AE%A1%E7%90%86/01.%E5%9C%A8%E7%BA%BF%E7%AE%A1%E7%90%86%20SSH%20%E7%BB%88%E7%AB%AF%E4%BB%A5%E5%8F%8A%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%92%8C%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%8E%86%E5%8F%B2.html",relativePath:"实践案例/016.SSH管理/01.在线管理 SSH 终端以及上传文件和执行命令历史.md",key:"v-1d455bc4",path:"/pages/practice/ssh-terminal/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:137},{level:2,title:"配置 SSH",slug:"配置-ssh",normalizedTitle:"配置 ssh",charIndex:212},{level:2,title:"使用在线终端",slug:"使用在线终端",normalizedTitle:"使用在线终端",charIndex:227},{level:2,title:"查看执行命令记录",slug:"查看执行命令记录",normalizedTitle:"查看执行命令记录",charIndex:51},{level:2,title:"使用 SFTP 文件管理功能",slug:"使用-sftp-文件管理功能",normalizedTitle:"使用 sftp 文件管理功能",charIndex:259},{level:2,title:"在线编辑文件",slug:"在线编辑文件",normalizedTitle:"在线编辑文件",charIndex:334},{level:2,title:"完美使用",slug:"完美使用",normalizedTitle:"完美使用",charIndex:349}],headersStr:"前言 需要准备的环境 配置 SSH 使用在线终端 查看执行命令记录 使用 SFTP 文件管理功能 在线编辑文件 完美使用",content:"# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 Jpom 中的 SSH 终端、SFTP 文件管理、查看执行命令记录\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 Jpom 服务端\n\n\n# 需要准备的环境\n\n> 环境准备请自行查阅 Jpom 安装相关文档准备奥\n\n 1. Jpom 服务端、\n 2. 一台开启 SSH 服务到服务器\n\n\n# 配置 SSH\n\n\n\n\n\n\n# 使用在线终端\n\n\n\n\n\n\n# 查看执行命令记录\n\n\n\n\n\n\n# 使用 SFTP 文件管理功能\n\n 1. 配置授权目录供可以在线编辑的目录 【必须】\n 2. 配置可以在线编辑的文件后缀 【可选】\n\n\n\n\n\n\n\n\n# 在线编辑文件\n\n\n\n\n\n\n# 完美使用\n\n 1. 后续普通小文件可以直接使用 Jpom 系统上传、下载\n 2. 文本文件还可以在线编辑\n 3. Jpom 中还可以配置非管理员禁止执行某些命令,如：rm\n 4. Jpom 中还可以使用 SSH 命令管理来定时执行某些脚本",normalizedContent:"# 前言\n\n> 本文主要介绍：\n> \n> 如何使用 jpom 中的 ssh 终端、sftp 文件管理、查看执行命令记录\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 注意：本文默认已经认为您已经安装好 jpom 服务端\n\n\n# 需要准备的环境\n\n> 环境准备请自行查阅 jpom 安装相关文档准备奥\n\n 1. jpom 服务端、\n 2. 一台开启 ssh 服务到服务器\n\n\n# 配置 ssh\n\n\n\n\n\n\n# 使用在线终端\n\n\n\n\n\n\n# 查看执行命令记录\n\n\n\n\n\n\n# 使用 sftp 文件管理功能\n\n 1. 配置授权目录供可以在线编辑的目录 【必须】\n 2. 配置可以在线编辑的文件后缀 【可选】\n\n\n\n\n\n\n\n\n# 在线编辑文件\n\n\n\n\n\n\n# 完美使用\n\n 1. 后续普通小文件可以直接使用 jpom 系统上传、下载\n 2. 文本文件还可以在线编辑\n 3. jpom 中还可以配置非管理员禁止执行某些命令,如：rm\n 4. jpom 中还可以使用 ssh 命令管理来定时执行某些脚本",charsets:{cjk:!0},lastUpdated:"2022/08/08, 11:51:18",lastUpdatedTimestamp:1659959478e3},{title:"监控项目 + 邮件报警通知",frontmatter:{title:"监控项目 + 邮件报警通知",date:"2022-07-21T21:54:21.000Z",permalink:"/pages/practice/monitor-notice/",categories:["docs","文档","实践案例"],tags:["监控","邮件"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/014.%E9%A1%B9%E7%9B%AE%E7%9B%91%E6%8E%A7/9998.V2.9.X/0109.monitor.notice.html",relativePath:"实践案例/014.项目监控/9998.V2.9.X/0109.monitor.notice.md",key:"v-ac5152e2",path:"/pages/practice/monitor-notice/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"需要准备的环境",slug:"需要准备的环境",normalizedTitle:"需要准备的环境",charIndex:214},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:282},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:490},{level:4,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:500},{level:4,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:551},{level:2,title:"安装插件端",slug:"安装插件端",normalizedTitle:"安装插件端",charIndex:599},{level:3,title:"添加节点",slug:"添加节点",normalizedTitle:"添加节点",charIndex:804},{level:3,title:"配置授权（白名单）",slug:"配置授权-白名单",normalizedTitle:"配置授权（白名单）",charIndex:1267},{level:2,title:"配置项目",slug:"配置项目",normalizedTitle:"配置项目",charIndex:1319},{level:3,title:"添加项目",slug:"添加项目",normalizedTitle:"添加项目",charIndex:1328},{level:3,title:"上传 jar 包",slug:"上传-jar-包",normalizedTitle:"上传 jar 包",charIndex:1386},{level:3,title:"启动项目",slug:"启动项目",normalizedTitle:"启动项目",charIndex:1403},{level:2,title:"配置监控",slug:"配置监控",normalizedTitle:"配置监控",charIndex:1523},{level:3,title:"配置邮件发件人",slug:"配置邮件发件人",normalizedTitle:"配置邮件发件人",charIndex:1532},{level:3,title:"配置报警规则(准备)",slug:"配置报警规则-准备",normalizedTitle:"配置报警规则(准备)",charIndex:1627},{level:4,title:"配置联系人收件邮箱",slug:"配置联系人收件邮箱",normalizedTitle:"配置联系人收件邮箱",charIndex:1687},{level:3,title:"配置报警规则",slug:"配置报警规则",normalizedTitle:"配置报警规则",charIndex:1627},{level:3,title:"测试报警",slug:"测试报警",normalizedTitle:"测试报警",charIndex:1749},{level:4,title:"监控日志",slug:"监控日志",normalizedTitle:"监控日志",charIndex:1882},{level:4,title:"报警邮件",slug:"报警邮件",normalizedTitle:"报警邮件",charIndex:1892}],headersStr:"前言 需要准备的环境 安装服务端 初始化服务端 添加超级管理账号 开启账号 MFA 安装插件端 添加节点 配置授权（白名单） 配置项目 添加项目 上传 jar 包 启动项目 配置监控 配置邮件发件人 配置报警规则(准备) 配置联系人收件邮箱 配置报警规则 测试报警 监控日志 报警邮件",content:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 Jpom 中的项目监控功能，当项目未运行时将触发邮件报警通知，还可以时间自动重启项目功能\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 实际文档中使用 Jpom 监控 Java 项目，实际使用中可以使用 DSL 模式到项目来监控更多的项目\n\n> 注意：本文采用一键安装同时基于 2.9.4 版本讲解,系统为 centos7\n\n\n# 需要准备的环境\n\n 1. Jpom 服务端、Jpom 插件端（安装 jpom 需要 java 环境）\n 2. 一个邮件发送账号\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\nyum install -y wget && wget -O install.sh https://jpom.top/docs/install.sh && bash install.sh Agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n * 节点的默认账号：jpomAgent\n * 节点的默认密码：为随机生成,启动时候会在控制台输出：Automatically generate authorized account:jpomAgent password:xxxxx Authorization information storage location：/home/jpom/agent/data/agent_authorize.json\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n注意：因为本实践案例插件端和服务端在同一台服务器，才插件端地址可以使用 127.0.0.1:2123,如果您在使用中插件端和服务端不在同一台服务器上，那么节点地址则需要添加插件端所在服务器的内网IP,当然如果插件端和服务端内网不互通也可以通过配置代理、开放端口访问权限等方式来实现服务器与其他网络中的插件端通讯\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n\n\n# 配置项目\n\n\n# 添加项目\n\n这里添加的项目为需要被监控的项目(本文中创建一个 java jar 包模式的示例项目)\n\n\n\n\n\n\n# 上传 jar 包\n\n\n\n\n\n\n# 启动项目\n\n\n\n\n\n\n\n在项目列表中查看项目状态、项目进程ID、项目占用的端口号\n\n\n\n再次进入控制台可以查看到控制台日志（因为新创建项目日志文件还存在，第一次启动时候未能直接读取到日志文件，二次打开或者启动会直接读取到日志）\n\n\n\n\n# 配置监控\n\n\n# 配置邮件发件人\n\n\n\n注意：密码一般为授权码并发邮件的登陆密码，这里使用 QQ 邮箱为例，不同平台获取邮箱授权码方式不一样，实际使用中可以在搜索引擎中搜索查看生成邮箱授权码方法\n\n\n\n\n# 配置报警规则(准备)\n\n\n\n注意： 此时会发现报警联系人无法选择，因为对呀的联系人还没有配置报警通知收件邮箱\n\n\n\n# 配置联系人收件邮箱\n\n\n\n\n\n\n# 配置报警规则\n\n自动重启：当监控到项目是未运行状态时会自动尝试执行重启操作\n\n\n\n\n# 测试报警\n\n 1. 通过控制台手动项目\n 2. 去服务器上手动 kill 项目进程\n 3. 服务器自动 kill 项目进程等方式\n 4. ....\n\n监控在一定周期内监控到触发报警条件后，会在平台记录一个报警记录，并且根据联系人配置的报警通知方式执行报警通知\n\n# 监控日志\n\n\n\n# 报警邮件\n\n",normalizedContent:"# 前言\n\n> 本文主要介绍： 如何从零开始使用 jpom 中的项目监控功能，当项目未运行时将触发邮件报警通知，还可以时间自动重启项目功能\n> \n> 文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本\n\n> 实际文档中使用 jpom 监控 java 项目，实际使用中可以使用 dsl 模式到项目来监控更多的项目\n\n> 注意：本文采用一键安装同时基于 2.9.4 版本讲解,系统为 centos7\n\n\n# 需要准备的环境\n\n 1. jpom 服务端、jpom 插件端（安装 jpom 需要 java 环境）\n 2. 一个邮件发送账号\n\n\n# 安装服务端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\ncd /home/jpom/server/\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh server jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 初始化服务端\n\n# 添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n\n\n# 开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n\n\n\n# 安装插件端\n\n# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/agent/\ncd /home/jpom/agent/\nyum install -y wget && wget -o install.sh https://jpom.top/docs/install.sh && bash install.sh agent jdk\n\n\n1\n2\n3\n4\n\n\n\n\n\n\n\n# 添加节点\n\n注意要填写端口号哟\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n * 节点的默认账号：jpomagent\n * 节点的默认密码：为随机生成,启动时候会在控制台输出：automatically generate authorized account:jpomagent password:xxxxx authorization information storage location：/home/jpom/agent/data/agent_authorize.json\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的\n\n注意：因为本实践案例插件端和服务端在同一台服务器，才插件端地址可以使用 127.0.0.1:2123,如果您在使用中插件端和服务端不在同一台服务器上，那么节点地址则需要添加插件端所在服务器的内网ip,当然如果插件端和服务端内网不互通也可以通过配置代理、开放端口访问权限等方式来实现服务器与其他网络中的插件端通讯\n\n\n\n\n# 配置授权（白名单）\n\n项目授权（白名单）是为了防止随意配置目录，同时也为了保护系统目录\n\n\n\n\n\n\n# 配置项目\n\n\n# 添加项目\n\n这里添加的项目为需要被监控的项目(本文中创建一个 java jar 包模式的示例项目)\n\n\n\n\n\n\n# 上传 jar 包\n\n\n\n\n\n\n# 启动项目\n\n\n\n\n\n\n\n在项目列表中查看项目状态、项目进程id、项目占用的端口号\n\n\n\n再次进入控制台可以查看到控制台日志（因为新创建项目日志文件还存在，第一次启动时候未能直接读取到日志文件，二次打开或者启动会直接读取到日志）\n\n\n\n\n# 配置监控\n\n\n# 配置邮件发件人\n\n\n\n注意：密码一般为授权码并发邮件的登陆密码，这里使用 qq 邮箱为例，不同平台获取邮箱授权码方式不一样，实际使用中可以在搜索引擎中搜索查看生成邮箱授权码方法\n\n\n\n\n# 配置报警规则(准备)\n\n\n\n注意： 此时会发现报警联系人无法选择，因为对呀的联系人还没有配置报警通知收件邮箱\n\n\n\n# 配置联系人收件邮箱\n\n\n\n\n\n\n# 配置报警规则\n\n自动重启：当监控到项目是未运行状态时会自动尝试执行重启操作\n\n\n\n\n# 测试报警\n\n 1. 通过控制台手动项目\n 2. 去服务器上手动 kill 项目进程\n 3. 服务器自动 kill 项目进程等方式\n 4. ....\n\n监控在一定周期内监控到触发报警条件后，会在平台记录一个报警记录，并且根据联系人配置的报警通知方式执行报警通知\n\n# 监控日志\n\n\n\n# 报警邮件\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/12, 10:15:40",lastUpdatedTimestamp:170505454e4},{title:"Linux安装Jpom2.10.40教程",frontmatter:{title:"Linux安装Jpom2.10.40教程",date:"2023-05-09T17:15:14.000Z",permalink:"/pages/practice/8127a2/",categories:["docs","实践案例","日常管理"],tags:[null],author:{name:"超人那个超i",link:"https://gitee.com/WCmayun"},readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/017.%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86/0000.V2.10.X/0200.Linux%E5%AE%89%E8%A3%85Jpom2.10.40%E6%95%99%E7%A8%8B.html",relativePath:"实践案例/017.日常管理/0000.V2.10.X/0200.Linux安装Jpom2.10.40教程.md",key:"v-a64d2c18",path:"/pages/practice/8127a2/",headers:[{level:2,title:"一、前言",slug:"一、前言",normalizedTitle:"一、前言",charIndex:27},{level:3,title:"1、需要准备的环境",slug:"_1、需要准备的环境",normalizedTitle:"1、需要准备的环境",charIndex:199},{level:3,title:"2、获取安装包",slug:"_2、获取安装包",normalizedTitle:"2、获取安装包",charIndex:299},{level:3,title:"3、上传安装包到服务器中",slug:"_3、上传安装包到服务器中",normalizedTitle:"3、上传安装包到服务器中",charIndex:876},{level:2,title:"二、安装JDK1.8.211",slug:"二、安装jdk1-8-211",normalizedTitle:"二、安装jdk1.8.211",charIndex:895},{level:2,title:"三、安装Jpom插件端",slug:"三、安装jpom插件端",normalizedTitle:"三、安装jpom插件端",charIndex:1349},{level:2,title:"四、安装Jpom服务端",slug:"四、安装jpom服务端",normalizedTitle:"四、安装jpom服务端",charIndex:1811},{level:3,title:"1、部署Jpom服务端",slug:"_1、部署jpom服务端",normalizedTitle:"1、部署jpom服务端",charIndex:1827},{level:3,title:"2、访问Jpom服务端",slug:"_2、访问jpom服务端",normalizedTitle:"2、访问jpom服务端",charIndex:2254},{level:3,title:"3、初始化服务端",slug:"_3、初始化服务端",normalizedTitle:"3、初始化服务端",charIndex:2434},{level:4,title:"1、添加超级管理账号",slug:"_1、添加超级管理账号",normalizedTitle:"1、添加超级管理账号",charIndex:2446},{level:4,title:"2、开启账号 MFA",slug:"_2、开启账号-mfa",normalizedTitle:"2、开启账号 mfa",charIndex:2497},{level:2,title:"五、数据库切换成MySQL（非必须）",slug:"五、数据库切换成mysql-非必须",normalizedTitle:"五、数据库切换成mysql（非必须）",charIndex:2664},{level:2,title:"愉快的使用",slug:"愉快的使用",normalizedTitle:"愉快的使用",charIndex:3857}],headersStr:"一、前言 1、需要准备的环境 2、获取安装包 3、上传安装包到服务器中 二、安装JDK1.8.211 三、安装Jpom插件端 四、安装Jpom服务端 1、部署Jpom服务端 2、访问Jpom服务端 3、初始化服务端 1、添加超级管理账号 2、开启账号 MFA 五、数据库切换成MySQL（非必须） 愉快的使用",content:"# Linux安装Jpom2.10.40教程\n\n\n# 一、前言\n\n> 本文主要介绍 如何从零开始采用离线的方式安装 Jpom 服务端+插件端\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意\n> \n>  1. 本文基于 2.10. 版本讲解,系统为 centos7\n>  2. 本文默认使用的H2数据库，可更换成MySQL数据库（自行选择）\n\n\n# 1、需要准备的环境\n\n 1. 一台 centos7 的服务器\n 2. 服务器中已经安装 jdk（建议 HotSpot JDK 1.8）\n 3. 服务器中已经安装 MySQL5.7.38数据库\n\n\n# 2、获取安装包\n\nJpom 目前安装包都会发布到：下载中心 提供大家下载\n\n发布的包一般包含如下文件：\n\n * jpom-x.x.x.zip\n * server-x.x.x-release.tar.gz\n * server-x.x.x-release.tar.gz.sha1（sha1sum）\n * server-x.x.x-release.zip\n * server-x.x.x-release.zip.sha1（sha1sum）\n * agent-x.x.x-release.tar.gz\n * agent-x.x.x-release.tar.gz.sha1（sha1sum）\n * agent-x.x.x-release.zip\n * agent-x.x.x-release.zip.sha1（sha1sum）\n\n文件大致有：zip 包、tar.gz 包、sha1sum 校验文件\n\njpom-x.x.x.zip 文件为：server-x.x.x-release.zip、agent-x.x.x-release.zip 合并压缩包，一般用于一并下载服务端和插件端安装包。\n\n本文使用 tar.gz 包 来安装：\n\n 1. server-x.x.x-release.tar.gz\n 2. agent-x.x.x-release.tar.gz\n\n\n# 3、上传安装包到服务器中\n\n\n\n\n# 二、安装JDK1.8.211\n\n# 1、首先检查Linux服务器是否有OpenJDK\nrpm -qa|grep java\n# 2、删除openJDK版本\n复制查出来的文件进行删除\nrpm -e --nodeps\n# 3、将Java压缩包解压到software目录下\ncd /opt/package\ntar -zxvf jdk-8u211-linux-x64.tar.gz -C /usr/local/\n# 4、修改jdk目录名称\nmv /usr/local/jdk1.8.0_211 /usr/local/java\n# 5、配置环境变量\n# 修改配置文件\nvim /etc/profile\n# 在最后面加入\nexport JAVA_HOME=/usr/local/java\nexport PATH=$PATH:$JAVA_HOME/bin\n# 使配置文件立即生效\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 三、安装Jpom插件端\n\n# 进到安装包存放目录\ncd /opt/package/Jpom/\n# 创建插件端的安装目录\nmkdir -p /usr/local/jpom-agent/\n# 解压安装包(注意：需要切回到安装包存放路径奥)\ntar -zxf agent-2.10.40-release.tar.gz -C /usr/local/jpom-agent/\n# 切换到安装目录\ncd /usr/local/jpom-agent/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n# 启动插件端\nsh ./bin/Agent.sh start\n\n\n1\n2\n\n\n\n\n> 等待执行结果，查看控制台输出插件端账号密码\n> \n>  1. Automatically generate authorized account:jpomAgent password:x17kmn9s81\n>  2. Current node address => http://1.0.0.11:2123\n>  3. 插件端默认端口为：2123\n\n\n# 四、安装Jpom服务端\n\n\n# 1、部署Jpom服务端\n\n# 进到安装包存放目录\ncd /opt/package/Jpom/\n# 创建服务端的安装目录\nmkdir -p /usr/local/jpom-server/\n# 解压安装包(注意：需要切回到安装包存放路径奥)\ntar -zxf server-2.10.40-release.tar.gz -C /usr/local/jpom-server/\n# 切换到安装目录\ncd /usr/local/jpom-server/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n# 启动服务端\nsh ./bin/Server.sh start\n\n\n1\n2\n\n\n注意：如果服务器中没有安装 docker 控制台中可以输出：There is no docker service local java.io.IOException: xxxx 相关错误忽略即可，因为服务端默认会自动添加本机 docker 服务到 Jpom 中方便后续使用。\n\n\n# 2、访问Jpom服务端\n\n> 等待执行结果，查看控制台输出服务端信息\n> \n>  1. Server Successfully started,Can use happily => http://1.0.0.11:2122 【The current address is for reference only】\n>  2. 服务端默认端口为：2122\n\n\n# 3、初始化服务端\n\n# 1、添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n# 2、开启账号 MFA\n\n> 为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证 温馨提示\n> \n> Jpom 默认会自动检查当前服务器是否存在未被绑定的插件端，如果存在插件端未添加到服务端中，程序将自动添加插件端到节点中（工作空间为默认）\n> \n> 此方式仅在节点列表为空并且在启动服务端时候存在运行中的插件端才生效\n\n\n# 五、数据库切换成MySQL（非必须）\n\n> 温馨提示\n> \n> Jpom 服务端的数据默认存储到 H2database 中\n> \n> 部分用户有需求期望数据存储到 mysql 中\n> \n> 使用 mysql 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n1、在登录后Jpom后【系统管理=>服务端配置=>系统配置】修改db模块 配置文件：conf/application.yml\n\n * 修改jpom.db.mode为 MYSQL\n\n * 修改jpom.db.url为您mysql的jdbc地址如下（根据实际内容修改）\n\n * jdbc:mysql://127.0.0.1:3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false\n\n * 修改 jpom.db.user-name 为对应 mysql 账户\n\n * 修改 jpom.db.user-pwd 为对应 mysql 密码\n\n  db: \n    # 数据库默认 支持 ：H2、MYSQL\n    mode: MYSQL\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # H2 模式无需配置 mysql 配置 jdbc 地址\n    url: jdbc:mysql://1.0.0.11:6603/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false\n    # 数据库账号 默认 jpom\n    user-name: root\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: root\n    # h2 数据库缓存大小  kilobyte 1KB 1,024 megabyte 1MB 1,048,576\n    cache-size: 50MB\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 500\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n    # 控制台是否打印 sql 信息\n    show-sql: false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n2、修改后保存并重启即可。\n\n\n# 愉快的使用\n\n这样就完成 Jpom 的安装流程了，可以根据需要使用其他功能。",normalizedContent:"# linux安装jpom2.10.40教程\n\n\n# 一、前言\n\n> 本文主要介绍 如何从零开始采用离线的方式安装 jpom 服务端+插件端\n> \n> 本文中服务端和插件端是安装在同一个服务器中的，实际操作时根据业务情况来安装\n\n> 注意\n> \n>  1. 本文基于 2.10. 版本讲解,系统为 centos7\n>  2. 本文默认使用的h2数据库，可更换成mysql数据库（自行选择）\n\n\n# 1、需要准备的环境\n\n 1. 一台 centos7 的服务器\n 2. 服务器中已经安装 jdk（建议 hotspot jdk 1.8）\n 3. 服务器中已经安装 mysql5.7.38数据库\n\n\n# 2、获取安装包\n\njpom 目前安装包都会发布到：下载中心 提供大家下载\n\n发布的包一般包含如下文件：\n\n * jpom-x.x.x.zip\n * server-x.x.x-release.tar.gz\n * server-x.x.x-release.tar.gz.sha1（sha1sum）\n * server-x.x.x-release.zip\n * server-x.x.x-release.zip.sha1（sha1sum）\n * agent-x.x.x-release.tar.gz\n * agent-x.x.x-release.tar.gz.sha1（sha1sum）\n * agent-x.x.x-release.zip\n * agent-x.x.x-release.zip.sha1（sha1sum）\n\n文件大致有：zip 包、tar.gz 包、sha1sum 校验文件\n\njpom-x.x.x.zip 文件为：server-x.x.x-release.zip、agent-x.x.x-release.zip 合并压缩包，一般用于一并下载服务端和插件端安装包。\n\n本文使用 tar.gz 包 来安装：\n\n 1. server-x.x.x-release.tar.gz\n 2. agent-x.x.x-release.tar.gz\n\n\n# 3、上传安装包到服务器中\n\n\n\n\n# 二、安装jdk1.8.211\n\n# 1、首先检查linux服务器是否有openjdk\nrpm -qa|grep java\n# 2、删除openjdk版本\n复制查出来的文件进行删除\nrpm -e --nodeps\n# 3、将java压缩包解压到software目录下\ncd /opt/package\ntar -zxvf jdk-8u211-linux-x64.tar.gz -c /usr/local/\n# 4、修改jdk目录名称\nmv /usr/local/jdk1.8.0_211 /usr/local/java\n# 5、配置环境变量\n# 修改配置文件\nvim /etc/profile\n# 在最后面加入\nexport java_home=/usr/local/java\nexport path=$path:$java_home/bin\n# 使配置文件立即生效\nsource /etc/profile\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 三、安装jpom插件端\n\n# 进到安装包存放目录\ncd /opt/package/jpom/\n# 创建插件端的安装目录\nmkdir -p /usr/local/jpom-agent/\n# 解压安装包(注意：需要切回到安装包存放路径奥)\ntar -zxf agent-2.10.40-release.tar.gz -c /usr/local/jpom-agent/\n# 切换到安装目录\ncd /usr/local/jpom-agent/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n# 启动插件端\nsh ./bin/agent.sh start\n\n\n1\n2\n\n\n\n\n> 等待执行结果，查看控制台输出插件端账号密码\n> \n>  1. automatically generate authorized account:jpomagent password:x17kmn9s81\n>  2. current node address => http://1.0.0.11:2123\n>  3. 插件端默认端口为：2123\n\n\n# 四、安装jpom服务端\n\n\n# 1、部署jpom服务端\n\n# 进到安装包存放目录\ncd /opt/package/jpom/\n# 创建服务端的安装目录\nmkdir -p /usr/local/jpom-server/\n# 解压安装包(注意：需要切回到安装包存放路径奥)\ntar -zxf server-2.10.40-release.tar.gz -c /usr/local/jpom-server/\n# 切换到安装目录\ncd /usr/local/jpom-server/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n\n# 启动服务端\nsh ./bin/server.sh start\n\n\n1\n2\n\n\n注意：如果服务器中没有安装 docker 控制台中可以输出：there is no docker service local java.io.ioexception: xxxx 相关错误忽略即可，因为服务端默认会自动添加本机 docker 服务到 jpom 中方便后续使用。\n\n\n# 2、访问jpom服务端\n\n> 等待执行结果，查看控制台输出服务端信息\n> \n>  1. server successfully started,can use happily => http://1.0.0.11:2122 【the current address is for reference only】\n>  2. 服务端默认端口为：2122\n\n\n# 3、初始化服务端\n\n# 1、添加超级管理账号\n\n> 添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n# 2、开启账号 mfa\n\n> 为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证 温馨提示\n> \n> jpom 默认会自动检查当前服务器是否存在未被绑定的插件端，如果存在插件端未添加到服务端中，程序将自动添加插件端到节点中（工作空间为默认）\n> \n> 此方式仅在节点列表为空并且在启动服务端时候存在运行中的插件端才生效\n\n\n# 五、数据库切换成mysql（非必须）\n\n> 温馨提示\n> \n> jpom 服务端的数据默认存储到 h2database 中\n> \n> 部分用户有需求期望数据存储到 mysql 中\n> \n> 使用 mysql 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n1、在登录后jpom后【系统管理=>服务端配置=>系统配置】修改db模块 配置文件：conf/application.yml\n\n * 修改jpom.db.mode为 mysql\n\n * 修改jpom.db.url为您mysql的jdbc地址如下（根据实际内容修改）\n\n * jdbc:mysql://127.0.0.1:3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false\n\n * 修改 jpom.db.user-name 为对应 mysql 账户\n\n * 修改 jpom.db.user-pwd 为对应 mysql 密码\n\n  db: \n    # 数据库默认 支持 ：h2、mysql\n    mode: mysql\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # h2 模式无需配置 mysql 配置 jdbc 地址\n    url: jdbc:mysql://1.0.0.11:6603/jpom?useunicode=true&characterencoding=utf-8&usessl=false\n    # 数据库账号 默认 jpom\n    user-name: root\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: root\n    # h2 数据库缓存大小  kilobyte 1kb 1,024 megabyte 1mb 1,048,576\n    cache-size: 50mb\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 500\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n    # 控制台是否打印 sql 信息\n    show-sql: false\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n2、修改后保存并重启即可。\n\n\n# 愉快的使用\n\n这样就完成 jpom 的安装流程了，可以根据需要使用其他功能。",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"如何开启 h2-console web 访问功能",frontmatter:{title:"如何开启 h2-console web 访问功能",date:"2022-08-05T17:59:07.000Z",permalink:"/pages/practice/h2-console/",categories:["docs","实践案例","日常管理"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/017.%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86/0100.%E5%A6%82%E4%BD%95%E5%BC%80%E5%90%AF%20h2-console%20web%20%E8%AE%BF%E9%97%AE%E5%8A%9F%E8%83%BD.html",relativePath:"实践案例/017.日常管理/0100.如何开启 h2-console web 访问功能.md",key:"v-0a810df7",path:"/pages/practice/h2-console/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"说明",slug:"说明",normalizedTitle:"说明",charIndex:121},{level:2,title:"在 Jpom 中开启 h2-console 的步骤",slug:"在-jpom-中开启-h2-console-的步骤",normalizedTitle:"在 jpom 中开启 h2-console 的步骤",charIndex:491},{level:3,title:"修改数据账号密码",slug:"修改数据账号密码",normalizedTitle:"修改数据账号密码",charIndex:521},{level:3,title:"开启 h2-console",slug:"开启-h2-console",normalizedTitle:"开启 h2-console",charIndex:220},{level:3,title:"访问 h2-console",slug:"访问-h2-console",normalizedTitle:"访问 h2-console",charIndex:709},{level:2,title:"完美使用",slug:"完美使用",normalizedTitle:"完美使用",charIndex:911},{level:2,title:"问题",slug:"问题",normalizedTitle:"问题",charIndex:990}],headersStr:"前言 说明 在 Jpom 中开启 h2-console 的步骤 修改数据账号密码 开启 h2-console 访问 h2-console 完美使用 问题",content:"# 前言\n\n> 本文主要介绍：\n> \n> 如何在 Jpom 开启 h2 web 控制台来查看数据功能（h2-console）、使用改功能 Jpom 版本需要大于 2.8.9\n\n> 注意：本文默认已经认为您已经安装好 Jpom 服务端\n\n\n# 说明\n\nJpom 中默认使用 H2 数据库来存储主要数据，并且使用文件内存模式，这样 Jpom 中的 h2 数据就不支持多客户端连接\n\n如果您期望在 Jpom 服务端运行中来管理数据库那么就需要通过开启 h2-console 来实现（本功能为 h2 自带功能）\n\n同时 Jpom 中的 h2 数据库账号密码是系统自带并默认创建的：\n\n * 账号：jpom\n * 密码：jpom\n\n但是考虑到部分情况下直接开启 h2-console 后并且使用默认账号密码这样数据就及其不安全，所以 Jpom 中如果您需要开这个功能还需要修改账号或者密码来开启\n\n如果没有修改账号或者密码开启 h2-console，在启动时候会输出：(并且自动关闭程序)\n\n【安全警告】数据库账号密码使用默认的情况下不建议开启 h2 数据 web 控制台\n\n\n1\n\n\n\n# 在 Jpom 中开启 h2-console 的步骤\n\n\n# 修改数据账号密码\n\n\n\n注意：请不要使用弱密码，建议使用随机 16 为字符串\n\n\n\n保存并重启、等待重启完成\n\n这样操作后会自动修改数据库账户密码，默认的账号密码就失效了\n\n⚠️注意：如果本地运行只会执行修改数据库账号密码操作，不会将数据库账号密码信息写入配置文件中，需要自己手动配置后才能生效奥。\n\n\n# 开启 h2-console\n\n\n\n保存并重启、等待重启完成\n\n\n# 访问 h2-console\n\n这里直接在您访问 Jpom 的根路径后面加 /h2-console 即可\n\n举例：\n\n * http://172.19.106.253:2122/ -> http://172.19.106.253:2122/h2-console\n * https://jpom.keepbx.cn/ -> https://jpom.keepbx.cn/h2-console\n\n\n\n\n\n\n# 完美使用\n\n这样就可以在 浏览器中去管理数据，进行部分数据插入和简单的修改（请按照 Jpom 数据存储规则修改， 不要随意修改避免程序不能正常运行）\n\n\n# 问题\n\nQ: 为啥不能直接修改配置文件来实现呢？ A: 因为数据库已经创建账号密码已经确定，如果想保留原数据就只能通过在线编辑来修改，这样会执行数据的账号密码修改才能达到最终目的。",normalizedContent:"# 前言\n\n> 本文主要介绍：\n> \n> 如何在 jpom 开启 h2 web 控制台来查看数据功能（h2-console）、使用改功能 jpom 版本需要大于 2.8.9\n\n> 注意：本文默认已经认为您已经安装好 jpom 服务端\n\n\n# 说明\n\njpom 中默认使用 h2 数据库来存储主要数据，并且使用文件内存模式，这样 jpom 中的 h2 数据就不支持多客户端连接\n\n如果您期望在 jpom 服务端运行中来管理数据库那么就需要通过开启 h2-console 来实现（本功能为 h2 自带功能）\n\n同时 jpom 中的 h2 数据库账号密码是系统自带并默认创建的：\n\n * 账号：jpom\n * 密码：jpom\n\n但是考虑到部分情况下直接开启 h2-console 后并且使用默认账号密码这样数据就及其不安全，所以 jpom 中如果您需要开这个功能还需要修改账号或者密码来开启\n\n如果没有修改账号或者密码开启 h2-console，在启动时候会输出：(并且自动关闭程序)\n\n【安全警告】数据库账号密码使用默认的情况下不建议开启 h2 数据 web 控制台\n\n\n1\n\n\n\n# 在 jpom 中开启 h2-console 的步骤\n\n\n# 修改数据账号密码\n\n\n\n注意：请不要使用弱密码，建议使用随机 16 为字符串\n\n\n\n保存并重启、等待重启完成\n\n这样操作后会自动修改数据库账户密码，默认的账号密码就失效了\n\n⚠️注意：如果本地运行只会执行修改数据库账号密码操作，不会将数据库账号密码信息写入配置文件中，需要自己手动配置后才能生效奥。\n\n\n# 开启 h2-console\n\n\n\n保存并重启、等待重启完成\n\n\n# 访问 h2-console\n\n这里直接在您访问 jpom 的根路径后面加 /h2-console 即可\n\n举例：\n\n * http://172.19.106.253:2122/ -> http://172.19.106.253:2122/h2-console\n * https://jpom.keepbx.cn/ -> https://jpom.keepbx.cn/h2-console\n\n\n\n\n\n\n# 完美使用\n\n这样就可以在 浏览器中去管理数据，进行部分数据插入和简单的修改（请按照 jpom 数据存储规则修改， 不要随意修改避免程序不能正常运行）\n\n\n# 问题\n\nq: 为啥不能直接修改配置文件来实现呢？ a: 因为数据库已经创建账号密码已经确定，如果想保留原数据就只能通过在线编辑来修改，这样会执行数据的账号密码修改才能达到最终目的。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"使用 Jpom 导入多个项目仓库",frontmatter:{title:"使用 Jpom 导入多个项目仓库",date:"2023-04-20T20:31:51.000Z",permalink:"/pages/practice/jpom-server-import-multi-repos/",categories:["docs","实践案例","日常管理"],tags:[null],author:{name:"Hotstrip",link:"https://gitee.com/hotstrip"},readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/017.%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86/0300.jpom-server-import-multi-repos.html",relativePath:"实践案例/017.日常管理/0300.jpom-server-import-multi-repos.md",key:"v-2c258483",path:"/pages/practice/jpom-server-import-multi-repos/",headers:[{level:2,title:"1. 序",slug:"_1-序",normalizedTitle:"1. 序",charIndex:2},{level:2,title:"2. 配置个人访问令牌",slug:"_2-配置个人访问令牌",normalizedTitle:"2. 配置个人访问令牌",charIndex:163},{level:3,title:"2.1 Gitee",slug:"_2-1-gitee",normalizedTitle:"2.1 gitee",charIndex:315},{level:3,title:"2.2 Github",slug:"_2-2-github",normalizedTitle:"2.2 github",charIndex:500},{level:3,title:"2.3 Gitea",slug:"_2-3-gitea",normalizedTitle:"2.3 gitea",charIndex:698},{level:3,title:"2.4 Gogs",slug:"_2-4-gogs",normalizedTitle:"2.4 gogs",charIndex:810},{level:3,title:"2.5 Gitlab",slug:"_2-5-gitlab",normalizedTitle:"2.5 gitlab",charIndex:871},{level:2,title:"3. 选择仓库导入",slug:"_3-选择仓库导入",normalizedTitle:"3. 选择仓库导入",charIndex:1036}],headersStr:"1. 序 2. 配置个人访问令牌 2.1 Gitee 2.2 Github 2.3 Gitea 2.4 Gogs 2.5 Gitlab 3. 选择仓库导入",content:"# 1. 序\n\n有时候我们有很多项目需要导入进 Jpom，使用 HTTPS 或者 SSH 都会比较麻烦，更合适的方法是使用 Access Token 直接访问该用户所拥有的项目，选择多个项目同时导入。\n\n本文将介绍该方法的实现，目前 Jpom 支持从 Gitee、Github、Gitlab 等多个网站导入项目仓库。\n\n\n# 2. 配置个人访问令牌\n\n想要使用 Access Token 从网站导入项目仓库，前提是配置 Access Token，下面将介绍 Jpom 目前支持的多个网站中配置 Access Token。\n\n> 需要注意的是：令牌的值只会在创建之后显示一次，记得保存。\n> \n> 若是忘记，需要重新创建。\n\n\n# 2.1 Gitee\n\n登录 Gitee 网站，点击右上角头像进入个人设置页面，在页面中选择私人令牌。\n\n如果嫌麻烦，直接点击这个链接：私人令牌 - Gitee.com\n\n点击生成新令牌，出现下面的界面：\n\n\n\n> 权限视情况而定，如果只是想导入仓库，选择 projects 就足够了\n\n\n\n这样，一个 Gitee 的 Access Token 就已经生成好了。\n\n\n# 2.2 Github\n\nGithub 的 Access Token 在 Settings > Developer settings > Personal access tokens。\n\n直达链接：Personal Access Tokens (Classic) (github.com)，参考下图设置 Access Token：\n\n\n\n> Github 的权限只选择 repo 就足够了\n\n\n# 2.3 Gitea\n\n登录 Gitea 网站，进入设置 > 应用 > 生成令牌。\n\n直达链接：应用 - Gitea: Git with a cup of tea\n\n点击生成令牌之后会出现下面类似界面，复制令牌：\n\n\n\n\n# 2.4 Gogs\n\nGogs 跟上面的 Gitea 十分类似，直达链接：授权应用 - Gogs\n\n参考截图：\n\n\n\n\n# 2.5 Gitlab\n\n登录 GItlab，进入 perferences > Access Tokens，直达链接：Personal Access Tokens · User Settings · GitLab\n\n如果您是自建的 Gitlab，需要把地址换成自建的地址。\n\n权限需要选择 read_api，参考截图：\n\n\n\n\n# 3. 选择仓库导入\n\n有了 Access Token，我们进入 Jpom 管理页面，在仓库信息中选择令牌导入，选择上面介绍的某个平台，输入 Access Token，点击查询，下面就会出现多个项目仓库（如果有的话），选择我们需要导入的项目仓库即可。\n\n\n\n以上，就是 Jpom 使用 Access Token 快速导入多个项目的案例了，希望对大家有所帮助。",normalizedContent:"# 1. 序\n\n有时候我们有很多项目需要导入进 jpom，使用 https 或者 ssh 都会比较麻烦，更合适的方法是使用 access token 直接访问该用户所拥有的项目，选择多个项目同时导入。\n\n本文将介绍该方法的实现，目前 jpom 支持从 gitee、github、gitlab 等多个网站导入项目仓库。\n\n\n# 2. 配置个人访问令牌\n\n想要使用 access token 从网站导入项目仓库，前提是配置 access token，下面将介绍 jpom 目前支持的多个网站中配置 access token。\n\n> 需要注意的是：令牌的值只会在创建之后显示一次，记得保存。\n> \n> 若是忘记，需要重新创建。\n\n\n# 2.1 gitee\n\n登录 gitee 网站，点击右上角头像进入个人设置页面，在页面中选择私人令牌。\n\n如果嫌麻烦，直接点击这个链接：私人令牌 - gitee.com\n\n点击生成新令牌，出现下面的界面：\n\n\n\n> 权限视情况而定，如果只是想导入仓库，选择 projects 就足够了\n\n\n\n这样，一个 gitee 的 access token 就已经生成好了。\n\n\n# 2.2 github\n\ngithub 的 access token 在 settings > developer settings > personal access tokens。\n\n直达链接：personal access tokens (classic) (github.com)，参考下图设置 access token：\n\n\n\n> github 的权限只选择 repo 就足够了\n\n\n# 2.3 gitea\n\n登录 gitea 网站，进入设置 > 应用 > 生成令牌。\n\n直达链接：应用 - gitea: git with a cup of tea\n\n点击生成令牌之后会出现下面类似界面，复制令牌：\n\n\n\n\n# 2.4 gogs\n\ngogs 跟上面的 gitea 十分类似，直达链接：授权应用 - gogs\n\n参考截图：\n\n\n\n\n# 2.5 gitlab\n\n登录 gitlab，进入 perferences > access tokens，直达链接：personal access tokens · user settings · gitlab\n\n如果您是自建的 gitlab，需要把地址换成自建的地址。\n\n权限需要选择 read_api，参考截图：\n\n\n\n\n# 3. 选择仓库导入\n\n有了 access token，我们进入 jpom 管理页面，在仓库信息中选择令牌导入，选择上面介绍的某个平台，输入 access token，点击查询，下面就会出现多个项目仓库（如果有的话），选择我们需要导入的项目仓库即可。\n\n\n\n以上，就是 jpom 使用 access token 快速导入多个项目的案例了，希望对大家有所帮助。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"Jpom 管理证书文件实践案例",frontmatter:{title:"Jpom 管理证书文件实践案例",date:"2024-01-06T19:13:51.000Z",permalink:"/pages/practice/jpom-server-cert-manage/",categories:["docs","实践案例","日常管理"],tags:[null],author:{name:"Hotstrip",link:"https://gitee.com/hotstrip"},readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/017.%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86/0400.jpom-server-cert-manage.html",relativePath:"实践案例/017.日常管理/0400.jpom-server-cert-manage.md",key:"v-19b5ec25",path:"/pages/practice/jpom-server-cert-manage/",headers:[{level:2,title:"1. 序",slug:"_1-序",normalizedTitle:"1. 序",charIndex:2},{level:2,title:"2. 步骤概览",slug:"_2-步骤概览",normalizedTitle:"2. 步骤概览",charIndex:464},{level:2,title:"3. 实践步骤",slug:"_3-实践步骤",normalizedTitle:"3. 实践步骤",charIndex:492},{level:3,title:"3.1 安装 Jpom Server 端",slug:"_3-1-安装-jpom-server-端",normalizedTitle:"3.1 安装 jpom server 端",charIndex:504},{level:3,title:"3.2 安装 acme.sh",slug:"_3-2-安装-acme-sh",normalizedTitle:"3.2 安装 acme.sh",charIndex:565},{level:3,title:"3.3 使用 acme.sh 生成 TLS 证书",slug:"_3-3-使用-acme-sh-生成-tls-证书",normalizedTitle:"3.3 使用 acme.sh 生成 tls 证书",charIndex:1203},{level:3,title:"3.4 上传证书文件到 Jpom Server",slug:"_3-4-上传证书文件到-jpom-server",normalizedTitle:"3.4 上传证书文件到 jpom server",charIndex:1487},{level:3,title:"3.6 使用 Jpom 上传证书到服务器",slug:"_3-6-使用-jpom-上传证书到服务器",normalizedTitle:"3.6 使用 jpom 上传证书到服务器",charIndex:1682},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1949}],headersStr:"1. 序 2. 步骤概览 3. 实践步骤 3.1 安装 Jpom Server 端 3.2 安装 acme.sh 3.3 使用 acme.sh 生成 TLS 证书 3.4 上传证书文件到 Jpom Server 3.6 使用 Jpom 上传证书到服务器 总结",content:"# 1. 序\n\n> 使用说明：本案例使用 Jpom Server 端 beta 2.11.0.5 版本作为演示，适用于支持 SSH 、SCP 命令的主机上（比如 Linux 服务器、MacOS 系统电脑、乌班图系统电脑等）\n\n先介绍下目前使用 Jpom Server 能实现哪些证书管理的功能，只有当我们知道一个东西能做什么的时候，才能意识到这个东西对我有没有用。\n\n目前 Jpom Server 能实现的功能：\n\n 1. 统一管理证书文件（适用于pfx、jks、x.509 格式的证书），提供一个统一存放证书文件的地方，能查看证书的基本信息（颁发者、到期时间）\n 2. 支持证书文件的下载\n 3. 支持使用 Jpom 直接上传证书文件到服务器（SSH 或者 Jpom Agent）\n\n另外，本篇文章会使用 acme.sh 生成 TLS 证书文件，若您并不需要了解这些功能，可以跳过该文章内容了。\n\n本篇文章还涉及到一些必要的资源：\n\n * 服务器一台，拥有公网的 IPv4\n * 域名一个，并且已经解析到上面的服务器\n\n\n# 2. 步骤概览\n\n本篇文章的大致操作步骤如下：\n\n\n# 3. 实践步骤\n\n\n# 3.1 安装 Jpom Server 端\n\n此项内容轻轻参考文档：一键安装实践 | Jpom，本文不做额外说明。\n\n\n# 3.2 安装 acme.sh\n\n> 其实更推荐使用 acme.sh 官网的安装教程，下面的内容会跟官网有点区别，会有一些额外的说明。\n\n// 安装 ACME 脚本\ncurl https://get.acme.sh | sh\n\n// 设置acme.sh别名，方便后续使用\nalias acme.sh=~/.acme.sh/acme.sh\n\n// 设置 ACME 脚本自动更新\nacme.sh --upgrade --auto-upgrade\n\n// 由于 ZeroSSL 作为默认 CA，必须先注册帐户才能颁发新证书，故而更换为 Letsencrypt。\nacme.sh --set-default-ca --server letsencrypt\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n>  1. acme.sh 官网的安装脚本是 curl https://get.acme.sh | sh -s email=my@example.com email 参数的作用是绑定一个邮箱地址，某些操作会给这个邮箱发送邮件\n>  2. acme.sh 安装完成之后的安装目录在 ~/.acme.sh/\n>  3. 我这里设置了证书颁发机构为 letsencrypt，因为默认的 ZeroSSL 需要注册账户\n\n如果上述步骤执行完成，我们可以执行 **acme.sh -v ** 命令来确认是否安装完成，如果结果输出类似下面的内容表示已经成功安装 acme.sh\n\n\n\n\n# 3.3 使用 acme.sh 生成 TLS 证书\n\n使用 acme.sh 生成 TLS 证书很简单，只需要一行命令，不过需要一些前置条件：\n\n 1. 您必须要有一个域名\n 2. 域名已经解析到当前服务器，当前服务器需要公网 IP\n 3. 本机的 80 端口开放\n\n先来个正确的案例：\n\n\n\n再来个错误的案例，使用了一个虚假的域名，没有解析到当前服务器：\n\n\n\n生成的证书文件可以从输出的日志信息中找到，在 acme.sh 安装目录会生成跟域名一样名字前缀的证书文件目录，如果域名是 test.com，证书目录就是 ～/acme.sh/test.com_ecc\n\n\n# 3.4 上传证书文件到 Jpom Server\n\n登录 Jpom Server 的管理页面，进入 其他管理-证书管理 菜单页面。\n\n这个页面可以管理已经上传的证书文件，我们点击页面上的 导入证书 按钮，上传我们刚刚生成的证书文件。\n\n> 需要注意的是我们刚刚生成的证书需要打包成 zip 文件才可以上传，上传过程中程序会检测证书是否完整，比如是否有 pem 和 key 文件等信息\n\n\n# 3.6 使用 Jpom 上传证书到服务器\n\n证书托管给 Jpom 之后，我们还可以使用 Jpom 直接上传证书文件到其他服务器，可以通过 SSH 或者 Jpom Agent 两种方式。\n\n这里仅使用 SSH 来举例：\n\n 1. 选择需要上传的证书，右侧点击 部署 按钮\n 2. 在弹出窗口中选择 SSH 信息，SSH 需要提前在 SSH 管理中添加\n 3. 发布目录需要配置好授权目录\n 4. 执行脚本如果不理解可以不填写\n\n完成之后点击 确定 按钮即可，随后登录服务器，进入授权目录，即可看到已经上传好的证书文件。如下图：\n\n\n# 总结\n\n目前使用 Jpom 管理证书主要是提供了一个统一的地方存放和读取证书文件，方便看到证书文件的过期时间、CA 机构等信息。\n\n另外就是借助 Jpom 自带的 SSH 管理、Jpom Agent 做一些证书分发功能，但是这个可以使用 SFTP 来替代。\n\n除此之外，使用 Jpom 上传证书文件附带了两个执行脚本，这里是 DSL 的用法，简单说就是在上传文件前执行一些命令，上传文件后执行一些命令，算是可有可无，因为目前证书部署每次填写的信息都不会保存，这就意味着每次部署的脚本命令都是一次性的——这一点需要注意下。",normalizedContent:"# 1. 序\n\n> 使用说明：本案例使用 jpom server 端 beta 2.11.0.5 版本作为演示，适用于支持 ssh 、scp 命令的主机上（比如 linux 服务器、macos 系统电脑、乌班图系统电脑等）\n\n先介绍下目前使用 jpom server 能实现哪些证书管理的功能，只有当我们知道一个东西能做什么的时候，才能意识到这个东西对我有没有用。\n\n目前 jpom server 能实现的功能：\n\n 1. 统一管理证书文件（适用于pfx、jks、x.509 格式的证书），提供一个统一存放证书文件的地方，能查看证书的基本信息（颁发者、到期时间）\n 2. 支持证书文件的下载\n 3. 支持使用 jpom 直接上传证书文件到服务器（ssh 或者 jpom agent）\n\n另外，本篇文章会使用 acme.sh 生成 tls 证书文件，若您并不需要了解这些功能，可以跳过该文章内容了。\n\n本篇文章还涉及到一些必要的资源：\n\n * 服务器一台，拥有公网的 ipv4\n * 域名一个，并且已经解析到上面的服务器\n\n\n# 2. 步骤概览\n\n本篇文章的大致操作步骤如下：\n\n\n# 3. 实践步骤\n\n\n# 3.1 安装 jpom server 端\n\n此项内容轻轻参考文档：一键安装实践 | jpom，本文不做额外说明。\n\n\n# 3.2 安装 acme.sh\n\n> 其实更推荐使用 acme.sh 官网的安装教程，下面的内容会跟官网有点区别，会有一些额外的说明。\n\n// 安装 acme 脚本\ncurl https://get.acme.sh | sh\n\n// 设置acme.sh别名，方便后续使用\nalias acme.sh=~/.acme.sh/acme.sh\n\n// 设置 acme 脚本自动更新\nacme.sh --upgrade --auto-upgrade\n\n// 由于 zerossl 作为默认 ca，必须先注册帐户才能颁发新证书，故而更换为 letsencrypt。\nacme.sh --set-default-ca --server letsencrypt\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n>  1. acme.sh 官网的安装脚本是 curl https://get.acme.sh | sh -s email=my@example.com email 参数的作用是绑定一个邮箱地址，某些操作会给这个邮箱发送邮件\n>  2. acme.sh 安装完成之后的安装目录在 ~/.acme.sh/\n>  3. 我这里设置了证书颁发机构为 letsencrypt，因为默认的 zerossl 需要注册账户\n\n如果上述步骤执行完成，我们可以执行 **acme.sh -v ** 命令来确认是否安装完成，如果结果输出类似下面的内容表示已经成功安装 acme.sh\n\n\n\n\n# 3.3 使用 acme.sh 生成 tls 证书\n\n使用 acme.sh 生成 tls 证书很简单，只需要一行命令，不过需要一些前置条件：\n\n 1. 您必须要有一个域名\n 2. 域名已经解析到当前服务器，当前服务器需要公网 ip\n 3. 本机的 80 端口开放\n\n先来个正确的案例：\n\n\n\n再来个错误的案例，使用了一个虚假的域名，没有解析到当前服务器：\n\n\n\n生成的证书文件可以从输出的日志信息中找到，在 acme.sh 安装目录会生成跟域名一样名字前缀的证书文件目录，如果域名是 test.com，证书目录就是 ～/acme.sh/test.com_ecc\n\n\n# 3.4 上传证书文件到 jpom server\n\n登录 jpom server 的管理页面，进入 其他管理-证书管理 菜单页面。\n\n这个页面可以管理已经上传的证书文件，我们点击页面上的 导入证书 按钮，上传我们刚刚生成的证书文件。\n\n> 需要注意的是我们刚刚生成的证书需要打包成 zip 文件才可以上传，上传过程中程序会检测证书是否完整，比如是否有 pem 和 key 文件等信息\n\n\n# 3.6 使用 jpom 上传证书到服务器\n\n证书托管给 jpom 之后，我们还可以使用 jpom 直接上传证书文件到其他服务器，可以通过 ssh 或者 jpom agent 两种方式。\n\n这里仅使用 ssh 来举例：\n\n 1. 选择需要上传的证书，右侧点击 部署 按钮\n 2. 在弹出窗口中选择 ssh 信息，ssh 需要提前在 ssh 管理中添加\n 3. 发布目录需要配置好授权目录\n 4. 执行脚本如果不理解可以不填写\n\n完成之后点击 确定 按钮即可，随后登录服务器，进入授权目录，即可看到已经上传好的证书文件。如下图：\n\n\n# 总结\n\n目前使用 jpom 管理证书主要是提供了一个统一的地方存放和读取证书文件，方便看到证书文件的过期时间、ca 机构等信息。\n\n另外就是借助 jpom 自带的 ssh 管理、jpom agent 做一些证书分发功能，但是这个可以使用 sftp 来替代。\n\n除此之外，使用 jpom 上传证书文件附带了两个执行脚本，这里是 dsl 的用法，简单说就是在上传文件前执行一些命令，上传文件后执行一些命令，算是可有可无，因为目前证书部署每次填写的信息都不会保存，这就意味着每次部署的脚本命令都是一次性的——这一点需要注意下。",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"安装Docker",frontmatter:{title:"安装Docker",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/b63dc5/",tags:[null],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/017.%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86/1900.%E5%AE%89%E8%A3%85docker.html",relativePath:"实践案例/017.日常管理/1900.安装docker.md",key:"v-e7fae964",path:"/pages/practice/b63dc5/",headers:[{level:2,title:"安装Docker",slug:"安装docker",normalizedTitle:"安装docker",charIndex:2},{level:3,title:"方式一：在线安装",slug:"方式一-在线安装",normalizedTitle:"方式一：在线安装",charIndex:15},{level:3,title:"方式二：离线安装（如果无法在线安装可尝试此方式）",slug:"方式二-离线安装-如果无法在线安装可尝试此方式",normalizedTitle:"方式二：离线安装（如果无法在线安装可尝试此方式）",charIndex:439},{level:4,title:"下载Docker安装包",slug:"下载docker安装包",normalizedTitle:"下载docker安装包",charIndex:467},{level:4,title:"下载安装脚本",slug:"下载安装脚本",normalizedTitle:"下载安装脚本",charIndex:636},{level:4,title:"上传文件，正式安装",slug:"上传文件-正式安装",normalizedTitle:"上传文件，正式安装",charIndex:720},{level:3,title:"方式三：一条命令安装docker",slug:"方式三-一条命令安装docker",normalizedTitle:"方式三：一条命令安装docker",charIndex:1018},{level:2,title:"设置Docker",slug:"设置docker",normalizedTitle:"设置docker",charIndex:1112},{level:3,title:"启动Docker",slug:"启动docker",normalizedTitle:"启动docker",charIndex:1125},{level:3,title:"设置Docker开机自启",slug:"设置docker开机自启",normalizedTitle:"设置docker开机自启",charIndex:1256},{level:3,title:"下载Docker镜像时加速",slug:"下载docker镜像时加速",normalizedTitle:"下载docker镜像时加速",charIndex:1303},{level:3,title:"重启Docker服务",slug:"重启docker服务",normalizedTitle:"重启docker服务",charIndex:1777},{level:3,title:"查看Docker启动状态",slug:"查看docker启动状态",normalizedTitle:"查看docker启动状态",charIndex:1823}],headersStr:"安装Docker 方式一：在线安装 方式二：离线安装（如果无法在线安装可尝试此方式） 下载Docker安装包 下载安装脚本 上传文件，正式安装 方式三：一条命令安装docker 设置Docker 启动Docker 设置Docker开机自启 下载Docker镜像时加速 重启Docker服务 查看Docker启动状态",content:'# 安装Docker\n\n\n# 方式一：在线安装\n\n# 下载并安装Docker所需要的软件包\nsudo yum install -y yum-utils\n# 添加Docker官方的yum仓库地址\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 设置阿里云镜像的yum仓库地址\nsudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n# 更新yum缓存\nsudo yum makecache fast\n# 安装新版Docker\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 方式二：离线安装（如果无法在线安装可尝试此方式）\n\n# 下载Docker安装包\n\n> https://download.docker.com/linux/static/stable/x86_64/docker-20.10.12.tgz\n> \n> 如需要安装指定版本可到 https://download.docker.com/linux/static/stable/x86_64/ 下载\n\n# 下载安装脚本\n\n> 到 https://github.com/Jrohy/docker-install 下载docker.bash和install.sh两个文件\n\n# 上传文件，正式安装\n\n> 把 docker-20.10.12.tgz、docker.bash、install.sh 三个文件上传到服务器，上传完成后执行安装命令\n\n./install.sh -f docker-20.10.12.tgz\n\n\n1\n\n\n> 下载完成后看到Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.docker 20.10.12 install success!说明安装成功\n\n\n# 方式三：一条命令安装docker\n\ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n\n\n1\n\n\n\n# 设置Docker\n\n\n# 启动Docker\n\n# 启动Docker服务\nsystemctl start docker\n# 查看Docker是否启动正常, 看到绿色的active（running）则说明启动正常\nsystemctl status docker\n\n\n1\n2\n3\n4\n\n\n\n# 设置Docker开机自启\n\nsystemctl enable docker\n\n\n1\n\n\n\n# 下载Docker镜像时加速\n\n> 直接使用官方镜像的地址比较慢，可配置国内加速镜像。\n> \n> 使用下面命令直接生成配置文件，或者手动修改/etc/docker/daemon.json\n\ncat <<EOF > /etc/docker/daemon.json\n{\n  "registry-mirrors": [\n    "https://docker.mirrors.ustc.edu.cn",\n    "http://hub-mirror.c.163.com"\n  ],\n  "max-concurrent-downloads": 10,\n  "log-driver": "json-file",\n  "log-level": "warn",\n  "log-opts": {\n    "max-size": "10m",\n    "max-file": "3"\n    },\n  "data-root": "/var/lib/docker"\n}\nEOF\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 重启Docker服务\n\nsystemctl restart docker\n\n\n1\n\n\n\n# 查看Docker启动状态\n\nsystemctl status docker\n\n\n1\n\n\n> 至此，您已完成Docker的安装和设置，现在您可以使用docker命令了。',normalizedContent:'# 安装docker\n\n\n# 方式一：在线安装\n\n# 下载并安装docker所需要的软件包\nsudo yum install -y yum-utils\n# 添加docker官方的yum仓库地址\nsudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n# 设置阿里云镜像的yum仓库地址\nsudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n# 更新yum缓存\nsudo yum makecache fast\n# 安装新版docker\nsudo yum install -y docker-ce docker-ce-cli containerd.io\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 方式二：离线安装（如果无法在线安装可尝试此方式）\n\n# 下载docker安装包\n\n> https://download.docker.com/linux/static/stable/x86_64/docker-20.10.12.tgz\n> \n> 如需要安装指定版本可到 https://download.docker.com/linux/static/stable/x86_64/ 下载\n\n# 下载安装脚本\n\n> 到 https://github.com/jrohy/docker-install 下载docker.bash和install.sh两个文件\n\n# 上传文件，正式安装\n\n> 把 docker-20.10.12.tgz、docker.bash、install.sh 三个文件上传到服务器，上传完成后执行安装命令\n\n./install.sh -f docker-20.10.12.tgz\n\n\n1\n\n\n> 下载完成后看到created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.docker 20.10.12 install success!说明安装成功\n\n\n# 方式三：一条命令安装docker\n\ncurl -fssl https://get.docker.com | bash -s docker --mirror aliyun\n\n\n1\n\n\n\n# 设置docker\n\n\n# 启动docker\n\n# 启动docker服务\nsystemctl start docker\n# 查看docker是否启动正常, 看到绿色的active（running）则说明启动正常\nsystemctl status docker\n\n\n1\n2\n3\n4\n\n\n\n# 设置docker开机自启\n\nsystemctl enable docker\n\n\n1\n\n\n\n# 下载docker镜像时加速\n\n> 直接使用官方镜像的地址比较慢，可配置国内加速镜像。\n> \n> 使用下面命令直接生成配置文件，或者手动修改/etc/docker/daemon.json\n\ncat <<eof > /etc/docker/daemon.json\n{\n  "registry-mirrors": [\n    "https://docker.mirrors.ustc.edu.cn",\n    "http://hub-mirror.c.163.com"\n  ],\n  "max-concurrent-downloads": 10,\n  "log-driver": "json-file",\n  "log-level": "warn",\n  "log-opts": {\n    "max-size": "10m",\n    "max-file": "3"\n    },\n  "data-root": "/var/lib/docker"\n}\neof\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 重启docker服务\n\nsystemctl restart docker\n\n\n1\n\n\n\n# 查看docker启动状态\n\nsystemctl status docker\n\n\n1\n\n\n> 至此，您已完成docker的安装和设置，现在您可以使用docker命令了。',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"使用 Rainbond 部署 Jpom",frontmatter:{title:"使用 Rainbond 部署 Jpom",date:"2023-04-20T20:31:51.000Z",permalink:"/pages/practice/a033a2/",categories:["docs","实践案例","日常管理"],tags:[null],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/017.%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86/9999.%E4%BD%BF%E7%94%A8%20Rainbond%20%E9%83%A8%E7%BD%B2%20Jpom.html",relativePath:"实践案例/017.日常管理/9999.使用 Rainbond 部署 Jpom.md",key:"v-2b5ee664",path:"/pages/practice/a033a2/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"前提",slug:"前提",normalizedTitle:"前提",charIndex:138},{level:2,title:"部署 Jpom",slug:"部署-jpom",normalizedTitle:"部署 jpom",charIndex:251}],headersStr:"前言 前提 部署 Jpom",content:"# 前言\n\nRainbond 是一个云原生应用管理平台，使用简单，不需要懂容器、Kubernetes和底层复杂技术，支持管理多个Kubernetes集群，和管理企业应用全生命周期。主要功能包括应用开发环境、应用市场、微服务架构、应用交付、应用运维、应用级多云管理等。\n\n\n# 前提\n\n安装 Rainbond，可通过一条命令快速安装 Rainbond。\n\ncurl -o install.sh https://get.rainbond.com && bash ./install.sh\n\n\n1\n\n\n\n# 部署 Jpom\n\nJpom 已发布到 Rainbond 开源应用商店，可通过 Rainbond 开源应用商店一键部署 Jpom。\n\n进入 Rainbond 控制台的 平台管理 -> 应用市场 -> 开源应用商店 中搜索 Jpom 并安装。\n\n\n\n填写以下信息，然后点击确认按钮进行安装。\n\n * 团队：选择现有团队或创建新的团队\n * 集群：选择对应的集群\n * 应用：选择现有应用或创建新的应用\n * 版本：选择要安装的版本\n\n安装完成后，可通过 Rainbond 提供的默认域名访问 Jpom并登陆进行用户注册。\n\n",normalizedContent:"# 前言\n\nrainbond 是一个云原生应用管理平台，使用简单，不需要懂容器、kubernetes和底层复杂技术，支持管理多个kubernetes集群，和管理企业应用全生命周期。主要功能包括应用开发环境、应用市场、微服务架构、应用交付、应用运维、应用级多云管理等。\n\n\n# 前提\n\n安装 rainbond，可通过一条命令快速安装 rainbond。\n\ncurl -o install.sh https://get.rainbond.com && bash ./install.sh\n\n\n1\n\n\n\n# 部署 jpom\n\njpom 已发布到 rainbond 开源应用商店，可通过 rainbond 开源应用商店一键部署 jpom。\n\n进入 rainbond 控制台的 平台管理 -> 应用市场 -> 开源应用商店 中搜索 jpom 并安装。\n\n\n\n填写以下信息，然后点击确认按钮进行安装。\n\n * 团队：选择现有团队或创建新的团队\n * 集群：选择对应的集群\n * 应用：选择现有应用或创建新的应用\n * 版本：选择要安装的版本\n\n安装完成后，可通过 rainbond 提供的默认域名访问 jpom并登陆进行用户注册。\n\n",charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"经典的实践案例",frontmatter:{title:"经典的实践案例",date:"2022-06-11T16:27:37.000Z",permalink:"/pages/practice/",tags:["实践案例"],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B.html",relativePath:"实践案例/实践案例.md",key:"v-05e5798a",path:"/pages/practice/",headers:[{level:2,title:"解决方案",slug:"解决方案",normalizedTitle:"解决方案",charIndex:2},{level:2,title:"在线构建",slug:"在线构建",normalizedTitle:"在线构建",charIndex:99},{level:3,title:"本地构建",slug:"本地构建",normalizedTitle:"本地构建",charIndex:139},{level:3,title:"容器构建",slug:"容器构建",normalizedTitle:"容器构建",charIndex:282},{level:3,title:"触发器",slug:"触发器",normalizedTitle:"触发器",charIndex:315},{level:3,title:"仓库管理",slug:"仓库管理",normalizedTitle:"仓库管理",charIndex:367},{level:2,title:"项目管理",slug:"项目管理",normalizedTitle:"项目管理",charIndex:391},{level:2,title:"节点管理",slug:"节点管理",normalizedTitle:"节点管理",charIndex:500},{level:2,title:"Docker",slug:"docker",normalizedTitle:"docker",charIndex:527},{level:2,title:"脚本管理",slug:"脚本管理",normalizedTitle:"脚本管理",charIndex:669},{level:2,title:"项目监控",slug:"项目监控",normalizedTitle:"项目监控",charIndex:696},{level:2,title:"SSH 终端",slug:"ssh-终端",normalizedTitle:"ssh 终端",charIndex:756}],headersStr:"解决方案 在线构建 本地构建 容器构建 触发器 仓库管理 项目管理 节点管理 Docker 脚本管理 项目监控 SSH 终端",content:"# 解决方案\n\n> 比较完善的文档说明，如果使用 Jpom 实现项目日常管理\n\n * 🔥👍使用 Jpom DSL 模式管理项目、查看项目日志\n * 👍基于 Jpom 搭建应用部署系统\n\n\n# 在线构建\n\n * 👍如何使用 Jpom 的在线构建为 Jpom 发版\n\n\n# 本地构建\n\n * 本地构建 + SSH 发布 java 项目\n * 本地构建 + Jpom Server 使用 SCP 发布项目\n * 本地构建 + 项目发布 node 项目\n * 本地构建 + SSH 发布 node 项目\n * 本地构建 + 自定义管理 python 项目\n\n\n# 容器构建\n\n * 容器构建 + 项目发布 java 项目\n\n\n# 触发器\n\n * Gitee 提交代码后自动执行构建\n * GitLab 提交代码后自动执行构建\n\n\n# 仓库管理\n\n * 通过私人令牌导入仓库\n\n\n# 项目管理\n\n * 自定义管理 java 项目\n * 自定义管理 python 项目\n * DSL 实现接口管理项目状态\n * DSL 实现管理 Tomcat\n * DSL 实现管理 elasticsearch\n\n\n# 节点管理\n\n * 管理编译安装的 nginx\n\n\n# Docker\n\n * 管理 docker\n * 使用构建发布 docker 镜像\n * 使用构建发布 docker 镜像并推送到远程仓库\n * 建web镜像并推送至仓库\n * 使用构建发布 docker 镜像并且创建 docker 集群服务\n * 自动备份 mysql 数据\n\n\n# 脚本管理\n\n * 自动备份 mysql 数据\n\n\n# 项目监控\n\n * 监控项目 + 邮件报警通知\n * 监控自定义项目\n * 监控进程假死\n * 自定义第三方通知\n\n\n# SSH 终端\n\n * 在线 SSH 终端以及上传文件(SFTP)和执行命令历史",normalizedContent:"# 解决方案\n\n> 比较完善的文档说明，如果使用 jpom 实现项目日常管理\n\n * 🔥👍使用 jpom dsl 模式管理项目、查看项目日志\n * 👍基于 jpom 搭建应用部署系统\n\n\n# 在线构建\n\n * 👍如何使用 jpom 的在线构建为 jpom 发版\n\n\n# 本地构建\n\n * 本地构建 + ssh 发布 java 项目\n * 本地构建 + jpom server 使用 scp 发布项目\n * 本地构建 + 项目发布 node 项目\n * 本地构建 + ssh 发布 node 项目\n * 本地构建 + 自定义管理 python 项目\n\n\n# 容器构建\n\n * 容器构建 + 项目发布 java 项目\n\n\n# 触发器\n\n * gitee 提交代码后自动执行构建\n * gitlab 提交代码后自动执行构建\n\n\n# 仓库管理\n\n * 通过私人令牌导入仓库\n\n\n# 项目管理\n\n * 自定义管理 java 项目\n * 自定义管理 python 项目\n * dsl 实现接口管理项目状态\n * dsl 实现管理 tomcat\n * dsl 实现管理 elasticsearch\n\n\n# 节点管理\n\n * 管理编译安装的 nginx\n\n\n# docker\n\n * 管理 docker\n * 使用构建发布 docker 镜像\n * 使用构建发布 docker 镜像并推送到远程仓库\n * 建web镜像并推送至仓库\n * 使用构建发布 docker 镜像并且创建 docker 集群服务\n * 自动备份 mysql 数据\n\n\n# 脚本管理\n\n * 自动备份 mysql 数据\n\n\n# 项目监控\n\n * 监控项目 + 邮件报警通知\n * 监控自定义项目\n * 监控进程假死\n * 自定义第三方通知\n\n\n# ssh 终端\n\n * 在线 ssh 终端以及上传文件(sftp)和执行命令历史",charsets:{cjk:!0},lastUpdated:"2024/06/26, 05:52:16",lastUpdatedTimestamp:1719381136e3},{title:"探索 Java 项目如何实现自动升级",frontmatter:{title:"探索 Java 项目如何实现自动升级",date:"2024-03-02T12:02:22.000Z",permalink:"/pages/c270ce/",categories:["docs","推广文章"],tags:["推广文章"],readingShow:"top"},regularPath:"/%E6%8E%A8%E5%B9%BF%E6%96%87%E7%AB%A0/Java%E9%A1%B9%E7%9B%AE%E8%87%AA%E5%8A%A8%E5%8D%87%E7%BA%A7%E7%9A%84%E6%96%B9%E5%BC%8F%E4%B9%8B%E4%B8%80.html",relativePath:"推广文章/Java项目自动升级的方式之一.md",key:"v-edd3d778",path:"/pages/c270ce/",headers:[{level:2,title:"Jpom 简介 📰",slug:"jpom-简介-📰",normalizedTitle:"jpom 简介 📰",charIndex:110},{level:3,title:"目前用户 🔥",slug:"目前用户-🔥",normalizedTitle:"目前用户 🔥",charIndex:238},{level:2,title:"升级背景 💬",slug:"升级背景-💬",normalizedTitle:"升级背景 💬",charIndex:400},{level:3,title:"Java 项目的局限性 ❗",slug:"java-项目的局限性-❗",normalizedTitle:"java 项目的局限性 ❗",charIndex:588},{level:3,title:"Jpom 中支持的升级方式有 🔖",slug:"jpom-中支持的升级方式有-🔖",normalizedTitle:"jpom 中支持的升级方式有 🔖",charIndex:783},{level:2,title:"升级前提 📌",slug:"升级前提-📌",normalizedTitle:"升级前提 📌",charIndex:971},{level:3,title:"通用升级流程 🏗",slug:"通用升级流程-🏗",normalizedTitle:"通用升级流程 🏗",charIndex:1187},{level:2,title:"程序变动 🛠",slug:"程序变动-🛠",normalizedTitle:"程序变动 🛠",charIndex:1293},{level:3,title:"数据库 💿",slug:"数据库-💿",normalizedTitle:"数据库 💿",charIndex:1453},{level:4,title:"CSV 规范 📑",slug:"csv-规范-📑",normalizedTitle:"csv 规范 📑",charIndex:1861},{level:4,title:"缓存 DLL 记录 🧾",slug:"缓存-dll-记录-🧾",normalizedTitle:"缓存 dll 记录 🧾",charIndex:3605},{level:3,title:"管理脚本 🧩",slug:"管理脚本-🧩",normalizedTitle:"管理脚本 🧩",charIndex:4122},{level:4,title:"实现方案 👏",slug:"实现方案-👏",normalizedTitle:"实现方案 👏",charIndex:4334},{level:4,title:"推荐实现 👍",slug:"推荐实现-👍",normalizedTitle:"推荐实现 👍",charIndex:4489},{level:4,title:"windows 环境 💻",slug:"windows-环境-💻",normalizedTitle:"windows 环境 💻",charIndex:5571},{level:3,title:"代码细节 ⁉",slug:"代码细节",normalizedTitle:"代码细节 ⁉",charIndex:6938},{level:4,title:"执行脚本的方式 🤔",slug:"执行脚本的方式-🤔",normalizedTitle:"执行脚本的方式 🤔",charIndex:7165},{level:4,title:"注册为服务 🎛",slug:"注册为服务-🎛",normalizedTitle:"注册为服务 🎛",charIndex:8733},{level:4,title:"异步执行 ⛓",slug:"异步执行-⛓",normalizedTitle:"异步执行 ⛓",charIndex:10759},{level:4,title:"功能扩展 🎬",slug:"功能扩展-🎬",normalizedTitle:"功能扩展 🎬",charIndex:10924},{level:2,title:"写在最后 🙏",slug:"写在最后-🙏",normalizedTitle:"写在最后 🙏",charIndex:11464},{level:2,title:"Jpom 链接 ✈",slug:"jpom-链接-✈",normalizedTitle:"jpom 链接 ✈",charIndex:11625}],headersStr:"Jpom 简介 📰 目前用户 🔥 升级背景 💬 Java 项目的局限性 ❗ Jpom 中支持的升级方式有 🔖 升级前提 📌 通用升级流程 🏗 程序变动 🛠 数据库 💿 CSV 规范 📑 缓存 DLL 记录 🧾 管理脚本 🧩 实现方案 👏 推荐实现 👍 windows 环境 💻 代码细节 ⁉ 执行脚本的方式 🤔 注册为服务 🎛 异步执行 ⛓ 功能扩展 🎬 写在最后 🙏 Jpom 链接 ✈",content:'📖本文将以 Jpom 为实际案例分享在 Java 项目中如何实现自动升级的功能。本文满满的干货，希望对大家有所启发或者帮助 🤔。\n\n💡文章预计阅读时长：15 ~ 20 分钟，建议先收藏再阅读避免后续找不到\n\n\n# Jpom 简介 📰\n\n🚀 Jpom 是一款开源的项目运维系统，主要面向中小型企业团队，提供项目日常的部署、构建、脚本管理、SSH终端、Docker UI 等功能。\n\n🚀 Jpom 更是一款原生 ops 软件，给您带来了万物皆可脚本化的体验。\n\n\n# 目前用户 🔥\n\n根据目前的用户反馈+公开数据统计（保守估计）：\n\n 1. 目前用户（公司）已经达 500+\n 2. 涉及服务器已经达 3000+\n\n数据并且还在不断增加中\n\n * Jpom 仓库：https://gitee.com/dromara/Jpom\n * Jpom 文档：https://jpom.top\n\n\n# 升级背景 💬\n\n日常使用很多桌面软件，都会遇到软件升级的情况。绝大多数的软件均支持弹窗提示新版本并且点击升级按钮后自动完成整个升级流程，让用户无须过多操作即可，满满的便利性。\n\n但是在我们 Java 程序中实现类似的功能的软件项目不是很多，其中不泛一些客观因素不需要此功能，但是在一些小项目、公司内部项目、开源项目中，此功能还是能给使用者（用户）带来极大的便利性。\n\n\n# Java 项目的局限性 ❗\n\n通常一个 Java 项目在服务器中运行时是独立运行的，没有守护程序或者其他进程来监控和管理（ 如果可以靠守护程序和监管程序升级方式可以更多样化，此方式不在本地讨论范畴中 ）。\n\n这样的场景要实现升级就存在一个局限性，程序必须自身控制关闭自身并且启动新的程序包，但 Jpom 经过多版本和不同用户使用场景实践后发现 Java 项目也能轻松实现自动升级。\n\n\n# Jpom 中支持的升级方式有 🔖\n\n 1. 在线升级\n 2. 上传升级\n 3. 手动升级\n\n * 在线升级和上传升级的原理是一致的，更新程序包的来源方式不一致。\n * 在线升级是自动下载新的程序包、上传升级是手动上传新的程序包到系统中。\n * 手动升级是最原始的大家平常使用的升级方式：手动下载新的程序包、手动上传新的程序包到服务器中。\n\nJpom 升级文档：文档\n\n\n# 升级前提 📌\n\n不同软件的使用场景、用户群体、整体架构等不同，导致部分软件是不能使用自动升级的方式（ 不能使用自动升级的细节情况不在本文讨论范畴中 ）。\n\n一般来说可以实现自动升级的软件有如下特点：\n\n * 独立运行：项目本身是单机运行的，不涉及到分布式集群。\n * 依赖简单：项目不依赖过多的外部组件。\n * 业务平滑：业务逻辑变更不会影响旧版本数据的兼容性。\n * 环境稳定：项目运行环境相对稳定，无需频繁调整配置。\n\n\n# 通用升级流程 🏗\n\n 1. 检查是否有新版本；\n 2. 判断是否可以平滑升级；\n 3. 下载/上传升级包；\n 4. 执行升级流程；\n    * 数据升级\n    * 程序包升级\n 5. 等待升级结果。\n\n\n# 程序变动 🛠\n\n如果需要使用 Java 实现自动升级那么您需要对程序做如下变动调整：\n\n 1. 程序能自动升级数据库表结构（核心变动）\n 2. 需要将您的程序调整为脚本控制（大多数程序均是如此）\n 3. 程序能兼容不同版本的配置文件（向下兼容）\n 4. 实现升级的业务流程（一般是 web 项目需要管理页面）\n\n\n# 数据库 💿\n\n> 数据库表结构升级是实现自动升级的核心问题，如果您的项目不使用数据库可以忽略此环节。\n\n大多数软件的版本升级均是提前手动处理数据库表结构，然后在手动升级（替换）程序包\n\n要实现自动升级就必须解决数据库表结构升级的问题。\n\n数据库表结构升级自动化解决办法通常可以使用第三方工具， 如 FlyWay、Liquibase 等 （ 本文主要使用 Jpom 作为案例，使用工具库不在本文讨论范畴）。\n\n如果您的程序规模和复杂度不高，可以考虑自研实行数据库表结构升级。\n\nJpom 中目前就是采用自研实现的数据库升级（Jpom 中目前并未考虑回退版本的情况）\n\n实现思路：（如有不足还请帮忙更正）\n\n 1. CSV 记录数据库表结构\n 2. 程序启动时读取 CSV 文件\n 3. 解析为数据库的 DLL 语句\n 4. 判断是否以及执行过\n 5. 执行 DLL 语句\n 6. 缓存成功执行的 DLL 语句\n\n# CSV 规范 📑\n\n这里我们提前规划好完整的表、后期修改的表 、变更表索引、需要执行的扩展 SQL，可以总结为四大类型：新增表、修改表、创建/修改索引、扩展 SQL\n\n> 下列定义的 CSV 规范仅供参考实际需要根据您的业务情况和数据库进行适当调整\n> \n> Jpom 中目前仅兼容了 H2、Mysql 数据库\n\nJpom 中新增表规则示例\n\nTABLENAME     NAME               TYPE     LEN   DEFAULTVALUE   NOTNULL   PRIMARYKEY   COMMENT   TABLECOMMENT\nSCRIPT_INFO   id                 String   50                   true      true         id        节点脚本模版\nSCRIPT_INFO   createTimeMillis   Long                          false     false        数据创建时间    \nSCRIPT_INFO   modifyTimeMillis   Long                          false     false        数据修改时间    \nSCRIPT_INFO   modifyUser         String   50                   false     false        修改人       \n\nJpom 中修改表规则示例\n\nALTERTYPE   TABLENAME               NAME           TYPE     LEN   DEFAULTVALUE   COMMENT    NOTNULL\nADD         PROJECT_INFO            triggerToken   String   100                  触发器token   \nALTER       FILE_STORAGE            name           String   255                  名称         true\nDROP        SSHTERMINALEXECUTELOG   optTime                                                 \n\nJpom 中索引规则示例\n\nINDEXTYPE    TABLENAME             NAME                   FIELD\nADD-UNIQUE   USER_INFO             USER_INF_SALT_INDEX1   salt\nADD          STATIC_FILE_STORAGE   DIR_TASK_ID            staticDir+scanTaskId\nADD          TRIGGER_TOKEN_LOG     TRIGGER_TOKEN_TYPE     type\n\nJpom 中扩展 SQL 规则\n\n如果数据库在一定情况下需要执行一些初始化操作，版本变更需要对数据进行默认操作或者批量修改、删除、新增等 您可以使用扩展 SQL 来实现，扩展 SQL 唯一需要注意的就是分割符了，因为 JDBC 批量执行多条 SQL 只会执行第一条，后续的将自动忽略，需要您自行分割后再执行。\n\n在 Jpom 中为了保证 DLL 语句重复执行不报错，或者减少不必要的 DLL 语句执行，在添加字段、删除字段、删除索引操作时候依赖数据库函数实现，此时就需要提前执行创建函数的 SQL,来达到后续操作可以顺利执行。\n\n参考 SQL：https://gitee.com/dromara/Jpom/blob/master/modules/server/src/main/resources/sql-view/execute.mysql.v1.0.sql\n\n# 缓存 DLL 记录 🧾\n\n大多数数据库 DLL 语句并不是幂等的，多次执行同一个 DLL 语句可能会报错，这样就是我们非常不期望出现的。\n\n推荐方案在执行 DLL 语句前将签名一次（MD5、SHA1）,判断签名后的值是否以及被执行过，如果没有执行则执行并缓存成功。\n\nJpom 相关代码参考地址：\n\n 1. https://gitee.com/dromara/Jpom/tree/master/modules/server/src/main/resources/sql-view\n 2. https://gitee.com/dromara/Jpom/blob/master/modules/storage-module/storage-module-common/src/main/java/org/dromara/jpom/db/IStorageSqlBuilderService.java\n 3. https://gitee.com/dromara/Jpom/blob/master/modules/server/src/main/java/org/dromara/jpom/system/db/InitDb.java\n\n\n# 管理脚本 🧩\n\n在管理 Java 项目的脚本通常要考虑实现：对应的项目启动、停止、重启、查询状态。\n\n要实现自动升级其实我们只需要在您原有的管理脚本中调整启动环节即可，主要需要考虑如何识别到新版本的程序包、项目的控制台日志文件使用的路径即可。\n\n管理脚本会业务不同使用环境有所不同 Linux、Windows（一定要注意文件句柄被占用的情况）、MacOS 等等，所以我们需要根据不同的操作系统来编写不同的管理脚本。\n\n# 实现方案 👏\n\n 1. 替换管理脚本中的值（较复杂）\n 2. 自动读取标记文件（推荐）\n\n> 如有更优方案恳请分享\n> \n> Jpom 中早期版本使用的是方案 1，后期版本使用的是方案 2。\n\n方案一的缺点：程序需要修改管理脚本文件，容易产生修改前后编码格式不一致，脚本规则定义不明确会出现难替换问题\n\n# 推荐实现 👍\n\n我们推荐您使用标记文件的方案来实现，主要流程如下：\n\n在管理脚本启动流程（函数）读取标记文件中的值来来运行程序。\n\n假设我们管理脚本定义来如下变量：\n\nLib="${base}/lib/"\nLogPath="${base}/logs/"\nRUN_JAR=""\nLog="${LogPath}/stdout.log"\n\n\n1\n2\n3\n4\n\n\n当我们在启动时候先判断标记文件是否存在（假设这里我们定义标记文件为：run.bin）， 如果存在标记文件我们则读取这个文件里面的值并将其赋值给 RUN_JAR 变量， 如果不存在标记文件表示第一次启动，我们建议您读取 Lib 目录下面的第一个 jar 包并将其赋值给 RUN_JAR 变量， 如果 Lib 目录下面没有 jar 包，则表示没有可运行的程序，程序启动失败。\n\n经过上述流程我们即可拼接最终的启动命令。\n\nnohup java -server -XX:+UseG1GC XXXX -jar ${Lib}/${RUN_JAR} XXXX >>$Log 2>&1 &\n\n如果您是 classpath 模式运行其实类似的方式只能需要修改生成所有的 jar 全路径和最终的启动命令即可。\n\nJpom 中的实现函数截取示例（Linux）：\n\nfunction checkConfig() {\n\tif [[ -z "${RUN_JAR}" ]]; then\n\t\tif [ -f "$Lib/run.bin" ]; then\n\t\t\tRUN_JAR=$(cat "$Lib/run.bin")\n\t\t\tif [ ! -f "$Lib/$RUN_JAR" ]; then\n\t\t\t\terrorExit "Cannot find $Lib/$RUN_JAR jar"\n\t\t\tfi\n\t\t\techo "specify running：${RUN_JAR}"\n\t\telse\n\t\t\tRUN_JAR=$(find "${Lib}" -type f -name "*.jar" -exec ls -t {} + | head -1 | sed \'s#.*/##\')\n\t\t\t# error\n\t\t\tif [[ -z "${RUN_JAR}" ]]; then\n\t\t\t\terrorExit "Jar not found"\n\t\t\tfi\n\t\t\techo "automatic running：${RUN_JAR}"\n\t\tfi\n\tfi\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# windows 环境 💻\n\n根据上述描述可以发现我们并未修改项目控制台日志路径，和整体描述不一致。\n\n因为如果您仅在 Linux 环境运行上述推荐实现以及完全 OK ，但是如果您需要在 Windows 环境运行，那么您需要修改控制台日志路径（Jpom 是兼容 Linux、Windows 环境的）。\n\nWindows 下假设定义如下变量：\n\nset log_dir=%ENV_PATH%\\..\\logs\nset Lib=%ENV_PATH%\\..\\lib\\\nset "RUN_JAR="\nset stdout_log="%log_dir%\\stdout.log"\n\n\n1\n2\n3\n4\n\n\nJpom 中的实现函数截取示例（Windows）：\n\n@REM get jar\n:listDir\n\tif "%RUN_JAR%"=="" (\n\t\tif exist "%Lib%\\run.bin" (\n\t\t\tset /P RUN_JAR=<"%Lib%\\run.bin"\n\t\t\tset JAR_MSG=specify running !RUN_JAR!\n\t\t)else (\n\t\t\tfor /f "delims=" %%I in (\'dir /B %Lib%\') do (\n\t\t\t\tif exist %Lib%%%I if not exist %Lib%%%I\\nul (\n\t\t\t\t\tif "%%~xI" ==".jar" (\n\t\t\t\t\t\tif "%RUN_JAR%"=="" (\n\t\t\t\t\t\t\tset "RUN_JAR=%%I"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\tset JAR_MSG=auto running !RUN_JAR!\n\t\t)\n\t)else (\n\t\tset JAR_MSG=specify2 running %RUN_JAR%\n\t)\n\tif not exist %Lib%!RUN_JAR! (\n\t \techo %JAR_MSG%\n\t\techo file not exist %Lib%!RUN_JAR!\n\t\tPAUSE\n\t\tEXIT -1\n\t)\n\t@REM stdout_log\n\tif exist "%Lib%\\run.bin" (\n\t\tset /P RUN_LOG=<"%Lib%\\run.log"\n\t\tset stdout_log="%log_dir%\\!RUN_LOG!"\n\t)\ngoto:eof\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n> 标记文件存放位置根据自己的喜好包目录结构存储即可没有特殊要求（建议存储在脚本或者程序包同级目录下）\n\nJpom 管理脚本完整参考：\n\n * linux：https://gitee.com/dromara/Jpom/blob/master/modules/server/src/main/bin/Server.sh\n * windows：https://gitee.com/dromara/Jpom/blob/master/modules/server/src/main/bin/Server.bat\n\n\n# 代码细节 ⁉\n\n我们在开发升级业务的时候我们需要考虑一些细节，根据 Jpom 的经验如下：\n\n 1. 执行脚本的方式（难点）\n 2. 考虑注册为服务（非必要）\n 3. 异步执行升级脚本（用户体验）\n\n通常我们执行项目重启命令为：\n\nbash /xxxx/xxxx.sh restart or bash /xxxx/xxxx.bat restart\n\n如果注册为服务执行重启命令为：\n\nsystemctl restart xxxxx.service\n\n# 执行脚本的方式 🤔\n\n在 java 中我们通常使用 Runtime.getRuntime().exec(command)来执行命令，但是这种方式在升级流程不适用，因为这里涉及到父进程和子进程的相关知识。\n\n因为 java 默认执行脚本的标准输出目标是：ProcessBuilder.Redirect.PIPE\n\nPIPE：表示子进程的 I/O 源或目标将与当前进程的 I/O 源或目标相同。 这是大多数操作系统命令解释器（shell）的正常行为。\n\n这样当您执行重启当前项目的脚本时候，自身进程已经关闭，子进程也将自动关闭这样就无法实现自己重启自己。\n\n所以我们需要将标准输出目标设置为：ProcessBuilder.Redirect.INHERIT\n\nINHERIT：指示子进程 I/O 将通过管道连接到当前 Java 进程。 这是子进程标准 I/O 的默认处理。\n\n这样就可以达到执行重启脚本时候，创建的子进程不受父进程影响。\n\n参考代码：\n\npublic static void asyncExeLocalCommand(String command, File file, Map<String, String> env, boolean useSudo) throws Exception {\n    String newCommand = StrUtil.replace(command, StrUtil.CRLF, StrUtil.SPACE);\n    newCommand = StrUtil.replace(newCommand, StrUtil.LF, StrUtil.SPACE);\n    if (useSudo) {\n        newCommand = StrUtil.addPrefixIfNot(newCommand, "sudo ");\n    }\n    //\n    log.debug(newCommand);\n    List<String> commands = getCommand();\n    commands.add(newCommand);\n    ProcessBuilder pb = new ProcessBuilder(commands);\n    if (file != null) {\n        pb.directory(file);\n    }\n    Map<String, String> environment = pb.environment();\n    if (env != null) {\n        environment.putAll(env);\n    }\n    pb.redirectOutput(ProcessBuilder.Redirect.INHERIT);\n    pb.redirectError(ProcessBuilder.Redirect.INHERIT);\n    pb.redirectInput(ProcessBuilder.Redirect.INHERIT);\n    pb.start();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n这样设置后 java 程序里面无法直接知道执行命令的结果，需要采用获取当前项目是否在运行的方式来判断执行是否成功。\n\n * 执行前后进程 ID 一致：表示脚本没有正确执行\n * 执行前后进程 ID 不一致：表示项目重启成功，需要人工判断是否升级成功\n * 执行后没有新进程：表示项目启动失败\n\n> 提醒：Jpom 目前仅判断了项目进程是否存在，并未判断前后进程是否一致\n\n# 注册为服务 🎛\n\n假设您的项目支持使用服务的方式启动，此时我们在代码里面就需要考虑使用重启服务的命令来重启项目，而不是直接使用 bash 来重启。\n\n我们建议您将服务名注入到环境变量中，在执行重启时候判断是否存在环境变量，如果存在则使用服务方式来重启，否则使用 bash 方式来重启。\n\n服务的方式又需要考虑是否需要使用 sudo 来执行命令，服务一般是需要 root 权限（这块建议自行根据业务评估实现）\n\nJpom 中实现代码参考：\n\npublic static void restart() {\n    File runFile = JpomManifest.getRunPath();\n    File runPath = runFile.getParentFile();\n    if (!runPath.isDirectory()) {\n        throw new JpomRuntimeException(runPath.getAbsolutePath() + " error");\n    }\n    OsInfo osInfo = SystemUtil.getOsInfo();\n    if (osInfo.isWindows()) {\n        // 需要重新变更 stdout_log 文件来保证进程不被占用\n        String format = StrUtil.format("stdout_{}.log", System.currentTimeMillis());\n        FileUtil.writeString(format, FileUtil.file(runPath, "run.log"), CharsetUtil.CHARSET_UTF_8);\n    }\n    File scriptFile = JpomManifest.getScriptFile();\n    ThreadUtil.execute(() -> {\n        // Waiting for method caller,For example, the interface response\n        ThreadUtil.sleep(2, TimeUnit.SECONDS);\n        try {\n            String command = CommandUtil.generateCommand(scriptFile, "restart upgrade");\n            File parentFile = scriptFile.getParentFile();\n            if (osInfo.isWindows()) {\n                //String result = CommandUtil.execSystemCommand(command, scriptFile.getParentFile());\n                //log.debug("windows restart {}", result);\n                CommandUtil.asyncExeLocalCommand("start /b" + command, parentFile);\n            } else {\n                String jpomService = SystemUtil.get("JPOM_SERVICE");\n                if (StrUtil.isEmpty(jpomService)) {\n                    CommandUtil.asyncExeLocalCommand(command, parentFile);\n                } else {\n                    // 使用了服务\n                    CommandUtil.asyncExeLocalCommand("systemctl restart " + jpomService, parentFile, null, true);\n                }\n            }\n        } catch (Exception e) {\n            log.error("重启自身异常", e);\n        }\n    });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n# 异步执行 ⛓\n\n通常我们在调用重启方法是通过接口（Controller）来实现，这样如果不异步线程执行那么请求此接口将无法等待到任何响应就开始执行重启流程，这样给用户的体验就不知道是否开始执行重启，会误解为后台一直卡住。\n\n建议：前端在收到此接口相应后可以开启一个全屏遮罩层，并轮询一个特定接口来判断新的服务是否启动成功。\n\n# 功能扩展 🎬\n\n有来上述方案和流程后就是如何实现业务功能，您在开发业务时候需要考虑如何更新新程序包：\n\n * 在线下载\n * 手动上传\n\n在线下载：要您提供一个版本检测接口和程序包下载服务， 程序定时（每天凌晨或者中午）请求一次版本信息接口与当前运行中的版本比较， 如果有新版本您可以做弹窗提醒、特定页面查看（Jpom 使用此方法）、自动下载并升级（不建议）\n\n手动上传：如果您没有办法提供一个检测接口、下载服务、网络限制您只能使用手动上传的方式来更新程序包，java 程序实现上传这个功能非常通用。\n\n> 在线下载或者手动上传需要自行实现将对应的程序包存放于程序的运行 lib 路径\n\n不兼容升级：软件的不同版本迭代会因为功能变动、依赖升级等造成无法平滑升级的情况是时有发生的，此时您在开发业务时候就需要考虑到更新程序包时候判断当前运行的版本和要更新的新版本是否支持平滑升级，如果不支持平滑升级则提醒用户需要手动处理升级并告知操作流程。\n\n在 Jpom 实践中出现过 2 次不兼容升级：\n\n 1. v2.8.x 升级到 v.2.9.x\n 2. v2.9.x 升级到 v.2.10.x\n\n> 如果您对如何完整的实现升级业务逻辑还有疑问，欢迎加入 Jpom 社群来交流。\n\n\n# 写在最后 🙏\n\n感谢您耐心阅读本文，希望本文能给您带来一定的价值。\n\n如果觉得本文对您有帮助，请点个“赞”/“在看”支持一下，谢谢。\n\n如您对本文有任何疑问、不足之处欢迎您加入 Jpom 社群来交流，对本方案有更好的调优建议我们也非常欢迎您指出。\n\n本文首发于 Jpom 官方 欢迎访问，如需转载请先联系作者。\n\n\n# Jpom 链接 ✈\n\n官网：https://jpom.top/\n\nGitee: https://gitee.com/dromara/Jpom\n\nGithub: https://github.com/dromara/Jpom\n\n加入社群：https://jpom.top/pages/praise/join/',normalizedContent:'📖本文将以 jpom 为实际案例分享在 java 项目中如何实现自动升级的功能。本文满满的干货，希望对大家有所启发或者帮助 🤔。\n\n💡文章预计阅读时长：15 ~ 20 分钟，建议先收藏再阅读避免后续找不到\n\n\n# jpom 简介 📰\n\n🚀 jpom 是一款开源的项目运维系统，主要面向中小型企业团队，提供项目日常的部署、构建、脚本管理、ssh终端、docker ui 等功能。\n\n🚀 jpom 更是一款原生 ops 软件，给您带来了万物皆可脚本化的体验。\n\n\n# 目前用户 🔥\n\n根据目前的用户反馈+公开数据统计（保守估计）：\n\n 1. 目前用户（公司）已经达 500+\n 2. 涉及服务器已经达 3000+\n\n数据并且还在不断增加中\n\n * jpom 仓库：https://gitee.com/dromara/jpom\n * jpom 文档：https://jpom.top\n\n\n# 升级背景 💬\n\n日常使用很多桌面软件，都会遇到软件升级的情况。绝大多数的软件均支持弹窗提示新版本并且点击升级按钮后自动完成整个升级流程，让用户无须过多操作即可，满满的便利性。\n\n但是在我们 java 程序中实现类似的功能的软件项目不是很多，其中不泛一些客观因素不需要此功能，但是在一些小项目、公司内部项目、开源项目中，此功能还是能给使用者（用户）带来极大的便利性。\n\n\n# java 项目的局限性 ❗\n\n通常一个 java 项目在服务器中运行时是独立运行的，没有守护程序或者其他进程来监控和管理（ 如果可以靠守护程序和监管程序升级方式可以更多样化，此方式不在本地讨论范畴中 ）。\n\n这样的场景要实现升级就存在一个局限性，程序必须自身控制关闭自身并且启动新的程序包，但 jpom 经过多版本和不同用户使用场景实践后发现 java 项目也能轻松实现自动升级。\n\n\n# jpom 中支持的升级方式有 🔖\n\n 1. 在线升级\n 2. 上传升级\n 3. 手动升级\n\n * 在线升级和上传升级的原理是一致的，更新程序包的来源方式不一致。\n * 在线升级是自动下载新的程序包、上传升级是手动上传新的程序包到系统中。\n * 手动升级是最原始的大家平常使用的升级方式：手动下载新的程序包、手动上传新的程序包到服务器中。\n\njpom 升级文档：文档\n\n\n# 升级前提 📌\n\n不同软件的使用场景、用户群体、整体架构等不同，导致部分软件是不能使用自动升级的方式（ 不能使用自动升级的细节情况不在本文讨论范畴中 ）。\n\n一般来说可以实现自动升级的软件有如下特点：\n\n * 独立运行：项目本身是单机运行的，不涉及到分布式集群。\n * 依赖简单：项目不依赖过多的外部组件。\n * 业务平滑：业务逻辑变更不会影响旧版本数据的兼容性。\n * 环境稳定：项目运行环境相对稳定，无需频繁调整配置。\n\n\n# 通用升级流程 🏗\n\n 1. 检查是否有新版本；\n 2. 判断是否可以平滑升级；\n 3. 下载/上传升级包；\n 4. 执行升级流程；\n    * 数据升级\n    * 程序包升级\n 5. 等待升级结果。\n\n\n# 程序变动 🛠\n\n如果需要使用 java 实现自动升级那么您需要对程序做如下变动调整：\n\n 1. 程序能自动升级数据库表结构（核心变动）\n 2. 需要将您的程序调整为脚本控制（大多数程序均是如此）\n 3. 程序能兼容不同版本的配置文件（向下兼容）\n 4. 实现升级的业务流程（一般是 web 项目需要管理页面）\n\n\n# 数据库 💿\n\n> 数据库表结构升级是实现自动升级的核心问题，如果您的项目不使用数据库可以忽略此环节。\n\n大多数软件的版本升级均是提前手动处理数据库表结构，然后在手动升级（替换）程序包\n\n要实现自动升级就必须解决数据库表结构升级的问题。\n\n数据库表结构升级自动化解决办法通常可以使用第三方工具， 如 flyway、liquibase 等 （ 本文主要使用 jpom 作为案例，使用工具库不在本文讨论范畴）。\n\n如果您的程序规模和复杂度不高，可以考虑自研实行数据库表结构升级。\n\njpom 中目前就是采用自研实现的数据库升级（jpom 中目前并未考虑回退版本的情况）\n\n实现思路：（如有不足还请帮忙更正）\n\n 1. csv 记录数据库表结构\n 2. 程序启动时读取 csv 文件\n 3. 解析为数据库的 dll 语句\n 4. 判断是否以及执行过\n 5. 执行 dll 语句\n 6. 缓存成功执行的 dll 语句\n\n# csv 规范 📑\n\n这里我们提前规划好完整的表、后期修改的表 、变更表索引、需要执行的扩展 sql，可以总结为四大类型：新增表、修改表、创建/修改索引、扩展 sql\n\n> 下列定义的 csv 规范仅供参考实际需要根据您的业务情况和数据库进行适当调整\n> \n> jpom 中目前仅兼容了 h2、mysql 数据库\n\njpom 中新增表规则示例\n\ntablename     name               type     len   defaultvalue   notnull   primarykey   comment   tablecomment\nscript_info   id                 string   50                   true      true         id        节点脚本模版\nscript_info   createtimemillis   long                          false     false        数据创建时间    \nscript_info   modifytimemillis   long                          false     false        数据修改时间    \nscript_info   modifyuser         string   50                   false     false        修改人       \n\njpom 中修改表规则示例\n\naltertype   tablename               name           type     len   defaultvalue   comment    notnull\nadd         project_info            triggertoken   string   100                  触发器token   \nalter       file_storage            name           string   255                  名称         true\ndrop        sshterminalexecutelog   opttime                                                 \n\njpom 中索引规则示例\n\nindextype    tablename             name                   field\nadd-unique   user_info             user_inf_salt_index1   salt\nadd          static_file_storage   dir_task_id            staticdir+scantaskid\nadd          trigger_token_log     trigger_token_type     type\n\njpom 中扩展 sql 规则\n\n如果数据库在一定情况下需要执行一些初始化操作，版本变更需要对数据进行默认操作或者批量修改、删除、新增等 您可以使用扩展 sql 来实现，扩展 sql 唯一需要注意的就是分割符了，因为 jdbc 批量执行多条 sql 只会执行第一条，后续的将自动忽略，需要您自行分割后再执行。\n\n在 jpom 中为了保证 dll 语句重复执行不报错，或者减少不必要的 dll 语句执行，在添加字段、删除字段、删除索引操作时候依赖数据库函数实现，此时就需要提前执行创建函数的 sql,来达到后续操作可以顺利执行。\n\n参考 sql：https://gitee.com/dromara/jpom/blob/master/modules/server/src/main/resources/sql-view/execute.mysql.v1.0.sql\n\n# 缓存 dll 记录 🧾\n\n大多数数据库 dll 语句并不是幂等的，多次执行同一个 dll 语句可能会报错，这样就是我们非常不期望出现的。\n\n推荐方案在执行 dll 语句前将签名一次（md5、sha1）,判断签名后的值是否以及被执行过，如果没有执行则执行并缓存成功。\n\njpom 相关代码参考地址：\n\n 1. https://gitee.com/dromara/jpom/tree/master/modules/server/src/main/resources/sql-view\n 2. https://gitee.com/dromara/jpom/blob/master/modules/storage-module/storage-module-common/src/main/java/org/dromara/jpom/db/istoragesqlbuilderservice.java\n 3. https://gitee.com/dromara/jpom/blob/master/modules/server/src/main/java/org/dromara/jpom/system/db/initdb.java\n\n\n# 管理脚本 🧩\n\n在管理 java 项目的脚本通常要考虑实现：对应的项目启动、停止、重启、查询状态。\n\n要实现自动升级其实我们只需要在您原有的管理脚本中调整启动环节即可，主要需要考虑如何识别到新版本的程序包、项目的控制台日志文件使用的路径即可。\n\n管理脚本会业务不同使用环境有所不同 linux、windows（一定要注意文件句柄被占用的情况）、macos 等等，所以我们需要根据不同的操作系统来编写不同的管理脚本。\n\n# 实现方案 👏\n\n 1. 替换管理脚本中的值（较复杂）\n 2. 自动读取标记文件（推荐）\n\n> 如有更优方案恳请分享\n> \n> jpom 中早期版本使用的是方案 1，后期版本使用的是方案 2。\n\n方案一的缺点：程序需要修改管理脚本文件，容易产生修改前后编码格式不一致，脚本规则定义不明确会出现难替换问题\n\n# 推荐实现 👍\n\n我们推荐您使用标记文件的方案来实现，主要流程如下：\n\n在管理脚本启动流程（函数）读取标记文件中的值来来运行程序。\n\n假设我们管理脚本定义来如下变量：\n\nlib="${base}/lib/"\nlogpath="${base}/logs/"\nrun_jar=""\nlog="${logpath}/stdout.log"\n\n\n1\n2\n3\n4\n\n\n当我们在启动时候先判断标记文件是否存在（假设这里我们定义标记文件为：run.bin）， 如果存在标记文件我们则读取这个文件里面的值并将其赋值给 run_jar 变量， 如果不存在标记文件表示第一次启动，我们建议您读取 lib 目录下面的第一个 jar 包并将其赋值给 run_jar 变量， 如果 lib 目录下面没有 jar 包，则表示没有可运行的程序，程序启动失败。\n\n经过上述流程我们即可拼接最终的启动命令。\n\nnohup java -server -xx:+useg1gc xxxx -jar ${lib}/${run_jar} xxxx >>$log 2>&1 &\n\n如果您是 classpath 模式运行其实类似的方式只能需要修改生成所有的 jar 全路径和最终的启动命令即可。\n\njpom 中的实现函数截取示例（linux）：\n\nfunction checkconfig() {\n\tif [[ -z "${run_jar}" ]]; then\n\t\tif [ -f "$lib/run.bin" ]; then\n\t\t\trun_jar=$(cat "$lib/run.bin")\n\t\t\tif [ ! -f "$lib/$run_jar" ]; then\n\t\t\t\terrorexit "cannot find $lib/$run_jar jar"\n\t\t\tfi\n\t\t\techo "specify running：${run_jar}"\n\t\telse\n\t\t\trun_jar=$(find "${lib}" -type f -name "*.jar" -exec ls -t {} + | head -1 | sed \'s#.*/##\')\n\t\t\t# error\n\t\t\tif [[ -z "${run_jar}" ]]; then\n\t\t\t\terrorexit "jar not found"\n\t\t\tfi\n\t\t\techo "automatic running：${run_jar}"\n\t\tfi\n\tfi\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# windows 环境 💻\n\n根据上述描述可以发现我们并未修改项目控制台日志路径，和整体描述不一致。\n\n因为如果您仅在 linux 环境运行上述推荐实现以及完全 ok ，但是如果您需要在 windows 环境运行，那么您需要修改控制台日志路径（jpom 是兼容 linux、windows 环境的）。\n\nwindows 下假设定义如下变量：\n\nset log_dir=%env_path%\\..\\logs\nset lib=%env_path%\\..\\lib\\\nset "run_jar="\nset stdout_log="%log_dir%\\stdout.log"\n\n\n1\n2\n3\n4\n\n\njpom 中的实现函数截取示例（windows）：\n\n@rem get jar\n:listdir\n\tif "%run_jar%"=="" (\n\t\tif exist "%lib%\\run.bin" (\n\t\t\tset /p run_jar=<"%lib%\\run.bin"\n\t\t\tset jar_msg=specify running !run_jar!\n\t\t)else (\n\t\t\tfor /f "delims=" %%i in (\'dir /b %lib%\') do (\n\t\t\t\tif exist %lib%%%i if not exist %lib%%%i\\nul (\n\t\t\t\t\tif "%%~xi" ==".jar" (\n\t\t\t\t\t\tif "%run_jar%"=="" (\n\t\t\t\t\t\t\tset "run_jar=%%i"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\tset jar_msg=auto running !run_jar!\n\t\t)\n\t)else (\n\t\tset jar_msg=specify2 running %run_jar%\n\t)\n\tif not exist %lib%!run_jar! (\n\t \techo %jar_msg%\n\t\techo file not exist %lib%!run_jar!\n\t\tpause\n\t\texit -1\n\t)\n\t@rem stdout_log\n\tif exist "%lib%\\run.bin" (\n\t\tset /p run_log=<"%lib%\\run.log"\n\t\tset stdout_log="%log_dir%\\!run_log!"\n\t)\ngoto:eof\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n\n> 标记文件存放位置根据自己的喜好包目录结构存储即可没有特殊要求（建议存储在脚本或者程序包同级目录下）\n\njpom 管理脚本完整参考：\n\n * linux：https://gitee.com/dromara/jpom/blob/master/modules/server/src/main/bin/server.sh\n * windows：https://gitee.com/dromara/jpom/blob/master/modules/server/src/main/bin/server.bat\n\n\n# 代码细节 ⁉\n\n我们在开发升级业务的时候我们需要考虑一些细节，根据 jpom 的经验如下：\n\n 1. 执行脚本的方式（难点）\n 2. 考虑注册为服务（非必要）\n 3. 异步执行升级脚本（用户体验）\n\n通常我们执行项目重启命令为：\n\nbash /xxxx/xxxx.sh restart or bash /xxxx/xxxx.bat restart\n\n如果注册为服务执行重启命令为：\n\nsystemctl restart xxxxx.service\n\n# 执行脚本的方式 🤔\n\n在 java 中我们通常使用 runtime.getruntime().exec(command)来执行命令，但是这种方式在升级流程不适用，因为这里涉及到父进程和子进程的相关知识。\n\n因为 java 默认执行脚本的标准输出目标是：processbuilder.redirect.pipe\n\npipe：表示子进程的 i/o 源或目标将与当前进程的 i/o 源或目标相同。 这是大多数操作系统命令解释器（shell）的正常行为。\n\n这样当您执行重启当前项目的脚本时候，自身进程已经关闭，子进程也将自动关闭这样就无法实现自己重启自己。\n\n所以我们需要将标准输出目标设置为：processbuilder.redirect.inherit\n\ninherit：指示子进程 i/o 将通过管道连接到当前 java 进程。 这是子进程标准 i/o 的默认处理。\n\n这样就可以达到执行重启脚本时候，创建的子进程不受父进程影响。\n\n参考代码：\n\npublic static void asyncexelocalcommand(string command, file file, map<string, string> env, boolean usesudo) throws exception {\n    string newcommand = strutil.replace(command, strutil.crlf, strutil.space);\n    newcommand = strutil.replace(newcommand, strutil.lf, strutil.space);\n    if (usesudo) {\n        newcommand = strutil.addprefixifnot(newcommand, "sudo ");\n    }\n    //\n    log.debug(newcommand);\n    list<string> commands = getcommand();\n    commands.add(newcommand);\n    processbuilder pb = new processbuilder(commands);\n    if (file != null) {\n        pb.directory(file);\n    }\n    map<string, string> environment = pb.environment();\n    if (env != null) {\n        environment.putall(env);\n    }\n    pb.redirectoutput(processbuilder.redirect.inherit);\n    pb.redirecterror(processbuilder.redirect.inherit);\n    pb.redirectinput(processbuilder.redirect.inherit);\n    pb.start();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n这样设置后 java 程序里面无法直接知道执行命令的结果，需要采用获取当前项目是否在运行的方式来判断执行是否成功。\n\n * 执行前后进程 id 一致：表示脚本没有正确执行\n * 执行前后进程 id 不一致：表示项目重启成功，需要人工判断是否升级成功\n * 执行后没有新进程：表示项目启动失败\n\n> 提醒：jpom 目前仅判断了项目进程是否存在，并未判断前后进程是否一致\n\n# 注册为服务 🎛\n\n假设您的项目支持使用服务的方式启动，此时我们在代码里面就需要考虑使用重启服务的命令来重启项目，而不是直接使用 bash 来重启。\n\n我们建议您将服务名注入到环境变量中，在执行重启时候判断是否存在环境变量，如果存在则使用服务方式来重启，否则使用 bash 方式来重启。\n\n服务的方式又需要考虑是否需要使用 sudo 来执行命令，服务一般是需要 root 权限（这块建议自行根据业务评估实现）\n\njpom 中实现代码参考：\n\npublic static void restart() {\n    file runfile = jpommanifest.getrunpath();\n    file runpath = runfile.getparentfile();\n    if (!runpath.isdirectory()) {\n        throw new jpomruntimeexception(runpath.getabsolutepath() + " error");\n    }\n    osinfo osinfo = systemutil.getosinfo();\n    if (osinfo.iswindows()) {\n        // 需要重新变更 stdout_log 文件来保证进程不被占用\n        string format = strutil.format("stdout_{}.log", system.currenttimemillis());\n        fileutil.writestring(format, fileutil.file(runpath, "run.log"), charsetutil.charset_utf_8);\n    }\n    file scriptfile = jpommanifest.getscriptfile();\n    threadutil.execute(() -> {\n        // waiting for method caller,for example, the interface response\n        threadutil.sleep(2, timeunit.seconds);\n        try {\n            string command = commandutil.generatecommand(scriptfile, "restart upgrade");\n            file parentfile = scriptfile.getparentfile();\n            if (osinfo.iswindows()) {\n                //string result = commandutil.execsystemcommand(command, scriptfile.getparentfile());\n                //log.debug("windows restart {}", result);\n                commandutil.asyncexelocalcommand("start /b" + command, parentfile);\n            } else {\n                string jpomservice = systemutil.get("jpom_service");\n                if (strutil.isempty(jpomservice)) {\n                    commandutil.asyncexelocalcommand(command, parentfile);\n                } else {\n                    // 使用了服务\n                    commandutil.asyncexelocalcommand("systemctl restart " + jpomservice, parentfile, null, true);\n                }\n            }\n        } catch (exception e) {\n            log.error("重启自身异常", e);\n        }\n    });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n\n\n# 异步执行 ⛓\n\n通常我们在调用重启方法是通过接口（controller）来实现，这样如果不异步线程执行那么请求此接口将无法等待到任何响应就开始执行重启流程，这样给用户的体验就不知道是否开始执行重启，会误解为后台一直卡住。\n\n建议：前端在收到此接口相应后可以开启一个全屏遮罩层，并轮询一个特定接口来判断新的服务是否启动成功。\n\n# 功能扩展 🎬\n\n有来上述方案和流程后就是如何实现业务功能，您在开发业务时候需要考虑如何更新新程序包：\n\n * 在线下载\n * 手动上传\n\n在线下载：要您提供一个版本检测接口和程序包下载服务， 程序定时（每天凌晨或者中午）请求一次版本信息接口与当前运行中的版本比较， 如果有新版本您可以做弹窗提醒、特定页面查看（jpom 使用此方法）、自动下载并升级（不建议）\n\n手动上传：如果您没有办法提供一个检测接口、下载服务、网络限制您只能使用手动上传的方式来更新程序包，java 程序实现上传这个功能非常通用。\n\n> 在线下载或者手动上传需要自行实现将对应的程序包存放于程序的运行 lib 路径\n\n不兼容升级：软件的不同版本迭代会因为功能变动、依赖升级等造成无法平滑升级的情况是时有发生的，此时您在开发业务时候就需要考虑到更新程序包时候判断当前运行的版本和要更新的新版本是否支持平滑升级，如果不支持平滑升级则提醒用户需要手动处理升级并告知操作流程。\n\n在 jpom 实践中出现过 2 次不兼容升级：\n\n 1. v2.8.x 升级到 v.2.9.x\n 2. v2.9.x 升级到 v.2.10.x\n\n> 如果您对如何完整的实现升级业务逻辑还有疑问，欢迎加入 jpom 社群来交流。\n\n\n# 写在最后 🙏\n\n感谢您耐心阅读本文，希望本文能给您带来一定的价值。\n\n如果觉得本文对您有帮助，请点个“赞”/“在看”支持一下，谢谢。\n\n如您对本文有任何疑问、不足之处欢迎您加入 jpom 社群来交流，对本方案有更好的调优建议我们也非常欢迎您指出。\n\n本文首发于 jpom 官方 欢迎访问，如需转载请先联系作者。\n\n\n# jpom 链接 ✈\n\n官网：https://jpom.top/\n\ngitee: https://gitee.com/dromara/jpom\n\ngithub: https://github.com/dromara/jpom\n\n加入社群：https://jpom.top/pages/praise/join/',charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"实践案例目录",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"实践案例"}},title:"实践案例目录",date:"2022-06-11T16:27:37.000Z",permalink:"/pages/practice/catalogue/",tags:[null],categories:["docs","文档","实践案例"],readingShow:"top"},regularPath:"/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B/%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B%E7%9B%AE%E5%BD%95.html",relativePath:"实践案例/实践案例目录.md",key:"v-4df1ce76",path:"/pages/practice/catalogue/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2022/08/08, 11:48:44",lastUpdatedTimestamp:1659959324e3},{title:"Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件",frontmatter:{title:"Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件",date:"2022-07-27T14:42:05.000Z",permalink:"/pages/e234a7/",categories:["推广文章"],tags:["推广文章"],readingShow:"top"},regularPath:"/%E6%8E%A8%E5%B9%BF%E6%96%87%E7%AB%A0/Jpom%E4%BB%8B%E7%BB%8D%E6%96%87%E7%AB%A00727.html",relativePath:"推广文章/Jpom介绍文章0727.md",key:"v-5ded3183",path:"/pages/e234a7/",headers:[{level:2,title:"😭 日常开发中，您是否有以下痛点？",slug:"😭-日常开发中-您是否有以下痛点",normalizedTitle:"😭 日常开发中，您是否有以下痛点？",charIndex:43},{level:3,title:"😁 使用 Jpom 后",slug:"😁-使用-jpom-后",normalizedTitle:"😁 使用 jpom 后",charIndex:388},{level:2,title:"快速体验",slug:"快速体验",normalizedTitle:"快速体验",charIndex:1139},{level:3,title:"一键安装插件端 详细的安装说明文档",slug:"一键安装插件端-详细的安装说明文档",normalizedTitle:"一键安装插件端 详细的安装说明文档",charIndex:1148},{level:3,title:"一键安装服务端 详细的安装说明文档",slug:"一键安装服务端-详细的安装说明文档",normalizedTitle:"一键安装服务端 详细的安装说明文档",charIndex:1284},{level:2,title:"Jpom 页面截图",slug:"jpom-页面截图",normalizedTitle:"jpom 页面截图",charIndex:1421},{level:2,title:"Jpom 实践案例",slug:"jpom-实践案例",normalizedTitle:"jpom 实践案例",charIndex:1443},{level:2,title:"Jpom 链接",slug:"jpom-链接",normalizedTitle:"jpom 链接",charIndex:1577}],headersStr:"😭 日常开发中，您是否有以下痛点？ 😁 使用 Jpom 后 快速体验 一键安装插件端 详细的安装说明文档 一键安装服务端 详细的安装说明文档 Jpom 页面截图 Jpom 实践案例 Jpom 链接",content:'# Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n\n\n\n\n# 😭 日常开发中，您是否有以下痛点？\n\n * 团队中没有专业的运维，开发还要做运维的活，需要自己手动构建、部署项目。\n * 不同的项目有不同的构建、部署命令。\n * 有开发、测试、生产等多环境打包的需求。\n * 需要同时监控多个项目的运行状态。\n * 需要下载 SSH 工具远程连接服务器。\n * 需要下载 FTP 工具 传输文件到服务器。\n * 多台服务器时，在不同电脑之间账号密码同步不方便。\n * 想使用一些自动化工具，但是对服务器性能太高，搭建太麻烦。\n * 对自动化工具有个性化的需求，想自己修改项目，但是市面上的工具太复杂了。\n\n> 如果是分布式的项目，以上步骤则更加繁琐。\n> \n> 让 Jpom 来帮您解决这些痛点吧！然而，这些只是 Jpom 解决的最基础的功能。\n\n\n# 😁 使用 Jpom 后\n\n * 方便的用户管理\n   1. 用户操作监控，监控指定用户指定操作以邮件形式通知\n   2. 多用户管理，用户项目权限独立（上传、删除权限可控制），完善的操作日志，使用工作空间隔离权限\n   3. 账号可以开启 MFA 两步验证提高账号安全性\n * 界面形式实时查看项目运行状态、控制台日志、管理项目文件\n   1. 在线修改项目文本文件\n * Docker 容器管理、Docker swarm 集群管理\n * 在线 SSH 终端，让您在没有 Xshell、FinalShell 等软件也能轻松管理服务器\n   1. 登录 Jpom 系统后不需要知道服务器密码\n   2. 能指定 SSH 禁止执行的命令，避免执行高风险命令，并且能自动执行命令日志\n   3. 设置文件目录，在线查看管理对应项目文件及配置文件\n   4. SSH 命令模版在线执行脚本还能定时执行\n   5. 在线修改文本文件\n   6. 轻量的实现了简单的"堡垒机"功能\n * 使用项目分发一键搞定集群项目多机部署\n * 在线构建不用手动更新升级项目\n   1. 支持拉取 GIT、SVN 仓库\n   2. 支持容器构建（docker）\n   3. 支持 SSH 方式发布\n   4. 支持定时构建\n   5. 支持 WebHook 形式触发构建\n * 支持在线编辑 nginx 配置文件并自动 reload 等操作\n   1. 管理 nginx 状态，管理 SSL 证书\n * 项目状态监控异常自动报警、自动尝试重启\n   1. 支持邮件 + 钉钉群 + 微信群通知，主动感知项目运行状况\n * 节点脚本模版+定时执行或者触发器，拓展更多功能\n * 重要路径授权模式，杜绝用户误操作系统文件\n\n\n# 快速体验\n\n\n# 一键安装插件端 详细的安装说明文档\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent\n\n\n1\n2\n3\n\n\n\n# 一键安装服务端 详细的安装说明文档\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server\n\n\n1\n2\n3\n\n\n\n# Jpom 页面截图\n\n\n\n\n\n\n\n\n\n\n# Jpom 实践案例\n\n * 🔥👍基于 Jpom 搭建应用部署系统\n * 本地构建 + SSH 发布 java 项目\n * 本地构建 + 自定义管理 python 项目\n * Gitee 提交代码后自动执行构建\n * 管理 docker\n\n更多实践案例>>\n\n\n# Jpom 链接\n\n官网：https://jpom.top/\n\nGitee: https://gitee.com/dromara/Jpom\n\nGithub: https://github.com/dromara/Jpom\n\n常见问题：https://jpom.top/pages/FQA/',normalizedContent:'# jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件\n\n\n\n\n# 😭 日常开发中，您是否有以下痛点？\n\n * 团队中没有专业的运维，开发还要做运维的活，需要自己手动构建、部署项目。\n * 不同的项目有不同的构建、部署命令。\n * 有开发、测试、生产等多环境打包的需求。\n * 需要同时监控多个项目的运行状态。\n * 需要下载 ssh 工具远程连接服务器。\n * 需要下载 ftp 工具 传输文件到服务器。\n * 多台服务器时，在不同电脑之间账号密码同步不方便。\n * 想使用一些自动化工具，但是对服务器性能太高，搭建太麻烦。\n * 对自动化工具有个性化的需求，想自己修改项目，但是市面上的工具太复杂了。\n\n> 如果是分布式的项目，以上步骤则更加繁琐。\n> \n> 让 jpom 来帮您解决这些痛点吧！然而，这些只是 jpom 解决的最基础的功能。\n\n\n# 😁 使用 jpom 后\n\n * 方便的用户管理\n   1. 用户操作监控，监控指定用户指定操作以邮件形式通知\n   2. 多用户管理，用户项目权限独立（上传、删除权限可控制），完善的操作日志，使用工作空间隔离权限\n   3. 账号可以开启 mfa 两步验证提高账号安全性\n * 界面形式实时查看项目运行状态、控制台日志、管理项目文件\n   1. 在线修改项目文本文件\n * docker 容器管理、docker swarm 集群管理\n * 在线 ssh 终端，让您在没有 xshell、finalshell 等软件也能轻松管理服务器\n   1. 登录 jpom 系统后不需要知道服务器密码\n   2. 能指定 ssh 禁止执行的命令，避免执行高风险命令，并且能自动执行命令日志\n   3. 设置文件目录，在线查看管理对应项目文件及配置文件\n   4. ssh 命令模版在线执行脚本还能定时执行\n   5. 在线修改文本文件\n   6. 轻量的实现了简单的"堡垒机"功能\n * 使用项目分发一键搞定集群项目多机部署\n * 在线构建不用手动更新升级项目\n   1. 支持拉取 git、svn 仓库\n   2. 支持容器构建（docker）\n   3. 支持 ssh 方式发布\n   4. 支持定时构建\n   5. 支持 webhook 形式触发构建\n * 支持在线编辑 nginx 配置文件并自动 reload 等操作\n   1. 管理 nginx 状态，管理 ssl 证书\n * 项目状态监控异常自动报警、自动尝试重启\n   1. 支持邮件 + 钉钉群 + 微信群通知，主动感知项目运行状况\n * 节点脚本模版+定时执行或者触发器，拓展更多功能\n * 重要路径授权模式，杜绝用户误操作系统文件\n\n\n# 快速体验\n\n\n# 一键安装插件端 详细的安装说明文档\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent\n\n\n1\n2\n3\n\n\n\n# 一键安装服务端 详细的安装说明文档\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server\n\n\n1\n2\n3\n\n\n\n# jpom 页面截图\n\n\n\n\n\n\n\n\n\n\n# jpom 实践案例\n\n * 🔥👍基于 jpom 搭建应用部署系统\n * 本地构建 + ssh 发布 java 项目\n * 本地构建 + 自定义管理 python 项目\n * gitee 提交代码后自动执行构建\n * 管理 docker\n\n更多实践案例>>\n\n\n# jpom 链接\n\n官网：https://jpom.top/\n\ngitee: https://gitee.com/dromara/jpom\n\ngithub: https://github.com/dromara/jpom\n\n常见问题：https://jpom.top/pages/fqa/',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"围观 Jpom 支持使用第三方 OAuth2 认证用户",frontmatter:{title:"围观 Jpom 支持使用第三方 OAuth2 认证用户",date:"2023-04-03T18:13:51.000Z",permalink:"/pages/b66671/",categories:["docs","推广文章"],tags:["OAuth2"],readingShow:"top"},regularPath:"/%E6%8E%A8%E5%B9%BF%E6%96%87%E7%AB%A0/Jpom%E8%AE%A4%E8%AF%81%E7%AE%A1%E7%90%8620230403.html",relativePath:"推广文章/Jpom认证管理20230403.md",key:"v-332dd43c",path:"/pages/b66671/",headers:[{level:2,title:"Jpom 介绍 📢",slug:"jpom-介绍-📢",normalizedTitle:"jpom 介绍 📢",charIndex:2},{level:2,title:"近期主要功能变动 📋",slug:"近期主要功能变动-📋",normalizedTitle:"近期主要功能变动 📋",charIndex:172},{level:2,title:"精彩变动说明 📝",slug:"精彩变动说明-📝",normalizedTitle:"精彩变动说明 📝",charIndex:368},{level:3,title:"beta 计划 📬",slug:"beta-计划-📬",normalizedTitle:"beta 计划 📬",charIndex:438},{level:3,title:"文件管理中心 📁",slug:"文件管理中心-📁",normalizedTitle:"文件管理中心 📁",charIndex:756},{level:3,title:"OAuth2 📇",slug:"oauth2-📇",normalizedTitle:"oauth2 📇",charIndex:1049},{level:2,title:"感谢 🤝",slug:"感谢-🤝",normalizedTitle:"感谢 🤝",charIndex:1290},{level:3,title:"新版本部分功能截图",slug:"新版本部分功能截图",normalizedTitle:"新版本部分功能截图",charIndex:1412},{level:2,title:"Jpom 链接  🔗",slug:"jpom-链接-🔗",normalizedTitle:"jpom 链接  🔗",charIndex:null}],headersStr:"Jpom 介绍 📢 近期主要功能变动 📋 精彩变动说明 📝 beta 计划 📬 文件管理中心 📁 OAuth2 📇 感谢 🤝 新版本部分功能截图 Jpom 链接  🔗",content:"# Jpom 介绍 📢\n\nJpom 是一款简而轻的低侵入式在线构建、自动部署、日常运维、项目运维监控软件。\n\n来我们先看看距离上次将大版本 2.10.36 发布到现在 Jpom 又卷了多少个版本（偷偷告诉您算上 beta 版本已经有 15+ 😱） 又有哪些精彩的功能。\n\n还有更多变动等您来发现（新增、优化、修复累积达 30+）。\n\n\n# 近期主要功能变动 📋\n\n> 从上次 3月20日大版本发布后\n\n 1. 开启了 beta 计划\n 2. 新增了文件管理中心\n 3. 支持 OAuth2 第三方平台登录（Gitee、MaxKey、Github）\n 4. 新增了证书统一管理\n 5. 部分数据支持跨工作空间共享（仓库、服务端脚本、节点脚本）\n 6. 优化部分页面布局（列表固定操作列、构建页面、docker 控制台页面）\n\n\n# 精彩变动说明 📝\n\n本文主要选取精彩的变动相关功能说明和截图示例，具体功能使用方式可以安装 Jpom 或者升级到最新版本来体验。\n\n\n# beta 计划 📬\n\n考虑到 Jpom 近期在 2.10.x 版本为 3.x 版本的过渡版本，在过渡期间肯定有较多或者频繁更新，这样会给部分用户带来更新 OR 不更新的顾虑和纠结。\n\n在大家一起讨论建议下我们在 2.10.37 版本后开启 beta 计划，beta 计划默认是关闭的，我们在更新部分新功能和一些非阻塞 bug、小优化都将优先更新到 beta 版本中\n\n> 再次我们很感谢参与 beta 计划的成员，能够及时给我们反馈 Jpom 中存在的bug、欠缺的地方，以及优化建议\n\n如何开启beta 计划：\n\n系统管理 -> 在线升级 -> 点击 [我要加入]\n\n\n\n\n\n确认后就即可使用 beta 计划来检测新版本了\n\n\n# 文件管理中心 📁\n\n在很多场景下，开发人员会拿到一批新服务器。需要在新服务器里面安装各种环境（jdk，nginx，mysql，docker等常用组件），甚至是在离线的环境下需要为多台服务器安装 Jpom 插件端。\n\n考虑到上述情况新版本中添加了文件管理来实现统一安装比较常用且固定文件，然后可以将文件以 SSH 方式、节点方式上传到服务器中并且可以在上传前和上传后执行特定的命令来实现文件操作（安装 、解压、配置环境变量等）\n\n> 温馨提醒：构建产物支持同步到文件管理中心奥\n\n\n\n\n\n\n\n> 悄悄告诉您：文件管理中心的文件支持分片下载（可以用于公司服务器内部下载共享文件）\n\n\n# OAuth2 📇\n\n为了能和公司的其他系统账号打通，Jpom 在 2.10.38 版本以后支持了使用第三方系统的 OAuth2 认证方式来登录账号，这样很方便实现管理多个系统账号统一管理修改用户密码等\n\n目前已经支持的第三方系统有：Gitee、MaxKey、Github （更多平台系统等您来反馈）\n\n开启方式：\n\n系统管理 -> 配置管理 -> 认证配置\n\n\n\n\n\n\n\n> 注意：如果使用了 OAuth2 方式登录账号配置的 MFA(两步验证) 在登录的时候不会生效奥\n\n\n# 感谢 🤝\n\n感谢 MaxKey 作者：石鸣 贡献该功能\n\n * MaxKey 仓库：https://gitee.com/dromara/MaxKey\n * 作者主页：https://gitee.com/maxkeytop_admin\n\n\n# 新版本部分功能截图\n\n\n\n\n\n\n# Jpom 链接 🔗\n\n官网：https://jpom.top/\n\nGitee: https://gitee.com/dromara/Jpom\n\nGithub: https://github.com/dromara/Jpom\n\n常见问题：https://jpom.top/pages/FQA/\n\n加入社群：https://jpom.top/pages/praise/join/\n\n赞赏&支持：https://jpom.top/pages/praise/",normalizedContent:"# jpom 介绍 📢\n\njpom 是一款简而轻的低侵入式在线构建、自动部署、日常运维、项目运维监控软件。\n\n来我们先看看距离上次将大版本 2.10.36 发布到现在 jpom 又卷了多少个版本（偷偷告诉您算上 beta 版本已经有 15+ 😱） 又有哪些精彩的功能。\n\n还有更多变动等您来发现（新增、优化、修复累积达 30+）。\n\n\n# 近期主要功能变动 📋\n\n> 从上次 3月20日大版本发布后\n\n 1. 开启了 beta 计划\n 2. 新增了文件管理中心\n 3. 支持 oauth2 第三方平台登录（gitee、maxkey、github）\n 4. 新增了证书统一管理\n 5. 部分数据支持跨工作空间共享（仓库、服务端脚本、节点脚本）\n 6. 优化部分页面布局（列表固定操作列、构建页面、docker 控制台页面）\n\n\n# 精彩变动说明 📝\n\n本文主要选取精彩的变动相关功能说明和截图示例，具体功能使用方式可以安装 jpom 或者升级到最新版本来体验。\n\n\n# beta 计划 📬\n\n考虑到 jpom 近期在 2.10.x 版本为 3.x 版本的过渡版本，在过渡期间肯定有较多或者频繁更新，这样会给部分用户带来更新 or 不更新的顾虑和纠结。\n\n在大家一起讨论建议下我们在 2.10.37 版本后开启 beta 计划，beta 计划默认是关闭的，我们在更新部分新功能和一些非阻塞 bug、小优化都将优先更新到 beta 版本中\n\n> 再次我们很感谢参与 beta 计划的成员，能够及时给我们反馈 jpom 中存在的bug、欠缺的地方，以及优化建议\n\n如何开启beta 计划：\n\n系统管理 -> 在线升级 -> 点击 [我要加入]\n\n\n\n\n\n确认后就即可使用 beta 计划来检测新版本了\n\n\n# 文件管理中心 📁\n\n在很多场景下，开发人员会拿到一批新服务器。需要在新服务器里面安装各种环境（jdk，nginx，mysql，docker等常用组件），甚至是在离线的环境下需要为多台服务器安装 jpom 插件端。\n\n考虑到上述情况新版本中添加了文件管理来实现统一安装比较常用且固定文件，然后可以将文件以 ssh 方式、节点方式上传到服务器中并且可以在上传前和上传后执行特定的命令来实现文件操作（安装 、解压、配置环境变量等）\n\n> 温馨提醒：构建产物支持同步到文件管理中心奥\n\n\n\n\n\n\n\n> 悄悄告诉您：文件管理中心的文件支持分片下载（可以用于公司服务器内部下载共享文件）\n\n\n# oauth2 📇\n\n为了能和公司的其他系统账号打通，jpom 在 2.10.38 版本以后支持了使用第三方系统的 oauth2 认证方式来登录账号，这样很方便实现管理多个系统账号统一管理修改用户密码等\n\n目前已经支持的第三方系统有：gitee、maxkey、github （更多平台系统等您来反馈）\n\n开启方式：\n\n系统管理 -> 配置管理 -> 认证配置\n\n\n\n\n\n\n\n> 注意：如果使用了 oauth2 方式登录账号配置的 mfa(两步验证) 在登录的时候不会生效奥\n\n\n# 感谢 🤝\n\n感谢 maxkey 作者：石鸣 贡献该功能\n\n * maxkey 仓库：https://gitee.com/dromara/maxkey\n * 作者主页：https://gitee.com/maxkeytop_admin\n\n\n# 新版本部分功能截图\n\n\n\n\n\n\n# jpom 链接 🔗\n\n官网：https://jpom.top/\n\ngitee: https://gitee.com/dromara/jpom\n\ngithub: https://github.com/dromara/jpom\n\n常见问题：https://jpom.top/pages/fqa/\n\n加入社群：https://jpom.top/pages/praise/join/\n\n赞赏&支持：https://jpom.top/pages/praise/",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"带您了解能替代 Jenkins 的国产【项目运维】开源软件",frontmatter:{title:"带您了解能替代 Jenkins 的国产【项目运维】开源软件",date:"2023-03-20T13:31:38.000Z",permalink:"/pages/7f1127/",categories:["docs","推广文章"],tags:[null],readingShow:"top"},regularPath:"/%E6%8E%A8%E5%B9%BF%E6%96%87%E7%AB%A0/Jpom%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86%E4%BB%8B%E7%BB%8D.html",relativePath:"推广文章/Jpom资产管理介绍.md",key:"v-331a314c",path:"/pages/7f1127/",headers:[{level:2,title:"Jpom 介绍 📢",slug:"jpom-介绍-📢",normalizedTitle:"jpom 介绍 📢",charIndex:2},{level:3,title:"Jpom 的主要功能",slug:"jpom-的主要功能",normalizedTitle:"jpom 的主要功能",charIndex:234},{level:2,title:"2.10.x 新特性 🧩",slug:"_2-10-x-新特性-🧩",normalizedTitle:"2.10.x 新特性 🧩",charIndex:377},{level:3,title:"致谢 🤝",slug:"致谢-🤝",normalizedTitle:"致谢 🤝",charIndex:972},{level:2,title:"整体预览图 💻",slug:"整体预览图-💻",normalizedTitle:"整体预览图 💻",charIndex:1097},{level:3,title:"总结 🗒",slug:"总结-🗒",normalizedTitle:"总结 🗒",charIndex:1134},{level:3,title:"文件管理 📦",slug:"文件管理-📦",normalizedTitle:"文件管理 📦",charIndex:1313},{level:2,title:"资产管理 ⚙",slug:"资产管理-⚙",normalizedTitle:"资产管理 ⚙",charIndex:1455},{level:3,title:"机器资产详情",slug:"机器资产详情",normalizedTitle:"机器资产详情",charIndex:1734},{level:3,title:"SSH 资产列表",slug:"ssh-资产列表",normalizedTitle:"ssh 资产列表",charIndex:1844},{level:3,title:"Docker 资产列表",slug:"docker-资产列表",normalizedTitle:"docker 资产列表",charIndex:1905},{level:2,title:"数据库使用 mysql 💾",slug:"数据库使用-mysql-💾",normalizedTitle:"数据库使用 mysql 💾",charIndex:1964},{level:2,title:"赞赏支持 ❤️",slug:"赞赏支持-❤️",normalizedTitle:"赞赏支持 ❤️",charIndex:2724},{level:2,title:"未来的路 🚀",slug:"未来的路-🚀",normalizedTitle:"未来的路 🚀",charIndex:2864},{level:2,title:"Jpom 链接 ✈",slug:"jpom-链接-✈",normalizedTitle:"jpom 链接 ✈",charIndex:3096}],headersStr:"Jpom 介绍 📢 Jpom 的主要功能 2.10.x 新特性 🧩 致谢 🤝 整体预览图 💻 总结 🗒 文件管理 📦 资产管理 ⚙ 机器资产详情 SSH 资产列表 Docker 资产列表 数据库使用 mysql 💾 赞赏支持 ❤️ 未来的路 🚀 Jpom 链接 ✈",content:"# Jpom 介绍 📢\n\nJpom 是一款简而轻的低侵入式在线构建、自动部署、日常运维、项目运维监控软件。\n\nJpom 从 2018 年初正式开源至今已经迭代了 120个以上小版本，2 个大版本，9 个次要版本。\n\n已经在中小团队中得到了可行性的验证，目前有许多长期并稳定使用 Jpom 来运维项目的公司以及团队了，充分证明 Jpom 是能给用户带来便利和可靠性。\n\n📢 业界内已经有使用 Jpom 来代替 Jenkins 的传言了 🤩\n\n\n\n\n\n\n\n\n\n\n# Jpom 的主要功能\n\n * 资产管理 + 工作空间管理\n * 在线 SSH 终端、SFTP 管理\n * Docker + Swarm集群管理\n * 多种形式的脚本管理\n * 代码仓库 + 在线构建管理\n * 文件中心管理\n * 方便快捷的在线升级\n\n更多实用的功能等您来挖掘\n\n\n# 2.10.x 新特性 🧩\n\nJpom 2.10.x 版本主要是解决了遗留问题、优化部分不易用的功能。\n\n2.10.x 从2022年12月19日发布第一个版本（2.10.1） 到现在已经发布 2.10.35 累计发布了 35 个小版本。\n\n我们一起回顾一下在这 35 个小版本中主要更新了啥？\n\n 1.  优化了项目日志文件配置（支持自定义配置日志级别）；\n 2.  项目运行的目录结构更标准化、配置属性标准化；\n 3.  2.10.9 数据库开始支持了 mysql （并且能将 h2 数据库内容迁移到 mysql）；\n 4.  2.10.10 上传文件支持分片上传，再也不用担心大文件上传耗内存啦；\n 5.  构建产物模糊匹配规则优化支持更多方式的规则；\n 6.  新增资产管理：机器管理、SSH 管理、Docker 管理；\n 7.  支持更详细的机器、SSH 基础信息监控；\n 8.  令牌导入仓库支持了：gitea、gogs；\n 9.  新增文件管理中心来统一存储、发布文件；\n 10. DSL 项目支持解析多 PID、多端口；\n 11. 整合了菜单名（合并优化菜单、节点管理更名为逻辑节点）；\n 12. 系统默认模板、docker 模板支持自定义配置；\n 13. 用户自定义工作空间排序、备注别名；\n 14. 更多优化、小变动更新期待您来发现。\n\n完整的更新日志：更新日志\n\n\n# 致谢 🤝\n\n在 2.10.x 版本中我们要特别感谢几个大佬积极的为 Jpom 反馈问题，提供问题解决思路\n\n * @张飞鸿\n * @酱总\n * @loyal\n * @大灰灰大\n * @爱琳琳真是太好了\n * 更多的群友\n\n排名不分先后顺序\n\n\n# 整体预览图 💻\n\n我们先来几张新版本的整体菜单截图\n\n\n\n\n\n\n\n\n# 总结 🗒\n\n通过截图可以看出：有取消的、新增、更名等更新\n\n取消\n\n 1. 节点管理：和节点&项目管理合并\n 2. 分发管理：和节点&项目管理合并\n\n新增\n\n 1. 文件管理\n 2. 其他管理\n 3. 资产管理\n\n更名\n\n 1. 系统管理（服务端）变更为：服务端配置\n 2. 系统管理（插件端）变更为：插件端配置\n 3. 节点管理变更为：逻辑节点\n\n\n# 文件管理 📦\n\n新版本中新了文件管理，可以使用文件管理快捷将文件分发到目标机器并执行相应的脚本。 可以实现服务器基础环境的一键安装，统一执行命令脚本。\n\n🎁 您想为离线服务器统一安装 jdk、nginx、php、docker 等那么 Jpom 的文件管理功能是不错的选择\n\n\n# 资产管理 ⚙\n\n新版本中的资产管理主要是解决了同一个资产（物理节点、SSH、docker）跨工作空间不方便管理的问题。\n\n旧版本： 需要在工作空间下创建资产（物理节点、SSH、docker），但是创建的资产只能在当前工作空间中使用，如果想在其他工作空间中使用则需要在另一个工作空间中重复操作创建资产的步骤 因此在资产较多的情况下就不方便管理，并且在工作空间划分较细的情况下也无法灵活管理资产。\n\n新版本： 同一个资产只需要在资产管理中创建一次即可完成快捷分配到多个工作空间，以及查看资产已经被分配到哪个工作空间中，新版本也对资产新增了基础状态监控。\n\n\n# 机器资产详情\n\n新版本中我们对机器资产做了更准确的服务状态监控\n\n服务器的 CPU、内存、硬盘、网络流量、文件系统、网卡都支持实时查看\n\n\n\n\n\n**注意：**添加节点已经变更为添加机器啦（资产管理中添加机器）\n\n\n# SSH 资产列表\n\nSSH 这里在新版本中我们支持对 SSH 的连接状态和 SSH 服务器的基础信息监控\n\n\n\n\n\n\n# Docker 资产列表\n\n新版本中使用 docker 资产来统一管理 docker + swarm 集群\n\n\n\n\n# 数据库使用 mysql 💾\n\n在之前版本中 Jpom 一直是使用 h2 数据库来存储数据，部分用户提出期望使用 mysql 数据库来存储这样可以更好地保证数据稳定。\n\n在新版本中我们支持了使用 mysql 数据库存储\n\n配置方式如下：\n\n修改服务端配置文件conf/application.yml：\n\njpom:\n  db:\n    # 修改 jpom.db.mode 为 MYSQL，如果配置则新增配置即可\n    mode: MYSQL\n    # 修改 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1:3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false)\n    url: jdbc:mysql://127.0.0.1:3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false\n    # 修改 jpom.db.user-name 为对应 mysql 账户\n    user-name: jpom\n    # 修改 jpom.db.user-pwd 为对应 mysql 密码\n    user-pwd: dbpwd\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n如果您需要迁移之前 h2 数据库中的数据到 mysql（需要先将 mysql 的连接信息配置好后才能迁移）\n\nbash ./bin/Server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n完整的操作说明：https://jpom.top/pages/4cfb46/\n\n\n# 赞赏支持 ❤️\n\n随着用户增加，需要协助解决的问题也多种多样，用户环境、业务场景也是多变的， 为了能给用户提供 更优质、更准确 的 疑难问题 解答我们推出赞赏咨询服务。\n\n您可以到 https://jpom.top/pages/praise/ 选择合适您的赞赏服务方案。\n\n\n# 未来的路 🚀\n\n我们会长期坚持去完善这个项目，希望可以让 Jpom 帮助到更多中小团队的开发者、运维，服务于更多公司。\n\nTODO 我们即将支持的功能列表：\n\n * 插件端通讯支持推送方式\n * 用户体系支持接入第三方系统\n * 构建支持流水线模式\n * 其他功能细节优化\n * 更多需求您可以来提\n\n上述功能敬请期待奥\n\n如果您还未加入我们社群您可以点击下面连接查看加入社群方式：https://jpom.top/pages/praise/join/\n\n\n# Jpom 链接 ✈\n\n官网：https://jpom.top/\n\nGitee: https://gitee.com/dromara/Jpom\n\nGithub: https://github.com/dromara/Jpom\n\n常见问题：https://jpom.top/pages/FQA/\n\n加入社群：https://jpom.top/pages/praise/join/\n\n赞赏&支持：https://jpom.top/pages/praise/",normalizedContent:"# jpom 介绍 📢\n\njpom 是一款简而轻的低侵入式在线构建、自动部署、日常运维、项目运维监控软件。\n\njpom 从 2018 年初正式开源至今已经迭代了 120个以上小版本，2 个大版本，9 个次要版本。\n\n已经在中小团队中得到了可行性的验证，目前有许多长期并稳定使用 jpom 来运维项目的公司以及团队了，充分证明 jpom 是能给用户带来便利和可靠性。\n\n📢 业界内已经有使用 jpom 来代替 jenkins 的传言了 🤩\n\n\n\n\n\n\n\n\n\n\n# jpom 的主要功能\n\n * 资产管理 + 工作空间管理\n * 在线 ssh 终端、sftp 管理\n * docker + swarm集群管理\n * 多种形式的脚本管理\n * 代码仓库 + 在线构建管理\n * 文件中心管理\n * 方便快捷的在线升级\n\n更多实用的功能等您来挖掘\n\n\n# 2.10.x 新特性 🧩\n\njpom 2.10.x 版本主要是解决了遗留问题、优化部分不易用的功能。\n\n2.10.x 从2022年12月19日发布第一个版本（2.10.1） 到现在已经发布 2.10.35 累计发布了 35 个小版本。\n\n我们一起回顾一下在这 35 个小版本中主要更新了啥？\n\n 1.  优化了项目日志文件配置（支持自定义配置日志级别）；\n 2.  项目运行的目录结构更标准化、配置属性标准化；\n 3.  2.10.9 数据库开始支持了 mysql （并且能将 h2 数据库内容迁移到 mysql）；\n 4.  2.10.10 上传文件支持分片上传，再也不用担心大文件上传耗内存啦；\n 5.  构建产物模糊匹配规则优化支持更多方式的规则；\n 6.  新增资产管理：机器管理、ssh 管理、docker 管理；\n 7.  支持更详细的机器、ssh 基础信息监控；\n 8.  令牌导入仓库支持了：gitea、gogs；\n 9.  新增文件管理中心来统一存储、发布文件；\n 10. dsl 项目支持解析多 pid、多端口；\n 11. 整合了菜单名（合并优化菜单、节点管理更名为逻辑节点）；\n 12. 系统默认模板、docker 模板支持自定义配置；\n 13. 用户自定义工作空间排序、备注别名；\n 14. 更多优化、小变动更新期待您来发现。\n\n完整的更新日志：更新日志\n\n\n# 致谢 🤝\n\n在 2.10.x 版本中我们要特别感谢几个大佬积极的为 jpom 反馈问题，提供问题解决思路\n\n * @张飞鸿\n * @酱总\n * @loyal\n * @大灰灰大\n * @爱琳琳真是太好了\n * 更多的群友\n\n排名不分先后顺序\n\n\n# 整体预览图 💻\n\n我们先来几张新版本的整体菜单截图\n\n\n\n\n\n\n\n\n# 总结 🗒\n\n通过截图可以看出：有取消的、新增、更名等更新\n\n取消\n\n 1. 节点管理：和节点&项目管理合并\n 2. 分发管理：和节点&项目管理合并\n\n新增\n\n 1. 文件管理\n 2. 其他管理\n 3. 资产管理\n\n更名\n\n 1. 系统管理（服务端）变更为：服务端配置\n 2. 系统管理（插件端）变更为：插件端配置\n 3. 节点管理变更为：逻辑节点\n\n\n# 文件管理 📦\n\n新版本中新了文件管理，可以使用文件管理快捷将文件分发到目标机器并执行相应的脚本。 可以实现服务器基础环境的一键安装，统一执行命令脚本。\n\n🎁 您想为离线服务器统一安装 jdk、nginx、php、docker 等那么 jpom 的文件管理功能是不错的选择\n\n\n# 资产管理 ⚙\n\n新版本中的资产管理主要是解决了同一个资产（物理节点、ssh、docker）跨工作空间不方便管理的问题。\n\n旧版本： 需要在工作空间下创建资产（物理节点、ssh、docker），但是创建的资产只能在当前工作空间中使用，如果想在其他工作空间中使用则需要在另一个工作空间中重复操作创建资产的步骤 因此在资产较多的情况下就不方便管理，并且在工作空间划分较细的情况下也无法灵活管理资产。\n\n新版本： 同一个资产只需要在资产管理中创建一次即可完成快捷分配到多个工作空间，以及查看资产已经被分配到哪个工作空间中，新版本也对资产新增了基础状态监控。\n\n\n# 机器资产详情\n\n新版本中我们对机器资产做了更准确的服务状态监控\n\n服务器的 cpu、内存、硬盘、网络流量、文件系统、网卡都支持实时查看\n\n\n\n\n\n**注意：**添加节点已经变更为添加机器啦（资产管理中添加机器）\n\n\n# ssh 资产列表\n\nssh 这里在新版本中我们支持对 ssh 的连接状态和 ssh 服务器的基础信息监控\n\n\n\n\n\n\n# docker 资产列表\n\n新版本中使用 docker 资产来统一管理 docker + swarm 集群\n\n\n\n\n# 数据库使用 mysql 💾\n\n在之前版本中 jpom 一直是使用 h2 数据库来存储数据，部分用户提出期望使用 mysql 数据库来存储这样可以更好地保证数据稳定。\n\n在新版本中我们支持了使用 mysql 数据库存储\n\n配置方式如下：\n\n修改服务端配置文件conf/application.yml：\n\njpom:\n  db:\n    # 修改 jpom.db.mode 为 mysql，如果配置则新增配置即可\n    mode: mysql\n    # 修改 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1:3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false)\n    url: jdbc:mysql://127.0.0.1:3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false\n    # 修改 jpom.db.user-name 为对应 mysql 账户\n    user-name: jpom\n    # 修改 jpom.db.user-pwd 为对应 mysql 密码\n    user-pwd: dbpwd\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n如果您需要迁移之前 h2 数据库中的数据到 mysql（需要先将 mysql 的连接信息配置好后才能迁移）\n\nbash ./bin/server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n完整的操作说明：https://jpom.top/pages/4cfb46/\n\n\n# 赞赏支持 ❤️\n\n随着用户增加，需要协助解决的问题也多种多样，用户环境、业务场景也是多变的， 为了能给用户提供 更优质、更准确 的 疑难问题 解答我们推出赞赏咨询服务。\n\n您可以到 https://jpom.top/pages/praise/ 选择合适您的赞赏服务方案。\n\n\n# 未来的路 🚀\n\n我们会长期坚持去完善这个项目，希望可以让 jpom 帮助到更多中小团队的开发者、运维，服务于更多公司。\n\ntodo 我们即将支持的功能列表：\n\n * 插件端通讯支持推送方式\n * 用户体系支持接入第三方系统\n * 构建支持流水线模式\n * 其他功能细节优化\n * 更多需求您可以来提\n\n上述功能敬请期待奥\n\n如果您还未加入我们社群您可以点击下面连接查看加入社群方式：https://jpom.top/pages/praise/join/\n\n\n# jpom 链接 ✈\n\n官网：https://jpom.top/\n\ngitee: https://gitee.com/dromara/jpom\n\ngithub: https://github.com/dromara/jpom\n\n常见问题：https://jpom.top/pages/fqa/\n\n加入社群：https://jpom.top/pages/praise/join/\n\n赞赏&支持：https://jpom.top/pages/praise/",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"个人赞赏",frontmatter:{title:"个人赞赏",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/praise/",tags:["赞赏"],categories:["docs","赞赏"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/00.%E4%B8%AA%E4%BA%BA%E8%B5%9E%E8%B5%8F.html",relativePath:"支持/00.赞赏支持/00.个人赞赏.md",key:"v-0ba5ddf3",path:"/pages/praise/",headers:[{level:2,title:"用爱发电",slug:"用爱发电",normalizedTitle:"用爱发电",charIndex:2},{level:2,title:"直接赞赏",slug:"直接赞赏",normalizedTitle:"直接赞赏",charIndex:541},{level:2,title:"赞赏途径",slug:"赞赏途径",normalizedTitle:"赞赏途径",charIndex:1124},{level:2,title:"赞赏后如何对接？",slug:"赞赏后如何对接",normalizedTitle:"赞赏后如何对接？",charIndex:1174},{level:2,title:"购买周边",slug:"购买周边",normalizedTitle:"购买周边",charIndex:390},{level:2,title:"加入社群",slug:"加入社群",normalizedTitle:"加入社群",charIndex:1161}],headersStr:"用爱发电 直接赞赏 赞赏途径 赞赏后如何对接？ 购买周边 加入社群",content:"# 用爱发电\n\nJpom 从 2018 年正式开源至今， Jpom 已经在中小团队中得到了可行性的验证，目前正在长期使用 Jpom 的用户 1k+，充分证明 Jpom 是能给用户带来便利和可靠性。\n\n这背后无疑是大量业余时间成本的付出。\n\n我们会长期坚持去完善这个项目，希望可以让 Jpom 帮助到更多的中小团队的开发者、运维，服务于更多公司\n\n如果您正在使用这个项目并感觉良好，或是想支持我们继续开发，您可以通过如下方式支持我们：\n\n 1. Star 并向您的朋友推荐或分享 Jpom🚀\n 2. 将当前域名加入广告拦截器的白名单\n    1. 轻轻点击一次文档中最上面的 AD😉\n 3. 帮助我们完善文档\n 4. 积极参与我们的 beta 版本计划\n 5. 选择适合您的服务方式\n    1. 一次赞赏：通过以下二维码进行一次性捐款赞助，请作者喝一杯咖啡☕️\n    2. 购买周边：购买支持我们这样您既获得了一份小商品我们也获得了您购买商品的利润\n    3. 付费社群：付费加入我们的技术交流群优先解答您所有疑问\n    4. 企业服务：一对一的技术支持和功能定制\n    5. 广告投放：在 Jpom 官网首页和文档首页展示您的公司 LOGO\n\n非常感谢！❤️\n\n\n# 直接赞赏\n\n随着用户增加，需要协助解决的问题也多种多样，为了能给用户提供 更优质、更准确 的 疑难问题 解答我们推出赞赏咨询\n\n赞赏金额   时长    备注说明\n任意金额   -     您将获得赞助者列表的永久留名。\n50     三个月   您将获得一个名额进入优先对接沟通群\n100    一个月   您将获得一对一的咨询\n200    一个月   您将获得紧急需求优先开发，一次远程协助\n更多金额   -     您将获得定制解决方案\n任意金额   -     上述金额仅是推荐的最低金额您可以根据您自身情况赞赏任意金额，感谢您的支持\n\n> 注意2：二开问题不再个人赞赏支持范畴内，如需咨询二开问题或者二开方案请选择企业服务\n\n请理性赞赏、理性选择赞赏咨询。\n\n 1. 如果您期望赞赏后 100% 解决您的问题，那请您不要赞赏因为一些问题不可能 100% 解决。\n 2. 良好地沟通才能保证双方再同一频道，才有助于解决问题。\n 3. 请您一定要准确的描述问题，如果不能准备描述问题我们可能将不会协助（服务）您\n\n注意\n\n上述赞赏方案仅适合于个人场景，如果需要企业服务请联系我们沟通技术服务方案\n\n----------------------------------------\n\n如果想获得 Jpom 首页+文档页面所有广告栏位请加联系方式询问。\n\n\n# 赞赏途径\n\n 1. 微信二维码赞赏\n 2. 支付宝转账\n 3. 其他方式请加入社群咨询\n\n\n\n\n# 赞赏后如何对接？\n\n扫码二维码赞赏后添加社群联系群主，他会与您沟通后续事宜。\n\n如果添加社群二维码失效，可以发送邮件联系：bwcx_jzy@dromara.org\n\n\n# 购买周边\n\n如果您觉得直接赞赏无法获得一个纪念或者物品，您可以选择购买我们周边商品来支持我们这样您既获得了一份小商品我们也获得了您购买商品的利润\n\n欢迎微信扫码进入店铺选购（微信小店）\n\n\n\n\n# 加入社群\n\n快扫描下方微信群二维码和我们一起交流讨论吧！\n\n关于社群详细说明：加入社群\n\n 1. 如果您未赞赏添加小助手请备注：Jpom 社群\n 2. 如果您已经赞赏添加小助手请备注：Jpom 赞赏对接\n 3. 如果您想进入付费社群添加小助手请备注：Jpom 付费社群（付费社群请按照流程操作：加入社群）\n\n> 请注意一定备注来意，否则可能不通过好友以及通过后没有后续\n\n",normalizedContent:"# 用爱发电\n\njpom 从 2018 年正式开源至今， jpom 已经在中小团队中得到了可行性的验证，目前正在长期使用 jpom 的用户 1k+，充分证明 jpom 是能给用户带来便利和可靠性。\n\n这背后无疑是大量业余时间成本的付出。\n\n我们会长期坚持去完善这个项目，希望可以让 jpom 帮助到更多的中小团队的开发者、运维，服务于更多公司\n\n如果您正在使用这个项目并感觉良好，或是想支持我们继续开发，您可以通过如下方式支持我们：\n\n 1. star 并向您的朋友推荐或分享 jpom🚀\n 2. 将当前域名加入广告拦截器的白名单\n    1. 轻轻点击一次文档中最上面的 ad😉\n 3. 帮助我们完善文档\n 4. 积极参与我们的 beta 版本计划\n 5. 选择适合您的服务方式\n    1. 一次赞赏：通过以下二维码进行一次性捐款赞助，请作者喝一杯咖啡☕️\n    2. 购买周边：购买支持我们这样您既获得了一份小商品我们也获得了您购买商品的利润\n    3. 付费社群：付费加入我们的技术交流群优先解答您所有疑问\n    4. 企业服务：一对一的技术支持和功能定制\n    5. 广告投放：在 jpom 官网首页和文档首页展示您的公司 logo\n\n非常感谢！❤️\n\n\n# 直接赞赏\n\n随着用户增加，需要协助解决的问题也多种多样，为了能给用户提供 更优质、更准确 的 疑难问题 解答我们推出赞赏咨询\n\n赞赏金额   时长    备注说明\n任意金额   -     您将获得赞助者列表的永久留名。\n50     三个月   您将获得一个名额进入优先对接沟通群\n100    一个月   您将获得一对一的咨询\n200    一个月   您将获得紧急需求优先开发，一次远程协助\n更多金额   -     您将获得定制解决方案\n任意金额   -     上述金额仅是推荐的最低金额您可以根据您自身情况赞赏任意金额，感谢您的支持\n\n> 注意2：二开问题不再个人赞赏支持范畴内，如需咨询二开问题或者二开方案请选择企业服务\n\n请理性赞赏、理性选择赞赏咨询。\n\n 1. 如果您期望赞赏后 100% 解决您的问题，那请您不要赞赏因为一些问题不可能 100% 解决。\n 2. 良好地沟通才能保证双方再同一频道，才有助于解决问题。\n 3. 请您一定要准确的描述问题，如果不能准备描述问题我们可能将不会协助（服务）您\n\n注意\n\n上述赞赏方案仅适合于个人场景，如果需要企业服务请联系我们沟通技术服务方案\n\n----------------------------------------\n\n如果想获得 jpom 首页+文档页面所有广告栏位请加联系方式询问。\n\n\n# 赞赏途径\n\n 1. 微信二维码赞赏\n 2. 支付宝转账\n 3. 其他方式请加入社群咨询\n\n\n\n\n# 赞赏后如何对接？\n\n扫码二维码赞赏后添加社群联系群主，他会与您沟通后续事宜。\n\n如果添加社群二维码失效，可以发送邮件联系：bwcx_jzy@dromara.org\n\n\n# 购买周边\n\n如果您觉得直接赞赏无法获得一个纪念或者物品，您可以选择购买我们周边商品来支持我们这样您既获得了一份小商品我们也获得了您购买商品的利润\n\n欢迎微信扫码进入店铺选购（微信小店）\n\n\n\n\n# 加入社群\n\n快扫描下方微信群二维码和我们一起交流讨论吧！\n\n关于社群详细说明：加入社群\n\n 1. 如果您未赞赏添加小助手请备注：jpom 社群\n 2. 如果您已经赞赏添加小助手请备注：jpom 赞赏对接\n 3. 如果您想进入付费社群添加小助手请备注：jpom 付费社群（付费社群请按照流程操作：加入社群）\n\n> 请注意一定备注来意，否则可能不通过好友以及通过后没有后续\n\n",charsets:{cjk:!0},lastUpdated:"2024/04/26, 07:02:37",lastUpdatedTimestamp:1714114957e3},{title:"成为赞助商",frontmatter:{title:"成为赞助商",date:"2023-03-06T17:00:58.000Z",permalink:"/pages/589c8e/",categories:["docs","支持"],tags:[null],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/04.%E6%88%90%E4%B8%BA%E8%B5%9E%E5%8A%A9%E5%95%86.html",relativePath:"支持/00.赞赏支持/04.成为赞助商.md",key:"v-87cbab66",path:"/pages/589c8e/",headers:[{level:2,title:"用爱发电",slug:"用爱发电",normalizedTitle:"用爱发电",charIndex:2},{level:2,title:"赞助商广告",slug:"赞助商广告",normalizedTitle:"赞助商广告",charIndex:175}],headersStr:"用爱发电 赞助商广告",content:"# 用爱发电\n\nJpom 从 2018 年正式开源至今， Jpom 已经在中小团队中得到了可行性的验证，目前正在长期使用 Jpom 的用户 1k+，充分证明 Jpom 是能给用户带来便利和可靠性。\n\n这背后无疑是大量业余时间成本的付出。\n\n我会长期坚持去完善这个项目，希望可以让 Jpom 帮助到更多的中小团队的开发者、运维，服务于更多公司\n\n\n# 赞助商广告\n\nJpom是开源的项目，但我们每年都在支付第三方域名，云服务器，CDN流量费，推广开发费用。为了项目能够健康长久的发展下去，我们在Jpom官网提供多个赞助商广告位。\n\n如您在Jpom官网投放广告，可获得首页以及文档所有页面的展示。\n\n合作方式：\n\n * 合作费用：请加联系方式询问\n * 电子邮箱：bwcx_jzy@dromara.org\n\n准备材料：\n\n * 首页特别赞助 LOGO 图：大小控制在 100k 以内\n * 首页特别赞助描述文字：一段不超过 30 字的简单介绍\n * 文档页 banner 图片格式：440px X 120px（3~4:1），支持gif动图，大小控制在500KB以内\n * 链接URL格式：https://xxx.com",normalizedContent:"# 用爱发电\n\njpom 从 2018 年正式开源至今， jpom 已经在中小团队中得到了可行性的验证，目前正在长期使用 jpom 的用户 1k+，充分证明 jpom 是能给用户带来便利和可靠性。\n\n这背后无疑是大量业余时间成本的付出。\n\n我会长期坚持去完善这个项目，希望可以让 jpom 帮助到更多的中小团队的开发者、运维，服务于更多公司\n\n\n# 赞助商广告\n\njpom是开源的项目，但我们每年都在支付第三方域名，云服务器，cdn流量费，推广开发费用。为了项目能够健康长久的发展下去，我们在jpom官网提供多个赞助商广告位。\n\n如您在jpom官网投放广告，可获得首页以及文档所有页面的展示。\n\n合作方式：\n\n * 合作费用：请加联系方式询问\n * 电子邮箱：bwcx_jzy@dromara.org\n\n准备材料：\n\n * 首页特别赞助 logo 图：大小控制在 100k 以内\n * 首页特别赞助描述文字：一段不超过 30 字的简单介绍\n * 文档页 banner 图片格式：440px x 120px（3~4:1），支持gif动图，大小控制在500kb以内\n * 链接url格式：https://xxx.com",charsets:{cjk:!0},lastUpdated:"2023/12/22, 04:33:46",lastUpdatedTimestamp:1703219626e3},{title:"再见 jenkins，中小公司的福音，运维，持续集成，监控一站式平台",frontmatter:{title:"再见 jenkins，中小公司的福音，运维，持续集成，监控一站式平台",date:"2022-07-27T15:44:42.000Z",permalink:"/pages/dfeb97/",categories:["推广文章"],tags:["推广文章"],readingShow:"top"},regularPath:"/%E6%8E%A8%E5%B9%BF%E6%96%87%E7%AB%A0/Jpom%E8%BD%AF%E6%96%870727.html",relativePath:"推广文章/Jpom软文0727.md",key:"v-69ac7bd6",path:"/pages/dfeb97/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"痛点",slug:"痛点",normalizedTitle:"痛点",charIndex:115},{level:2,title:"了解到 Jpom",slug:"了解到-jpom",normalizedTitle:"了解到 jpom",charIndex:436},{level:3,title:"项目管理",slug:"项目管理",normalizedTitle:"项目管理",charIndex:495},{level:3,title:"在线构建",slug:"在线构建",normalizedTitle:"在线构建",charIndex:583},{level:3,title:"在线终端",slug:"在线终端",normalizedTitle:"在线终端",charIndex:591},{level:3,title:"项目监控",slug:"项目监控",normalizedTitle:"项目监控",charIndex:599},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:1066},{level:2,title:"Jpom 链接",slug:"jpom-链接",normalizedTitle:"jpom 链接",charIndex:1342}],headersStr:"前言 痛点 了解到 Jpom 项目管理 在线构建 在线终端 项目监控 总结 Jpom 链接",content:"# 前言\n\n刚毕业入职一家 创业公司，我有幸成为公司第一位员工。在公司日常开发模式是老板说出他的想法我们几位同事转为需求进行开发。\n\n在这家公司我们开发不仅要 coding 还要 帮老板分析需求 还要 负责项目部署和运维\n\n\n# 痛点\n\n日常开发完成后到部署环节了，刚开始我们是这样的：\n\n * 后端：人员登录服务器去上传文件执行重启操作\n * 前端：人员登录 SFTP部署项目\n\n这样传统的部署方式我们用了一年后，后面我了解到 jenkins 可以实现项目部署管理。 于是我抽时间安装了几番折腾了下，最后还是放弃了。\n\n放弃的主要原因：公司 服务器资源有限、jenkins 配置太多 、短时间内没有搞明白。\n\n----------------------------------------\n\n随着业务的增加、人员的变动使用这样传统的方式的弊端越来越明显了，我们遇到过如下问题：\n\n * 服务器数量增加，部署流程和操作也逐步增加\n * 人员离职后的账号密码管理\n\n\n# 了解到 Jpom\n\n一次闲聊中有朋友推荐 Jpom 让我试一试。\n\n我整体看了一下 Jpom 的功能,里面主要是做运维项目管理的一个系统。\n\n在我调研 Jpom 后部署到公司环境中主要解决我们目前后端、前端部署项目人工繁琐到流程。\n\n我使用了 Jpom 中的如下功能：\n\n * 项目管理\n * 在线构建\n * 在线终端\n * 项目监控\n\n\n# 项目管理\n\nJpom 中的项目管理功能可以在线查看：项目状态、进程、端口号，管理项目的文件：上传文件、删除文件、在线编辑文件等，这样让前端部署就不需要登录 ftp 啦，直接浏览选择上传就搞定\n\n\n\n\n\n\n\n\n# 在线构建\n\n切换上 Jpom 系统一段时候后，我还发现 Jpom 里面在线构建功能非常 nice ，这样如果需要发布项目直接点击一个按钮就可以搞定。\n\n\n\n\n\n\n# 在线终端\n\n因为开发有时候需要登录服务器去修改配置，调试软件等操作。但是又不想直接把服务器密码告诉给开发，发现 Jpom 中有在线终端功能，这样将 SSH 信息授权给开发，开发就可以直接在 Jpom 系统登录服务器等终端去操作\n\n\n\n\n\n\n# 项目监控\n\n有一天我们项目突然挂了，我们开发并不知道，都等到公司其他同时发现才来排查。排查发现是因为服务器中项目挂了\n\n发现 Jpom 项目管理系统中还包含项目监控功能，在监控到项目进程宕机后可以触发邮件报警，钉钉消息报警。\n\n为了避免再次出现类似问题，我立马配置上试了试\n\n\n\n\n\n\n\n\n# 总结\n\n这样我们就使用 Jpom 完美解决我们团队中的项目部署，服务器管理。\n\n我在使用 Jpom 这段时间还发现 Jpom 里面还有好多实用的功能：\n\n * 为了账号安全问题，可以开启 MFA 两步验证\n * 项目存在多个机器负载情况可以使用节点分发来统一管理\n * 可以在系统中预设多种脚本来实现更方便的管理服务器\n * 直接在 Jpom 中编辑 nginx 配置文件\n * 管理 Docker 容器的 Docker UI\n\n整体来说 Jpom 目前完全满足我们的各种服务器管理和部署需求\n\n在这里我强烈安利给公司没有运维的那些开发团队。\n\n\n# Jpom 链接\n\n官网：https://jpom.top/\n\nGitee: https://gitee.com/dromara/Jpom\n\nGithub: https://github.com/dromara/Jpom\n\n常见问题：https://jpom.top/pages/FQA/",normalizedContent:"# 前言\n\n刚毕业入职一家 创业公司，我有幸成为公司第一位员工。在公司日常开发模式是老板说出他的想法我们几位同事转为需求进行开发。\n\n在这家公司我们开发不仅要 coding 还要 帮老板分析需求 还要 负责项目部署和运维\n\n\n# 痛点\n\n日常开发完成后到部署环节了，刚开始我们是这样的：\n\n * 后端：人员登录服务器去上传文件执行重启操作\n * 前端：人员登录 sftp部署项目\n\n这样传统的部署方式我们用了一年后，后面我了解到 jenkins 可以实现项目部署管理。 于是我抽时间安装了几番折腾了下，最后还是放弃了。\n\n放弃的主要原因：公司 服务器资源有限、jenkins 配置太多 、短时间内没有搞明白。\n\n----------------------------------------\n\n随着业务的增加、人员的变动使用这样传统的方式的弊端越来越明显了，我们遇到过如下问题：\n\n * 服务器数量增加，部署流程和操作也逐步增加\n * 人员离职后的账号密码管理\n\n\n# 了解到 jpom\n\n一次闲聊中有朋友推荐 jpom 让我试一试。\n\n我整体看了一下 jpom 的功能,里面主要是做运维项目管理的一个系统。\n\n在我调研 jpom 后部署到公司环境中主要解决我们目前后端、前端部署项目人工繁琐到流程。\n\n我使用了 jpom 中的如下功能：\n\n * 项目管理\n * 在线构建\n * 在线终端\n * 项目监控\n\n\n# 项目管理\n\njpom 中的项目管理功能可以在线查看：项目状态、进程、端口号，管理项目的文件：上传文件、删除文件、在线编辑文件等，这样让前端部署就不需要登录 ftp 啦，直接浏览选择上传就搞定\n\n\n\n\n\n\n\n\n# 在线构建\n\n切换上 jpom 系统一段时候后，我还发现 jpom 里面在线构建功能非常 nice ，这样如果需要发布项目直接点击一个按钮就可以搞定。\n\n\n\n\n\n\n# 在线终端\n\n因为开发有时候需要登录服务器去修改配置，调试软件等操作。但是又不想直接把服务器密码告诉给开发，发现 jpom 中有在线终端功能，这样将 ssh 信息授权给开发，开发就可以直接在 jpom 系统登录服务器等终端去操作\n\n\n\n\n\n\n# 项目监控\n\n有一天我们项目突然挂了，我们开发并不知道，都等到公司其他同时发现才来排查。排查发现是因为服务器中项目挂了\n\n发现 jpom 项目管理系统中还包含项目监控功能，在监控到项目进程宕机后可以触发邮件报警，钉钉消息报警。\n\n为了避免再次出现类似问题，我立马配置上试了试\n\n\n\n\n\n\n\n\n# 总结\n\n这样我们就使用 jpom 完美解决我们团队中的项目部署，服务器管理。\n\n我在使用 jpom 这段时间还发现 jpom 里面还有好多实用的功能：\n\n * 为了账号安全问题，可以开启 mfa 两步验证\n * 项目存在多个机器负载情况可以使用节点分发来统一管理\n * 可以在系统中预设多种脚本来实现更方便的管理服务器\n * 直接在 jpom 中编辑 nginx 配置文件\n * 管理 docker 容器的 docker ui\n\n整体来说 jpom 目前完全满足我们的各种服务器管理和部署需求\n\n在这里我强烈安利给公司没有运维的那些开发团队。\n\n\n# jpom 链接\n\n官网：https://jpom.top/\n\ngitee: https://gitee.com/dromara/jpom\n\ngithub: https://github.com/dromara/jpom\n\n常见问题：https://jpom.top/pages/fqa/",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:59:16",lastUpdatedTimestamp:1732935556e3},{title:"赞赏公示",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"支持/00.赞赏支持/101.赞赏记录"}},title:"赞赏公示",date:"2022-06-11T15:13:49.000Z",permalink:"/pages/praise/publicity/",tags:["赞赏"],categories:["docs","赞赏"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/100.%E8%B5%9E%E8%B5%8F%E6%80%BB%E8%A7%88.html",relativePath:"支持/00.赞赏支持/100.赞赏总览.md",key:"v-6922a670",path:"/pages/praise/publicity/",headersStr:null,content:"> 选择进入指定年份",normalizedContent:"> 选择进入指定年份",charsets:{cjk:!0},lastUpdated:"2024/01/22, 14:35:48",lastUpdatedTimestamp:1705934148e3},{title:"2025年",frontmatter:{title:"2025年",date:"2025-01-14T12:54:19.000Z",permalink:"/pages/da38d0/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:["赞赏记录"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/101.%E8%B5%9E%E8%B5%8F%E8%AE%B0%E5%BD%95/75.2025%E5%B9%B4.html",relativePath:"支持/00.赞赏支持/101.赞赏记录/75.2025年.md",key:"v-b6d9da36",path:"/pages/da38d0/",headers:[{level:2,title:"2025 年",slug:"_2025-年",normalizedTitle:"2025 年",charIndex:2}],headersStr:"2025 年",content:"# 2025 年\n\n日期           渠道      金额       昵称     备注            付费社群\n2025-05-06   微信红包    50.00    新      大佬喝咖啡         \n2025-03-27   微信赞赏码   50.00    张飞鸿                  \n2025-03-24   微信赞赏码   6.66     阿雨     点个赞           \n2025-03-07   微信赞赏码   100.00   葉秋     好用。孩子爱用       \n2025-03-04   微信赞赏码   1.00     [匿名]   意思一下          \n2025-02-28   微信赞赏码   80.00    刘志远    请大佬喝茶         \n2025-02-27   微信赞赏码   50.00    长弘     喝杯咖啡          \n2025-01-16   微信赞赏码   1.0      有趣     加油，希望越来越好用。   \n2025-01-13   微信赞赏码   66.66    木木子    赞             \n2025-01-13   微信赞赏码   100.00   知其然    知其然（🐟）       \n2025-01-10   微信赞赏码   8.80     神奇     穷，但支持开源       \n2025-01-01   微信赞赏码   30.00    破冰                   ",normalizedContent:"# 2025 年\n\n日期           渠道      金额       昵称     备注            付费社群\n2025-05-06   微信红包    50.00    新      大佬喝咖啡         \n2025-03-27   微信赞赏码   50.00    张飞鸿                  \n2025-03-24   微信赞赏码   6.66     阿雨     点个赞           \n2025-03-07   微信赞赏码   100.00   葉秋     好用。孩子爱用       \n2025-03-04   微信赞赏码   1.00     [匿名]   意思一下          \n2025-02-28   微信赞赏码   80.00    刘志远    请大佬喝茶         \n2025-02-27   微信赞赏码   50.00    长弘     喝杯咖啡          \n2025-01-16   微信赞赏码   1.0      有趣     加油，希望越来越好用。   \n2025-01-13   微信赞赏码   66.66    木木子    赞             \n2025-01-13   微信赞赏码   100.00   知其然    知其然（🐟）       \n2025-01-10   微信赞赏码   8.80     神奇     穷，但支持开源       \n2025-01-01   微信赞赏码   30.00    破冰                   ",charsets:{cjk:!0},lastUpdated:"2025/05/06, 12:10:35",lastUpdatedTimestamp:1746533435e3},{title:"2024年",frontmatter:{title:"2024年",date:"2024-01-02T16:39:32.000Z",permalink:"/pages/97e0e2/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:["赞赏记录"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/101.%E8%B5%9E%E8%B5%8F%E8%AE%B0%E5%BD%95/76.2024%E5%B9%B4.html",relativePath:"支持/00.赞赏支持/101.赞赏记录/76.2024年.md",key:"v-702ff1be",path:"/pages/97e0e2/",headers:[{level:2,title:"2024 年",slug:"_2024-年",normalizedTitle:"2024 年",charIndex:2},{level:3,title:"合计：3983.16",slug:"合计-3983-16",normalizedTitle:"合计：3983.16",charIndex:13}],headersStr:"2024 年 合计：3983.16",content:"# 2024 年\n\n\n# 合计：3983.16\n\n日期           渠道        金额      昵称                       备注              付费社群\n2024-12-27   支付宝扫码     68.88   哈希 168                                   \n2024-12-27   微信赞赏码     50      阳                                        \n2024-12-27   微信赞赏码     8.88    如果                                       \n2024-12-27   微信赞赏码     88.88   如果                                       \n2024-12-27   微信赞赏码     10      吾王                                       \n2024-12-27   微信赞赏码     50      奇奇                       赞赞赞             \n2024-12-10   支付宝扫码     50      陈旭                       jpom捐赠          \n2024-12-02   微信赞赏码     30      张欣                       赞赞赞             \n2024-11-26   微信赞赏码     10      self-discipline                          \n2024-11-12   微信赞赏码     5       软件开发182*****25                           \n2024-11-09   支付宝扫码     50      雨滴                                       \n2024-09-10   微信赞赏码     1       Free loop                                \n2024-08-28   支付宝扫码     50      陈旭                                       \n2024-08-19   微信赞赏码     50      [匿名]                                     \n2024-08-21   微信红包      66      但茂华                      群主牛逼            \n2024-08-19   微信赞赏码     6.6     [匿名]                                     \n2024-08-19   微信转账（群）   18.88   睡个好觉.                                    \n2024-08-19   微信赞赏码     30      沉沦                       加鸡腿             \n2024-08-19   微信转账（群）   28.88   睡个好觉.                                    \n2024-08-09   微信红包      66      湘江夜色                     66大顺投资去         \n2024-08-09   微信红包      11      张飞鸿                      这项目我投了          \n2024-08-09   微信赞赏码     50      OnceOrNever              打出知名度，冲         \n2024-07-29   微信赞赏码     16      沈钊                       666             \n2024-07-26   微信赞赏码     10      豪                        小小心意，不成敬意       \n2024-07-15   微信红包      30      陈晨🍊                                     是\n2024-07-10   微信赞赏码     20      L.                       功能强大牛逼克拉斯       \n2024-07-09   微信赞赏码     100     孙彪                       优秀产品 欢迎老师指定使用   \n2024-07-05   微信红包      10      孙彪                       梦想成真            \n2024-07-05   微信赞赏码     80      刘志远                      回回血             \n2024-07-04   微信赞赏码     15      阿杰                       加油！             \n2024-07-04   微信赞赏码     30      冬                        牛逼牛逼，支持一下       \n2024-07-04   微信赞赏码     1       简单                       好东西，绵薄之力        \n2024-07-03   微信赞赏码     100     -小龙                      黄小龙             \n2024-07-01   微信红包      200     伤感的风铃草🌿                                 \n2024-06-29   微信赞赏码     5       YCX                                      \n2024-06-09   支付宝扫码     5       β                                        \n2024-06-04   微信赞赏码     50      农夫三拳有点甜                                  \n2024-06-04   微信红包      10      New Life.New Beginning                   \n2024-06-04   微信红包      66.66   知其然(🐟)                  加鸡腿             \n2024-05-22   支付宝扫码     100     Alex                     （微信：王晓阳）        是\n2024-05-14   微信赞赏码     50      ccx2480                                  \n2024-04-28   微信赞赏码     200     花落有声                     花落有声            \n2024-04-23   微信赞赏码     1       up                                       \n2024-04-22   微信红包      20      奇怪的网友                    牛逼牛逼            \n2024-04-19   微信红包      6.6     九問                                       \n2024-04-16   微信赞赏码     30      Landeris pluoci          landeris        \n2024-04-08   微信赞赏码     9.99    酱总                       6翻了             \n2024-04-03   微信赞赏码     10      zhangw                   项目不错，继续加油       \n2024-04-03   微信赞赏码     10      雨哥秋田                     加油              \n2024-03-29   微信红包      30      湘江夜色                     请你喝杯便宜的奶茶       \n2024-03-28   微信赞赏码     10      秦                        jpom-进群         \n2024-03-18   微信赞赏码     50      王国胜                                      \n2024-03-18   微信赞赏码     50      毛毛🐛                     大佬加油            \n2024-03-18   微信赞赏码     18      毅如既往                                     \n2024-03-15   微信转账      20      奇怪的网友                                    是\n2024-03-14   支付宝扫码     100     神莱之币                     用了一段时间，过来二次打赏   \n2024-03-13   微信赞赏码     1                                jpom进群          \n2024-03-11   微信赞赏码     30      小朱                       明天加鸡腿           是\n2024-03-11   微信赞赏码     20.88   张飞鸿                                      \n2024-03-09   支付宝扫码     100     小朱                                       \n2024-03-09   微信赞赏码     80      HUI                      加油 支持流水线计划      \n2024-03-08   微信红包      88      易自玉                      很好用，加油          \n2024-03-08   微信赞赏码     30      猫猫向钱跑                    加油              \n2024-03-08   微信赞赏码     30      在时间里流浪                   支持开源            \n2024-03-08   微信赞赏码     20      破冰                       敬你一杯奶茶          \n2024-03-08   支付宝扫码     9.99    Smith                    再来一下            \n2024-03-07   微信赞赏码     50      D                        小菜鸡             \n2024-03-07   微信赞赏码     66.66   刘志远                                      \n2024-03-07   微信赞赏码     200     OnceOrNever                              \n2024-02-01   支付宝扫码     50      陈旭                                       \n2024-01-24   微信赞赏码     20      Seeking                  请大佬喝杯水          \n2024-01-22   微信赞赏码     50      长弘                       喝杯咖啡            \n2024-01-22   微信赞赏码     30      枫风                       枫风              \n2024-01-19   微信红包      66.66   LYY                                      \n2024-01-19   微信红包      66.66   Roger.cao                                \n2024-01-18   微信红包      66.66   大土豆                                      \n2024-01-18   微信红包      8.88    枫风                                       \n2024-01-17   码云捐赠      10      Robot                                    \n2024-01-16   微信赞赏码     20      花落有声                     花落有声            \n2024-01-12   微信红包      12      九問                       卡布奇诺            \n2024-01-10   支付宝扫码     20      陈旭                                       \n2024-01-10   微信赞赏码     30      破冰                       一杯咖啡            \n2024-01-08   支付宝扫码     100     夏@天的味道                   夏天的味道jpom赞赏     \n2024-01-04   微信赞赏码     6.66    小歪                                       \n2024-01-04   微信赞赏码     20      谢栋                       请大佬喝一杯橙c美式      \n2024-01-04   微信赞赏码     30      破冰                       拉我进优先对接群        \n2024-01-04   微信赞赏码     10      晴目星游                     大佬加油            \n2024-01-03   微信赞赏码     80      九問                                       \n2024-01-03   微信赞赏码     200     九問                                       \n2024-01-03   微信赞赏码     30      Llc                                      \n2024-01-03   微信赞赏码     6       W                        给老大加鸡腿          \n2024-01-02   微信赞赏码     29.99   定格                       第三也来了           \n2024-01-02   微信赞赏码     18.88   新                        第二来了            \n2024-01-02   微信赞赏码     9.99    酱总                       第一              ",normalizedContent:"# 2024 年\n\n\n# 合计：3983.16\n\n日期           渠道        金额      昵称                       备注              付费社群\n2024-12-27   支付宝扫码     68.88   哈希 168                                   \n2024-12-27   微信赞赏码     50      阳                                        \n2024-12-27   微信赞赏码     8.88    如果                                       \n2024-12-27   微信赞赏码     88.88   如果                                       \n2024-12-27   微信赞赏码     10      吾王                                       \n2024-12-27   微信赞赏码     50      奇奇                       赞赞赞             \n2024-12-10   支付宝扫码     50      陈旭                       jpom捐赠          \n2024-12-02   微信赞赏码     30      张欣                       赞赞赞             \n2024-11-26   微信赞赏码     10      self-discipline                          \n2024-11-12   微信赞赏码     5       软件开发182*****25                           \n2024-11-09   支付宝扫码     50      雨滴                                       \n2024-09-10   微信赞赏码     1       free loop                                \n2024-08-28   支付宝扫码     50      陈旭                                       \n2024-08-19   微信赞赏码     50      [匿名]                                     \n2024-08-21   微信红包      66      但茂华                      群主牛逼            \n2024-08-19   微信赞赏码     6.6     [匿名]                                     \n2024-08-19   微信转账（群）   18.88   睡个好觉.                                    \n2024-08-19   微信赞赏码     30      沉沦                       加鸡腿             \n2024-08-19   微信转账（群）   28.88   睡个好觉.                                    \n2024-08-09   微信红包      66      湘江夜色                     66大顺投资去         \n2024-08-09   微信红包      11      张飞鸿                      这项目我投了          \n2024-08-09   微信赞赏码     50      onceornever              打出知名度，冲         \n2024-07-29   微信赞赏码     16      沈钊                       666             \n2024-07-26   微信赞赏码     10      豪                        小小心意，不成敬意       \n2024-07-15   微信红包      30      陈晨🍊                                     是\n2024-07-10   微信赞赏码     20      l.                       功能强大牛逼克拉斯       \n2024-07-09   微信赞赏码     100     孙彪                       优秀产品 欢迎老师指定使用   \n2024-07-05   微信红包      10      孙彪                       梦想成真            \n2024-07-05   微信赞赏码     80      刘志远                      回回血             \n2024-07-04   微信赞赏码     15      阿杰                       加油！             \n2024-07-04   微信赞赏码     30      冬                        牛逼牛逼，支持一下       \n2024-07-04   微信赞赏码     1       简单                       好东西，绵薄之力        \n2024-07-03   微信赞赏码     100     -小龙                      黄小龙             \n2024-07-01   微信红包      200     伤感的风铃草🌿                                 \n2024-06-29   微信赞赏码     5       ycx                                      \n2024-06-09   支付宝扫码     5       β                                        \n2024-06-04   微信赞赏码     50      农夫三拳有点甜                                  \n2024-06-04   微信红包      10      new life.new beginning                   \n2024-06-04   微信红包      66.66   知其然(🐟)                  加鸡腿             \n2024-05-22   支付宝扫码     100     alex                     （微信：王晓阳）        是\n2024-05-14   微信赞赏码     50      ccx2480                                  \n2024-04-28   微信赞赏码     200     花落有声                     花落有声            \n2024-04-23   微信赞赏码     1       up                                       \n2024-04-22   微信红包      20      奇怪的网友                    牛逼牛逼            \n2024-04-19   微信红包      6.6     九問                                       \n2024-04-16   微信赞赏码     30      landeris pluoci          landeris        \n2024-04-08   微信赞赏码     9.99    酱总                       6翻了             \n2024-04-03   微信赞赏码     10      zhangw                   项目不错，继续加油       \n2024-04-03   微信赞赏码     10      雨哥秋田                     加油              \n2024-03-29   微信红包      30      湘江夜色                     请你喝杯便宜的奶茶       \n2024-03-28   微信赞赏码     10      秦                        jpom-进群         \n2024-03-18   微信赞赏码     50      王国胜                                      \n2024-03-18   微信赞赏码     50      毛毛🐛                     大佬加油            \n2024-03-18   微信赞赏码     18      毅如既往                                     \n2024-03-15   微信转账      20      奇怪的网友                                    是\n2024-03-14   支付宝扫码     100     神莱之币                     用了一段时间，过来二次打赏   \n2024-03-13   微信赞赏码     1                                jpom进群          \n2024-03-11   微信赞赏码     30      小朱                       明天加鸡腿           是\n2024-03-11   微信赞赏码     20.88   张飞鸿                                      \n2024-03-09   支付宝扫码     100     小朱                                       \n2024-03-09   微信赞赏码     80      hui                      加油 支持流水线计划      \n2024-03-08   微信红包      88      易自玉                      很好用，加油          \n2024-03-08   微信赞赏码     30      猫猫向钱跑                    加油              \n2024-03-08   微信赞赏码     30      在时间里流浪                   支持开源            \n2024-03-08   微信赞赏码     20      破冰                       敬你一杯奶茶          \n2024-03-08   支付宝扫码     9.99    smith                    再来一下            \n2024-03-07   微信赞赏码     50      d                        小菜鸡             \n2024-03-07   微信赞赏码     66.66   刘志远                                      \n2024-03-07   微信赞赏码     200     onceornever                              \n2024-02-01   支付宝扫码     50      陈旭                                       \n2024-01-24   微信赞赏码     20      seeking                  请大佬喝杯水          \n2024-01-22   微信赞赏码     50      长弘                       喝杯咖啡            \n2024-01-22   微信赞赏码     30      枫风                       枫风              \n2024-01-19   微信红包      66.66   lyy                                      \n2024-01-19   微信红包      66.66   roger.cao                                \n2024-01-18   微信红包      66.66   大土豆                                      \n2024-01-18   微信红包      8.88    枫风                                       \n2024-01-17   码云捐赠      10      robot                                    \n2024-01-16   微信赞赏码     20      花落有声                     花落有声            \n2024-01-12   微信红包      12      九問                       卡布奇诺            \n2024-01-10   支付宝扫码     20      陈旭                                       \n2024-01-10   微信赞赏码     30      破冰                       一杯咖啡            \n2024-01-08   支付宝扫码     100     夏@天的味道                   夏天的味道jpom赞赏     \n2024-01-04   微信赞赏码     6.66    小歪                                       \n2024-01-04   微信赞赏码     20      谢栋                       请大佬喝一杯橙c美式      \n2024-01-04   微信赞赏码     30      破冰                       拉我进优先对接群        \n2024-01-04   微信赞赏码     10      晴目星游                     大佬加油            \n2024-01-03   微信赞赏码     80      九問                                       \n2024-01-03   微信赞赏码     200     九問                                       \n2024-01-03   微信赞赏码     30      llc                                      \n2024-01-03   微信赞赏码     6       w                        给老大加鸡腿          \n2024-01-02   微信赞赏码     29.99   定格                       第三也来了           \n2024-01-02   微信赞赏码     18.88   新                        第二来了            \n2024-01-02   微信赞赏码     9.99    酱总                       第一              ",charsets:{cjk:!0},lastUpdated:"2025/01/14, 05:08:02",lastUpdatedTimestamp:1736831282e3},{title:"2023年",frontmatter:{title:"2023年",date:"2023-03-31T17:46:14.000Z",permalink:"/pages/8bbc44/",categories:["docs","支持","赞赏记录"],tags:["2023年"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/101.%E8%B5%9E%E8%B5%8F%E8%AE%B0%E5%BD%95/77.2023%E5%B9%B4.html",relativePath:"支持/00.赞赏支持/101.赞赏记录/77.2023年.md",key:"v-29860946",path:"/pages/8bbc44/",headers:[{level:2,title:"2023 年",slug:"_2023-年",normalizedTitle:"2023 年",charIndex:2},{level:3,title:"合计：3288.25",slug:"合计-3288-25",normalizedTitle:"合计：3288.25",charIndex:13}],headersStr:"2023 年 合计：3288.25",content:"# 2023 年\n\n\n# 合计：3288.25\n\n日期           渠道      金额      昵称            备注\n2023-12-29   微信赞赏码   50      凋零            \n2023-12-28   微信赞赏码   80      木木子           Jpom很棒很实用\n2023-12-22   微信赞赏码   30      奇奇            很稳\n2023-12-22   微信赞赏码   20      dev           小菜鸡\n2023-12-21   微信赞赏码   30      枫风            咨询服务\n2023-12-21   微信赞赏码   10      指尖的温柔         \n2023-12-21   微信赞赏码   20      %             \n2023-12-21   微信赞赏码   20      珂儿            加油加油\n2023-12-21   微信赞赏码   20      Roger.cao     \n2023-12-15   码云捐赠    10      guwq          \n2023-11-16   微信赞赏码   30      海风            \n2023-11-06   微信赞赏码   30      Y.            支持大佬\n2023-09-12   微信赞赏码   30      在时间里流浪        感谢开源！！！\n2023-08-25   微信红包    10      张飞鸿           \n2023-08-19   微信红包    30      勤思·           \n2023-08-02   微信赞赏码   80      junk dog      \n2023-07-25   微信赞赏码   100     刘志远           感谢纪念品，喝个奶茶吧\n2023-07-20   微信赞赏码   30      张照辉           \n2023-07-04   微信赞赏码   10      chan jamin    jpom进群\n2023-06-28   微信赞赏码   100     OnceOrNever   开源不易，赞一个！\n2023-06-27   微信赞赏码   80      胡胡            祝jpom越来越棒\n2023-06-27   支付宝转账   30      陈旭            \n2023-06-26   微信赞赏码   80      大土豆           纪念品充值\n2023-06-26   微信赞赏码   20      大土豆           牛逼666\n2023-06-26   微信赞赏码   1.18    大土豆           \n2023-06-14   微信赞赏码   30      。             \n2023-06-14   微信赞赏码   33      左手生活，右手浪漫     \n2023-06-14   微信赞赏码   99.99   (🐟)          支持\n2023-06-14   微信赞赏码   80      陨石            强\n2023-05-01   微信赞赏码   10      tangwenhui    Jpom进群\n2023-04-26   微信红包    66.66   LYY           大佬喝奶茶\n2023-04-26   微信赞赏码   80      LYY           \n2023-04-24   微信赞赏码   20      左手生活，右手浪漫     今天奶茶钱\n2023-04-24   微信赞赏码   200     田             \n2023-04-20   支付宝转账   30      Tom           赞赏服务\n2023-04-20   微信赞赏码   10                   \n2023-04-17   微信赞赏码   10      奇奇            感谢耐心解答\n2023-04-12   微信赞赏码   10      左手生活，右手浪漫     辛苦了\n2023-04-12   微信赞赏码   20      毛毛虫           给大佬加个鸡腿\n2023-04-11   微信赞赏码   80      小康            \n2023-04-10   微信赞赏码   20.5    Pluto         \n2023-04-07   微信赞赏码   30      定格            不忘初心，继续加油\n2023-04-06   微信赞赏码   0.5     Pluto         \n2023-04-04   微信赞赏码   1       简单            \n2023-04-01   微信赞赏码   80      慧辽宁           \n2023-03-31   微信赞赏码   100     易自玉           努力加油\n2023-03-31   微信赞赏码   30      左手生活，右手浪漫     为技术而战\n2023-03-31   微信赞赏码   30      TrouBles      强悍 努力对标Jenkins\n2023-03-31   微信赞赏码   1                     加油\n2023-03-31   微信赞赏码   20      奇奇            喝茶🐂\n2023-03-30   微信赞赏码   5       chenice       加个鸡腿，顺便请教一下\n2023-03-29   微信赞赏码   20      毛毛虫           请大佬喝杯咖啡，好继续码代码\n2023-03-28   支付宝转账   20      星宇            支持开源\n2023-03-28   微信赞赏码   150     雨韵诗泽          不忘初心🤒\n2023-03-27   微信赞赏码   66.66   酱总            酱总\n2023-03-22   微信赞赏码   10      八十一           嘎嘎好用\n2023-03-21   微信转账    100     核桃            \n2023-03-21   微信赞赏码   10      meta.木予       \n2023-03-20   微信赞赏码   30      小翼哥           小翼哥\n2023-03-20   微信赞赏码   5       w             \n2023-03-17   微信赞赏码   20      think         开源不易\n2023-03-17   微信赞赏码   50      毛毛虫           \n2023-03-16   微信赞赏码   50      吃葫芦娃的土拨鼠      开源不易\n2023-03-16   微信赞赏码   1       张飞鸿           辛苦了，想吃啥随便买\n2023-03-16   微信赞赏码   20      吃葫芦娃的土拨鼠      吃葫芦娃的土拨鼠\n2023-03-15   微信赞赏码   10      核桃            不错\n2023-03-14   微信赞赏码   50      章强            赞一个\n2023-03-14   微信赞赏码   50      月饼酥           很棒的项目\n2023-03-13   微信赞赏码   50      大灰灰           怒赞\n2023-03-13   微信赞赏码   50      心光            坚持下去\n2023-03-10   微信赞赏码   50      陈裕财           擎勤科技\n2023-03-07   微信赞赏码   5       LCXS          谢谢\n2023-03-07   微信红包    0.1     [匿名]          \n2023-02-27   微信赞赏码   50      [匿名]          Jpom 666\n2023-02-24   微信赞赏码   20      leonchen21    希望项目越来越好\n2023-02-20   微信红包    20      阿超            \n2023-02-16   微信赞赏码   58      Soul          请大佬喝阔乐！\n2023-02-15   微信红包    10      围·城           \n2023-02-14   微信赞赏码   52      张飞鸿           情人节快乐！\n2023-02-09   微信赞赏码   20.00   Again... .    喝杯咖啡，辛苦解答了\n2023-02-08   微信赞赏码   66.66   酱总            加个鸡腿\n2023-02-08   微信赞赏码   50      奇奇            🤙🤙🤙\n2023-02-02   微信赞赏码   20                   加个餐\n2023-02-01   微信赞赏码   5       张飞鸿           \n2023-01-04   微信赞赏码   50      H             学习 Jpom",normalizedContent:"# 2023 年\n\n\n# 合计：3288.25\n\n日期           渠道      金额      昵称            备注\n2023-12-29   微信赞赏码   50      凋零            \n2023-12-28   微信赞赏码   80      木木子           jpom很棒很实用\n2023-12-22   微信赞赏码   30      奇奇            很稳\n2023-12-22   微信赞赏码   20      dev           小菜鸡\n2023-12-21   微信赞赏码   30      枫风            咨询服务\n2023-12-21   微信赞赏码   10      指尖的温柔         \n2023-12-21   微信赞赏码   20      %             \n2023-12-21   微信赞赏码   20      珂儿            加油加油\n2023-12-21   微信赞赏码   20      roger.cao     \n2023-12-15   码云捐赠    10      guwq          \n2023-11-16   微信赞赏码   30      海风            \n2023-11-06   微信赞赏码   30      y.            支持大佬\n2023-09-12   微信赞赏码   30      在时间里流浪        感谢开源！！！\n2023-08-25   微信红包    10      张飞鸿           \n2023-08-19   微信红包    30      勤思·           \n2023-08-02   微信赞赏码   80      junk dog      \n2023-07-25   微信赞赏码   100     刘志远           感谢纪念品，喝个奶茶吧\n2023-07-20   微信赞赏码   30      张照辉           \n2023-07-04   微信赞赏码   10      chan jamin    jpom进群\n2023-06-28   微信赞赏码   100     onceornever   开源不易，赞一个！\n2023-06-27   微信赞赏码   80      胡胡            祝jpom越来越棒\n2023-06-27   支付宝转账   30      陈旭            \n2023-06-26   微信赞赏码   80      大土豆           纪念品充值\n2023-06-26   微信赞赏码   20      大土豆           牛逼666\n2023-06-26   微信赞赏码   1.18    大土豆           \n2023-06-14   微信赞赏码   30      。             \n2023-06-14   微信赞赏码   33      左手生活，右手浪漫     \n2023-06-14   微信赞赏码   99.99   (🐟)          支持\n2023-06-14   微信赞赏码   80      陨石            强\n2023-05-01   微信赞赏码   10      tangwenhui    jpom进群\n2023-04-26   微信红包    66.66   lyy           大佬喝奶茶\n2023-04-26   微信赞赏码   80      lyy           \n2023-04-24   微信赞赏码   20      左手生活，右手浪漫     今天奶茶钱\n2023-04-24   微信赞赏码   200     田             \n2023-04-20   支付宝转账   30      tom           赞赏服务\n2023-04-20   微信赞赏码   10                   \n2023-04-17   微信赞赏码   10      奇奇            感谢耐心解答\n2023-04-12   微信赞赏码   10      左手生活，右手浪漫     辛苦了\n2023-04-12   微信赞赏码   20      毛毛虫           给大佬加个鸡腿\n2023-04-11   微信赞赏码   80      小康            \n2023-04-10   微信赞赏码   20.5    pluto         \n2023-04-07   微信赞赏码   30      定格            不忘初心，继续加油\n2023-04-06   微信赞赏码   0.5     pluto         \n2023-04-04   微信赞赏码   1       简单            \n2023-04-01   微信赞赏码   80      慧辽宁           \n2023-03-31   微信赞赏码   100     易自玉           努力加油\n2023-03-31   微信赞赏码   30      左手生活，右手浪漫     为技术而战\n2023-03-31   微信赞赏码   30      troubles      强悍 努力对标jenkins\n2023-03-31   微信赞赏码   1                     加油\n2023-03-31   微信赞赏码   20      奇奇            喝茶🐂\n2023-03-30   微信赞赏码   5       chenice       加个鸡腿，顺便请教一下\n2023-03-29   微信赞赏码   20      毛毛虫           请大佬喝杯咖啡，好继续码代码\n2023-03-28   支付宝转账   20      星宇            支持开源\n2023-03-28   微信赞赏码   150     雨韵诗泽          不忘初心🤒\n2023-03-27   微信赞赏码   66.66   酱总            酱总\n2023-03-22   微信赞赏码   10      八十一           嘎嘎好用\n2023-03-21   微信转账    100     核桃            \n2023-03-21   微信赞赏码   10      meta.木予       \n2023-03-20   微信赞赏码   30      小翼哥           小翼哥\n2023-03-20   微信赞赏码   5       w             \n2023-03-17   微信赞赏码   20      think         开源不易\n2023-03-17   微信赞赏码   50      毛毛虫           \n2023-03-16   微信赞赏码   50      吃葫芦娃的土拨鼠      开源不易\n2023-03-16   微信赞赏码   1       张飞鸿           辛苦了，想吃啥随便买\n2023-03-16   微信赞赏码   20      吃葫芦娃的土拨鼠      吃葫芦娃的土拨鼠\n2023-03-15   微信赞赏码   10      核桃            不错\n2023-03-14   微信赞赏码   50      章强            赞一个\n2023-03-14   微信赞赏码   50      月饼酥           很棒的项目\n2023-03-13   微信赞赏码   50      大灰灰           怒赞\n2023-03-13   微信赞赏码   50      心光            坚持下去\n2023-03-10   微信赞赏码   50      陈裕财           擎勤科技\n2023-03-07   微信赞赏码   5       lcxs          谢谢\n2023-03-07   微信红包    0.1     [匿名]          \n2023-02-27   微信赞赏码   50      [匿名]          jpom 666\n2023-02-24   微信赞赏码   20      leonchen21    希望项目越来越好\n2023-02-20   微信红包    20      阿超            \n2023-02-16   微信赞赏码   58      soul          请大佬喝阔乐！\n2023-02-15   微信红包    10      围·城           \n2023-02-14   微信赞赏码   52      张飞鸿           情人节快乐！\n2023-02-09   微信赞赏码   20.00   again... .    喝杯咖啡，辛苦解答了\n2023-02-08   微信赞赏码   66.66   酱总            加个鸡腿\n2023-02-08   微信赞赏码   50      奇奇            🤙🤙🤙\n2023-02-02   微信赞赏码   20                   加个餐\n2023-02-01   微信赞赏码   5       张飞鸿           \n2023-01-04   微信赞赏码   50      h             学习 jpom",charsets:{cjk:!0},lastUpdated:"2024/01/04, 05:17:31",lastUpdatedTimestamp:1704345451e3},{title:"2021年",frontmatter:{title:"2021年",date:"2023-03-31T17:42:42.000Z",permalink:"/pages/1bf779/",categories:["docs","支持","赞赏记录"],tags:["2021年"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/101.%E8%B5%9E%E8%B5%8F%E8%AE%B0%E5%BD%95/79.2021%E5%B9%B4.html",relativePath:"支持/00.赞赏支持/101.赞赏记录/79.2021年.md",key:"v-31e6e3d5",path:"/pages/1bf779/",headers:[{level:2,title:"2021 年",slug:"_2021-年",normalizedTitle:"2021 年",charIndex:2},{level:3,title:"合计：208.01",slug:"合计-208-01",normalizedTitle:"合计：208.01",charIndex:13},{level:2,title:"2021 年内部参与贡献成员：",slug:"_2021-年内部参与贡献成员",normalizedTitle:"2021 年内部参与贡献成员：",charIndex:761}],headersStr:"2021 年 合计：208.01 2021 年内部参与贡献成员：",content:"# 2021 年\n\n\n# 合计：208.01\n\n日期           渠道      金额     昵称            备注\n2021-12-14   微信赞赏码   1      简             \n2021-12-14   微信赞赏码   1      简             \n2021-12-14   微信赞赏码   1      简             \n2021-12-14   微信赞赏码   1      Hygge         \n2021-12-14   微信赞赏码   0.01   💎ℳ๓₯㎕斌💎💘   \n2021-12-14   微信赞赏码   10     大土豆           \n2021-12-14   微信赞赏码   1      冷月            \n2021-12-14   微信赞赏码   10     大土豆           \n2021-12-10   微信赞赏码   50     Dream         \n2021-10-25   微信赞赏码   1      Jame          \n2021-10-11   微信赞赏码   10     chenice       \n2021-10-11   微信赞赏码   1      chenice       \n2021-09-01   微信赞赏码   100    CoCo          \n2021-09-01   微信赞赏码   20     大灰灰           \n2021-08-31   微信赞赏码   1      大灰灰           \n2021-04-21   码云捐赠    10     jason         \n\n\n# 2021 年内部参与贡献成员：\n\n 1. bwcx_jzy\n 2. 蓝枫\n 3. Hotstrip\n 4. 胖虎\n 5. Sam\n 6. ArnoHand\n 7. 扶摇",normalizedContent:"# 2021 年\n\n\n# 合计：208.01\n\n日期           渠道      金额     昵称            备注\n2021-12-14   微信赞赏码   1      简             \n2021-12-14   微信赞赏码   1      简             \n2021-12-14   微信赞赏码   1      简             \n2021-12-14   微信赞赏码   1      hygge         \n2021-12-14   微信赞赏码   0.01   💎ℳ๓₯㎕斌💎💘   \n2021-12-14   微信赞赏码   10     大土豆           \n2021-12-14   微信赞赏码   1      冷月            \n2021-12-14   微信赞赏码   10     大土豆           \n2021-12-10   微信赞赏码   50     dream         \n2021-10-25   微信赞赏码   1      jame          \n2021-10-11   微信赞赏码   10     chenice       \n2021-10-11   微信赞赏码   1      chenice       \n2021-09-01   微信赞赏码   100    coco          \n2021-09-01   微信赞赏码   20     大灰灰           \n2021-08-31   微信赞赏码   1      大灰灰           \n2021-04-21   码云捐赠    10     jason         \n\n\n# 2021 年内部参与贡献成员：\n\n 1. bwcx_jzy\n 2. 蓝枫\n 3. hotstrip\n 4. 胖虎\n 5. sam\n 6. arnohand\n 7. 扶摇",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"2020年",frontmatter:{title:"2020年",date:"2024-01-04T13:11:05.000Z",permalink:"/pages/eb27c8/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:[null],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/101.%E8%B5%9E%E8%B5%8F%E8%AE%B0%E5%BD%95/80.2020%E5%B9%B4.html",relativePath:"支持/00.赞赏支持/101.赞赏记录/80.2020年.md",key:"v-0a4449a7",path:"/pages/eb27c8/",headers:[{level:2,title:"2020 年",slug:"_2020-年",normalizedTitle:"2020 年",charIndex:2},{level:3,title:"合计：140",slug:"合计-140",normalizedTitle:"合计：140",charIndex:13}],headersStr:"2020 年 合计：140",content:"# 2020 年\n\n\n# 合计：140\n\n日期           渠道     金额    昵称\n2020-03-31   码云捐赠   20    开源oschina\n2020-02-25   码云捐赠   20    辣椒酱\n2020-02-13   码云捐赠   100   大森林",normalizedContent:"# 2020 年\n\n\n# 合计：140\n\n日期           渠道     金额    昵称\n2020-03-31   码云捐赠   20    开源oschina\n2020-02-25   码云捐赠   20    辣椒酱\n2020-02-13   码云捐赠   100   大森林",charsets:{cjk:!0},lastUpdated:"2024/01/04, 05:17:31",lastUpdatedTimestamp:1704345451e3},{title:"2019年",frontmatter:{title:"2019年",date:"2024-01-04T13:11:36.000Z",permalink:"/pages/9a4844/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:[null],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/101.%E8%B5%9E%E8%B5%8F%E8%AE%B0%E5%BD%95/81.2019%E5%B9%B4.html",relativePath:"支持/00.赞赏支持/101.赞赏记录/81.2019年.md",key:"v-5e88d539",path:"/pages/9a4844/",headers:[{level:2,title:"2019 年",slug:"_2019-年",normalizedTitle:"2019 年",charIndex:2},{level:3,title:"合计：175",slug:"合计-175",normalizedTitle:"合计：175",charIndex:13}],headersStr:"2019 年 合计：175",content:"# 2019 年\n\n\n# 合计：175\n\n日期           渠道     金额    昵称\n2019-08-20   码云捐赠   15    YountMan\n2019-07-29   码云捐赠   50    Yashin\n2019-07-28   码云捐赠   100   老李\n2019-03-27   码云捐赠   10    jason",normalizedContent:"# 2019 年\n\n\n# 合计：175\n\n日期           渠道     金额    昵称\n2019-08-20   码云捐赠   15    yountman\n2019-07-29   码云捐赠   50    yashin\n2019-07-28   码云捐赠   100   老李\n2019-03-27   码云捐赠   10    jason",charsets:{cjk:!0},lastUpdated:"2024/01/04, 05:17:31",lastUpdatedTimestamp:1704345451e3},{title:"2022年",frontmatter:{title:"2022年",date:"2023-03-31T17:43:59.000Z",permalink:"/pages/e69067/",categories:["docs","支持","赞赏记录"],tags:["2022年"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/101.%E8%B5%9E%E8%B5%8F%E8%AE%B0%E5%BD%95/78.2022%E5%B9%B4.html",relativePath:"支持/00.赞赏支持/101.赞赏记录/78.2022年.md",key:"v-0e91ef99",path:"/pages/e69067/",headers:[{level:2,title:"2022 年",slug:"_2022-年",normalizedTitle:"2022 年",charIndex:2},{level:3,title:"合计：935.72",slug:"合计-935-72",normalizedTitle:"合计：935.72",charIndex:13},{level:2,title:"2022 年参与贡献重点成员：",slug:"_2022-年参与贡献重点成员",normalizedTitle:"2022 年参与贡献重点成员：",charIndex:1411}],headersStr:"2022 年 合计：935.72 2022 年参与贡献重点成员：",content:"# 2022 年\n\n\n# 合计：935.72\n\n日期           渠道      金额      昵称            备注\n2022-12-04   微信转账    30      李中原           请大佬喝杯 我也会为这个项目贡献自己的一份能力 争取越做越好\n2022-11-17   微信赞赏码   50      呐喊            非常不错的项目！！\n2022-10-20   微信赞赏码   4.67    大土豆           \n2022-10-20   微信赞赏码   5       Math.Random   Jpom加油！\n2022-10-20   微信赞赏码   5       扶摇            666\n2022-09-09   微信赞赏码   50      fangdan       为Jpom发电！越做越好！\n2022-08-19   微信赞赏码   100     大灰灰           😘\n2022-08-03   微信赞赏码   37.21   🐠            给开源团队加给餐\n2022-07-28   微信赞赏码   20      PQ宝剑          加油(•̀ᴗ•́)و ̑̑\n2022-07-08   微信赞赏码   6.66    🐠            🐠\n2022-07-07   微信红包    19.99   Vergil。       请你喝下午茶\n2022-06-22   微信赞赏码   5       *斌            d%\n2022-05-18   微信赞赏码   20      ccx2480       \n2022-04-24   微信赞赏码   30      Hxxxxp（匿名）    xxxx\n2022-04-19   微信赞赏码   20      Vergil。       谢谢您的软件\n2022-04-16   微信赞赏码   20      背着砍刀的诗人       再给大佬赞一个\n2022-04-16   微信赞赏码   88.88   小工匠           为开源点赞 大佬8888\n2022-04-14   微信赞赏码   20      李楠方           对优秀项目表示支持\n2022-04-13   微信赞赏码   66.66   No.9537       666666\n2022-04-12   微信赞赏码   20      背着砍刀的诗人       感谢有这个好工具\n2022-04-12   码云捐赠    50      爱琳琳真是太好了      \n2022-04-08   微信赞赏码   20      川小北           \n2022-03-27   微信赞赏码   10      顺子            \n2022-03-09   微信赞赏码   99.99   tan90°        加油\n2022-02-17   微信赞赏码   66.66   🐠            \n2022-01-21   微信赞赏码   50                   \n2022-01-13   微信赞赏码   20      🐠            \n\n\n# 2022 年参与贡献重点成员：\n\n 1. bwcx_jzy\n 2. 魏宏斌\n 3. Sam",normalizedContent:"# 2022 年\n\n\n# 合计：935.72\n\n日期           渠道      金额      昵称            备注\n2022-12-04   微信转账    30      李中原           请大佬喝杯 我也会为这个项目贡献自己的一份能力 争取越做越好\n2022-11-17   微信赞赏码   50      呐喊            非常不错的项目！！\n2022-10-20   微信赞赏码   4.67    大土豆           \n2022-10-20   微信赞赏码   5       math.random   jpom加油！\n2022-10-20   微信赞赏码   5       扶摇            666\n2022-09-09   微信赞赏码   50      fangdan       为jpom发电！越做越好！\n2022-08-19   微信赞赏码   100     大灰灰           😘\n2022-08-03   微信赞赏码   37.21   🐠            给开源团队加给餐\n2022-07-28   微信赞赏码   20      pq宝剑          加油(•ᴗ•)و \n2022-07-08   微信赞赏码   6.66    🐠            🐠\n2022-07-07   微信红包    19.99   vergil。       请你喝下午茶\n2022-06-22   微信赞赏码   5       *斌            d%\n2022-05-18   微信赞赏码   20      ccx2480       \n2022-04-24   微信赞赏码   30      hxxxxp（匿名）    xxxx\n2022-04-19   微信赞赏码   20      vergil。       谢谢您的软件\n2022-04-16   微信赞赏码   20      背着砍刀的诗人       再给大佬赞一个\n2022-04-16   微信赞赏码   88.88   小工匠           为开源点赞 大佬8888\n2022-04-14   微信赞赏码   20      李楠方           对优秀项目表示支持\n2022-04-13   微信赞赏码   66.66   no.9537       666666\n2022-04-12   微信赞赏码   20      背着砍刀的诗人       感谢有这个好工具\n2022-04-12   码云捐赠    50      爱琳琳真是太好了      \n2022-04-08   微信赞赏码   20      川小北           \n2022-03-27   微信赞赏码   10      顺子            \n2022-03-09   微信赞赏码   99.99   tan90°        加油\n2022-02-17   微信赞赏码   66.66   🐠            \n2022-01-21   微信赞赏码   50                   \n2022-01-13   微信赞赏码   20      🐠            \n\n\n# 2022 年参与贡献重点成员：\n\n 1. bwcx_jzy\n 2. 魏宏斌\n 3. sam",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"专属纪念品",frontmatter:{title:"专属纪念品",date:"2024-03-07T10:21:51.000Z",permalink:"/pages/souvenir/",categories:["docs","支持","赞赏支持"],tags:["纪念品"],config:{objectFit:"contain",imgHeight:"200px"},readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/00.%E8%B5%9E%E8%B5%8F%E6%94%AF%E6%8C%81/90.%E4%B8%93%E5%B1%9E%E7%BA%AA%E5%BF%B5%E5%93%81.html",relativePath:"支持/00.赞赏支持/90.专属纪念品.md",key:"v-15e0d9cd",path:"/pages/souvenir/",headers:[{level:2,title:"如何领取",slug:"如何领取",normalizedTitle:"如何领取",charIndex:70},{level:2,title:"为啥我没有？",slug:"为啥我没有",normalizedTitle:"为啥我没有？",charIndex:179},{level:2,title:"我想指定品类",slug:"我想指定品类",normalizedTitle:"我想指定品类",charIndex:343},{level:2,title:"已经赠送的纪念品",slug:"已经赠送的纪念品",normalizedTitle:"已经赠送的纪念品",charIndex:517},{level:3,title:"2025年",slug:"_2025年",normalizedTitle:"2025年",charIndex:530},{level:3,title:"2024年",slug:"_2024年",normalizedTitle:"2024年",charIndex:548},{level:3,title:"2023年",slug:"_2023年",normalizedTitle:"2023年",charIndex:565},{level:3,title:"2022年",slug:"_2022年",normalizedTitle:"2022年",charIndex:590},{level:3,title:"2021年",slug:"_2021年",normalizedTitle:"2021年",charIndex:608},{level:2,title:"照片墙",slug:"照片墙",normalizedTitle:"照片墙",charIndex:631}],headersStr:"如何领取 为啥我没有？ 我想指定品类 已经赠送的纪念品 2025年 2024年 2023年 2022年 2021年 照片墙",content:"为了感谢大家对 Jpom 的支持我们会在每年年初发放一些专属纪念品，送给我们认为有价值的用户或者赞赏支持（大额赞赏）过我们的用户。\n\n\n# 如何领取\n\n * 保持社群活跃\n * 参与功能贡献 Jpom\n * 参与文档贡献 Jpom\n * 大额赞赏支持（建议金额 100 元以上）\n\n当您满足条件后请耐心等待我们发放时间，要发放了我们会在社群通知大家\n\n\n# 为啥我没有？\n\n * 可能错过了发放时间\n * 暂时还没有认定您为有价值的用户\n * 您还没有大额赞赏支持过我们\n\n小提示\n\n开源本身不是盈利的，我们不靠开源赚钱但是期望有一些回报，如果您愿意，可以赞赏/捐赠我们。\n\n定制纪念品需要一些费用我们每次数量肯定不会太多，成本也会有限，所以发放时候基本是先到先得，还望理解。\n\n\n# 我想指定品类\n\n抱歉我们目前不支持指定品类的纪念品因为我们每年的预算有限，我们每年的预算会根据用户数量和贡献来分配，所以每年的预算可能不一样。\n\n我们纪念品每年基本会不一样的选品，可能隔一年或者几年会重复选品，具体还是看当年预计定制数量和单价情况来综合决定。\n\n定制单价 * 预算数量 ≈ 预算总价\n\n预算总价 / 定制单价 ≈ 预算数量\n\n\n# 已经赠送的纪念品\n\n\n# 2025年\n\n * 搅拌杯\n\n\n# 2024年\n\n * 抱枕\n\n\n# 2023年\n\n * 鼠标垫\n * 马克杯\n\n\n# 2022年\n\n * 保温杯\n\n\n# 2021年\n\n * 书签\n * 魔方\n\n\n# 照片墙\n\n【2025】搅拌杯\n\n【2024】抱枕\n\n【2023】鼠标垫\n\n【2023】马克杯\n\n【2022】保温杯\n\n【2021】魔方\n\n【2021】书签\n\nconfig:\n  objectFit: contain\n  imgHeight: 200px\ndata:\n  - img: /images/souvenir/2025-1.png\n    link: /images/souvenir/2025-1.png\n    name: 【2025】搅拌杯\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2024-1.jpg\n    link: /images/souvenir/2024-1.jpg\n    name: 【2024】抱枕\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2023-1.png\n    link: /images/souvenir/2023-1.png\n    name: 【2023】鼠标垫\n    desc: \n    author: \n    avatar: \n  - img: /images/souvenir/2023-2.png\n    link: /images/souvenir/2023-2.png\n    name: 【2023】马克杯\n    desc: \n    author: \n    avatar:\n  - img: /images/souvenir/2022-1.png\n    link: /images/souvenir/2022-1.png\n    name: 【2022】保温杯\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2021-1.png\n    link: /images/souvenir/2021-1.png\n    name: 【2021】魔方\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2021-2.png\n    link: /images/souvenir/2021-2.png\n    name: 【2021】书签\n    desc:\n    author:\n    avatar:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n",normalizedContent:"为了感谢大家对 jpom 的支持我们会在每年年初发放一些专属纪念品，送给我们认为有价值的用户或者赞赏支持（大额赞赏）过我们的用户。\n\n\n# 如何领取\n\n * 保持社群活跃\n * 参与功能贡献 jpom\n * 参与文档贡献 jpom\n * 大额赞赏支持（建议金额 100 元以上）\n\n当您满足条件后请耐心等待我们发放时间，要发放了我们会在社群通知大家\n\n\n# 为啥我没有？\n\n * 可能错过了发放时间\n * 暂时还没有认定您为有价值的用户\n * 您还没有大额赞赏支持过我们\n\n小提示\n\n开源本身不是盈利的，我们不靠开源赚钱但是期望有一些回报，如果您愿意，可以赞赏/捐赠我们。\n\n定制纪念品需要一些费用我们每次数量肯定不会太多，成本也会有限，所以发放时候基本是先到先得，还望理解。\n\n\n# 我想指定品类\n\n抱歉我们目前不支持指定品类的纪念品因为我们每年的预算有限，我们每年的预算会根据用户数量和贡献来分配，所以每年的预算可能不一样。\n\n我们纪念品每年基本会不一样的选品，可能隔一年或者几年会重复选品，具体还是看当年预计定制数量和单价情况来综合决定。\n\n定制单价 * 预算数量 ≈ 预算总价\n\n预算总价 / 定制单价 ≈ 预算数量\n\n\n# 已经赠送的纪念品\n\n\n# 2025年\n\n * 搅拌杯\n\n\n# 2024年\n\n * 抱枕\n\n\n# 2023年\n\n * 鼠标垫\n * 马克杯\n\n\n# 2022年\n\n * 保温杯\n\n\n# 2021年\n\n * 书签\n * 魔方\n\n\n# 照片墙\n\n【2025】搅拌杯\n\n【2024】抱枕\n\n【2023】鼠标垫\n\n【2023】马克杯\n\n【2022】保温杯\n\n【2021】魔方\n\n【2021】书签\n\nconfig:\n  objectfit: contain\n  imgheight: 200px\ndata:\n  - img: /images/souvenir/2025-1.png\n    link: /images/souvenir/2025-1.png\n    name: 【2025】搅拌杯\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2024-1.jpg\n    link: /images/souvenir/2024-1.jpg\n    name: 【2024】抱枕\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2023-1.png\n    link: /images/souvenir/2023-1.png\n    name: 【2023】鼠标垫\n    desc: \n    author: \n    avatar: \n  - img: /images/souvenir/2023-2.png\n    link: /images/souvenir/2023-2.png\n    name: 【2023】马克杯\n    desc: \n    author: \n    avatar:\n  - img: /images/souvenir/2022-1.png\n    link: /images/souvenir/2022-1.png\n    name: 【2022】保温杯\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2021-1.png\n    link: /images/souvenir/2021-1.png\n    name: 【2021】魔方\n    desc:\n    author:\n    avatar:\n  - img: /images/souvenir/2021-2.png\n    link: /images/souvenir/2021-2.png\n    name: 【2021】书签\n    desc:\n    author:\n    avatar:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n",charsets:{cjk:!0},lastUpdated:"2025/03/03, 08:33:30",lastUpdatedTimestamp:174099081e4},{title:"推荐周边",frontmatter:{title:"推荐周边",date:"2024-02-01T11:58:28.000Z",permalink:"/pages/3cfadf/",categories:["docs","支持","周边商品"],tags:["周边商品"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/01.%E5%91%A8%E8%BE%B9%E5%95%86%E5%93%81/10.%E6%8E%A8%E8%8D%90%E5%91%A8%E8%BE%B9.html",relativePath:"支持/01.周边商品/10.推荐周边.md",key:"v-255a0820",path:"/pages/3cfadf/",headers:[{level:2,title:"店铺主页",slug:"店铺主页",normalizedTitle:"店铺主页",charIndex:2},{level:2,title:"推荐商品",slug:"推荐商品",normalizedTitle:"推荐商品",charIndex:98},{level:2,title:"数码 3C 小电子产品",slug:"数码-3c-小电子产品",normalizedTitle:"数码 3c 小电子产品",charIndex:1384},{level:2,title:"电脑",slug:"电脑",normalizedTitle:"电脑",charIndex:1673}],headersStr:"店铺主页 推荐商品 数码 3C 小电子产品 电脑",content:"# 店铺主页\n\n欢迎微信扫码进入店铺选购（微信小店）\n\n店铺的商品并不是很多，如果您有购买 3c 产品的需求可以联系我们看是否有货（我们不一定是最低价，但这样也是支持开源的一种方式）\n\n\n\n\n# 推荐商品\n\n欢迎微信扫码支持（微信小店）：\n\n6双绵袜冬季必备\n\n6双短袜夏季必备\n\n【预售】Jpom纪念品鼠标垫\n\n雷柏有线游戏鼠标V30\n\n罗技有线游戏鼠标G402\n\n雷柏X1800PRO无线鼠标键盘套装\n\nconfig:\n  objectFit: contain\n  imgHeight: 450px\ndata:\n  - img: /images/gift-shop/b2b7e18c4b50f83aa9af96cee6ff908.jpg\n    link: /images/gift-shop/b2b7e18c4b50f83aa9af96cee6ff908.jpg\n    name: 6双绵袜冬季必备\n    desc: \n    author: \n    avatar: \n  - img: /images/gift-shop/84796e0c62e119f65392365e610a0d0.jpg\n    link: /images/gift-shop/84796e0c62e119f65392365e610a0d0.jpg\n    name: 6双短袜夏季必备\n    desc: \n    author: \n    avatar:\n  - img: /images/gift-shop/cd98aee5f2ac446d92251ee04de99766.jpg\n    link: /images/gift-shop/cd98aee5f2ac446d92251ee04de99766.jpg\n    name: 【预售】Jpom纪念品鼠标垫\n    desc:\n    author:\n    avatar:\n  - img: /images/gift-shop/20240201115555.jpg\n    link: /images/gift-shop/20240201115555.jpg\n    name: 雷柏有线游戏鼠标V30\n    desc:\n    author:\n    avatar:\n  - img: /images/gift-shop/20240201115600.jpg\n    link: /images/gift-shop/20240201115600.jpg\n    name: 罗技有线游戏鼠标G402\n    desc:\n    author:\n    avatar:\n  - img: /images/gift-shop/20240201115603.jpg\n    link: /images/gift-shop/20240201115603.jpg\n    name: 雷柏X1800PRO无线鼠标键盘套装\n    desc:\n    author:\n    avatar:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 数码 3C 小电子产品\n\n如果您有购买\n\n * 鼠标、键盘\n * 硬盘、U盘\n * 耳机\n * 路由器、交换机\n * 转换器\n * 等小电子产品\n\n您有需求欢迎联系我们沟通，量大有从优，单买价格可能比网上直接有一定差价\n\n----------------------------------------\n\n我们这边有货源的品牌有：\n\n * 罗技\n * 雷柏\n * 绿联\n * 锐捷\n * 金士顿\n * 闪迪\n * 等品牌\n\n购买说明\n\n如果您是少量购买我们的价格和网上的价格没有太多优势，但是我们期望您通过购买的方式来支持开源。\n\n如果您有批量采购的需求就存在议价空间\n\n\n# 电脑\n\n如果您有购买电脑的需求也可以联系我们，电脑我们可以帮您比价",normalizedContent:"# 店铺主页\n\n欢迎微信扫码进入店铺选购（微信小店）\n\n店铺的商品并不是很多，如果您有购买 3c 产品的需求可以联系我们看是否有货（我们不一定是最低价，但这样也是支持开源的一种方式）\n\n\n\n\n# 推荐商品\n\n欢迎微信扫码支持（微信小店）：\n\n6双绵袜冬季必备\n\n6双短袜夏季必备\n\n【预售】jpom纪念品鼠标垫\n\n雷柏有线游戏鼠标v30\n\n罗技有线游戏鼠标g402\n\n雷柏x1800pro无线鼠标键盘套装\n\nconfig:\n  objectfit: contain\n  imgheight: 450px\ndata:\n  - img: /images/gift-shop/b2b7e18c4b50f83aa9af96cee6ff908.jpg\n    link: /images/gift-shop/b2b7e18c4b50f83aa9af96cee6ff908.jpg\n    name: 6双绵袜冬季必备\n    desc: \n    author: \n    avatar: \n  - img: /images/gift-shop/84796e0c62e119f65392365e610a0d0.jpg\n    link: /images/gift-shop/84796e0c62e119f65392365e610a0d0.jpg\n    name: 6双短袜夏季必备\n    desc: \n    author: \n    avatar:\n  - img: /images/gift-shop/cd98aee5f2ac446d92251ee04de99766.jpg\n    link: /images/gift-shop/cd98aee5f2ac446d92251ee04de99766.jpg\n    name: 【预售】jpom纪念品鼠标垫\n    desc:\n    author:\n    avatar:\n  - img: /images/gift-shop/20240201115555.jpg\n    link: /images/gift-shop/20240201115555.jpg\n    name: 雷柏有线游戏鼠标v30\n    desc:\n    author:\n    avatar:\n  - img: /images/gift-shop/20240201115600.jpg\n    link: /images/gift-shop/20240201115600.jpg\n    name: 罗技有线游戏鼠标g402\n    desc:\n    author:\n    avatar:\n  - img: /images/gift-shop/20240201115603.jpg\n    link: /images/gift-shop/20240201115603.jpg\n    name: 雷柏x1800pro无线鼠标键盘套装\n    desc:\n    author:\n    avatar:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n\n# 数码 3c 小电子产品\n\n如果您有购买\n\n * 鼠标、键盘\n * 硬盘、u盘\n * 耳机\n * 路由器、交换机\n * 转换器\n * 等小电子产品\n\n您有需求欢迎联系我们沟通，量大有从优，单买价格可能比网上直接有一定差价\n\n----------------------------------------\n\n我们这边有货源的品牌有：\n\n * 罗技\n * 雷柏\n * 绿联\n * 锐捷\n * 金士顿\n * 闪迪\n * 等品牌\n\n购买说明\n\n如果您是少量购买我们的价格和网上的价格没有太多优势，但是我们期望您通过购买的方式来支持开源。\n\n如果您有批量采购的需求就存在议价空间\n\n\n# 电脑\n\n如果您有购买电脑的需求也可以联系我们，电脑我们可以帮您比价",charsets:{cjk:!0},lastUpdated:"2024/04/26, 07:02:37",lastUpdatedTimestamp:1714114957e3},{title:"法律风险",frontmatter:{title:"法律风险",date:"2024-03-01T10:34:36.000Z",permalink:"/pages/legal-risk/",categories:["docs","支持","企业服务"],tags:["法律风险"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/03.%E4%BC%81%E4%B8%9A%E6%9C%8D%E5%8A%A1/00.%E6%B3%95%E5%BE%8B%E9%A3%8E%E9%99%A9.html",relativePath:"支持/03.企业服务/00.法律风险.md",key:"v-b99dd972",path:"/pages/legal-risk/",headers:[{level:2,title:"Jpom 开源 License",slug:"jpom-开源-license",normalizedTitle:"jpom 开源 license",charIndex:130},{level:2,title:"Jpom 开源声明",slug:"jpom-开源声明",normalizedTitle:"jpom 开源声明",charIndex:164},{level:2,title:"联系我们授权",slug:"联系我们授权",normalizedTitle:"联系我们授权",charIndex:66},{level:2,title:"侵权线索证据",slug:"侵权线索证据",normalizedTitle:"侵权线索证据",charIndex:805}],headersStr:"Jpom 开源 License Jpom 开源声明 联系我们授权 侵权线索证据",content:"对 Jpom 侵权会造成的法律风险\n\n温馨提醒\n\n开源不等同于免费，如果您基于 Jpom 二次开发修改了 logo、名称、版权等，请联系我们授权，否则会有法律风险。 我们有权利追诉破坏开源并因此获利的团队个人的全部违法所得，也欢迎给我们提供侵权线索。\n\n\n# Jpom 开源 License\n\nMulanPSL-2.0\n\n\n# Jpom 开源声明\n\nNotice\n\nJpom-An open-source, Project operation and maintenance system.\nJpom-项目运维系统。\n\nJpom Declaration / Jpom 声明\n\nIt can be used directly without authorization. All copyrights, patents, trademarks and ownership statements in the product and source code must be retained.\n可直接免费商用，但必须保留本作品及源码中的所有版权、专利、商标和归属声明。\n\nThe attribution statement and copyright notice in the footer cannot be ignored, otherwise it will be deemed as infringement.\n页面等页脚中归属声明及版权声明不可忽略，否则视为侵权。\n\nCopyright https://www.jpom.top  All Rights Reserved.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 联系我们授权\n\n添加小助手微信：jpom66，备注：Jpom 授权+名称\n\n邮箱联系：bwcx_jzy@dromara.org 邮件说明授权信息即可。\n\n\n# 侵权线索证据\n\n我们致力于开源并相信彼此，但是也有会一些人利用我们的信任违法使用此产品并获取利益。 如果您发现了此类情况，欢迎联系我们提供他们的侵权违法线索，我们会将法院判决的对方全部违法所得的 25% ~ 30% 作为感谢给您。我们会按您要求匿名，欢迎支持开源事业。",normalizedContent:"对 jpom 侵权会造成的法律风险\n\n温馨提醒\n\n开源不等同于免费，如果您基于 jpom 二次开发修改了 logo、名称、版权等，请联系我们授权，否则会有法律风险。 我们有权利追诉破坏开源并因此获利的团队个人的全部违法所得，也欢迎给我们提供侵权线索。\n\n\n# jpom 开源 license\n\nmulanpsl-2.0\n\n\n# jpom 开源声明\n\nnotice\n\njpom-an open-source, project operation and maintenance system.\njpom-项目运维系统。\n\njpom declaration / jpom 声明\n\nit can be used directly without authorization. all copyrights, patents, trademarks and ownership statements in the product and source code must be retained.\n可直接免费商用，但必须保留本作品及源码中的所有版权、专利、商标和归属声明。\n\nthe attribution statement and copyright notice in the footer cannot be ignored, otherwise it will be deemed as infringement.\n页面等页脚中归属声明及版权声明不可忽略，否则视为侵权。\n\ncopyright https://www.jpom.top  all rights reserved.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 联系我们授权\n\n添加小助手微信：jpom66，备注：jpom 授权+名称\n\n邮箱联系：bwcx_jzy@dromara.org 邮件说明授权信息即可。\n\n\n# 侵权线索证据\n\n我们致力于开源并相信彼此，但是也有会一些人利用我们的信任违法使用此产品并获取利益。 如果您发现了此类情况，欢迎联系我们提供他们的侵权违法线索，我们会将法院判决的对方全部违法所得的 25% ~ 30% 作为感谢给您。我们会按您要求匿名，欢迎支持开源事业。",charsets:{cjk:!0},lastUpdated:"2024/04/06, 11:01:12",lastUpdatedTimestamp:1712401272e3},{title:"贡献准则",frontmatter:{title:"贡献准则",date:"2022-11-17T12:41:37.000Z",permalink:"/pages/dc18b8/",categories:["docs","支持"],tags:["贡献准则"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/102.%E8%B4%A1%E7%8C%AE%E8%AF%B4%E6%98%8E/102.%E8%B4%A1%E7%8C%AE%E5%87%86%E5%88%99.html",relativePath:"支持/102.贡献说明/102.贡献准则.md",key:"v-6b947f16",path:"/pages/dc18b8/",headers:[{level:2,title:"我要如何做才能成为 Committer",slug:"我要如何做才能成为-committer",normalizedTitle:"我要如何做才能成为 committer",charIndex:261},{level:2,title:"对于长期 Committer 的要求",slug:"对于长期-committer-的要求",normalizedTitle:"对于长期 committer 的要求",charIndex:557},{level:2,title:"提交 PR",slug:"提交-pr",normalizedTitle:"提交 pr",charIndex:688},{level:2,title:"changelog 更新规范",slug:"changelog-更新规范",normalizedTitle:"changelog 更新规范",charIndex:899},{level:2,title:"代码贡献指南",slug:"代码贡献指南",normalizedTitle:"代码贡献指南",charIndex:1213},{level:3,title:"贡献步骤",slug:"贡献步骤",normalizedTitle:"贡献步骤",charIndex:1224},{level:3,title:"项目分支说明",slug:"项目分支说明",normalizedTitle:"项目分支说明",charIndex:1754},{level:2,title:"CLA 协议",slug:"cla-协议",normalizedTitle:"cla 协议",charIndex:1963}],headersStr:"我要如何做才能成为 Committer 对于长期 Committer 的要求 提交 PR changelog 更新规范 代码贡献指南 贡献步骤 项目分支说明 CLA 协议",content:"我希望对开源有热情的朋友都来参与贡献 Jpom，让这个项目变的越来越好。\n\nJpom 作为开源项目，离不开社区的支持，欢迎任何人修改和提出建议。贡献无论大小，您的贡献会帮助背后成千上万的使用者以及开发者，您做出的贡献也会永远的保留在项目的贡献者名单中，这也是开源项目的意义所在！\n\n参与 Jpom 功能包括但不限于如下：\n\n * 参与代码编写\n * 参与文档编写\n * 参与社群答疑\n * 参与博文编写\n\n> 赞赏也是对我们的支持，如果您觉得 Jpom 对您有帮助以及觉得 Jpom 不错都可以为进行💖赞赏支持\n\n\n# 我要如何做才能成为 Committer\n\n需要您对开源有热情，技术扎实，有一颗用爱发电的心。\n\n您需要加入 Jpom 的社区群，如何加入请参考加入社区讨论，表示有意成为开发者。\n\n您需要熟读源码，理解核心代码的逻辑。\n\n然后可以去 gitee issue页、github issue页 查看 issue 列表并进行认领。\n\n或者您有相关建议自己进行创建 issue 并进行修复也是可以的。\n\n在相关 issue 下回复“认领”就可以了，然后私聊告诉我。如果已经有相关同学已经认领了，请不要重复认领。\n\n完成 3个issue 并成功通过审核并合并，我会邀请您成为 Committer。\n\n\n# 对于长期 Committer 的要求\n\n * 需要对开源有热情，技术扎实，有一颗用爱发电的心。\n * 理解核心代码逻辑。时刻保持学习的心。\n * 需要每个月贡献至少 1个PR 并成功通过审核并合并。\n * 需要参与社区群的建设，积极回答问题和进行宣传。\n\n\n# 提交 PR\n\nJpom 的 PR 统一在 Gitee 平台上进行提交，如果您不知道如何提交 PR，可以在 Gitee 平台里去学习。这里不作说明。\n\n提 PR 有以下注意点。\n\n * fork 后切换到dev分支，请以这个分支为开发基准。\n * 所有的 PR 提交到dev分支，这个分支为开发分支。\n * 当您对功能进行了新增、修复、优化功能均需要编写 CHANGELOG.md (CHANGELOG 规范如下)\n\n\n# changelog 更新规范\n\n> 在新加功能、修复bug、优化功能在完成时候都需要在 CHANGELOG.md 记录\n\n 1. 如果是使用者反馈的bug，在修复后需要备注反馈人的昵称\n 2. 如果是 issue 需要备注 issue 地址以及平台（Gitee、GitHub）\n 3. 如果是 pr 需要备注 pr 地址以及平台（Gitee、GitHub）\n 4. 根据变动情况确定影响范围：如果影响 只：agent、server 其中一个，就使用【agent】、【server】开头，如果都影响就不用\n 5. 可以视情况添加其他说明：如提交记录\n 6. emoji 表情参考：https://emojixd.com/\n\n\n# 代码贡献指南\n\n\n# 贡献步骤\n\n 1. Fork 本仓库。https://gitee.com/dromara/Jpom/\n\n 2. Fork 后会在您的账号下多了一个和本仓库一模一样的仓库，把您账号的仓库 clone 到本地。\n    \n    注意替换掉链接中的分支名和用户名。\n    \n    如果是贡献代码，分支名填 dev；如果是贡献文档，分支名填 docs\n    \n    git clone -b 分支名 https://gitee.com/用户名/Jpom.git\n    \n    \n    1\n    \n\n 3. 修改代码/文档，修改后提交上来。\n    \n    # 把修改的文件添加到暂存区\n    git add .\n    # 提交到本地仓库，说明您具体做了什么修改\n    git commit -m '填写您做了什么修改'\n    # 推送到远程仓库，分支名替换成 dev 或者 docs\n    git push origin 分支名\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 4. 登录您的仓库，然后会看到一条 PR 请求，点击请求合并，等待管理员把您的代码合并进来。\n\n\n# 项目分支说明\n\n分支       说明\nmaster   主分支，受保护分支，此分支不接受 PR。在 dev 分支后经过测试没问题后会合并到此分支。\ndev      开发分支，接受 PR，PR 请提交到 dev 分支。\ndocs     项目文档分支，接受 PR，介绍项目功能、汇总常见问题等。\n\n> 目前用到的主要是 dev 和 docs 分支，接受 PR 修改，其他的分支为归档分支，贡献者可以不用管。\n\n\n# CLA 协议\n\n * CLA协议\n\n提交贡献即认为签署了本协议，若对本协议有异议，请勿提交贡献。",normalizedContent:"我希望对开源有热情的朋友都来参与贡献 jpom，让这个项目变的越来越好。\n\njpom 作为开源项目，离不开社区的支持，欢迎任何人修改和提出建议。贡献无论大小，您的贡献会帮助背后成千上万的使用者以及开发者，您做出的贡献也会永远的保留在项目的贡献者名单中，这也是开源项目的意义所在！\n\n参与 jpom 功能包括但不限于如下：\n\n * 参与代码编写\n * 参与文档编写\n * 参与社群答疑\n * 参与博文编写\n\n> 赞赏也是对我们的支持，如果您觉得 jpom 对您有帮助以及觉得 jpom 不错都可以为进行💖赞赏支持\n\n\n# 我要如何做才能成为 committer\n\n需要您对开源有热情，技术扎实，有一颗用爱发电的心。\n\n您需要加入 jpom 的社区群，如何加入请参考加入社区讨论，表示有意成为开发者。\n\n您需要熟读源码，理解核心代码的逻辑。\n\n然后可以去 gitee issue页、github issue页 查看 issue 列表并进行认领。\n\n或者您有相关建议自己进行创建 issue 并进行修复也是可以的。\n\n在相关 issue 下回复“认领”就可以了，然后私聊告诉我。如果已经有相关同学已经认领了，请不要重复认领。\n\n完成 3个issue 并成功通过审核并合并，我会邀请您成为 committer。\n\n\n# 对于长期 committer 的要求\n\n * 需要对开源有热情，技术扎实，有一颗用爱发电的心。\n * 理解核心代码逻辑。时刻保持学习的心。\n * 需要每个月贡献至少 1个pr 并成功通过审核并合并。\n * 需要参与社区群的建设，积极回答问题和进行宣传。\n\n\n# 提交 pr\n\njpom 的 pr 统一在 gitee 平台上进行提交，如果您不知道如何提交 pr，可以在 gitee 平台里去学习。这里不作说明。\n\n提 pr 有以下注意点。\n\n * fork 后切换到dev分支，请以这个分支为开发基准。\n * 所有的 pr 提交到dev分支，这个分支为开发分支。\n * 当您对功能进行了新增、修复、优化功能均需要编写 changelog.md (changelog 规范如下)\n\n\n# changelog 更新规范\n\n> 在新加功能、修复bug、优化功能在完成时候都需要在 changelog.md 记录\n\n 1. 如果是使用者反馈的bug，在修复后需要备注反馈人的昵称\n 2. 如果是 issue 需要备注 issue 地址以及平台（gitee、github）\n 3. 如果是 pr 需要备注 pr 地址以及平台（gitee、github）\n 4. 根据变动情况确定影响范围：如果影响 只：agent、server 其中一个，就使用【agent】、【server】开头，如果都影响就不用\n 5. 可以视情况添加其他说明：如提交记录\n 6. emoji 表情参考：https://emojixd.com/\n\n\n# 代码贡献指南\n\n\n# 贡献步骤\n\n 1. fork 本仓库。https://gitee.com/dromara/jpom/\n\n 2. fork 后会在您的账号下多了一个和本仓库一模一样的仓库，把您账号的仓库 clone 到本地。\n    \n    注意替换掉链接中的分支名和用户名。\n    \n    如果是贡献代码，分支名填 dev；如果是贡献文档，分支名填 docs\n    \n    git clone -b 分支名 https://gitee.com/用户名/jpom.git\n    \n    \n    1\n    \n\n 3. 修改代码/文档，修改后提交上来。\n    \n    # 把修改的文件添加到暂存区\n    git add .\n    # 提交到本地仓库，说明您具体做了什么修改\n    git commit -m '填写您做了什么修改'\n    # 推送到远程仓库，分支名替换成 dev 或者 docs\n    git push origin 分支名\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    \n\n 4. 登录您的仓库，然后会看到一条 pr 请求，点击请求合并，等待管理员把您的代码合并进来。\n\n\n# 项目分支说明\n\n分支       说明\nmaster   主分支，受保护分支，此分支不接受 pr。在 dev 分支后经过测试没问题后会合并到此分支。\ndev      开发分支，接受 pr，pr 请提交到 dev 分支。\ndocs     项目文档分支，接受 pr，介绍项目功能、汇总常见问题等。\n\n> 目前用到的主要是 dev 和 docs 分支，接受 pr 修改，其他的分支为归档分支，贡献者可以不用管。\n\n\n# cla 协议\n\n * cla协议\n\n提交贡献即认为签署了本协议，若对本协议有异议，请勿提交贡献。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"企业服务",frontmatter:{title:"企业服务",date:"2023-04-12T09:31:24.000Z",permalink:"/pages/enterprise-service/",categories:["docs","支持"],tags:["企业服务"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/03.%E4%BC%81%E4%B8%9A%E6%9C%8D%E5%8A%A1/03.%E4%BC%81%E4%B8%9A%E6%9C%8D%E5%8A%A1.html",relativePath:"支持/03.企业服务/03.企业服务.md",key:"v-0cad66ab",path:"/pages/enterprise-service/",headers:[{level:2,title:"为啥需要企业服务",slug:"为啥需要企业服务",normalizedTitle:"为啥需要企业服务",charIndex:2},{level:2,title:"服务内容",slug:"服务内容",normalizedTitle:"服务内容",charIndex:146},{level:2,title:"服务方式",slug:"服务方式",normalizedTitle:"服务方式",charIndex:228},{level:2,title:"方案明细",slug:"方案明细",normalizedTitle:"方案明细",charIndex:326},{level:2,title:"服务时间",slug:"服务时间",normalizedTitle:"服务时间",charIndex:734},{level:2,title:"联系方式",slug:"联系方式",normalizedTitle:"联系方式",charIndex:782}],headersStr:"为啥需要企业服务 服务内容 服务方式 方案明细 服务时间 联系方式",content:"# 为啥需要企业服务\n\nQ: 如您在企业内部需要大量使用或者集团使用没有一个专属的使用文档或者培训方案？\n\nQ: 您想在 Jpom 现有功能上做定制功能开发 ？\n\nQ: 想在企业内部基于 Jpom 做二次开发需要技术支持 ？\n\nQ: 想给部门成员培训 Jpom 的日常使用最佳实践？\n\n\n# 服务内容\n\n目前我们主要服务内容如下\n\n * 在线培训指导\n * 专属使用文档\n * 定制专属方案\n * 定制开发功能(暂不开放)\n * 二开技术方案支持\n\n\n# 服务方式\n\n我们目前可以根据企业的需求提供不同方式的服务，主要的服务方式如下\n\n * 按次付费\n * 固定周期服务（单位按月计算）\n * 二开技术方案支持\n * 定制开发支持(暂不开放)\n\n\n# 方案明细\n\n方案     时长     价格                                内容                                           付款方式\n按次付费   小时收费   2小时内：500元/一次，超过2小时按小时叠加：300元/小时   远程协助部署、安装、配置使用、远程培训                          确定服务后先付款，再进行远程协助相关事宜\n固定周期   按月收费   现价：8000元/月，原价：10000元/月            远程协助部署、安装、配置使用、远程培训、专属解决方案、程序 bug 1个工作日内解决   确定服务后先付款，再进行远程协助相关事宜\n\n温馨提醒\n\n如果过您需要使用企业服务，请提前了解 Jpom 是否合适您企业的规划和管理流程，避免付费后发现和预期不匹配相关问题造成不必要麻烦\n\n\n# 服务时间\n\n * 工作日：08:00-22:00\n * 节假日：09:00-18:00\n\n\n# 联系方式\n\n扫描下方小助手微信二维码并安装小助手提示进群（添加小助手：备注 Jpom 进群）\n\n如果添加二维码失效，可以发送邮件联系：bwcx_jzy@dromara.org\n\n\n\n> 如果您想更快与我们直接联系请先走个人赞赏服务 100元 后我们将直接与您联系（前提您已经进入微信群）",normalizedContent:"# 为啥需要企业服务\n\nq: 如您在企业内部需要大量使用或者集团使用没有一个专属的使用文档或者培训方案？\n\nq: 您想在 jpom 现有功能上做定制功能开发 ？\n\nq: 想在企业内部基于 jpom 做二次开发需要技术支持 ？\n\nq: 想给部门成员培训 jpom 的日常使用最佳实践？\n\n\n# 服务内容\n\n目前我们主要服务内容如下\n\n * 在线培训指导\n * 专属使用文档\n * 定制专属方案\n * 定制开发功能(暂不开放)\n * 二开技术方案支持\n\n\n# 服务方式\n\n我们目前可以根据企业的需求提供不同方式的服务，主要的服务方式如下\n\n * 按次付费\n * 固定周期服务（单位按月计算）\n * 二开技术方案支持\n * 定制开发支持(暂不开放)\n\n\n# 方案明细\n\n方案     时长     价格                                内容                                           付款方式\n按次付费   小时收费   2小时内：500元/一次，超过2小时按小时叠加：300元/小时   远程协助部署、安装、配置使用、远程培训                          确定服务后先付款，再进行远程协助相关事宜\n固定周期   按月收费   现价：8000元/月，原价：10000元/月            远程协助部署、安装、配置使用、远程培训、专属解决方案、程序 bug 1个工作日内解决   确定服务后先付款，再进行远程协助相关事宜\n\n温馨提醒\n\n如果过您需要使用企业服务，请提前了解 jpom 是否合适您企业的规划和管理流程，避免付费后发现和预期不匹配相关问题造成不必要麻烦\n\n\n# 服务时间\n\n * 工作日：08:00-22:00\n * 节假日：09:00-18:00\n\n\n# 联系方式\n\n扫描下方小助手微信二维码并安装小助手提示进群（添加小助手：备注 jpom 进群）\n\n如果添加二维码失效，可以发送邮件联系：bwcx_jzy@dromara.org\n\n\n\n> 如果您想更快与我们直接联系请先走个人赞赏服务 100元 后我们将直接与您联系（前提您已经进入微信群）",charsets:{cjk:!0},lastUpdated:"2024/04/26, 07:02:37",lastUpdatedTimestamp:1714114957e3},{title:"周边商品",frontmatter:{title:"周边商品",date:"2024-01-03T12:04:59.000Z",permalink:"/pages/shop/",categories:["docs","支持","赞赏支持"],tags:["周边","商品"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/01.%E5%91%A8%E8%BE%B9%E5%95%86%E5%93%81/02.%E5%91%A8%E8%BE%B9%E5%95%86%E5%93%81.html",relativePath:"支持/01.周边商品/02.周边商品.md",key:"v-23586a79",path:"/pages/shop/",headers:[{level:2,title:"为什么？",slug:"为什么",normalizedTitle:"为什么？",charIndex:2},{level:2,title:"维持开源",slug:"维持开源",normalizedTitle:"维持开源",charIndex:84},{level:2,title:"关于定价",slug:"关于定价",normalizedTitle:"关于定价",charIndex:458},{level:2,title:"店铺主页",slug:"店铺主页",normalizedTitle:"店铺主页",charIndex:604},{level:2,title:"关于退货",slug:"关于退货",normalizedTitle:"关于退货",charIndex:635}],headersStr:"为什么？ 维持开源 关于定价 店铺主页 关于退货",content:"# 为什么？\n\nQ: 我们为啥走向销售周边商品的道路？\n\n首先 Jpom 是一个开源的 Java 项目，但是开源项目本身是没有很好的盈利途径，所以我们需要通过其他方式来维持开源项目的持续发展。\n\n我们之前一直是走赞赏的方式，但是考虑到赞赏后仅仅是有一个支付行为没有得到任何的实际获得，所以我们考虑到销售周边商品的方式来让您的支持也能得到一个实际的物品而不是一个虚拟的支付（公示）行为。\n\n提醒\n\n如果您不想购买周边商品，仍然想支持我们您还是可以直接赞赏我们：我要赞赏\n\n\n# 维持开源\n\n我们相信有了大家的支持 Jpom 项目才能走的更远，我们也才能更有动力去迭代开发维护 Jpom 项目，因为仅仅是靠为爱发电是很难长久维持下去。\n\n开源项目本身是没有很好的盈利途径，但是为了生计我们也是需要考虑投入和回报的。\n\n所以经过慎重考虑，我们决定开启周边商品的销售，让销售商品的利润维持开源。\n\n欢迎您通过购买 Jpom 的周边商品来支持 Jpom 维护哦，这样您不仅获得了一个小商品还无形的支持了开源项目发展！\n\n\n# 关于定价\n\n首先我们周边商品的定价基本会控制在 100 元左右，不会太高，我们也会根据我们能联系到的最优货源来及时调整周边商品的价格。\n\n产品定价=成本价+快递费+利润（维持开源）\n\n我们会把利润控制到 10% ~ 30% 之间\n\n选购提醒\n\n如果您介意我们这个利润区间请勿下单购买\n\n\n# 店铺主页\n\n欢迎微信扫码进入店铺选购（微信小店）\n\n\n\n\n# 关于退货\n\n由于周边商品本身是小本生意如果非质量问题我们恳请您不要退货，谢谢！\n\n如果是定制（印有 Jpom logo）商品是不支持七天无理由退货\n\n如果您买的商品有质量问题请及时联系客服，客服会跟进处理感谢您的理解和支持！",normalizedContent:"# 为什么？\n\nq: 我们为啥走向销售周边商品的道路？\n\n首先 jpom 是一个开源的 java 项目，但是开源项目本身是没有很好的盈利途径，所以我们需要通过其他方式来维持开源项目的持续发展。\n\n我们之前一直是走赞赏的方式，但是考虑到赞赏后仅仅是有一个支付行为没有得到任何的实际获得，所以我们考虑到销售周边商品的方式来让您的支持也能得到一个实际的物品而不是一个虚拟的支付（公示）行为。\n\n提醒\n\n如果您不想购买周边商品，仍然想支持我们您还是可以直接赞赏我们：我要赞赏\n\n\n# 维持开源\n\n我们相信有了大家的支持 jpom 项目才能走的更远，我们也才能更有动力去迭代开发维护 jpom 项目，因为仅仅是靠为爱发电是很难长久维持下去。\n\n开源项目本身是没有很好的盈利途径，但是为了生计我们也是需要考虑投入和回报的。\n\n所以经过慎重考虑，我们决定开启周边商品的销售，让销售商品的利润维持开源。\n\n欢迎您通过购买 jpom 的周边商品来支持 jpom 维护哦，这样您不仅获得了一个小商品还无形的支持了开源项目发展！\n\n\n# 关于定价\n\n首先我们周边商品的定价基本会控制在 100 元左右，不会太高，我们也会根据我们能联系到的最优货源来及时调整周边商品的价格。\n\n产品定价=成本价+快递费+利润（维持开源）\n\n我们会把利润控制到 10% ~ 30% 之间\n\n选购提醒\n\n如果您介意我们这个利润区间请勿下单购买\n\n\n# 店铺主页\n\n欢迎微信扫码进入店铺选购（微信小店）\n\n\n\n\n# 关于退货\n\n由于周边商品本身是小本生意如果非质量问题我们恳请您不要退货，谢谢！\n\n如果是定制（印有 jpom logo）商品是不支持七天无理由退货\n\n如果您买的商品有质量问题请及时联系客服，客服会跟进处理感谢您的理解和支持！",charsets:{cjk:!0},lastUpdated:"2024/04/26, 07:02:37",lastUpdatedTimestamp:1714114957e3},{title:"我们用户",frontmatter:{title:"我们用户",date:"2022-10-21T14:47:35.000Z",permalink:"/pages/user/",categories:["docs","支持"],tags:["我们用户"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/109.%E6%88%91%E4%BB%AC%E7%94%A8%E6%88%B7.html",relativePath:"支持/109.我们用户.md",key:"v-52726112",path:"/pages/user/",headers:[{level:2,title:"用户列表",slug:"用户列表",normalizedTitle:"用户列表",charIndex:57},{level:3,title:"公司名称",slug:"公司名称",normalizedTitle:"公司名称",charIndex:66},{level:3,title:"LOGO 展示",slug:"logo-展示",normalizedTitle:"logo 展示",charIndex:399}],headersStr:"用户列表 公司名称 LOGO 展示",content:"Jpom 感谢各位小伙伴的信任与支持，如果您在公司使用了 Jpom ，希望您留下您的公司或组织信息：登记\n\n\n# 用户列表\n\n\n# 公司名称\n\n * 长沙兆吉信息科技有限公司\n * 山东大小同屏科技有限公司\n * 中科美菱低温科技股份有限公司\n * 苏州威视通智能科技有限公司\n * 深圳市咪笑儿童教育科技有限公司\n * 浙江和达科技股份有限公司\n * 广州九一互联有限公司\n * 烟台智途科技有限公司\n * 郑州迪维勒普科技有限公司\n * 神州通立电梯有限公司\n * 重庆银城震天科技有限公司\n * 深圳市久通物联股份有限公司\n * 深圳数美达科技有限公司\n * 江西拓界奥翔科技有限公司\n * 中科量云(北京)科技有限公司\n * 福建亿榕信息技术有限公司\n * 河南龙翼信息技术有限公司\n * 杭州福瑞佳美健康科技有限公司\n * 杭州亿邦通信科技有限公司\n * 深圳汉尼康科技有限公司\n\n\n# LOGO 展示\n\n\n\n为了更好地为您提供服务,请在此登记。",normalizedContent:"jpom 感谢各位小伙伴的信任与支持，如果您在公司使用了 jpom ，希望您留下您的公司或组织信息：登记\n\n\n# 用户列表\n\n\n# 公司名称\n\n * 长沙兆吉信息科技有限公司\n * 山东大小同屏科技有限公司\n * 中科美菱低温科技股份有限公司\n * 苏州威视通智能科技有限公司\n * 深圳市咪笑儿童教育科技有限公司\n * 浙江和达科技股份有限公司\n * 广州九一互联有限公司\n * 烟台智途科技有限公司\n * 郑州迪维勒普科技有限公司\n * 神州通立电梯有限公司\n * 重庆银城震天科技有限公司\n * 深圳市久通物联股份有限公司\n * 深圳数美达科技有限公司\n * 江西拓界奥翔科技有限公司\n * 中科量云(北京)科技有限公司\n * 福建亿榕信息技术有限公司\n * 河南龙翼信息技术有限公司\n * 杭州福瑞佳美健康科技有限公司\n * 杭州亿邦通信科技有限公司\n * 深圳汉尼康科技有限公司\n\n\n# logo 展示\n\n\n\n为了更好地为您提供服务,请在此登记。",charsets:{cjk:!0},lastUpdated:"2025/02/11, 04:00:28",lastUpdatedTimestamp:1739246428e3},{title:"加入社群",frontmatter:{title:"加入社群",date:"2022-06-11T17:46:54.000Z",permalink:"/pages/praise/join/",tags:["社群"],categories:["docs","赞赏"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/110.%E5%8A%A0%E5%85%A5%E7%A4%BE%E7%BE%A4.html",relativePath:"支持/110.加入社群.md",key:"v-6418f247",path:"/pages/praise/join/",headers:[{level:2,title:"付费社群",slug:"付费社群",normalizedTitle:"付费社群",charIndex:105},{level:3,title:"解答时间",slug:"解答时间",normalizedTitle:"解答时间",charIndex:602},{level:3,title:"社群规则",slug:"社群规则",normalizedTitle:"社群规则",charIndex:671},{level:2,title:"免费社群",slug:"免费社群",normalizedTitle:"免费社群",charIndex:992},{level:3,title:"社群规则",slug:"社群规则-2",normalizedTitle:"社群规则",charIndex:671},{level:2,title:"加入社群",slug:"加入社群",normalizedTitle:"加入社群",charIndex:354},{level:3,title:"添加备注",slug:"添加备注",normalizedTitle:"添加备注",charIndex:1350},{level:2,title:"最后的建议",slug:"最后的建议",normalizedTitle:"最后的建议",charIndex:1473},{level:2,title:"社群失联？",slug:"社群失联",normalizedTitle:"社群失联？",charIndex:1757}],headersStr:"付费社群 解答时间 社群规则 免费社群 社群规则 加入社群 添加备注 最后的建议 社群失联？",content:"Jpom 是一款简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件，自从开源以来，我们收到了很多人的使用反馈，听取这些反馈进行迭代和新特性开发。\n\n您在使用中有问题，或者想咨询了解，可以加入群聊（免费/付费社群），付费社群中我们会尽量答复每一个人的疑问（请注意提问的方式，良好的提问和沟通方式才能提高我们沟通质量）。\n\n我们建议您阅读：\n\n * 提问的智慧\n * 高效报告 BUG\n\n温馨提示\n\n如果您的问题比较着急想优先解答或者需要远程协助您可以选择我们的赞赏支持服务来加速您的问题的解答\n\n您可以到选择：\n\n * 个人赞赏服务方案：服务说明 选择合适您的赞赏服务方案\n * 企业技术服务方案：服务说明 选择合适您企业的服务方案\n\n\n# 付费社群\n\n注意\n\n付费社群 != 赞赏支持\n\n通过付费方式加入社群的金额和记录不会被公开，赞赏的金额和记录都将公示\n\n付费社群为 Jpom 用户提供了更专业、更高效、更优质的服务，您可以在里面获得更快速地解答，并且可以获得更优质的服务。\n\n付费金额：（金额会不定期调整）\n\n * 30元/月\n * 80元/季度\n * 300元/年\n\n付费方式：添加小助手微信：jpom66，备注：Jpom 付费社群\n\n支付费用：当添加上小助手微信后请发起转账（微信红包不接收）\n\n流程注意：小助手不会回答非必要问题（请严格按照流程），如果需要请提前想法加入社群\n\n\n# 解答时间\n\n此时间是为推荐时间、其他时间回复可能会延迟\n\n * 工作日：8:00-23:00\n * 周末：10:00-22:00\n\n\n# 社群规则\n\n 1. 付费社群中请勿长时间无意义聊天或者敏感话题，如果有违规行为或者严重影响他人我们会将您踢出社群并且概不退款\n 2. 请勿在社群中转发或者发布任何广告、推广、商业信息、个人联系方式等，否则会被移出群聊\n 3. 请勿在社群中发布任何违反国家法律法规的内容\n 4. 请勿在社群中发布任何违反 Jpom 社区公约的内容\n\n注意\n\n风险告知：付费不一定能解决您的问题，但是会给您一个合理的解答。如果您期望付费就一定解决您的问题请不要选择我们的付费社群，因为 TA 不适合您。\n\n----------------------------------------\n\n开源项目请一定友好交流，请不要以客户至上的心态参与开源项目交流\n\n\n# 免费社群\n\n免费社群为 Jpom 用户提供了交流和讨论问题的平台，您可以在里面提问，也可以回答其他用户的提问。\n\n但是如果需要更官方或者优先级更搞的解答请选择付费社群\n\n免费社群我们可能随时会取消\n\n免费开源+付费技术支持才能更好地促进发展\n\n\n# 社群规则\n\n 1. 请勿在免费社群中 @ 群主或者管理，@ 也不会加快或者提前解答您的问题。\n 2. 免费社群的问题解答一般靠热心网友或者群主、管理随心解答（紧急问题请使用付费社群）\n 3. 请勿在社群中转发或者发布任何广告、推广、商业信息、个人联系方式等，否则会被移出群聊\n 4. 请勿在社群中发布任何违反国家法律法规的内容\n 5. 请勿在社群中发布任何违反 Jpom 社区公约的内容\n\n\n# 加入社群\n\n快扫描下方左侧微信群二维码和我们一起交流讨论吧！\n\n\n# 添加备注\n\n添加小助手时请一定备注：\n\n 1. 备注：Jpom 社群 表示您期望加入免费社群\n 2. 备注：Jpom 付费社群 表示您期望加入付费社群\n\n\n\n注意\n\n小助手不会回答非必要问题（请严格按照流程），如果需要请提前想法加入社群\n\n\n# 最后的建议\n\n我们还请您本着友善的态度来参与 Jpom 的交流沟通，良好的沟通方式和友善的态度才能促进解决您的问题，反之可能没有办法解决您的问题，严重者我们将踢出社群（付费社群中概不退款）。\n\n还有我们非常不期望使用指点的方式来建议 Jpom 该如何发展或者新增某某功能，如果您对 Jpom 的功能迭代、长期发展方向有任何建议我们都会虚心倾听，但是采纳与否我们还是会根据实际情况来评估，不会因为您的 完美建议 就直接改变，如果您真的有很好的 idea 请给出完整的可行性书面方案（不太愿意接受口头上的方案）\n\n> 我们非常欢迎有合作意向的同仁与我联系合作事宜\n\n\n# 社群失联？\n\n如果二维码或者微信号失效了\n\n如果添加社群二维码失效，可以发送邮件联系：bwcx_jzy@dromara.org",normalizedContent:"jpom 是一款简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件，自从开源以来，我们收到了很多人的使用反馈，听取这些反馈进行迭代和新特性开发。\n\n您在使用中有问题，或者想咨询了解，可以加入群聊（免费/付费社群），付费社群中我们会尽量答复每一个人的疑问（请注意提问的方式，良好的提问和沟通方式才能提高我们沟通质量）。\n\n我们建议您阅读：\n\n * 提问的智慧\n * 高效报告 bug\n\n温馨提示\n\n如果您的问题比较着急想优先解答或者需要远程协助您可以选择我们的赞赏支持服务来加速您的问题的解答\n\n您可以到选择：\n\n * 个人赞赏服务方案：服务说明 选择合适您的赞赏服务方案\n * 企业技术服务方案：服务说明 选择合适您企业的服务方案\n\n\n# 付费社群\n\n注意\n\n付费社群 != 赞赏支持\n\n通过付费方式加入社群的金额和记录不会被公开，赞赏的金额和记录都将公示\n\n付费社群为 jpom 用户提供了更专业、更高效、更优质的服务，您可以在里面获得更快速地解答，并且可以获得更优质的服务。\n\n付费金额：（金额会不定期调整）\n\n * 30元/月\n * 80元/季度\n * 300元/年\n\n付费方式：添加小助手微信：jpom66，备注：jpom 付费社群\n\n支付费用：当添加上小助手微信后请发起转账（微信红包不接收）\n\n流程注意：小助手不会回答非必要问题（请严格按照流程），如果需要请提前想法加入社群\n\n\n# 解答时间\n\n此时间是为推荐时间、其他时间回复可能会延迟\n\n * 工作日：8:00-23:00\n * 周末：10:00-22:00\n\n\n# 社群规则\n\n 1. 付费社群中请勿长时间无意义聊天或者敏感话题，如果有违规行为或者严重影响他人我们会将您踢出社群并且概不退款\n 2. 请勿在社群中转发或者发布任何广告、推广、商业信息、个人联系方式等，否则会被移出群聊\n 3. 请勿在社群中发布任何违反国家法律法规的内容\n 4. 请勿在社群中发布任何违反 jpom 社区公约的内容\n\n注意\n\n风险告知：付费不一定能解决您的问题，但是会给您一个合理的解答。如果您期望付费就一定解决您的问题请不要选择我们的付费社群，因为 ta 不适合您。\n\n----------------------------------------\n\n开源项目请一定友好交流，请不要以客户至上的心态参与开源项目交流\n\n\n# 免费社群\n\n免费社群为 jpom 用户提供了交流和讨论问题的平台，您可以在里面提问，也可以回答其他用户的提问。\n\n但是如果需要更官方或者优先级更搞的解答请选择付费社群\n\n免费社群我们可能随时会取消\n\n免费开源+付费技术支持才能更好地促进发展\n\n\n# 社群规则\n\n 1. 请勿在免费社群中 @ 群主或者管理，@ 也不会加快或者提前解答您的问题。\n 2. 免费社群的问题解答一般靠热心网友或者群主、管理随心解答（紧急问题请使用付费社群）\n 3. 请勿在社群中转发或者发布任何广告、推广、商业信息、个人联系方式等，否则会被移出群聊\n 4. 请勿在社群中发布任何违反国家法律法规的内容\n 5. 请勿在社群中发布任何违反 jpom 社区公约的内容\n\n\n# 加入社群\n\n快扫描下方左侧微信群二维码和我们一起交流讨论吧！\n\n\n# 添加备注\n\n添加小助手时请一定备注：\n\n 1. 备注：jpom 社群 表示您期望加入免费社群\n 2. 备注：jpom 付费社群 表示您期望加入付费社群\n\n\n\n注意\n\n小助手不会回答非必要问题（请严格按照流程），如果需要请提前想法加入社群\n\n\n# 最后的建议\n\n我们还请您本着友善的态度来参与 jpom 的交流沟通，良好的沟通方式和友善的态度才能促进解决您的问题，反之可能没有办法解决您的问题，严重者我们将踢出社群（付费社群中概不退款）。\n\n还有我们非常不期望使用指点的方式来建议 jpom 该如何发展或者新增某某功能，如果您对 jpom 的功能迭代、长期发展方向有任何建议我们都会虚心倾听，但是采纳与否我们还是会根据实际情况来评估，不会因为您的 完美建议 就直接改变，如果您真的有很好的 idea 请给出完整的可行性书面方案（不太愿意接受口头上的方案）\n\n> 我们非常欢迎有合作意向的同仁与我联系合作事宜\n\n\n# 社群失联？\n\n如果二维码或者微信号失效了\n\n如果添加社群二维码失效，可以发送邮件联系：bwcx_jzy@dromara.org",charsets:{cjk:!0},lastUpdated:"2024/04/26, 07:02:37",lastUpdatedTimestamp:1714114957e3},{title:"了解Jpom",frontmatter:{title:"了解Jpom",date:"2023-12-20T21:20:26.000Z",permalink:"/pages/readme/",categories:["docs","文档","序言"],tags:["序言"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/02.%E4%BA%86%E8%A7%A3Jpom.html",relativePath:"文档/00.自述序言/02.了解Jpom.md",key:"v-535f78d0",path:"/pages/readme/",headers:[{level:2,title:"欢迎&感谢",slug:"欢迎-感谢",normalizedTitle:"欢迎&amp;感谢",charIndex:null},{level:2,title:"dromara 开源社区",slug:"dromara-开源社区",normalizedTitle:"dromara 开源社区",charIndex:27},{level:2,title:"序",slug:"序",normalizedTitle:"序",charIndex:256},{level:2,title:"名称来源",slug:"名称来源",normalizedTitle:"名称来源",charIndex:434},{level:2,title:"前生",slug:"前生",normalizedTitle:"前生",charIndex:511},{level:2,title:"主要时间线",slug:"主要时间线",normalizedTitle:"主要时间线",charIndex:895},{level:2,title:"谁在开发？",slug:"谁在开发",normalizedTitle:"谁在开发？",charIndex:1654},{level:2,title:"开源协议",slug:"开源协议",normalizedTitle:"开源协议",charIndex:1827},{level:2,title:"技术栈",slug:"技术栈",normalizedTitle:"技术栈",charIndex:1944},{level:3,title:"后端",slug:"后端",normalizedTitle:"后端",charIndex:1958},{level:3,title:"前端",slug:"前端",normalizedTitle:"前端",charIndex:1979},{level:3,title:"主要通讯协议",slug:"主要通讯协议",normalizedTitle:"主要通讯协议",charIndex:2504},{level:2,title:"并发&事务",slug:"并发-事务",normalizedTitle:"并发&amp;事务",charIndex:null},{level:2,title:"荣誉",slug:"荣誉",normalizedTitle:"荣誉",charIndex:2671},{level:2,title:"关于作者",slug:"关于作者",normalizedTitle:"关于作者",charIndex:2745},{level:2,title:"和 XXXX 区别/对比",slug:"和-xxxx-区别-对比",normalizedTitle:"和 xxxx 区别/对比",charIndex:2955},{level:3,title:"Jpom Vs Jenkins",slug:"jpom-vs-jenkins",normalizedTitle:"jpom vs jenkins",charIndex:2972},{level:3,title:"Jpom Vs 建木（jianmu.dev）",slug:"jpom-vs-建木-jianmu-dev",normalizedTitle:"jpom vs 建木（jianmu.dev）",charIndex:3396},{level:3,title:"Jpom Vs 宝塔",slug:"jpom-vs-宝塔",normalizedTitle:"jpom vs 宝塔",charIndex:3675},{level:2,title:"关于漏洞",slug:"关于漏洞",normalizedTitle:"关于漏洞",charIndex:3807}],headersStr:"欢迎&感谢 dromara 开源社区 序 名称来源 前生 主要时间线 谁在开发？ 开源协议 技术栈 后端 前端 主要通讯协议 并发&事务 荣誉 关于作者 和 XXXX 区别/对比 Jpom Vs Jenkins Jpom Vs 建木（jianmu.dev） Jpom Vs 宝塔 关于漏洞",content:"# 欢迎&感谢\n\n亲爱的用户，感谢您了解、选择并使用 dromara 开源社区 Jpom 项目运维开源软件！\n\n在这里，我们致力于为您提一款简而轻的低侵入式、在线构建、自动部署、日常运维、项目运维/监控软件。\n\n您的信任和支持是我们前进的动力。\n\n我们期待您的反馈和建议，帮助我们不断完善和优化。\n\n再次感谢您的选择，祝您在使用 Jpom 它能给您带来惊喜与方便！\n\n\n# dromara 开源社区\n\nDromara 是一个由顶尖开源项目维护者自发组织的开源社区，让每一位开源爱好者，体会到开源的快乐。\n\n\n# 序\n\nJpom 是一款从 2017 年诞生,自 2018 年正式开源,2019 年发布第一个版本的Dev/Ops类工具，目前已经得到大量用户的认同和安装使用。\n\n一句话总结：Jpom 是着重于项目运维的综合性Dev/Ops工具\n\n粗略统计目前已经发布的版本数量：150+（数据来源 git tag 数量，后续 beta 版本没有 git tag）\n\n\n# 名称来源\n\nJava Project Online Management（Java项目在线管理）=> Jpom\n\n> 本名字创意来自：Frank\n\n\n# 前生\n\n在我第一个工作中由于团队太小了，本人需要负责项目的全生命周期开发和管理。\n\n17 年开始由于老板的想法和公司的发展造成开发过和要开发的项目逐渐增加，维护的工作量就变大。\n\n原始地维护更新项目的方式：打开 xshell、xftp 上传项目文件，执行命令、重启服务。\n\n----------------------------------------\n\n一次我和朋友（Frank）聊到做一个工具的想法，他表示也不错，后面我就把项目创建了，后续由于工作太忙就全部让朋友（Frank）开发。\n\n18 年 6 月我接手继续开发维护\n\n----------------------------------------\n\nQ: 当时为啥不取了解其他解决方案呢？\n\n答：当时由于个人认知肤浅都还不知道 Jenkins 或者其他软件，就想着自己开发一个小工具也能满足。\n\n\n# 主要时间线\n\n * 2017 年 09 月 创建第一个 commit\n * 2018 年 06 月 重新接手维护\n * 2019 年 01 月 发布 v1.0\n * 2019 年 03 月 荣获 GVP\n   * GVP ( Gitee Most Valuable Project )\n * 2019 年 04 月 发布 v2.4.0\n   * 支持多节点管理\n * 2021 年 03 月 发布 v2.5.0 更新日志\n   * 使用 Vue2 开发 UI（感谢@Hotstrip）\n   * 加入 Dromara 社区\n * 2021 年 07 月 发布 v2.6.0 更新日志\n   * 支持 H2 数据库\n * 2021 年 11 月 发布 v2.7.0 更新日志\n   * 逐步替代 JSON 文件存储\n * 2021 年 12 月 发布 v2.8.0 更新日志\n   * 引入工作空间概念\n   * 支持容器安装（感谢@def7@foxmail.com）\n * 2022 年 02 月 发布 v2.8.8 更新日志\n   * 新增容器管理（感谢@💎ℳ๓₯㎕斌💎💘）\n   * 支持容器构建\n * 2022 年 06 月 发布 v2.9.0 更新日志\n   * H2 数据库不兼容更新\n * 2022 年 08 月 发版 v2.9.7\n   * 启用独立下载站点\n * 2022 年 12 月 发布 v2.10.0 更新日志\n   * 全面下线服务端 JSON 文件存储\n   * Jpom 安装包目录结构优化\n   * 配置属性名规范化\n   * 支持 mysql 数据库（v2.10.9）\n * 2023 年 03 月 发布 v2.10.37 更新日志\n   * 开启 beta 计划\n\n\n\n\n# 谁在开发？\n\n目前版本 80%+ 的功能由作者本人设计、开发、维护、测试、运营，其余均为内部团队开发、开源社区贡献\n\nJpom 从开源至今均是个人开发为爱发电，如果您觉得 Jpom 对您有所帮助，还请帮忙点个 star 支持一下，非常感谢！\n\n * Gitee\n * Github\n\n开源不易请大家多多支持，有条件还望赞赏支持一下！\n\n\n\n\n# 开源协议\n\nJpom 遵循 MulanPSL-2.0 开源协议。\n\n如果对您有实际的帮忙还请您多多帮忙宣传 Jpom，让更多人知道、使用 Jpom。\n\n如果您已经二开或者有二开需求请及时联系我们进行授权避免侵权造成的法律风险\n\n\n# 技术栈\n\nJpom 是一个前后端分离的项目，后端使用 Java 开发、前端使用 Vue 开发\n\n\n# 后端\n\n * SpringBoot 2.7.x\n * Hutool 5.8.x\n * JustAuth 1.16.5\n * FastJson 2.0.x\n * Jgit 5.13.2.x\n * Mwiede-jsch 0.2.x\n * Svnkit 1.10.x\n * Docker-Java 3.3.x\n * Commons-Compress 1.24.x\n * Oshi 6.4.x\n\n\n# 前端\n\n * Vue 2.6.16\n * Ant-Design-Vue 1.7.8\n * Vue-Router 3.5.2\n * Axios 0.21.1\n * Echarts 4.9.0\n * Intro.js 3.4.0\n * Core-Js 3.16.0\n * Xterm 4.13.0\n * VueDraggable 2.24.3\n * Vue-Virtual-Scroller 1.1.2\n * Markdown-it-vue 1.1.6\n * js-sha1 0.6.0\n * jshint 2.13.1\n * vue-codemirror 4.0.6\n * vue-clipboard2 0.3.3\n\n\n# 主要通讯协议\n\n * Http\n * WebSocket\n\n\n# 并发&事务\n\nJpom 中未使用到事务相关功能，所以在一些操作中发生异常后可能产生冗余数据，不过放心我们提供了异常数据删除功能\n\n系统本身针对的用户群体和使用场景并非高并发场景，所以系统里面不是所有功能都具有并发安全问题。我们不建议您同时对一条数据进行修改。\n\n\n# 荣誉\n\nJpom 于 2019 年 03 月荣获 Gitee GVP ( Gitee Most Valuable Project ) 项目\n\n\n# 关于作者\n\n作者我本人是一个 95 后、学历不高、未进过大厂/中厂、技术一般、没有太多爱好 的普通程序员。\n\n从 2016 年初参加工作来均在小团队工作（曾经工作中最大的一个项目团队为 10 ~ 20 人）。\n\n同时本人没有太多爱好，是一个比较平淡的一个程序猿。\n\n通过文档大家可以看出来作者的文笔比较菜，还请大家多多理解，如果您在文档中发现任何错误、语句不同、表述不清楚的当您发现后还请您及时指出或者帮忙纠正\n\n\n# 和 XXXX 区别/对比\n\n\n# Jpom Vs Jenkins\n\n不可否认 Jenkins 是一个非常优秀的开源项目，并且比 Jpom 功能更强大但是 Jpom 仍然有许多优点供您来选择来平替。\n\n对比主要优点：\n\n * 国产开源\n * 轻量化（没有太大依赖、可以一键安装等）\n * 更原生化（大部分基于原生脚本实现复杂功能）\n * 更注重于项目运维/管理\n\n----------------------------------------\n\n首先说明 Jpom 作者我从未使用过 Jenkins，仅是知道 Jenkins 是一个持续集成工具。\n\n所有后续 Jpom 中的任何功能开发没有参考 Jenkins 或者其他类似开源软件。\n\n所以您在使用过程中请不要拿 Jpom 和 Jenkins 直接对比或者进行功能测试。\n\n反馈问题时也不要期望直接添加或者实现 Jenkins 中的功能。\n\n如果有问题或者需求可以反馈给作者/团队会综合考虑一个适合 Jpom 的实现方案\n\n\n# Jpom Vs 建木（jianmu.dev）\n\n建木是一个面向 DevOps 领域的极易扩展的开源无代码(图形化)/低代码(GitOps)工具。\n\n可以帮助用户轻松编排各种 DevOps 流程并分发到不同平台执行。\n\n----------------------------------------\n\nJpom 是一个面向项目运维管理的开源工具，更注重于原生构建同时也支持容器构建。\n\n更主要的是 Jpom 主要是项目运维、SSH 管理等一个综合性项目\n\n一句话不准确总结：建木着重于容器编排的 DevOps，Jpom 着重于项目运维的综合性工具。\n\n\n# Jpom Vs 宝塔\n\n宝塔是一个非常优秀的项目，但是 Jpom 和宝塔产品的方向是不同的。\n\n宝塔：更多的是在于服务器的基础管理、组件管理、网站搭建\n\nJpom：更多的是一个项目运维综合工具，可以管理项目、容器、服务器、SSH 、项目构建（流水线）等。\n\n\n# 关于漏洞\n\n安全对于 Jpom 来说非常重要。\n\n我们通常只支持最新版本的 Jpom 进行维护更新。\n\n * Q: Jpom 有安全漏洞吗？\n * Q: Jpom 会被攻击吗？\n * Q: Jpom 有会中木马吗？\n\n答 ：不一定，Jpom 是一个应用软件并且可能暴露在公网环境这不可避免有些小问题。 同时代码本身存在缺陷或者程序依赖了一些第三方开源组件，这些组件本身也有安全漏洞，所以 Jpom 也有可能被攻击。\n\n理论上任何一款软件均有漏洞，只是漏洞等级和严重程度不同，以及攻击您服务器的价值不同。\n\n如果您发现 Jpom 有安全漏洞，请及时联系作者，作者会第一时间修复。(一些低微级漏洞可以先提 issue 讨论，注意一些轻微漏洞是可以忽略的没有必要过度要求 0 漏洞)\n\n我们也会定期升级依赖组件的版本。\n\n如何防护 ：\n\n * 插件端端口尽量不要暴露在公网环境\n * 服务端中用户账号密码使用复杂规则\n * 主动升级新版本\n\n总结\n\n漏洞很难避免，但是需要根据您的实际情况来选择是否采取相应措施。\n\n网络限制、防火墙、安全意识等都是防御手段。\n\n如果您想指定依赖组件的版本进行部署您可以选择我们的企业服务来帮忙定制版本",normalizedContent:"# 欢迎&感谢\n\n亲爱的用户，感谢您了解、选择并使用 dromara 开源社区 jpom 项目运维开源软件！\n\n在这里，我们致力于为您提一款简而轻的低侵入式、在线构建、自动部署、日常运维、项目运维/监控软件。\n\n您的信任和支持是我们前进的动力。\n\n我们期待您的反馈和建议，帮助我们不断完善和优化。\n\n再次感谢您的选择，祝您在使用 jpom 它能给您带来惊喜与方便！\n\n\n# dromara 开源社区\n\ndromara 是一个由顶尖开源项目维护者自发组织的开源社区，让每一位开源爱好者，体会到开源的快乐。\n\n\n# 序\n\njpom 是一款从 2017 年诞生,自 2018 年正式开源,2019 年发布第一个版本的dev/ops类工具，目前已经得到大量用户的认同和安装使用。\n\n一句话总结：jpom 是着重于项目运维的综合性dev/ops工具\n\n粗略统计目前已经发布的版本数量：150+（数据来源 git tag 数量，后续 beta 版本没有 git tag）\n\n\n# 名称来源\n\njava project online management（java项目在线管理）=> jpom\n\n> 本名字创意来自：frank\n\n\n# 前生\n\n在我第一个工作中由于团队太小了，本人需要负责项目的全生命周期开发和管理。\n\n17 年开始由于老板的想法和公司的发展造成开发过和要开发的项目逐渐增加，维护的工作量就变大。\n\n原始地维护更新项目的方式：打开 xshell、xftp 上传项目文件，执行命令、重启服务。\n\n----------------------------------------\n\n一次我和朋友（frank）聊到做一个工具的想法，他表示也不错，后面我就把项目创建了，后续由于工作太忙就全部让朋友（frank）开发。\n\n18 年 6 月我接手继续开发维护\n\n----------------------------------------\n\nq: 当时为啥不取了解其他解决方案呢？\n\n答：当时由于个人认知肤浅都还不知道 jenkins 或者其他软件，就想着自己开发一个小工具也能满足。\n\n\n# 主要时间线\n\n * 2017 年 09 月 创建第一个 commit\n * 2018 年 06 月 重新接手维护\n * 2019 年 01 月 发布 v1.0\n * 2019 年 03 月 荣获 gvp\n   * gvp ( gitee most valuable project )\n * 2019 年 04 月 发布 v2.4.0\n   * 支持多节点管理\n * 2021 年 03 月 发布 v2.5.0 更新日志\n   * 使用 vue2 开发 ui（感谢@hotstrip）\n   * 加入 dromara 社区\n * 2021 年 07 月 发布 v2.6.0 更新日志\n   * 支持 h2 数据库\n * 2021 年 11 月 发布 v2.7.0 更新日志\n   * 逐步替代 json 文件存储\n * 2021 年 12 月 发布 v2.8.0 更新日志\n   * 引入工作空间概念\n   * 支持容器安装（感谢@def7@foxmail.com）\n * 2022 年 02 月 发布 v2.8.8 更新日志\n   * 新增容器管理（感谢@💎ℳ๓₯㎕斌💎💘）\n   * 支持容器构建\n * 2022 年 06 月 发布 v2.9.0 更新日志\n   * h2 数据库不兼容更新\n * 2022 年 08 月 发版 v2.9.7\n   * 启用独立下载站点\n * 2022 年 12 月 发布 v2.10.0 更新日志\n   * 全面下线服务端 json 文件存储\n   * jpom 安装包目录结构优化\n   * 配置属性名规范化\n   * 支持 mysql 数据库（v2.10.9）\n * 2023 年 03 月 发布 v2.10.37 更新日志\n   * 开启 beta 计划\n\n\n\n\n# 谁在开发？\n\n目前版本 80%+ 的功能由作者本人设计、开发、维护、测试、运营，其余均为内部团队开发、开源社区贡献\n\njpom 从开源至今均是个人开发为爱发电，如果您觉得 jpom 对您有所帮助，还请帮忙点个 star 支持一下，非常感谢！\n\n * gitee\n * github\n\n开源不易请大家多多支持，有条件还望赞赏支持一下！\n\n\n\n\n# 开源协议\n\njpom 遵循 mulanpsl-2.0 开源协议。\n\n如果对您有实际的帮忙还请您多多帮忙宣传 jpom，让更多人知道、使用 jpom。\n\n如果您已经二开或者有二开需求请及时联系我们进行授权避免侵权造成的法律风险\n\n\n# 技术栈\n\njpom 是一个前后端分离的项目，后端使用 java 开发、前端使用 vue 开发\n\n\n# 后端\n\n * springboot 2.7.x\n * hutool 5.8.x\n * justauth 1.16.5\n * fastjson 2.0.x\n * jgit 5.13.2.x\n * mwiede-jsch 0.2.x\n * svnkit 1.10.x\n * docker-java 3.3.x\n * commons-compress 1.24.x\n * oshi 6.4.x\n\n\n# 前端\n\n * vue 2.6.16\n * ant-design-vue 1.7.8\n * vue-router 3.5.2\n * axios 0.21.1\n * echarts 4.9.0\n * intro.js 3.4.0\n * core-js 3.16.0\n * xterm 4.13.0\n * vuedraggable 2.24.3\n * vue-virtual-scroller 1.1.2\n * markdown-it-vue 1.1.6\n * js-sha1 0.6.0\n * jshint 2.13.1\n * vue-codemirror 4.0.6\n * vue-clipboard2 0.3.3\n\n\n# 主要通讯协议\n\n * http\n * websocket\n\n\n# 并发&事务\n\njpom 中未使用到事务相关功能，所以在一些操作中发生异常后可能产生冗余数据，不过放心我们提供了异常数据删除功能\n\n系统本身针对的用户群体和使用场景并非高并发场景，所以系统里面不是所有功能都具有并发安全问题。我们不建议您同时对一条数据进行修改。\n\n\n# 荣誉\n\njpom 于 2019 年 03 月荣获 gitee gvp ( gitee most valuable project ) 项目\n\n\n# 关于作者\n\n作者我本人是一个 95 后、学历不高、未进过大厂/中厂、技术一般、没有太多爱好 的普通程序员。\n\n从 2016 年初参加工作来均在小团队工作（曾经工作中最大的一个项目团队为 10 ~ 20 人）。\n\n同时本人没有太多爱好，是一个比较平淡的一个程序猿。\n\n通过文档大家可以看出来作者的文笔比较菜，还请大家多多理解，如果您在文档中发现任何错误、语句不同、表述不清楚的当您发现后还请您及时指出或者帮忙纠正\n\n\n# 和 xxxx 区别/对比\n\n\n# jpom vs jenkins\n\n不可否认 jenkins 是一个非常优秀的开源项目，并且比 jpom 功能更强大但是 jpom 仍然有许多优点供您来选择来平替。\n\n对比主要优点：\n\n * 国产开源\n * 轻量化（没有太大依赖、可以一键安装等）\n * 更原生化（大部分基于原生脚本实现复杂功能）\n * 更注重于项目运维/管理\n\n----------------------------------------\n\n首先说明 jpom 作者我从未使用过 jenkins，仅是知道 jenkins 是一个持续集成工具。\n\n所有后续 jpom 中的任何功能开发没有参考 jenkins 或者其他类似开源软件。\n\n所以您在使用过程中请不要拿 jpom 和 jenkins 直接对比或者进行功能测试。\n\n反馈问题时也不要期望直接添加或者实现 jenkins 中的功能。\n\n如果有问题或者需求可以反馈给作者/团队会综合考虑一个适合 jpom 的实现方案\n\n\n# jpom vs 建木（jianmu.dev）\n\n建木是一个面向 devops 领域的极易扩展的开源无代码(图形化)/低代码(gitops)工具。\n\n可以帮助用户轻松编排各种 devops 流程并分发到不同平台执行。\n\n----------------------------------------\n\njpom 是一个面向项目运维管理的开源工具，更注重于原生构建同时也支持容器构建。\n\n更主要的是 jpom 主要是项目运维、ssh 管理等一个综合性项目\n\n一句话不准确总结：建木着重于容器编排的 devops，jpom 着重于项目运维的综合性工具。\n\n\n# jpom vs 宝塔\n\n宝塔是一个非常优秀的项目，但是 jpom 和宝塔产品的方向是不同的。\n\n宝塔：更多的是在于服务器的基础管理、组件管理、网站搭建\n\njpom：更多的是一个项目运维综合工具，可以管理项目、容器、服务器、ssh 、项目构建（流水线）等。\n\n\n# 关于漏洞\n\n安全对于 jpom 来说非常重要。\n\n我们通常只支持最新版本的 jpom 进行维护更新。\n\n * q: jpom 有安全漏洞吗？\n * q: jpom 会被攻击吗？\n * q: jpom 有会中木马吗？\n\n答 ：不一定，jpom 是一个应用软件并且可能暴露在公网环境这不可避免有些小问题。 同时代码本身存在缺陷或者程序依赖了一些第三方开源组件，这些组件本身也有安全漏洞，所以 jpom 也有可能被攻击。\n\n理论上任何一款软件均有漏洞，只是漏洞等级和严重程度不同，以及攻击您服务器的价值不同。\n\n如果您发现 jpom 有安全漏洞，请及时联系作者，作者会第一时间修复。(一些低微级漏洞可以先提 issue 讨论，注意一些轻微漏洞是可以忽略的没有必要过度要求 0 漏洞)\n\n我们也会定期升级依赖组件的版本。\n\n如何防护 ：\n\n * 插件端端口尽量不要暴露在公网环境\n * 服务端中用户账号密码使用复杂规则\n * 主动升级新版本\n\n总结\n\n漏洞很难避免，但是需要根据您的实际情况来选择是否采取相应措施。\n\n网络限制、防火墙、安全意识等都是防御手段。\n\n如果您想指定依赖组件的版本进行部署您可以选择我们的企业服务来帮忙定制版本",charsets:{cjk:!0},lastUpdated:"2024/11/30, 03:27:46",lastUpdatedTimestamp:1732937266e3},{title:"文档说明",frontmatter:{title:"文档说明",date:"2023-12-23T20:38:37.000Z",permalink:"/pages/ac6961/",categories:["docs","文档","序言"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/10.%E6%96%87%E6%A1%A3%E8%AF%B4%E6%98%8E.html",relativePath:"文档/00.自述序言/10.文档说明.md",key:"v-5da37683",path:"/pages/ac6961/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"限制条件",slug:"限制条件",normalizedTitle:"限制条件",charIndex:341},{level:2,title:"编写者角度",slug:"编写者角度",normalizedTitle:"编写者角度",charIndex:472},{level:2,title:"观看者角度",slug:"观看者角度",normalizedTitle:"观看者角度",charIndex:618},{level:2,title:"如何高效阅读 Jpom 文档",slug:"如何高效阅读-jpom-文档",normalizedTitle:"如何高效阅读 jpom 文档",charIndex:1064}],headersStr:"前言 限制条件 编写者角度 观看者角度 如何高效阅读 Jpom 文档",content:"# 前言\n\n编写文档是一个费时、费心、费人的活，并且文档整理也受编写者的文笔和角度以及不同时期（阶段）系统的功能迭代影响很大。\n\n可能由于一个版本迭代造成已经存在文档过时这种情况时常发生，但是理论上这个功能的核心思路是没有大的变化。已经过时文档仍然有一定参考价值，还请您耐心查阅文档。\n\n作为一个开源项目的文档更多的期望大家参与进来共同完善，让文档能帮助到更多需要使用 Jpom 的人能快速熟悉本软件系统的操作。\n\n由于开源项目的版本迭代不可能在每次版本都编写完善的说明文档，开源不易还请您多多理解和支持。\n\n如果您是 Jpom 的老用户或者是比较熟悉的人我们真心希望您能将您使用经验分享出来让更多人学习，分享方式包括但不限于：贡献给官方、发布博客、发布视频（B站、抖音）\n\n\n# 限制条件\n\n由于 Jpom 是一个使用型的软件系统，受环境（系统版本、依赖插件版本）、使用者熟悉程度、不同版本等一些主观因素不能全面的说明。\n\n当您遇到问题时请您优先排查是否为您使用环境影响或者相关依赖问题，再则查看版本更新日志时间已经解决对应的问题。\n\n\n# 编写者角度\n\n文档的编写者是比较了解或者熟悉系统情况下编写的文档，在写文档时候可能无意遗漏一些操作细节。\n\n所有文档仅是从编写则当时的状态，不同时间编写出来的文档可能有一定偏差。\n\n编写文档的人可能在自我的思维里描述出的话可能不具通俗易懂，但是作为阅读者的您可以多阅读几次尝试理解。\n\n\n# 观看者角度\n\n不同人阅读文档的理解能力和动手能力不同，如果您看到本文档不能很好的理解您可以尝试多上手试一试。\n\n本人给观看者一个建议\n\n当您在使用过程中遇到一些不能解决的问题时，请优先通读本文档，虽然通读是一件极其痛苦的事情，但是此方式是可以让您更快熟悉并了解本软件系统的一种方式。\n\n> 通读：是指先把整个文档从头到尾已经阅读一遍\n\n通读一遍不行还请再次通读，俗话说：书读百遍，其义自见\n\n由于软件系统使用的情况和组合功能太多，文档不能 100% 覆盖所有使用情况，但是可以在现有描述的使用场景里面参考来给您思路和灵感。\n\n如果您阅读到文档始终无法理解可以尝试在社区里面创建 issues 来沟通或者添加我们社群来讨论。\n\n遇到到问题时您还可以先确认使用的是否为最新版本，如果不是最新的版本可以尝试升级到最新版本来观察是否在新版本中解决此问题，或者您可以遇到版本更新日志来确认是否已经有人反馈并解决相应的BUG 问题、优化功能\n\n * 稳定版：更新日志\n * beta版：更新日志\n\n\n# 如何高效阅读 Jpom 文档\n\nJpom 文档目前主要分为：\n\n * 名称解释\n * 安装使用\n * 实践案例\n * 部分功能说明\n * 常见问题\n\n我们推荐您阅读的顺序：\n\n 1. 名称解释\n 2. 安装使用\n 3. 常见问题\n 4. 实践案例\n 5. 选择性阅读功能说明",normalizedContent:"# 前言\n\n编写文档是一个费时、费心、费人的活，并且文档整理也受编写者的文笔和角度以及不同时期（阶段）系统的功能迭代影响很大。\n\n可能由于一个版本迭代造成已经存在文档过时这种情况时常发生，但是理论上这个功能的核心思路是没有大的变化。已经过时文档仍然有一定参考价值，还请您耐心查阅文档。\n\n作为一个开源项目的文档更多的期望大家参与进来共同完善，让文档能帮助到更多需要使用 jpom 的人能快速熟悉本软件系统的操作。\n\n由于开源项目的版本迭代不可能在每次版本都编写完善的说明文档，开源不易还请您多多理解和支持。\n\n如果您是 jpom 的老用户或者是比较熟悉的人我们真心希望您能将您使用经验分享出来让更多人学习，分享方式包括但不限于：贡献给官方、发布博客、发布视频（b站、抖音）\n\n\n# 限制条件\n\n由于 jpom 是一个使用型的软件系统，受环境（系统版本、依赖插件版本）、使用者熟悉程度、不同版本等一些主观因素不能全面的说明。\n\n当您遇到问题时请您优先排查是否为您使用环境影响或者相关依赖问题，再则查看版本更新日志时间已经解决对应的问题。\n\n\n# 编写者角度\n\n文档的编写者是比较了解或者熟悉系统情况下编写的文档，在写文档时候可能无意遗漏一些操作细节。\n\n所有文档仅是从编写则当时的状态，不同时间编写出来的文档可能有一定偏差。\n\n编写文档的人可能在自我的思维里描述出的话可能不具通俗易懂，但是作为阅读者的您可以多阅读几次尝试理解。\n\n\n# 观看者角度\n\n不同人阅读文档的理解能力和动手能力不同，如果您看到本文档不能很好的理解您可以尝试多上手试一试。\n\n本人给观看者一个建议\n\n当您在使用过程中遇到一些不能解决的问题时，请优先通读本文档，虽然通读是一件极其痛苦的事情，但是此方式是可以让您更快熟悉并了解本软件系统的一种方式。\n\n> 通读：是指先把整个文档从头到尾已经阅读一遍\n\n通读一遍不行还请再次通读，俗话说：书读百遍，其义自见\n\n由于软件系统使用的情况和组合功能太多，文档不能 100% 覆盖所有使用情况，但是可以在现有描述的使用场景里面参考来给您思路和灵感。\n\n如果您阅读到文档始终无法理解可以尝试在社区里面创建 issues 来沟通或者添加我们社群来讨论。\n\n遇到到问题时您还可以先确认使用的是否为最新版本，如果不是最新的版本可以尝试升级到最新版本来观察是否在新版本中解决此问题，或者您可以遇到版本更新日志来确认是否已经有人反馈并解决相应的bug 问题、优化功能\n\n * 稳定版：更新日志\n * beta版：更新日志\n\n\n# 如何高效阅读 jpom 文档\n\njpom 文档目前主要分为：\n\n * 名称解释\n * 安装使用\n * 实践案例\n * 部分功能说明\n * 常见问题\n\n我们推荐您阅读的顺序：\n\n 1. 名称解释\n 2. 安装使用\n 3. 常见问题\n 4. 实践案例\n 5. 选择性阅读功能说明",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"基础名词",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"基础名词",date:"2022-10-20T10:12:39.000Z",permalink:"/pages/FQA/proper-noun/",categories:["docs","FQA","名词解释"],tags:["基础名词"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/22.%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/01.%E5%9F%BA%E7%A1%80%E5%90%8D%E8%AF%8D.html",relativePath:"文档/00.自述序言/22.名词解释/01.基础名词.md",key:"v-2057c300",path:"/pages/FQA/proper-noun/",headers:[{level:2,title:"服务端（Server）",slug:"服务端-server",normalizedTitle:"服务端（server）",charIndex:2},{level:2,title:"插件端（Agent）",slug:"插件端-agent",normalizedTitle:"插件端（agent）",charIndex:229},{level:2,title:"物理节点",slug:"物理节点",normalizedTitle:"物理节点",charIndex:389},{level:2,title:"逻辑节点",slug:"逻辑节点",normalizedTitle:"逻辑节点",charIndex:424},{level:2,title:"工作空间",slug:"工作空间",normalizedTitle:"工作空间",charIndex:492},{level:2,title:"端口：2122、2123",slug:"端口-2122、2123",normalizedTitle:"端口：2122、2123",charIndex:702},{level:2,title:"数据目录",slug:"数据目录",normalizedTitle:"数据目录",charIndex:916},{level:2,title:"防火墙、安全组",slug:"防火墙、安全组",normalizedTitle:"防火墙、安全组",charIndex:1143},{level:2,title:"在线构建",slug:"在线构建",normalizedTitle:"在线构建",charIndex:1442},{level:2,title:"项目运行模式（运行方式）",slug:"项目运行模式-运行方式",normalizedTitle:"项目运行模式（运行方式）",charIndex:2039},{level:2,title:"授权（白名单）",slug:"授权-白名单",normalizedTitle:"授权（白名单）",charIndex:2379},{level:2,title:"授权目录",slug:"授权目录",normalizedTitle:"授权目录",charIndex:2396},{level:2,title:"授权配置（白名单目录、xxx目录、xxx路径）",slug:"授权配置-白名单目录、xxx目录、xxx路径",normalizedTitle:"授权配置（白名单目录、xxx目录、xxx路径）",charIndex:2410},{level:2,title:"节点分发",slug:"节点分发",normalizedTitle:"节点分发",charIndex:2699},{level:2,title:"~~项目副本~~",slug:"项目副本",normalizedTitle:"<s>项目副本</s>",charIndex:null},{level:2,title:"节点分发 VS 项目副本",slug:"节点分发-vs-项目副本",normalizedTitle:"节点分发 vs 项目副本",charIndex:3081},{level:2,title:"项目日志目录",slug:"项目日志目录",normalizedTitle:"项目日志目录",charIndex:3349},{level:2,title:"项目控制台",slug:"项目控制台",normalizedTitle:"项目控制台",charIndex:3417}],headersStr:"服务端（Server） 插件端（Agent） 物理节点 逻辑节点 工作空间 端口：2122、2123 数据目录 防火墙、安全组 在线构建 项目运行模式（运行方式） 授权（白名单） 授权目录 授权配置（白名单目录、xxx目录、xxx路径） 节点分发 ~~项目副本~~ 节点分发 VS 项目副本 项目日志目录 项目控制台",content:"# 服务端（Server）\n\n服务端可以理解为 Jpom 的一个总控系统，用户直接访问对应系统管理所有节点。一般情况服务端只需要安装一次即可，服务端可以管理多个插件端\n\n以下功能位于服务端（和插件端没有直接关系）：\n\n 1. 仓库管理\n 2. 构建管理\n 3. SSH 管理\n 4. 监控管理\n 5. 账号管理\n\n温馨提示：在一定使用场景下只需要安装服务端即可，不一定需要搭配插件端才能使用 Jpom，如果使用 ssh 管理、构建发布到 ssh 中\n\n\n# 插件端（Agent）\n\n插件端可以理解为需要在 Jpom 被管理到服务器的守护程序，插件端主要是去监控对应服务器一些基本信息，保存一些项目信息已经对应项目的相关文件等。\n\n已经安装插件端的服务器在 Jpom 中也可以称为节点\n\n温馨提示：插件端存在账号密码，插件端端账号密码和服务端端管理员账号密码是不同的奥！\n\n\n# 物理节点\n\n安装过 Jpom 插件端的服务器可以称为物理节点\n\n\n# 逻辑节点\n\n安装过 Jpom 插件端的服务器添加在 Jpom 服务端中的节点列表里面称为逻辑节点\n\n温馨提示：一个物理节点可以添加在多个工作空间\n\n\n# 工作空间\n\n * Jpom 中使用工作空间代替角色来控制数据权限，一个账号可以绑定多个工作空间，并且可以设置单个工作空间的功能权限\n * Jpom 中主要使用工作空间隔离数据权限，建议在实际部署中使用工作空间来隔离权限。\n\n温馨提示：一个物理节点可以添加在多个工作空间\n\n如：\n\n 1. 测试环境\n 2. 线上环境\n 3. ...\n\n如：\n\n 1. 前端开发\n 2. 后端开发\n 3. ...\n\n\n# 端口：2122、2123\n\nJpom 中默认使用到端口有 2122、2123\n\n * 2122 是服务端默认端口\n * 2123 是插件端默认端口（添加节点地址时候需要填写对应到 IP:PORT）\n\n> 特别声明：不建议将插件端端口开放到外网可以访问、建议服务端和插件端通信都使用内网\n\n如何修改程序运行端口:\n\n * 修改管理程序命令文件中 --server.port=2122、--server.port=2123\n\n\n# 数据目录\n\nJpom 中数据目录是指存储数据的文件,一般会存储一些程序相关文件,运行中产生的临时文件。\n\n * 服务端还会存储构建相关文件（构建仓库文件、构建产物文件等）\n * 插件端还会存储项目文件备份相关文件\n\njpom 数据存储路径：\n\n * 如果调试模式运行默认路径为【${user.home}/jpom/】\n * 安装运行默认为jar包文件的父级\n * 当然用户还可以自定义数据目录，修改数据目录位置请参考：extConfig.yml\n\n\n# 防火墙、安全组\n\n当出现服务都正常，但是无法访问都时候需要检查一下 当前网络环境下和对应都 IP(插件端、服务端) 是否畅通。\n\n如果 IP 都是畅通情况下需要检查一下 服务器是否配置了防火墙规则没有开放对应端口（2122、2123）、或者服务端的服务器中的网络环境是否能访问您配置的插件端 IP 和 端口\n\n注意 linux 系统中防火墙可能存在多种：Firewall、Iptables，再检查防火墙配置时候需要都检查一下。\n\n在防火墙都检查配置无误后仍然无法访问，则需要排查您所在的网络环境是否对IP+端口有部分限制。 如果使用云服务则还需要检查服务器所在的安全组是否开发端口访问限制\n\n\n# 在线构建\n\n在线构建是通过 Jpom 自动拉取仓库代码（支持 git、svn 仓库）到服务端本地目录，执行对应到命令（构建命令）后将仓库目录下面到指定文件或者文件夹（构建产物）执行发布操作\n\n构建也将产生构建历史，构建历史可以用于回滚、查看对应构建日志或者下载构建产物功能\n\n构建可以搭配 webhook 来实现提交代码后自动触发构建、同时也支持定时（cron）构建来实现自动触发构建\n\n * 在使用在线构建提示相关命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)，请检查服务端所在的服务器中是否存在对应环境\n * 构建依赖的是系统环境，如果需要 maven 或者 node 需要服务端所在的服务器中有对应插件，如果已经启动服务端再安装的对应环境需要通过命令行重启服务端后才生效。\n * 构建是在服务端执行，依赖的服务端环境和插件端没有直接关联。\n * 构建需要占用的服务器资源可能较高，需要根据实际情况提前预留配置对应的 CPU 和内存空间，反则可能出现 OOM 情况\n * 构建日志提示：xxx 不存在、处理构建产物失败 请优先检查构建命令执行结果是否如预期执行结果一致产生对应的文件,再检查构建产物目录填写是否正常，请注意构建产物目录是填写仓库下面的相对路径：如 dist、/target/xxxx.jar\n\n\n# 项目运行模式（运行方式）\n\nJpom 节点项目中默认提供的模式有：\n\n * Dsl\n   * 配合脚本模版实现自定义项目管理\n * ClassPath\n   * java -classpath xxx 运行项目\n * Jar\n   * java -jar xxx 运行项目\n * JarWar\n   * 后缀为 war 的 jar,并非 tomcat 的 war 包\n   * java -jar Springboot war 运行项目\n * JavaExtDirsCp\n   * java -Djava.ext.dirs=lib -cp conf:run.jar $MAIN_CLASS 运行项目\n * File\n   * 项目为静态文件夹,没有项目状态以及控制等功能\n\n\n# 授权（白名单）\n\n同下文\n\n\n# 授权目录\n\n同下文\n\n\n# 授权配置（白名单目录、xxx目录、xxx路径）\n\nJpom 中的授权（白名单）的由来，由于项目管理都需要对项目的文件进行管理。\n\n在创建项目的时候需要确定项目的相关文件存放的路径。\n\n那么此时由用户随意决定存放到哪里，显得有点冒然（不安全，有点随意）。\n\n举例新同事创建一个管理linux /boot/ 目录的项目\n\n因为服务器中有些路径已经存放重要配置文件，此时项目路径相同那么必然没有任何安全性\n\n需要配置的授权（白名单）目录相关的功能有：\n\n * 项目路径\n * 证书路径 【即将下架】\n * nginx 安装路径 【即将下架】\n * SSH 授权目录（文件目录）\n * 节点分发授权（白名单）\n\n\n# 节点分发\n\n节点分发是指,一个项目运行需要在多个节点(服务器)中运行,使用节点分发来统一管理这个项目(可以实现分布式项目管理功能)\n\n关联项目\n\n是指将已经在节点中创建好的项目关联为节点分发项目来实现统一管理\n\n分发项目\n\n是指全新创建一个属于节点分发到项目,创建成功后项目信息将自动同步到对应的节点中,修改节点分发信息也自动同步到对应的节点中\n\n创建独立分发项目至少需要选择两个节点，单节点不能创建独立分发项目\n\n\n# 项目副本\n\n项目副本是节点分发的一个补充，当一个项目需要单个节点(服务器)运行多份时无法直接使用节点分发功能，但是可以使用项目副本来实现该功能。\n\n注意：项目副本是基于项目添加多个运行标识，项目文件夹仍然使用同一个\n\n提示\n\n项目副本功能已于 v2.11.0 版本下下架，请使用软链项目来代替项目副本\n\n\n# 节点分发 VS 项目副本\n\n功能     项目模式              项目文件夹   发布方式           依赖节点   状态管理   目录授权（白名单）\n节点分发   全模式               独立      构建、手动上传、远程下载   2个以上   独立管理   服务端配置\n项目副本   不支持 file、dsl 模式   共享      跟随主项目          单节点    独立管理   节点配置\n\n提示\n\n项目副本功能已于 v2.11.0 版本下下架，请使用软链项目来代替项目副本\n\n\n# 项目日志目录\n\nJpom 中的项目日志目录是为存储在项目在运行中的控制台输出相关内容 。项目的日志目录默认在项目文件夹父级。\n\n说明\n\n项目控制台日志和您实际项目中的（logback、slf4j、log4j等）日志不同。\n\n项目实际中使用日志框架的日志并不会受 Jpom 项目控制台日志影响,可以说是一个补充日志。但是控制台日志一般包含了项目中的日志框架的日志（可以配置日志框架仅输出到文件不输出到控制台）\n\n比如:（xxxx 为项目id）\n\n * 项目文件为 /data/project/abc\n * 项目日志路径为：/data/project/xxxx.log\n * 日志备份目录为：/data/project/xxxx.log_back/\n\n可以为项目配置独立的日志存放路径,项目日志存储路径基于项目授权（白名单）目录配置\n\n比如:（xxxx 为项目id）\n\n * 项目文件为 /data/project/abc\n * 配置项目日志路径为：/var/log/jpom-project/xxxx.log\n * 日志备份目录为：/var/log/jpom-project/xxxx.log_back/\n\n项目日志占用太多存储空间怎么办？\n\n可以配置项目控制台日志存储规则：（在节点管理>系统管理>系统配置 中修改）\n\nlog:\n  # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n  autoBackConsoleCron: 0 0/1 * * * ?\n  # 控制台日志文件保留大小\n  autoBackSize: 10MB\n  # 是否自动将控制台日志文件备份\n  autoBackToFile: false\n  # 保存天数 配置错误或者没有，默认是7天\n  saveDays: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n注意\n\n 1. file 项目的运行方式没有日志目录属性\n 2. dsl 模式的项目控制台日志为执行脚本的输出信息\n\n\n# 项目控制台\n\nJpom 的项目控制台是实时查看项目日志的功能，file 模式项目不能使用控制台功能。\n\n> 注意：如果项目控制台输出频率太高，不建议长时间查看控制台（可能出现浏览器卡顿），建议将日志导出查看或者使用日志阅读功能",normalizedContent:"# 服务端（server）\n\n服务端可以理解为 jpom 的一个总控系统，用户直接访问对应系统管理所有节点。一般情况服务端只需要安装一次即可，服务端可以管理多个插件端\n\n以下功能位于服务端（和插件端没有直接关系）：\n\n 1. 仓库管理\n 2. 构建管理\n 3. ssh 管理\n 4. 监控管理\n 5. 账号管理\n\n温馨提示：在一定使用场景下只需要安装服务端即可，不一定需要搭配插件端才能使用 jpom，如果使用 ssh 管理、构建发布到 ssh 中\n\n\n# 插件端（agent）\n\n插件端可以理解为需要在 jpom 被管理到服务器的守护程序，插件端主要是去监控对应服务器一些基本信息，保存一些项目信息已经对应项目的相关文件等。\n\n已经安装插件端的服务器在 jpom 中也可以称为节点\n\n温馨提示：插件端存在账号密码，插件端端账号密码和服务端端管理员账号密码是不同的奥！\n\n\n# 物理节点\n\n安装过 jpom 插件端的服务器可以称为物理节点\n\n\n# 逻辑节点\n\n安装过 jpom 插件端的服务器添加在 jpom 服务端中的节点列表里面称为逻辑节点\n\n温馨提示：一个物理节点可以添加在多个工作空间\n\n\n# 工作空间\n\n * jpom 中使用工作空间代替角色来控制数据权限，一个账号可以绑定多个工作空间，并且可以设置单个工作空间的功能权限\n * jpom 中主要使用工作空间隔离数据权限，建议在实际部署中使用工作空间来隔离权限。\n\n温馨提示：一个物理节点可以添加在多个工作空间\n\n如：\n\n 1. 测试环境\n 2. 线上环境\n 3. ...\n\n如：\n\n 1. 前端开发\n 2. 后端开发\n 3. ...\n\n\n# 端口：2122、2123\n\njpom 中默认使用到端口有 2122、2123\n\n * 2122 是服务端默认端口\n * 2123 是插件端默认端口（添加节点地址时候需要填写对应到 ip:port）\n\n> 特别声明：不建议将插件端端口开放到外网可以访问、建议服务端和插件端通信都使用内网\n\n如何修改程序运行端口:\n\n * 修改管理程序命令文件中 --server.port=2122、--server.port=2123\n\n\n# 数据目录\n\njpom 中数据目录是指存储数据的文件,一般会存储一些程序相关文件,运行中产生的临时文件。\n\n * 服务端还会存储构建相关文件（构建仓库文件、构建产物文件等）\n * 插件端还会存储项目文件备份相关文件\n\njpom 数据存储路径：\n\n * 如果调试模式运行默认路径为【${user.home}/jpom/】\n * 安装运行默认为jar包文件的父级\n * 当然用户还可以自定义数据目录，修改数据目录位置请参考：extconfig.yml\n\n\n# 防火墙、安全组\n\n当出现服务都正常，但是无法访问都时候需要检查一下 当前网络环境下和对应都 ip(插件端、服务端) 是否畅通。\n\n如果 ip 都是畅通情况下需要检查一下 服务器是否配置了防火墙规则没有开放对应端口（2122、2123）、或者服务端的服务器中的网络环境是否能访问您配置的插件端 ip 和 端口\n\n注意 linux 系统中防火墙可能存在多种：firewall、iptables，再检查防火墙配置时候需要都检查一下。\n\n在防火墙都检查配置无误后仍然无法访问，则需要排查您所在的网络环境是否对ip+端口有部分限制。 如果使用云服务则还需要检查服务器所在的安全组是否开发端口访问限制\n\n\n# 在线构建\n\n在线构建是通过 jpom 自动拉取仓库代码（支持 git、svn 仓库）到服务端本地目录，执行对应到命令（构建命令）后将仓库目录下面到指定文件或者文件夹（构建产物）执行发布操作\n\n构建也将产生构建历史，构建历史可以用于回滚、查看对应构建日志或者下载构建产物功能\n\n构建可以搭配 webhook 来实现提交代码后自动触发构建、同时也支持定时（cron）构建来实现自动触发构建\n\n * 在使用在线构建提示相关命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)，请检查服务端所在的服务器中是否存在对应环境\n * 构建依赖的是系统环境，如果需要 maven 或者 node 需要服务端所在的服务器中有对应插件，如果已经启动服务端再安装的对应环境需要通过命令行重启服务端后才生效。\n * 构建是在服务端执行，依赖的服务端环境和插件端没有直接关联。\n * 构建需要占用的服务器资源可能较高，需要根据实际情况提前预留配置对应的 cpu 和内存空间，反则可能出现 oom 情况\n * 构建日志提示：xxx 不存在、处理构建产物失败 请优先检查构建命令执行结果是否如预期执行结果一致产生对应的文件,再检查构建产物目录填写是否正常，请注意构建产物目录是填写仓库下面的相对路径：如 dist、/target/xxxx.jar\n\n\n# 项目运行模式（运行方式）\n\njpom 节点项目中默认提供的模式有：\n\n * dsl\n   * 配合脚本模版实现自定义项目管理\n * classpath\n   * java -classpath xxx 运行项目\n * jar\n   * java -jar xxx 运行项目\n * jarwar\n   * 后缀为 war 的 jar,并非 tomcat 的 war 包\n   * java -jar springboot war 运行项目\n * javaextdirscp\n   * java -djava.ext.dirs=lib -cp conf:run.jar $main_class 运行项目\n * file\n   * 项目为静态文件夹,没有项目状态以及控制等功能\n\n\n# 授权（白名单）\n\n同下文\n\n\n# 授权目录\n\n同下文\n\n\n# 授权配置（白名单目录、xxx目录、xxx路径）\n\njpom 中的授权（白名单）的由来，由于项目管理都需要对项目的文件进行管理。\n\n在创建项目的时候需要确定项目的相关文件存放的路径。\n\n那么此时由用户随意决定存放到哪里，显得有点冒然（不安全，有点随意）。\n\n举例新同事创建一个管理linux /boot/ 目录的项目\n\n因为服务器中有些路径已经存放重要配置文件，此时项目路径相同那么必然没有任何安全性\n\n需要配置的授权（白名单）目录相关的功能有：\n\n * 项目路径\n * 证书路径 【即将下架】\n * nginx 安装路径 【即将下架】\n * ssh 授权目录（文件目录）\n * 节点分发授权（白名单）\n\n\n# 节点分发\n\n节点分发是指,一个项目运行需要在多个节点(服务器)中运行,使用节点分发来统一管理这个项目(可以实现分布式项目管理功能)\n\n关联项目\n\n是指将已经在节点中创建好的项目关联为节点分发项目来实现统一管理\n\n分发项目\n\n是指全新创建一个属于节点分发到项目,创建成功后项目信息将自动同步到对应的节点中,修改节点分发信息也自动同步到对应的节点中\n\n创建独立分发项目至少需要选择两个节点，单节点不能创建独立分发项目\n\n\n# 项目副本\n\n项目副本是节点分发的一个补充，当一个项目需要单个节点(服务器)运行多份时无法直接使用节点分发功能，但是可以使用项目副本来实现该功能。\n\n注意：项目副本是基于项目添加多个运行标识，项目文件夹仍然使用同一个\n\n提示\n\n项目副本功能已于 v2.11.0 版本下下架，请使用软链项目来代替项目副本\n\n\n# 节点分发 vs 项目副本\n\n功能     项目模式              项目文件夹   发布方式           依赖节点   状态管理   目录授权（白名单）\n节点分发   全模式               独立      构建、手动上传、远程下载   2个以上   独立管理   服务端配置\n项目副本   不支持 file、dsl 模式   共享      跟随主项目          单节点    独立管理   节点配置\n\n提示\n\n项目副本功能已于 v2.11.0 版本下下架，请使用软链项目来代替项目副本\n\n\n# 项目日志目录\n\njpom 中的项目日志目录是为存储在项目在运行中的控制台输出相关内容 。项目的日志目录默认在项目文件夹父级。\n\n说明\n\n项目控制台日志和您实际项目中的（logback、slf4j、log4j等）日志不同。\n\n项目实际中使用日志框架的日志并不会受 jpom 项目控制台日志影响,可以说是一个补充日志。但是控制台日志一般包含了项目中的日志框架的日志（可以配置日志框架仅输出到文件不输出到控制台）\n\n比如:（xxxx 为项目id）\n\n * 项目文件为 /data/project/abc\n * 项目日志路径为：/data/project/xxxx.log\n * 日志备份目录为：/data/project/xxxx.log_back/\n\n可以为项目配置独立的日志存放路径,项目日志存储路径基于项目授权（白名单）目录配置\n\n比如:（xxxx 为项目id）\n\n * 项目文件为 /data/project/abc\n * 配置项目日志路径为：/var/log/jpom-project/xxxx.log\n * 日志备份目录为：/var/log/jpom-project/xxxx.log_back/\n\n项目日志占用太多存储空间怎么办？\n\n可以配置项目控制台日志存储规则：（在节点管理>系统管理>系统配置 中修改）\n\nlog:\n  # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n  autobackconsolecron: 0 0/1 * * * ?\n  # 控制台日志文件保留大小\n  autobacksize: 10mb\n  # 是否自动将控制台日志文件备份\n  autobacktofile: false\n  # 保存天数 配置错误或者没有，默认是7天\n  savedays: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n注意\n\n 1. file 项目的运行方式没有日志目录属性\n 2. dsl 模式的项目控制台日志为执行脚本的输出信息\n\n\n# 项目控制台\n\njpom 的项目控制台是实时查看项目日志的功能，file 模式项目不能使用控制台功能。\n\n> 注意：如果项目控制台输出频率太高，不建议长时间查看控制台（可能出现浏览器卡顿），建议将日志导出查看或者使用日志阅读功能",charsets:{cjk:!0},lastUpdated:"2024/07/11, 07:22:39",lastUpdatedTimestamp:1720682559e3},{title:"命令相关",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"命令相关",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/0171cb/",tags:["名词-命令相关"],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/22.%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/02.%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3.html",relativePath:"文档/00.自述序言/22.名词解释/02.命令相关.md",key:"v-29c7d206",path:"/pages/0171cb/",headers:[{level:2,title:"非阻塞命令",slug:"非阻塞命令",normalizedTitle:"非阻塞命令",charIndex:2},{level:2,title:"java、javaw 命令",slug:"java、javaw-命令",normalizedTitle:"java、javaw 命令",charIndex:422},{level:2,title:"Jpom 中多种脚本对比",slug:"jpom-中多种脚本对比",normalizedTitle:"jpom 中多种脚本对比",charIndex:611},{level:2,title:"Jpom 中的授权（白名单）说明",slug:"jpom-中的授权-白名单-说明",normalizedTitle:"jpom 中的授权（白名单）说明",charIndex:898},{level:2,title:"Jpom 的参数配置",slug:"jpom-的参数配置",normalizedTitle:"jpom 的参数配置",charIndex:1275},{level:2,title:"触发器 （webhook、钩子）",slug:"触发器-webhook、钩子",normalizedTitle:"触发器 （webhook、钩子）",charIndex:1434}],headersStr:"非阻塞命令 java、javaw 命令 Jpom 中多种脚本对比 Jpom 中的授权（白名单）说明 Jpom 的参数配置 触发器 （webhook、钩子）",content:"# 非阻塞命令\n\n在 Jpom 中大部分命令都需要使用非阻塞：\n\n * 构建命令\n * 构建本地发布命令\n * 构建 SSH 发布命令\n * SSH 模版命令\n * 脚本模版命令\n\n非阻塞命令指执行命令后会自动退出而不是一直阻塞窗口需要按 ctrl+c 才能退出命令窗口、或者需要输入交互都命令\n\n阻塞命令举例：\n\n 1. yum intall xxxxx, 执行这样的命令需要用户确认输入才能继续执行，这样的命令就不能在 jpom 上述功能相关命令中使用，需要修改为 yum install -y xxxxx\n 2. java -jar xxx.jar, 执行这样的命令会阻塞窗口，那么在 linux 中可以使用 nohup 来解决，修改为：nohup java -jar xxx.jar >>xxx.log 2>&1 &\n 3. npm run serve,执行这样的命令窗口将一直阻塞，那么需要修改为 npm run build\n\n\n# java、javaw 命令\n\n通常情况都是使用 java 命令来启动 java 项目,如: java -jar xxxx.jar\n\nJpom 中在 windows 环境来启动 java 项目（包括 Server.bat、Agent.bat） 因为 windows 没有 nohup 命令，使用 javaw 可以实现类似 nohup 效果并且能将控制台日志输出到指定文件\n\n\n# Jpom 中多种脚本对比\n\n脚本类型       存储方式      执行方式       是否支持批量执行   是否支持批量编辑        是否支持定时执行\n脚本列表       服务端       在服务端执行     否          否               支持 cron\nssh 命令脚本   服务端       ssh 远程执行   是          否               支持 cron\n节点脚本       节点(插件端)   在节点执行      否          是 （使用服务端脚本分发）   支持 cron\n\n\n# Jpom 中的授权（白名单）说明\n\n> Jpom 中的授权（白名单）的由来，由于项目管理都需要对项目的文件进行管理。在创建项目的时候需要确定项目的相关文件存放的路径。 那么此时由用户决定存放到哪里，显得有点冒然（不安全，有点随意）。因为服务器中有些路径已经存放重要配置文件，此时项目路径相同那么必然没有任何安全性\n\n> 为什么是授权（白名单）而不是配置黑名单（禁止名单）：假设设置黑名单、如果设置黑名单那么没有办法最快速收集用户不同服务器中重要文件路径，此方法也显得不合适\n\n需要配置授权（白名单）的地方有如下：\n\n * 节点项目目录授权（白名单）\n * 节点 nginx 配置文件授权（白名单）\n * 节点 ssl 证书目录授权（白名单）\n * 节点分发授权（白名单）（和节点项目授权（白名单）类似）\n * SSH 授权管理目录授权（白名单）\n\n\n# Jpom 的参数配置\n\n> Jpom 中配置文件使用 SpringBoot 加载配置文件机制实现，配置文件中可以配置一些遵循 SpringBoot 的属性\n\n在项目运行的根路径下的extConfig.yml文件\n\n 1. 插件端示例：extConfig.yml\n 2. 服务端示例：extConfig.yml\n\n\n# 触发器 （webhook、钩子）\n\nJpom 中的触发器可以理解为一个接口，执行这个接口会自动帮助您完成一些事情\n\nJpom 中的触发器可以理解为 webhook（钩子） 实现\n\n目前 Jpom 中支持触发器的功能有如下：\n\n * 执行构建\n * 执行 SSH 脚本\n * 执行服务端脚本\n * 执行节点脚本\n\n使用触发器可以实现在一定场景下实现自动执行的操作\n\n如：提交代码后自动构建、外部系统调用触发器来实现执行 Jpom 系统中的相关脚本",normalizedContent:"# 非阻塞命令\n\n在 jpom 中大部分命令都需要使用非阻塞：\n\n * 构建命令\n * 构建本地发布命令\n * 构建 ssh 发布命令\n * ssh 模版命令\n * 脚本模版命令\n\n非阻塞命令指执行命令后会自动退出而不是一直阻塞窗口需要按 ctrl+c 才能退出命令窗口、或者需要输入交互都命令\n\n阻塞命令举例：\n\n 1. yum intall xxxxx, 执行这样的命令需要用户确认输入才能继续执行，这样的命令就不能在 jpom 上述功能相关命令中使用，需要修改为 yum install -y xxxxx\n 2. java -jar xxx.jar, 执行这样的命令会阻塞窗口，那么在 linux 中可以使用 nohup 来解决，修改为：nohup java -jar xxx.jar >>xxx.log 2>&1 &\n 3. npm run serve,执行这样的命令窗口将一直阻塞，那么需要修改为 npm run build\n\n\n# java、javaw 命令\n\n通常情况都是使用 java 命令来启动 java 项目,如: java -jar xxxx.jar\n\njpom 中在 windows 环境来启动 java 项目（包括 server.bat、agent.bat） 因为 windows 没有 nohup 命令，使用 javaw 可以实现类似 nohup 效果并且能将控制台日志输出到指定文件\n\n\n# jpom 中多种脚本对比\n\n脚本类型       存储方式      执行方式       是否支持批量执行   是否支持批量编辑        是否支持定时执行\n脚本列表       服务端       在服务端执行     否          否               支持 cron\nssh 命令脚本   服务端       ssh 远程执行   是          否               支持 cron\n节点脚本       节点(插件端)   在节点执行      否          是 （使用服务端脚本分发）   支持 cron\n\n\n# jpom 中的授权（白名单）说明\n\n> jpom 中的授权（白名单）的由来，由于项目管理都需要对项目的文件进行管理。在创建项目的时候需要确定项目的相关文件存放的路径。 那么此时由用户决定存放到哪里，显得有点冒然（不安全，有点随意）。因为服务器中有些路径已经存放重要配置文件，此时项目路径相同那么必然没有任何安全性\n\n> 为什么是授权（白名单）而不是配置黑名单（禁止名单）：假设设置黑名单、如果设置黑名单那么没有办法最快速收集用户不同服务器中重要文件路径，此方法也显得不合适\n\n需要配置授权（白名单）的地方有如下：\n\n * 节点项目目录授权（白名单）\n * 节点 nginx 配置文件授权（白名单）\n * 节点 ssl 证书目录授权（白名单）\n * 节点分发授权（白名单）（和节点项目授权（白名单）类似）\n * ssh 授权管理目录授权（白名单）\n\n\n# jpom 的参数配置\n\n> jpom 中配置文件使用 springboot 加载配置文件机制实现，配置文件中可以配置一些遵循 springboot 的属性\n\n在项目运行的根路径下的extconfig.yml文件\n\n 1. 插件端示例：extconfig.yml\n 2. 服务端示例：extconfig.yml\n\n\n# 触发器 （webhook、钩子）\n\njpom 中的触发器可以理解为一个接口，执行这个接口会自动帮助您完成一些事情\n\njpom 中的触发器可以理解为 webhook（钩子） 实现\n\n目前 jpom 中支持触发器的功能有如下：\n\n * 执行构建\n * 执行 ssh 脚本\n * 执行服务端脚本\n * 执行节点脚本\n\n使用触发器可以实现在一定场景下实现自动执行的操作\n\n如：提交代码后自动构建、外部系统调用触发器来实现执行 jpom 系统中的相关脚本",charsets:{cjk:!0},lastUpdated:"2024/01/13, 11:36:49",lastUpdatedTimestamp:1705145809e3},{title:"产物目录",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"产物目录",date:"2023-02-24T16:01:18.000Z",permalink:"/pages/d05224/",categories:["docs","FQA","名词解释"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/22.%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/08.%E4%BA%A7%E7%89%A9%E7%9B%AE%E5%BD%95.html",relativePath:"文档/00.自述序言/22.名词解释/08.产物目录.md",key:"v-65d6bf18",path:"/pages/d05224/",headers:[{level:2,title:"产物目录",slug:"产物目录",normalizedTitle:"产物目录",charIndex:2},{level:2,title:"模糊匹配规则",slug:"模糊匹配规则",normalizedTitle:"模糊匹配规则",charIndex:486},{level:3,title:"简绍",slug:"简绍",normalizedTitle:"简绍",charIndex:570},{level:3,title:"🌰 举个栗子",slug:"🌰-举个栗子",normalizedTitle:"🌰 举个栗子",charIndex:883},{level:4,title:"栗子1： /web*/**/*.html:KEEP_DIR:/web2/",slug:"栗子1-web-html-keep-dir-web2",normalizedTitle:"栗子1： /web*/**/*.html:keep_dir:/web2/",charIndex:894},{level:4,title:"栗子2： /web*/**/*.html:SAME_DIR:",slug:"栗子2-web-html-same-dir",normalizedTitle:"栗子2： /web*/**/*.html:same_dir:",charIndex:1156},{level:4,title:"栗子3： /web*/**/*.html:KEEP_DIR:",slug:"栗子3-web-html-keep-dir",normalizedTitle:"栗子3： /web*/**/*.html:keep_dir:",charIndex:1422}],headersStr:"产物目录 模糊匹配规则 简绍 🌰 举个栗子 栗子1： /web*/**/*.html:KEEP_DIR:/web2/ 栗子2： /web*/**/*.html:SAME_DIR: 栗子3： /web*/**/*.html:KEEP_DIR:",content:"# 产物目录\n\n在添加构建时候需要填写产物目录。\n\n这里产物目录是指：执行构建命令后执行发布操作时发布指定文件或者文件夹到对应位置的目录\n\n这里的目录注意一定是仓库路径下面的相对目录\n\n比如：\n\n * 构建 java 项目成功后会生成 target 目录，一般场景都是需要 target 目录下面的某个文件，那么填写：/target/xxx.jar\n * 如果是多层级目录则需要填写完整路径如果：/xxxx/target/xxxx.jar\n * 构建 vue 项目成功后会生成 dist 目录，那么直接填写 dist 即可\n\n这里可以添加文件夹或者文件，如果填写文件夹则会自动发布整个文件到对应位置，如果填写文件则只发布对应到文件\n\n产物目录目前支持模糊匹配： 支持通配符(AntPathMatcher)\n\n * ? 匹配一个字符\n * * 匹配零个或多个字符\n * ** 匹配路径中的零个或多个目录\n\n模糊匹配示例：/target/xxx-1.0.?.jar、/target/*.jar\n\n注意：目前模糊匹配只会匹配到一个结果，如果匹配到多个结果将取第一个结果\n\n\n# 模糊匹配规则\n\n注意\n\n2.10.14 版本以上支持更丰富的模糊匹配规则\n\n注意限制\n\n仅本地构建产物支持模糊匹配，容器构建因为无法扫描文件产物不支持模糊匹配\n\n\n# 简绍\n\n新版本匹配符支持配置三个属性：\n\n属性1:属性2[可选]:属性3[可选]\n\n属性1：为模糊匹配的表达式 ( Ant-style )\n\n属性2：匹配到的文件保留方式，可用值：KEEP_DIR、SAME_DIR。（大小写均兼容、配置错误默认为 KEEP_DIR）\n\nKEEP_DIR: 保留匹配到的文件的文件层级\n\nSAME_DIR: 将匹配到的文件均保留到同一个层级（合并到一个文件夹下）。慎用该方式，如果多目录存在相同的文件名会出现合并后只保留匹配到的最后一个文件\n\n属性3： 需要剔除匹配到多级文件夹的指定目录,(可以配置为空)。建议配合属性2的KEEP_DIR使用。剔除目录可以理解为二次过滤前缀匹配文件\n\n\n# 🌰 举个栗子\n\n# 栗子1： /web*/**/*.html:KEEP_DIR:/web2/\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\na.html\n/b/a.html\n\n\n1\n2\n\n\n# 栗子2： /web*/**/*.html:SAME_DIR:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且合并文件到同一个目录，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\nweb1.html\na.html\nt.html\n\n\n1\n2\n3\n\n\n# 栗子3： /web*/**/*.html:KEEP_DIR:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候按照原目录结构发布\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\n/web/web1.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n",normalizedContent:"# 产物目录\n\n在添加构建时候需要填写产物目录。\n\n这里产物目录是指：执行构建命令后执行发布操作时发布指定文件或者文件夹到对应位置的目录\n\n这里的目录注意一定是仓库路径下面的相对目录\n\n比如：\n\n * 构建 java 项目成功后会生成 target 目录，一般场景都是需要 target 目录下面的某个文件，那么填写：/target/xxx.jar\n * 如果是多层级目录则需要填写完整路径如果：/xxxx/target/xxxx.jar\n * 构建 vue 项目成功后会生成 dist 目录，那么直接填写 dist 即可\n\n这里可以添加文件夹或者文件，如果填写文件夹则会自动发布整个文件到对应位置，如果填写文件则只发布对应到文件\n\n产物目录目前支持模糊匹配： 支持通配符(antpathmatcher)\n\n * ? 匹配一个字符\n * * 匹配零个或多个字符\n * ** 匹配路径中的零个或多个目录\n\n模糊匹配示例：/target/xxx-1.0.?.jar、/target/*.jar\n\n注意：目前模糊匹配只会匹配到一个结果，如果匹配到多个结果将取第一个结果\n\n\n# 模糊匹配规则\n\n注意\n\n2.10.14 版本以上支持更丰富的模糊匹配规则\n\n注意限制\n\n仅本地构建产物支持模糊匹配，容器构建因为无法扫描文件产物不支持模糊匹配\n\n\n# 简绍\n\n新版本匹配符支持配置三个属性：\n\n属性1:属性2[可选]:属性3[可选]\n\n属性1：为模糊匹配的表达式 ( ant-style )\n\n属性2：匹配到的文件保留方式，可用值：keep_dir、same_dir。（大小写均兼容、配置错误默认为 keep_dir）\n\nkeep_dir: 保留匹配到的文件的文件层级\n\nsame_dir: 将匹配到的文件均保留到同一个层级（合并到一个文件夹下）。慎用该方式，如果多目录存在相同的文件名会出现合并后只保留匹配到的最后一个文件\n\n属性3： 需要剔除匹配到多级文件夹的指定目录,(可以配置为空)。建议配合属性2的keep_dir使用。剔除目录可以理解为二次过滤前缀匹配文件\n\n\n# 🌰 举个栗子\n\n# 栗子1： /web*/**/*.html:keep_dir:/web2/\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\na.html\n/b/a.html\n\n\n1\n2\n\n\n# 栗子2： /web*/**/*.html:same_dir:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且合并文件到同一个目录，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\nweb1.html\na.html\nt.html\n\n\n1\n2\n3\n\n\n# 栗子3： /web*/**/*.html:keep_dir:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候按照原目录结构发布\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\n/web/web1.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2024/01/25, 09:55:52",lastUpdatedTimestamp:1706176552e3},{title:"更多说明",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"更多说明",date:"2022-10-20T10:18:48.000Z",permalink:"/pages/6f2c0b/",categories:["docs","FQA","名称解释"],tags:["名词-更多说明"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/22.%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A/09.%E6%9B%B4%E5%A4%9A%E8%AF%B4%E6%98%8E.html",relativePath:"文档/00.自述序言/22.名词解释/09.更多说明.md",key:"v-59e47739",path:"/pages/6f2c0b/",headers:[{level:2,title:"孤独数据",slug:"孤独数据",normalizedTitle:"孤独数据",charIndex:2},{level:2,title:"demo 账号",slug:"demo-账号",normalizedTitle:"demo 账号",charIndex:139},{level:2,title:"H2 (H2 Database、h2database)",slug:"h2-h2-database、h2database",normalizedTitle:"h2 (h2 database、h2database)",charIndex:212},{level:2,title:"卡片/表格",slug:"卡片-表格",normalizedTitle:"卡片/表格",charIndex:452}],headersStr:"孤独数据 demo 账号 H2 (H2 Database、h2database) 卡片/表格",content:"# 孤独数据\n\n在 Jpom 中如果机器节点中的数据和服务端中的工作空间和逻辑节点无法关联上的数据统称为孤独数据。\n\n出现孤独数据后您可以通过页面修正：【系统管理】->【资产管理】->【机器管理】->【选择对应机器管理】->【缓存监控】->【孤独数据】中进行查看和修改\n\n\n# demo 账号\n\nJpom 系统中内置了 demo 用户名为演示账号，演示账号存在很多限制，在自己部署后请非必要不要创建 demo 用户\n\n\n# H2 (H2 Database、h2database)\n\nh2database 官网\n\nH2 Database是一个开源的嵌入式数据库引擎，采用java语言编写，不受平台的限制，同时H2 Database提供了一个十分方便的web控制台用于操作和管理数据库内容。H2 Database还提供兼容模式，可以兼容一些主流的数据库，因此采用H2 Database作为开发期的数据库非常方便。\n\nJpom 为了方便用户快捷安装使用不需要额外配置数据所以采用了 h2 数据库在存储\n\n\n# 卡片/表格\n\nJpom 中部分页面使用了卡片和表格来展示数据，卡片和表格的样式和功能按钮有一定差异，请您在找不到部分功能时候可以尝试切换视图来查看\n\n为啥要这么做，因为功能按钮太多放到到表格中操作按钮就过于冗余也不美观",normalizedContent:"# 孤独数据\n\n在 jpom 中如果机器节点中的数据和服务端中的工作空间和逻辑节点无法关联上的数据统称为孤独数据。\n\n出现孤独数据后您可以通过页面修正：【系统管理】->【资产管理】->【机器管理】->【选择对应机器管理】->【缓存监控】->【孤独数据】中进行查看和修改\n\n\n# demo 账号\n\njpom 系统中内置了 demo 用户名为演示账号，演示账号存在很多限制，在自己部署后请非必要不要创建 demo 用户\n\n\n# h2 (h2 database、h2database)\n\nh2database 官网\n\nh2 database是一个开源的嵌入式数据库引擎，采用java语言编写，不受平台的限制，同时h2 database提供了一个十分方便的web控制台用于操作和管理数据库内容。h2 database还提供兼容模式，可以兼容一些主流的数据库，因此采用h2 database作为开发期的数据库非常方便。\n\njpom 为了方便用户快捷安装使用不需要额外配置数据所以采用了 h2 数据库在存储\n\n\n# 卡片/表格\n\njpom 中部分页面使用了卡片和表格来展示数据，卡片和表格的样式和功能按钮有一定差异，请您在找不到部分功能时候可以尝试切换视图来查看\n\n为啥要这么做，因为功能按钮太多放到到表格中操作按钮就过于冗余也不美观",charsets:{cjk:!0},lastUpdated:"2024/01/13, 11:36:49",lastUpdatedTimestamp:1705145809e3},{title:"演示系统",frontmatter:{title:"演示系统",date:"2023-04-24T13:16:19.000Z",permalink:"/pages/2e4ffc/",categories:["docs","FQA"],tags:["演示系统"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/30.%E6%BC%94%E7%A4%BA%E7%B3%BB%E7%BB%9F.html",relativePath:"文档/00.自述序言/30.演示系统.md",key:"v-725f8659",path:"/pages/2e4ffc/",headers:[{level:2,title:"为啥有演示",slug:"为啥有演示",normalizedTitle:"为啥有演示",charIndex:2},{level:3,title:"数据风险",slug:"数据风险",normalizedTitle:"数据风险",charIndex:288},{level:2,title:"通过演示系统造成您的数据泄露我们概不负责！！！！",slug:"通过演示系统造成您的数据泄露我们概不负责",normalizedTitle:"通过演示系统造成您的数据泄露我们概不负责！！！！",charIndex:387},{level:2,title:"演示系统架构说明",slug:"演示系统架构说明",normalizedTitle:"演示系统架构说明",charIndex:433},{level:2,title:"限制说明",slug:"限制说明",normalizedTitle:"限制说明",charIndex:673},{level:2,title:"高权账号",slug:"高权账号",normalizedTitle:"高权账号",charIndex:1012},{level:2,title:"请高抬贵手，🙏🙏🙏🙏🙏🙏",slug:"请高抬贵手-🙏🙏🙏🙏🙏🙏",normalizedTitle:"请高抬贵手，🙏🙏🙏🙏🙏🙏",charIndex:1138},{level:2,title:"Oauth2 账号",slug:"oauth2-账号",normalizedTitle:"oauth2 账号",charIndex:1210},{level:2,title:"~~特别感谢~~",slug:"特别感谢",normalizedTitle:"<s>特别感谢</s>",charIndex:null}],headersStr:"为啥有演示 数据风险 通过演示系统造成您的数据泄露我们概不负责！！！！ 演示系统架构说明 限制说明 高权账号 请高抬贵手，🙏🙏🙏🙏🙏🙏 Oauth2 账号 ~~特别感谢~~",content:"# 为啥有演示\n\n考虑到部分用户期望先看看 Jpom 系统内部的功能和页面效果，我们这里提供了一个演示系统\n\n> 演示系统考虑到系统的安全性，账号做了很多权限限制，并且不可以取消还望理解。我们还是建议您花几分钟在自己服务器搭建一个来试用。\n\n * 系统地址：https://demo.jpom.top\n * 账号：demo\n * 密码：jpom666\n\n温馨提示\n\n考虑到费用成本问题，本演示系统不能保证稳定和访问速度问题，可能出现无法访问或者访问速度很慢。 如果出现无法访问可以联系我们排查，但不保证一定能解决（如果是服务宕机我们将尽快恢复）,感谢您的理解和支持。\n\n\n# 数据风险\n\n数据风险\n\n请勿在演示系统中存放私有数据或者涉及隐私数据，我们不会保证演示系统中的数据安全。\n\n----------------------------------------\n\n\n# 通过演示系统造成您的数据泄露我们概不负责！！！！\n\n同时我们可能随时还原演示系统。\n\n\n# 演示系统架构说明\n\n3 台 Ubuntu 22.04.3 服务器（虚拟机，均非 root 用户）\n\n节点    服务端   插件端   DOCKER    JAVA      NVM   MVN\n200   ✅     ✅     ✅         jdk 1.8   ✅     ✅\n201   ❌     ❌     ✅         -         -     -\n202   ❌     ✅     ✅ [tls]   jdk 21    -     -\n\n\n# 限制说明\n\n为了系统的稳定性，我们限制了部分接口，包括：\n\n * /user/updatePwd 【修改账号密码】\n * /user/bind_mfa 【绑定 mfa】\n * /user/rest-user-pwd 【重置密码】\n * /user/edit 【添加/编辑用户】\n * /user/deleteUser 【删除用户】\n * /system/save_ip_config.json 【配置 IP 授权】\n * /system/save_config.json 【修改服务端配置】\n * /system/backup/restore【还原系统】\n * /user/notification/save 【系统公告】\n\n> 请求上述接口会提示：没有找到对应的资源\n\n\n# 高权账号\n\n我们为了您更好的体验开发了高权账号，获取高权账号密码方式请扫码关注公众号：\n\n\n\n关注公众号后，回复 高权 获取高权账号密码\n\n温馨提示【开源不易】\n\n开源不易还恳请友好使用演示系统，请勿删除系统中任何资料或者进行高危操作，谢谢。\n\n\n# 请高抬贵手，🙏🙏🙏🙏🙏🙏\n\n如果演示系统如果访问或者无法正常使用请联系 Jpom 小助手：jpom66 (微信账号) 处理\n\n\n# Oauth2 账号\n\n我们开通了 Gitee 的 Oauth2 账号登录，其他平台仅配置但是信息不正确\n\n\n# 特别感谢\n\n演示系统中使用到内网穿透，这里我们使用到 中微子代理（neutrino-proxy）\n\n * 中微子代理文档：https://dromara.gitee.io/neutrino-proxy\n * 中微子代理仓库：https://gitee.com/dromara/neutrino-proxy",normalizedContent:"# 为啥有演示\n\n考虑到部分用户期望先看看 jpom 系统内部的功能和页面效果，我们这里提供了一个演示系统\n\n> 演示系统考虑到系统的安全性，账号做了很多权限限制，并且不可以取消还望理解。我们还是建议您花几分钟在自己服务器搭建一个来试用。\n\n * 系统地址：https://demo.jpom.top\n * 账号：demo\n * 密码：jpom666\n\n温馨提示\n\n考虑到费用成本问题，本演示系统不能保证稳定和访问速度问题，可能出现无法访问或者访问速度很慢。 如果出现无法访问可以联系我们排查，但不保证一定能解决（如果是服务宕机我们将尽快恢复）,感谢您的理解和支持。\n\n\n# 数据风险\n\n数据风险\n\n请勿在演示系统中存放私有数据或者涉及隐私数据，我们不会保证演示系统中的数据安全。\n\n----------------------------------------\n\n\n# 通过演示系统造成您的数据泄露我们概不负责！！！！\n\n同时我们可能随时还原演示系统。\n\n\n# 演示系统架构说明\n\n3 台 ubuntu 22.04.3 服务器（虚拟机，均非 root 用户）\n\n节点    服务端   插件端   docker    java      nvm   mvn\n200   ✅     ✅     ✅         jdk 1.8   ✅     ✅\n201   ❌     ❌     ✅         -         -     -\n202   ❌     ✅     ✅ [tls]   jdk 21    -     -\n\n\n# 限制说明\n\n为了系统的稳定性，我们限制了部分接口，包括：\n\n * /user/updatepwd 【修改账号密码】\n * /user/bind_mfa 【绑定 mfa】\n * /user/rest-user-pwd 【重置密码】\n * /user/edit 【添加/编辑用户】\n * /user/deleteuser 【删除用户】\n * /system/save_ip_config.json 【配置 ip 授权】\n * /system/save_config.json 【修改服务端配置】\n * /system/backup/restore【还原系统】\n * /user/notification/save 【系统公告】\n\n> 请求上述接口会提示：没有找到对应的资源\n\n\n# 高权账号\n\n我们为了您更好的体验开发了高权账号，获取高权账号密码方式请扫码关注公众号：\n\n\n\n关注公众号后，回复 高权 获取高权账号密码\n\n温馨提示【开源不易】\n\n开源不易还恳请友好使用演示系统，请勿删除系统中任何资料或者进行高危操作，谢谢。\n\n\n# 请高抬贵手，🙏🙏🙏🙏🙏🙏\n\n如果演示系统如果访问或者无法正常使用请联系 jpom 小助手：jpom66 (微信账号) 处理\n\n\n# oauth2 账号\n\n我们开通了 gitee 的 oauth2 账号登录，其他平台仅配置但是信息不正确\n\n\n# 特别感谢\n\n演示系统中使用到内网穿透，这里我们使用到 中微子代理（neutrino-proxy）\n\n * 中微子代理文档：https://dromara.gitee.io/neutrino-proxy\n * 中微子代理仓库：https://gitee.com/dromara/neutrino-proxy",charsets:{cjk:!0},lastUpdated:"2024/11/28, 06:45:02",lastUpdatedTimestamp:1732776302e3},{title:"高效报告BUG",frontmatter:{title:"高效报告BUG",date:"2024-01-22T21:46:35.000Z",permalink:"/pages/0facbd/",categories:["docs","文档","自述序言"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/998.%E9%AB%98%E6%95%88%E6%8A%A5%E5%91%8ABUG.html",relativePath:"文档/00.自述序言/998.高效报告BUG.md",key:"v-f8698352",path:"/pages/0facbd/",headers:[{level:2,title:"作者",slug:"作者",normalizedTitle:"作者",charIndex:2},{level:2,title:"引言",slug:"引言",normalizedTitle:"引言",charIndex:53},{level:2,title:"“程序不好用”",slug:"程序不好用",normalizedTitle:"“程序不好用”",charIndex:839},{level:2,title:"“演示给我看”",slug:"演示给我看",normalizedTitle:"“演示给我看”",charIndex:1287},{level:2,title:"“告诉我该怎么做”",slug:"告诉我该怎么做",normalizedTitle:"“告诉我该怎么做”",charIndex:1713},{level:2,title:"“哪儿出错了？在我看来一切正常哦！”",slug:"哪儿出错了-在我看来一切正常哦",normalizedTitle:"“哪儿出错了？在我看来一切正常哦！”",charIndex:2120},{level:2,title:"“出了问题之后，我做了……”",slug:"出了问题之后-我做了",normalizedTitle:"“出了问题之后，我做了……”",charIndex:2944},{level:2,title:"“我想粒子的跃迁与错误的极化有关”",slug:"我想粒子的跃迁与错误的极化有关",normalizedTitle:"“我想粒子的跃迁与错误的极化有关”",charIndex:3547},{level:2,title:"“真是奇怪，刚才还不好用，怎么现在又好了？”",slug:"真是奇怪-刚才还不好用-怎么现在又好了",normalizedTitle:"“真是奇怪，刚才还不好用，怎么现在又好了？”",charIndex:4314},{level:2,title:"“我把磁盘装进了 Windows……”",slug:"我把磁盘装进了-windows",normalizedTitle:"“我把磁盘装进了 windows……”",charIndex:5177},{level:2,title:"小结：",slug:"小结",normalizedTitle:"小结：",charIndex:5859}],headersStr:"作者 引言 “程序不好用” “演示给我看” “告诉我该怎么做” “哪儿出错了？在我看来一切正常哦！” “出了问题之后，我做了……” “我想粒子的跃迁与错误的极化有关” “真是奇怪，刚才还不好用，怎么现在又好了？” “我把磁盘装进了 Windows……” 小结：",content:"# 作者\n\n来源：如何有效地报告 Bug\n\n作者：Simon Tatham 专业的自由软件程序员\n\n\n# 引言\n\n为公众写过软件的人，大概都收到过很拙劣的bug（计算机程序代码中的错误或程序运行时的瑕疵——译者注）报告，例如：\n\n在报告中说“不好用”；\n\n所报告内容毫无意义；\n\n在报告中用户没有提供足够的信息；\n\n在报告中提供了错误信息；\n\n所报告的问题是由于用户的过失而产生的；\n\n所报告的问题是由于其他程序的错误而产生的；\n\n所报告的问题是由于网络错误而产生的；\n\n这便是为什么“技术支持”被认为是一件可怕的工作，因为有拙劣的bug报告需要处理。然而并不是所有的bug报告都令人生厌：我在业余时间维护自由软件，有时我会收到非常清晰、有帮助并且*“有内容”*的bug报告。\n\n在这里我会尽力阐明如何写一个好的bug报告。我非常希望每一个人在报告bug之前都读一下这篇短文，当然我也希望用户在给我报告bug之前已经读过这篇文章。\n\n简单地说，报告bug的目的是为了让程序员看到程序的错误。您可以亲自示范，也可以给出能导致程序出错的、详尽的操作步骤。如果程序出错了，程序员会收集额外的信息直到找到错误的原因；如果程序没有出错，那么他们会请您继续关注这个问题，收集相关的信息。\n\n在bug报告里，要设法搞清什么是事实（例如：“我在电脑旁”和“XX出现了”）什么是推测（例如：“我想问题可能是出在……”）。如果愿意的话，您可以省去推测，但是千万别省略事实。\n\n当您报告bug的时候（既然您已经这么做了），一定是希望bug得到及时修正。所以此时针对程序员的任何过激或亵渎的言语（甚至谩骂）都是与事无补的——因为这可能是程序员的错误，也有可能是您的错误，也许您有权对他们发火，但是如果您能多提供一些有用的信息（而不是激愤之词）或许bug会被更快的修正。除此以外，请记住：如果是免费软件，作者提供给我们已经是出于好心，所以要是太多的人对他们无礼，他们可能就要“收起”这份好心了。\n\n\n# “程序不好用”\n\n程序员不是弱智：如果程序一点都不好用，他们不可能不知道。他们不知道一定是因为程序在他们看来工作得很正常。所以，或者是您作过一些与他们不同的操作，或者是您的环境与他们不同。他们需要信息，报告bug也是为了提供信息。信息总是越多越好。\n\n许多程序，特别是自由软件，会公布一个“已知bug列表”。如果您找到的bug在列表里已经有了，那就不必再报告了，但是如果您认为自己掌握的信息比列表中的丰富，那无论如何也要与程序员联系。您提供的信息可能会使他们更简单地修复bug。\n\n本文中提到的都是一些指导方针，没有哪一条是必须恪守的准则。不同的程序员会喜欢不同形式的bug报告。如果程序附带了一套报告bug的准则，一定要读。如果它与本文中提到的规则相抵触，那么请以它为准。\n\n如果您不是报告bug，而是寻求帮助，您应该说明您曾经到哪里找过答案，（例如：我看了第四章和第五章的第二节，但我找不到解决的办法。）这会使程序员了解用户喜欢到哪里去找答案，从而使程序员把帮助文档做得更容易使用。\n\n\n# “演示给我看”\n\n报告bug的最好的方法之一是“演示”给程序员看。让程序员站在电脑前，运行他们的程序，指出程序的错误。让他们看着您启动电脑、运行程序、如何进行操作以及程序对您的输入有何反应。\n\n他们对自己写的软件了如指掌，他们知道哪些地方不会出问题，而哪些地方最可能出问题。他们本能地知道应该注意什么。在程序真的出错之前，他们可能已经注意到某些地方不对劲，这些都会给他们一些线索。他们会观察程序测试中的每一个细节，并且选出他们认为有用的信息。\n\n这些可能还不够。也许他们觉得还需要更多的信息，会请您重复刚才的操作。他们可能在这期间需要与您交流一下，以便在他们需要的时候让bug重新出现。他们可能会改变一些操作，看看这个错误的产生是个别问题还是相关的一类问题。如果您不走运，他们可能需要坐下来，拿出一堆开发工具，花上几个小时来好好地研究一下。但是最重要的是在程序出错的时候让程序员在电脑旁。一旦他们看到了问题，他们通常会找到原因并开始试着修改。\n\n\n# “告诉我该怎么做”\n\n如今是网络时代，是信息交流的时代。我可以点一下鼠标把自己的程序送到俄罗斯的某个朋友那里，当然他也可以用同样简单的方法给我一些建议。但是如果我的程序出了什么问题，我不可能在他旁边。“演示”是很好的办法，但是常常做不到。\n\n如果您必须报告bug，而此时程序员又不在您身边，那么您就要想办法让bug重现在他们面前。当他们亲眼看到错误时，就能够进行处理了。\n\n确切地告诉程序员您做了些什么。如果是一个图形界面程序，告诉他们您按了哪个按钮，依照什么顺序按的。如果是一个命令行程序，精确的告诉他们您键入了什么命令。您应该尽可能详细地提供您所键入的命令和程序的反应。\n\n把您能想到的所有的输入方式都告诉程序员，如果程序要读取一个文件，您可能需要发一个文件的拷贝给他们。如果程序需要通过网络与另一台电脑通讯，您或许不能把那台电脑复制过去，但至少可以说一下电脑的类型和安装了哪些软件（如果可以的话）。\n\n\n# “哪儿出错了？在我看来一切正常哦！”\n\n如果您给了程序员一长串输入和指令，他们执行以后没有出现错误，那是因为您没有给他们足够的信息，可能错误不是在每台计算机上都出现，您的系统可能和他们的在某些地方不一样。有时候程序的行为可能和您预想的不一样，这也许是误会，但是您会认为程序出错了，程序员却认为这是对的。\n\n同样也要描述发生了什么。精确的描述您看到了什么。告诉他们为什么您觉得自己所看到的是错误的，最好再告诉他们，您认为自己应该看到什么。如果您只是说：“程序出错了”，那您很可能漏掉了非常重要的信息。\n\n如果您看到了错误消息，一定要仔细、准确的告诉程序员，这确实很重要。在这种情况下，程序员只要修正错误，而不用去找错误。他们需要知道是什么出问题了，系统所报的错误消息正好帮助了他们。如果您没有更好的方法记住这些消息，就把它们写下来。只报告“程序出了一个错”是毫无意义的，除非您把错误消息一块报上来。\n\n特殊情况下，如果有错误消息号，一定要把这些号码告诉程序员。不要以为您看不出任何意义，它就没有意义。错误消息号包含了能被程序员读懂的各种信息，并且很有可能包含重要的线索。给错误消息编号是因为用语言描述计算机错误常常令人费解。用这种方式告诉您错误的所在是一个最好的办法。\n\n在这种情形下，程序员的排错工作会十分高效。他们不知道发生了什么，也不可能到现场去观察，所以他们一直在搜寻有价值的线索。错误消息、错误消息号以及一些莫名其妙的延迟，都是很重要的线索，就像办案时的指纹一样重要，保存好。\n\n如果您使用UNIX系统，程序可能会产生一个内核输出（coredump）。内核输出是特别有用的线索来源，别扔了它们。另一方面，大多数程序员不喜欢收到含有大量内核输出文件的EMAIL，所以在发邮件之前最好先问一下。还有一点要注意：内核输出文件记录了完整的程序状态，也就是说任何秘密（可能当时程序正在处理一些私人信息或秘密数据）都可能包含在内核输出文件里。\n\n\n# “出了问题之后，我做了……”\n\n当一个错误或bug发生的时候，您可能会做许多事情。但是大多数人会使事情变的更糟。我的一个朋友在学校里误删了她所有的Word文件，在找人帮忙之前她重装了Word，又运行了一遍碎片整理程序，这些操作对于恢复文件是毫无益处的，因为这些操作搞乱了磁盘的文件区块。恐怕在这个世界上没有一种反删除软件能恢复她的文件了。如果她不做任何操作，或许还有一线希望。\n\n这种用户仿佛一只被逼到墙角的鼬（黄鼠狼、紫貂一类的动物——译者注）：背靠墙壁，面对死亡的降临奋起反扑，疯狂攻击。他们认为做点什么总比什么都不做强。然而这些在处理计算机软件问题时并不适用。\n\n不要做鼬，做一只羚羊。当一只羚羊面对料想不到的情况或受到惊吓时，它会一动不动，是为了不吸引任何注意，与此同时也在思考解决问题的最好办法（如果羚羊有一条技术支持热线，此时占线。）。然后，一旦它找到了最安全的行动方案，它便去做。\n\n当程序出毛病的时候，立刻停止正在做的任何操作。不要按任何健。仔细地看一下屏幕，注意那些不正常的地方，记住它或者写下来。然后慎重地点击“确定” 或“取消”，选择一个最安全的。学着养成一种条件反射——一旦电脑出了问题，先不要动。要想摆脱这个问题，关掉受影响的程序或者重新启动计算机都不好，一个解决问题的好办法是让问题再次产生。程序员们喜欢可以被重现的问题，快乐的程序员可以更快而且更有效率的修复bug。\n\n\n# “我想粒子的跃迁与错误的极化有关”\n\n并不只是非专业的用户才会写出拙劣的bug报告，我见过一些非常差的bug报告出自程序员之手，有些还是非常优秀的程序员。\n\n有一次我与另一个程序员一起工作，他一直在找代码中的bug，他常常遇到一个bug，但是不会解决，于是就叫我帮忙。“出什么毛病了？”我问。而他的回答却总是一些关于bug的意见。如果他的观点正确，那的确是一件好事。这意味着他已经完成了工作的一半，并且我们可以一起完成另一半工作。这是有效率并有用的。\n\n但事实上他常常是错的。这就会使我们花上半个小时在原本正确的代码里来回寻找错误，而实际上问题出在别的地方。我敢肯定他不会对医生这么做。“大夫，我得了Hydroyoyodyne（真是怪病——译者），给我开个方子”，人们知道不该对一位医生说这些。您描述一下症状，哪个地方不舒服，哪里疼、起皮疹、发烧……让医生诊断您得了什么病，应该怎样治疗。否则医生会把您当做疑心病或精神病患者打发了，这似乎没什么不对。\n\n做程序员也是一样。即便您自己的“诊断”有时真的有帮助，也要只说“症状”。“诊断”是可说可不说的，但是“症状”一定要说。同样，在bug报告里面附上一份针对bug而做出修改的源代码是有用处的，但它并不能替代bug报告本身。\n\n如果程序员向您询问额外的信息，千万别应付。曾经有一个人向我报告bug，我让他试一个命令，我知道这个命令不好用，但我是要看看程序会返回一个什么错误（这是很重要的线索）。但是这位老兄根本就没试，他在回复中说“那肯定不好用”，于是我又花了好些时间才说服他试了一下那个命令。\n\n用户多动动脑筋对程序员的工作是有帮助的。即使您的推断是错误的，程序员也应该感谢您，至少您想去帮助他们，使他们的工作变的更简单。不过千万别忘了报告“症状”，否则只会使事情变得更糟。\n\n\n# “真是奇怪，刚才还不好用，怎么现在又好了？”\n\n“间歇性错误”着实让程序员发愁。相比之下，进行一系列简单的操作便能导致错误发生的问题是简单的。程序员可以在一个便于观察的条件下重复那些操作，观察每一个细节。太多的问题在这种情况下不能解决，例如：程序每星期出一次错，或者偶然出一次错，或者在程序员面前从不出错（程序员一离开就出错。——译者）。当然还有就是程序的截止日期到了，那肯定要出错。\n\n大多数“间歇性错误”并不是真正的“间歇”。其中的大多数错误与某些地方是有联系的。有一些错误可能是内存泄漏产生的，有一些可能是别的程序在不恰当的时候修改某个重要文件造成的，还有一些可能发生在每一个小时的前半个小时中（我确实遇到过这种事情）。\n\n同样，如果您能使bug重现，而程序员不能，那很有可能是他们的计算机和您的计算机在某些地方是不同的，这种不同引起了问题。我曾写过一个程序，它的窗口可以蜷缩成一个小球呆在屏幕的左上角，它在别的计算机上只能在 800x600 的解析度工作，但是在我的机器上却可以在 1024x768 下工作。\n\n程序员想要了解任何与您发现的问题相关的事情。有可能的话您到另一台机器上试试，多试几次，两次，三次，看看问题是不是经常发生。如果问题出现在您进行了一系列操作之后，不是您想让它出现它就会出现，这就有可能是长时间的运行或处理大文件所导致的错误。程序崩溃的时候，您要尽可能的记住您都做了些什么，并且如果您看到任何图形,也别忘了提一下。您提供的任何事情都是有帮助的。即使只是概括性的描述（例如：当后台有EMACS运行时，程序常常出错），这虽然不能提供导致问题的直接线索，但是可能帮助程序员重现问题。\n\n最重要的是：程序员想要确定他们正在处理的是一个真正的“间歇性错误”呢，还是一个在另一类特定的计算机上才出现的错误。他们想知道有关您计算机的许多细节，以便了解您的机器与他们的有什么不同。有许多细节都依仗特定的程序，但是有一件东西您一定要提供——版本号。程序的版本、操作系统的版本以及与问题有关的程序的版本。\n\n\n# “我把磁盘装进了 Windows……”\n\n表意清楚在一份bug报告里是最基本的要求。如果程序员不知道您说的是什么意思，那您就跟没说一样。我收到的bug报告来自世界各地，有许多是来自非英语国家，他们通常为自己的英文不好而表示歉意。总的来说，这些用户发来的bug报告通常是清晰而且有用的。几乎所有不清晰的bug报告都是来自母语是英语的人，他们总是以为只要自己随便说说，程序员就能明白。\n\n * 精确。如果做相同的事情有两种方法，请说明您用的是哪一种。例如：“我选择了‘载入’”，可能意味着“我用鼠标点击‘载入’”或“我按下了‘ALT+L’”，说清楚您用了哪种方法，有时候这也有关系。\n * 详细。信息宁多毋少！如果您说了很多，程序员可以略去一部分，可是如果您说的太少，他们就不得不回过头再去问您一些问题。有一次我收到了一份bug报告只有一句话，每一次我问他更多事情时，他每次的回复都是一句话，于是我花了几个星期的时间才得到了有用的信息。\n * 慎用代词。诸如“它”，“窗体”这些词，当它们指代不清晰的时候不要用。来看看这句话：“我运行了FooApp，它弹出一个警告窗口，我试着关掉它，它就崩溃了。”这种表述并不清晰，用户究竟关掉了哪个窗口？是警告窗口还是整个FooApp程序？您可以这样说，“我运行FooApp程序时弹出一个警告窗口，我试着关闭警告窗口，FooApp崩溃了。”这样虽然罗嗦点，但是很清晰不容易产生误解。\n * 检查。重新读一遍您写的bug报告，您觉得它是否清晰？如果您列出了一系列能导致程序出错的操作，那么照着做一遍，看看您是不是漏写了一步。\n\n\n# 小结：\n\n * bug报告的首要目的是让程序员亲眼看到错误。如果您不能亲自做给他们看，给他们能使程序出错的详细的操作步骤。\n * 如果首要目的不能达成，程序员不能看到程序出错。这就需要bug报告的第二个目的来描述程序的什么地方出毛病了。详细的描述每一件事情：您看到了什么，您想看到什么，把错误消息记下来，尤其是“错误消息号”。\n * 当您的计算机做了什么您料想不到的事，不要动！在您平静下来之前什么都别做。不要做您认为不安全的事。\n * 尽量试着自己“诊断”程序出错的原因（如果您认为自己可以的话）。即使做出了“诊断”，您仍然应该报告“症状”。\n * 如果程序员需要，请准备好额外的信息。如果他们不需要，就不会问您要。他们不会故意为难自己。您手头上一定要有程序的版本号，它很可能是必需品。\n * 表述清楚，确保您的意思不能被曲解。\n * 总的来说，最重要的是要做到精确。程序员喜欢精确。\n\n----------------------------------------\n\n声明 ： 我从没有真的看见过鼬和羚羊，我的比喻可能不恰当。\n\n版权所有 Simon Tatham 1999\n\n本文属于OPL（OpenContent License），请在复制和使用本文时自觉遵守OPL。",normalizedContent:"# 作者\n\n来源：如何有效地报告 bug\n\n作者：simon tatham 专业的自由软件程序员\n\n\n# 引言\n\n为公众写过软件的人，大概都收到过很拙劣的bug（计算机程序代码中的错误或程序运行时的瑕疵——译者注）报告，例如：\n\n在报告中说“不好用”；\n\n所报告内容毫无意义；\n\n在报告中用户没有提供足够的信息；\n\n在报告中提供了错误信息；\n\n所报告的问题是由于用户的过失而产生的；\n\n所报告的问题是由于其他程序的错误而产生的；\n\n所报告的问题是由于网络错误而产生的；\n\n这便是为什么“技术支持”被认为是一件可怕的工作，因为有拙劣的bug报告需要处理。然而并不是所有的bug报告都令人生厌：我在业余时间维护自由软件，有时我会收到非常清晰、有帮助并且*“有内容”*的bug报告。\n\n在这里我会尽力阐明如何写一个好的bug报告。我非常希望每一个人在报告bug之前都读一下这篇短文，当然我也希望用户在给我报告bug之前已经读过这篇文章。\n\n简单地说，报告bug的目的是为了让程序员看到程序的错误。您可以亲自示范，也可以给出能导致程序出错的、详尽的操作步骤。如果程序出错了，程序员会收集额外的信息直到找到错误的原因；如果程序没有出错，那么他们会请您继续关注这个问题，收集相关的信息。\n\n在bug报告里，要设法搞清什么是事实（例如：“我在电脑旁”和“xx出现了”）什么是推测（例如：“我想问题可能是出在……”）。如果愿意的话，您可以省去推测，但是千万别省略事实。\n\n当您报告bug的时候（既然您已经这么做了），一定是希望bug得到及时修正。所以此时针对程序员的任何过激或亵渎的言语（甚至谩骂）都是与事无补的——因为这可能是程序员的错误，也有可能是您的错误，也许您有权对他们发火，但是如果您能多提供一些有用的信息（而不是激愤之词）或许bug会被更快的修正。除此以外，请记住：如果是免费软件，作者提供给我们已经是出于好心，所以要是太多的人对他们无礼，他们可能就要“收起”这份好心了。\n\n\n# “程序不好用”\n\n程序员不是弱智：如果程序一点都不好用，他们不可能不知道。他们不知道一定是因为程序在他们看来工作得很正常。所以，或者是您作过一些与他们不同的操作，或者是您的环境与他们不同。他们需要信息，报告bug也是为了提供信息。信息总是越多越好。\n\n许多程序，特别是自由软件，会公布一个“已知bug列表”。如果您找到的bug在列表里已经有了，那就不必再报告了，但是如果您认为自己掌握的信息比列表中的丰富，那无论如何也要与程序员联系。您提供的信息可能会使他们更简单地修复bug。\n\n本文中提到的都是一些指导方针，没有哪一条是必须恪守的准则。不同的程序员会喜欢不同形式的bug报告。如果程序附带了一套报告bug的准则，一定要读。如果它与本文中提到的规则相抵触，那么请以它为准。\n\n如果您不是报告bug，而是寻求帮助，您应该说明您曾经到哪里找过答案，（例如：我看了第四章和第五章的第二节，但我找不到解决的办法。）这会使程序员了解用户喜欢到哪里去找答案，从而使程序员把帮助文档做得更容易使用。\n\n\n# “演示给我看”\n\n报告bug的最好的方法之一是“演示”给程序员看。让程序员站在电脑前，运行他们的程序，指出程序的错误。让他们看着您启动电脑、运行程序、如何进行操作以及程序对您的输入有何反应。\n\n他们对自己写的软件了如指掌，他们知道哪些地方不会出问题，而哪些地方最可能出问题。他们本能地知道应该注意什么。在程序真的出错之前，他们可能已经注意到某些地方不对劲，这些都会给他们一些线索。他们会观察程序测试中的每一个细节，并且选出他们认为有用的信息。\n\n这些可能还不够。也许他们觉得还需要更多的信息，会请您重复刚才的操作。他们可能在这期间需要与您交流一下，以便在他们需要的时候让bug重新出现。他们可能会改变一些操作，看看这个错误的产生是个别问题还是相关的一类问题。如果您不走运，他们可能需要坐下来，拿出一堆开发工具，花上几个小时来好好地研究一下。但是最重要的是在程序出错的时候让程序员在电脑旁。一旦他们看到了问题，他们通常会找到原因并开始试着修改。\n\n\n# “告诉我该怎么做”\n\n如今是网络时代，是信息交流的时代。我可以点一下鼠标把自己的程序送到俄罗斯的某个朋友那里，当然他也可以用同样简单的方法给我一些建议。但是如果我的程序出了什么问题，我不可能在他旁边。“演示”是很好的办法，但是常常做不到。\n\n如果您必须报告bug，而此时程序员又不在您身边，那么您就要想办法让bug重现在他们面前。当他们亲眼看到错误时，就能够进行处理了。\n\n确切地告诉程序员您做了些什么。如果是一个图形界面程序，告诉他们您按了哪个按钮，依照什么顺序按的。如果是一个命令行程序，精确的告诉他们您键入了什么命令。您应该尽可能详细地提供您所键入的命令和程序的反应。\n\n把您能想到的所有的输入方式都告诉程序员，如果程序要读取一个文件，您可能需要发一个文件的拷贝给他们。如果程序需要通过网络与另一台电脑通讯，您或许不能把那台电脑复制过去，但至少可以说一下电脑的类型和安装了哪些软件（如果可以的话）。\n\n\n# “哪儿出错了？在我看来一切正常哦！”\n\n如果您给了程序员一长串输入和指令，他们执行以后没有出现错误，那是因为您没有给他们足够的信息，可能错误不是在每台计算机上都出现，您的系统可能和他们的在某些地方不一样。有时候程序的行为可能和您预想的不一样，这也许是误会，但是您会认为程序出错了，程序员却认为这是对的。\n\n同样也要描述发生了什么。精确的描述您看到了什么。告诉他们为什么您觉得自己所看到的是错误的，最好再告诉他们，您认为自己应该看到什么。如果您只是说：“程序出错了”，那您很可能漏掉了非常重要的信息。\n\n如果您看到了错误消息，一定要仔细、准确的告诉程序员，这确实很重要。在这种情况下，程序员只要修正错误，而不用去找错误。他们需要知道是什么出问题了，系统所报的错误消息正好帮助了他们。如果您没有更好的方法记住这些消息，就把它们写下来。只报告“程序出了一个错”是毫无意义的，除非您把错误消息一块报上来。\n\n特殊情况下，如果有错误消息号，一定要把这些号码告诉程序员。不要以为您看不出任何意义，它就没有意义。错误消息号包含了能被程序员读懂的各种信息，并且很有可能包含重要的线索。给错误消息编号是因为用语言描述计算机错误常常令人费解。用这种方式告诉您错误的所在是一个最好的办法。\n\n在这种情形下，程序员的排错工作会十分高效。他们不知道发生了什么，也不可能到现场去观察，所以他们一直在搜寻有价值的线索。错误消息、错误消息号以及一些莫名其妙的延迟，都是很重要的线索，就像办案时的指纹一样重要，保存好。\n\n如果您使用unix系统，程序可能会产生一个内核输出（coredump）。内核输出是特别有用的线索来源，别扔了它们。另一方面，大多数程序员不喜欢收到含有大量内核输出文件的email，所以在发邮件之前最好先问一下。还有一点要注意：内核输出文件记录了完整的程序状态，也就是说任何秘密（可能当时程序正在处理一些私人信息或秘密数据）都可能包含在内核输出文件里。\n\n\n# “出了问题之后，我做了……”\n\n当一个错误或bug发生的时候，您可能会做许多事情。但是大多数人会使事情变的更糟。我的一个朋友在学校里误删了她所有的word文件，在找人帮忙之前她重装了word，又运行了一遍碎片整理程序，这些操作对于恢复文件是毫无益处的，因为这些操作搞乱了磁盘的文件区块。恐怕在这个世界上没有一种反删除软件能恢复她的文件了。如果她不做任何操作，或许还有一线希望。\n\n这种用户仿佛一只被逼到墙角的鼬（黄鼠狼、紫貂一类的动物——译者注）：背靠墙壁，面对死亡的降临奋起反扑，疯狂攻击。他们认为做点什么总比什么都不做强。然而这些在处理计算机软件问题时并不适用。\n\n不要做鼬，做一只羚羊。当一只羚羊面对料想不到的情况或受到惊吓时，它会一动不动，是为了不吸引任何注意，与此同时也在思考解决问题的最好办法（如果羚羊有一条技术支持热线，此时占线。）。然后，一旦它找到了最安全的行动方案，它便去做。\n\n当程序出毛病的时候，立刻停止正在做的任何操作。不要按任何健。仔细地看一下屏幕，注意那些不正常的地方，记住它或者写下来。然后慎重地点击“确定” 或“取消”，选择一个最安全的。学着养成一种条件反射——一旦电脑出了问题，先不要动。要想摆脱这个问题，关掉受影响的程序或者重新启动计算机都不好，一个解决问题的好办法是让问题再次产生。程序员们喜欢可以被重现的问题，快乐的程序员可以更快而且更有效率的修复bug。\n\n\n# “我想粒子的跃迁与错误的极化有关”\n\n并不只是非专业的用户才会写出拙劣的bug报告，我见过一些非常差的bug报告出自程序员之手，有些还是非常优秀的程序员。\n\n有一次我与另一个程序员一起工作，他一直在找代码中的bug，他常常遇到一个bug，但是不会解决，于是就叫我帮忙。“出什么毛病了？”我问。而他的回答却总是一些关于bug的意见。如果他的观点正确，那的确是一件好事。这意味着他已经完成了工作的一半，并且我们可以一起完成另一半工作。这是有效率并有用的。\n\n但事实上他常常是错的。这就会使我们花上半个小时在原本正确的代码里来回寻找错误，而实际上问题出在别的地方。我敢肯定他不会对医生这么做。“大夫，我得了hydroyoyodyne（真是怪病——译者），给我开个方子”，人们知道不该对一位医生说这些。您描述一下症状，哪个地方不舒服，哪里疼、起皮疹、发烧……让医生诊断您得了什么病，应该怎样治疗。否则医生会把您当做疑心病或精神病患者打发了，这似乎没什么不对。\n\n做程序员也是一样。即便您自己的“诊断”有时真的有帮助，也要只说“症状”。“诊断”是可说可不说的，但是“症状”一定要说。同样，在bug报告里面附上一份针对bug而做出修改的源代码是有用处的，但它并不能替代bug报告本身。\n\n如果程序员向您询问额外的信息，千万别应付。曾经有一个人向我报告bug，我让他试一个命令，我知道这个命令不好用，但我是要看看程序会返回一个什么错误（这是很重要的线索）。但是这位老兄根本就没试，他在回复中说“那肯定不好用”，于是我又花了好些时间才说服他试了一下那个命令。\n\n用户多动动脑筋对程序员的工作是有帮助的。即使您的推断是错误的，程序员也应该感谢您，至少您想去帮助他们，使他们的工作变的更简单。不过千万别忘了报告“症状”，否则只会使事情变得更糟。\n\n\n# “真是奇怪，刚才还不好用，怎么现在又好了？”\n\n“间歇性错误”着实让程序员发愁。相比之下，进行一系列简单的操作便能导致错误发生的问题是简单的。程序员可以在一个便于观察的条件下重复那些操作，观察每一个细节。太多的问题在这种情况下不能解决，例如：程序每星期出一次错，或者偶然出一次错，或者在程序员面前从不出错（程序员一离开就出错。——译者）。当然还有就是程序的截止日期到了，那肯定要出错。\n\n大多数“间歇性错误”并不是真正的“间歇”。其中的大多数错误与某些地方是有联系的。有一些错误可能是内存泄漏产生的，有一些可能是别的程序在不恰当的时候修改某个重要文件造成的，还有一些可能发生在每一个小时的前半个小时中（我确实遇到过这种事情）。\n\n同样，如果您能使bug重现，而程序员不能，那很有可能是他们的计算机和您的计算机在某些地方是不同的，这种不同引起了问题。我曾写过一个程序，它的窗口可以蜷缩成一个小球呆在屏幕的左上角，它在别的计算机上只能在 800x600 的解析度工作，但是在我的机器上却可以在 1024x768 下工作。\n\n程序员想要了解任何与您发现的问题相关的事情。有可能的话您到另一台机器上试试，多试几次，两次，三次，看看问题是不是经常发生。如果问题出现在您进行了一系列操作之后，不是您想让它出现它就会出现，这就有可能是长时间的运行或处理大文件所导致的错误。程序崩溃的时候，您要尽可能的记住您都做了些什么，并且如果您看到任何图形,也别忘了提一下。您提供的任何事情都是有帮助的。即使只是概括性的描述（例如：当后台有emacs运行时，程序常常出错），这虽然不能提供导致问题的直接线索，但是可能帮助程序员重现问题。\n\n最重要的是：程序员想要确定他们正在处理的是一个真正的“间歇性错误”呢，还是一个在另一类特定的计算机上才出现的错误。他们想知道有关您计算机的许多细节，以便了解您的机器与他们的有什么不同。有许多细节都依仗特定的程序，但是有一件东西您一定要提供——版本号。程序的版本、操作系统的版本以及与问题有关的程序的版本。\n\n\n# “我把磁盘装进了 windows……”\n\n表意清楚在一份bug报告里是最基本的要求。如果程序员不知道您说的是什么意思，那您就跟没说一样。我收到的bug报告来自世界各地，有许多是来自非英语国家，他们通常为自己的英文不好而表示歉意。总的来说，这些用户发来的bug报告通常是清晰而且有用的。几乎所有不清晰的bug报告都是来自母语是英语的人，他们总是以为只要自己随便说说，程序员就能明白。\n\n * 精确。如果做相同的事情有两种方法，请说明您用的是哪一种。例如：“我选择了‘载入’”，可能意味着“我用鼠标点击‘载入’”或“我按下了‘alt+l’”，说清楚您用了哪种方法，有时候这也有关系。\n * 详细。信息宁多毋少！如果您说了很多，程序员可以略去一部分，可是如果您说的太少，他们就不得不回过头再去问您一些问题。有一次我收到了一份bug报告只有一句话，每一次我问他更多事情时，他每次的回复都是一句话，于是我花了几个星期的时间才得到了有用的信息。\n * 慎用代词。诸如“它”，“窗体”这些词，当它们指代不清晰的时候不要用。来看看这句话：“我运行了fooapp，它弹出一个警告窗口，我试着关掉它，它就崩溃了。”这种表述并不清晰，用户究竟关掉了哪个窗口？是警告窗口还是整个fooapp程序？您可以这样说，“我运行fooapp程序时弹出一个警告窗口，我试着关闭警告窗口，fooapp崩溃了。”这样虽然罗嗦点，但是很清晰不容易产生误解。\n * 检查。重新读一遍您写的bug报告，您觉得它是否清晰？如果您列出了一系列能导致程序出错的操作，那么照着做一遍，看看您是不是漏写了一步。\n\n\n# 小结：\n\n * bug报告的首要目的是让程序员亲眼看到错误。如果您不能亲自做给他们看，给他们能使程序出错的详细的操作步骤。\n * 如果首要目的不能达成，程序员不能看到程序出错。这就需要bug报告的第二个目的来描述程序的什么地方出毛病了。详细的描述每一件事情：您看到了什么，您想看到什么，把错误消息记下来，尤其是“错误消息号”。\n * 当您的计算机做了什么您料想不到的事，不要动！在您平静下来之前什么都别做。不要做您认为不安全的事。\n * 尽量试着自己“诊断”程序出错的原因（如果您认为自己可以的话）。即使做出了“诊断”，您仍然应该报告“症状”。\n * 如果程序员需要，请准备好额外的信息。如果他们不需要，就不会问您要。他们不会故意为难自己。您手头上一定要有程序的版本号，它很可能是必需品。\n * 表述清楚，确保您的意思不能被曲解。\n * 总的来说，最重要的是要做到精确。程序员喜欢精确。\n\n----------------------------------------\n\n声明 ： 我从没有真的看见过鼬和羚羊，我的比喻可能不恰当。\n\n版权所有 simon tatham 1999\n\n本文属于opl（opencontent license），请在复制和使用本文时自觉遵守opl。",charsets:{cjk:!0},lastUpdated:"2024/01/22, 13:56:46",lastUpdatedTimestamp:1705931806e3},{title:"必读前言",frontmatter:{title:"必读前言",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/install/",tags:["前言","必读"],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/01.%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E.html",relativePath:"文档/01.安装使用/01.安装说明.md",key:"v-1008631a",path:"/pages/install/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:94},{level:2,title:"需要考虑部署 Jpom 的前端吗？",slug:"需要考虑部署-jpom-的前端吗",normalizedTitle:"需要考虑部署 jpom 的前端吗？",charIndex:438},{level:2,title:"数据库",slug:"数据库",normalizedTitle:"数据库",charIndex:308},{level:2,title:"JAVA 版本（JDK要求）",slug:"java-版本-jdk要求",normalizedTitle:"java 版本（jdk要求）",charIndex:810},{level:3,title:"高版本 JDK 非法反射访问警告",slug:"高版本-jdk-非法反射访问警告",normalizedTitle:"高版本 jdk 非法反射访问警告",charIndex:1009},{level:3,title:"Could not create the Java Virtual Machine.",slug:"could-not-create-the-java-virtual-machine",normalizedTitle:"could not create the java virtual machine.",charIndex:1477},{level:2,title:"如何选择服务端&插件端",slug:"如何选择服务端-插件端",normalizedTitle:"如何选择服务端&amp;插件端",charIndex:null},{level:2,title:"网络限制",slug:"网络限制",normalizedTitle:"网络限制",charIndex:1826},{level:3,title:"可以只安装服务端吗？",slug:"可以只安装服务端吗",normalizedTitle:"可以只安装服务端吗？",charIndex:2028},{level:3,title:"如果管理安装过服务端的服务器",slug:"如果管理安装过服务端的服务器",normalizedTitle:"如果管理安装过服务端的服务器",charIndex:2119},{level:3,title:"一台服务器安装多个插件端",slug:"一台服务器安装多个插件端",normalizedTitle:"一台服务器安装多个插件端",charIndex:2161},{level:2,title:"分布式、集群",slug:"分布式、集群",normalizedTitle:"分布式、集群",charIndex:2189},{level:2,title:"安装方式",slug:"安装方式",normalizedTitle:"安装方式",charIndex:2259},{level:2,title:"流程变动",slug:"流程变动",normalizedTitle:"流程变动",charIndex:2364},{level:2,title:"过度方案",slug:"过度方案",normalizedTitle:"过度方案",charIndex:2596},{level:3,title:"有代替功能",slug:"有代替功能",normalizedTitle:"有代替功能",charIndex:2659},{level:3,title:"待优化的功能",slug:"待优化的功能",normalizedTitle:"待优化的功能",charIndex:2691},{level:3,title:"不能满足需求",slug:"不能满足需求",normalizedTitle:"不能满足需求",charIndex:2755}],headersStr:"前言 需要考虑部署 Jpom 的前端吗？ 数据库 JAVA 版本（JDK要求） 高版本 JDK 非法反射访问警告 Could not create the Java Virtual Machine. 如何选择服务端&插件端 网络限制 可以只安装服务端吗？ 如果管理安装过服务端的服务器 一台服务器安装多个插件端 分布式、集群 安装方式 流程变动 过度方案 有代替功能 待优化的功能 不能满足需求",content:"> 请您在使用 Jpom 前请仔细阅读文档，我们不能保证您在安装以及使用过程中不出任何问题，但是请您遇到问题还是先查阅文档。\n\n您还可以阅读文档说明来更详细的了解该如何阅读本文档\n\n\n# 前言\n\n开源不易请大家多多支持，请给个 star 支持一下，谢谢！\n\n * Gitee\n * Github\n\n如果您在安装或者使用 Jpom 过程中遇到问题，请先查阅文档，如果文档中没有找到解决方案，您可以先自己尝试解决，如果实在解决不了，请提交 issue 或者加入我们的社群反馈。\n\n如您自行解决后还恳请您不要吝啬，将其贡献出来，为开源项目做出贡献。\n\nJpom 是一款 Java 编写的前后端分离项目，并且默认使用 H2 数据库安装此软件非常简单，但前提条件是您已经会安装 Java 环境了，如果您还没有安装 Java 环境，请先安装 Java 环境。\n\nJpom 理论上支持在有 Java 环境的任意平台安装，但为了更好的使用体验，我们建议您安装在 Linux 系统上。\n\n\n# 需要考虑部署 Jpom 的前端吗？\n\n不需要，因为 Jpom 默认已经将前端打包到 Jar 包里面了，您只需要运行我们的安装包即可\n\n\n# 数据库\n\nJpom 默认使用 H2 数据库，我们还支持 mysql、postgresql、mariadb 数据库。\n\n在大多数使用场景下其实您使用默认的 H2 数据库可以满足您的日常需求，如果您对数据稳定性和数据备份有一定要求那则建议您使用 mysql / postgresql / mariadb 数据库。\n\n我们为了简化您的安装流程，系统会在启动时自动执行表结构DDL脚本，完全不需要您手动控制。\n\n注意\n\nH2 数据库在一些极端情况下（断电关闭、强杀进程）会出现数据库损坏，如果出现启动过程中数据库异常请不要慌，系统默认开启了 H2 数据库的备份功能，您可以使用已经备份的数据文件进行还原\n\n\n# JAVA 版本（JDK要求）\n\nJpom 采用 jdk 1.8 开发，我们推荐您在 Java 8 环境下使用，如果您想在高版本中使用您可以需要修改我们的启动脚本。\n\n如果您在使用高版本的 JDK 过程中遇到了问题可以先尝试搜索引擎了解或者联系我们一起排查\n\n我们更期望您把您遇到的问题反馈给我们，一起完善 Jpom\n\n经社区测试：\n\nJDK 17、21 在适当修改启动参数后可以正常运行。\n\n\n# 高版本 JDK 非法反射访问警告\n\n * Unable to make protected\n * Unable to make private\n * .....\n\n这种问题不会在JDK8出现，但是 jdk8+ 可能出现因此解决方式类似，开放模块即可。\n\n需要添加如下启动参数：\n\n * --add-opens java.base/java.lang=ALL-UNNAMED\n * --add-opens java.base/sun.net.util=ALL-UNNAMED\n * --add-opens java.base/java.util=ALL-UNNAMED\n * --add-opens java.base/java.lang.reflect=ALL-UNNAMED\n\n通过规律可以看到，再报类似错误，都是一个套路，\n\nmodule java.base does not “opens java.lang“ to unnamed module\n\n直接加：java.base/java.lang=ALL-UNNAMED\n\n\n# Could not create the Java Virtual Machine.\n\n高版本出现如下错误是因为启动脚本中的默认参数在高版本中不支持，解决办法是提示什么参数错误就删除什么参数，如果不怎么删除什么参数可以将 JVM 参数仅保留：\n\n-server -Xms200m -Xmx600m -XX:+UseG1GC\n\n\n# 如何选择服务端&插件端\n\nJpom 是一个带插件端（Agent）的软件。\n\n插件端（Agent） 主要作用是控制需要被管理的服务器（项目文件控制、执行脚本等）\n\n服务端（Server）主要作用是管控所有 Agent、执行项目构建打包等\n\n注意\n\nServer端和Agent端不可安装在同一目录下，因为两个程序数据目录会使用到同一个文件夹/文件会造成数据错乱\n\n\n# 网络限制\n\nJpom 的插件端和服务端通讯协议目前采用 HTTP+WebSocket 协议。\n\n所以服务器需要能正常使用 HTTP 协议访问到插件端的端口才能正常添加节点。\n\n如果您的网络环境下服务端不能正常访问到插件端端口需要您自行使用\n\n * 内网穿透\n * 端口代理\n * 防火墙策略\n\n等方案来解决\n\n内网穿透可以采用：frp、ngrok、neutrino-proxy 等常用软件来实现\n\n\n# 可以只安装服务端吗？\n\n可以，服务端在没有插件端时，节点相关功能均不可以，但是其他功能如：SSH 管理、Docker 管理、在线构建、文件管理、服务端脚本管理等可以正常使用\n\n\n# 如果管理安装过服务端的服务器\n\n在同一台服务器上安装插件端并添加到节点即可\n\n\n# 一台服务器安装多个插件端\n\n非常不建议如此操作\n\n\n# 分布式、集群\n\nJpom 支持集群部署服务端、前提是您需要使用 mysql 数据库。\n\n集群更详细说明请查阅集群相关文档：集群管理\n\n\n# 安装方式\n\n我们提供了如下安装方式：\n\n * 一键安装：插件端、服务端\n * 下载安装：插件端、服务端\n * 编译安装：插件端、服务端\n * 容器安装：服务端\n\n您可以根据使用情况来选择合适的安装方式\n\n\n# 流程变动\n\n如果您是第一次使用 Jpom 或者类似的 ops 软件，那么您之前如果使用纯原生方式来运维部署，您在使用 Jpom 后很大概率会涉及到您发布流程 使用思路、使用方式、操作步骤和规范，甚至需要调整代码来达到使用本软件系统适配来优化您的运维部署流程\n\n这个变动可能是很艰难的，但是变动后能提高效率以及带来的标准化流程也是值得的\n\n温馨提醒\n\n如果您不知道改如何变动，或者遇到问题，您可以添加我们社群咨询，如果您期望准确的咨询方案请参考赞赏支持说明\n\n\n# 过度方案\n\n如果您在使用到本系统过程中发现有不足的地方您可以及时提出来，我们会评估是否有能替代的功能来满足您的需求。\n\n\n# 有代替功能\n\n您可能需要使用对应功能来适配您期望的需求\n\n\n# 待优化的功能\n\n如果有已有功能可以代替但是功能使用起来不是很方便和流畅，请您及时反馈我们会在后续版本考虑去优化相应功能\n\n\n# 不能满足需求\n\n如果有不能满足您的需求，您可以反馈给我们，我们会评估这个需求是否在 Jpom 产品规划范畴，有可能您期望的功能并未在 Jpom 短期或者长期的规划范畴\n\n此时您需要考虑是否有能满足您此需求的其他产品了\n\n如果相应功能只是我们还未开放（有规划）的情况还请您及时关注 Jpom 后续发版是否新增对应的功能\n\n温馨提醒\n\n如果您期望在 Jpom 中提出需求或者新增功能您可以考虑赞赏支持来提高我们开发功能的积极性（开源不易请多多理解）\n\n----------------------------------------\n\n如果需要定制化您也考虑企业服务由我们单独为您定制开发",normalizedContent:"> 请您在使用 jpom 前请仔细阅读文档，我们不能保证您在安装以及使用过程中不出任何问题，但是请您遇到问题还是先查阅文档。\n\n您还可以阅读文档说明来更详细的了解该如何阅读本文档\n\n\n# 前言\n\n开源不易请大家多多支持，请给个 star 支持一下，谢谢！\n\n * gitee\n * github\n\n如果您在安装或者使用 jpom 过程中遇到问题，请先查阅文档，如果文档中没有找到解决方案，您可以先自己尝试解决，如果实在解决不了，请提交 issue 或者加入我们的社群反馈。\n\n如您自行解决后还恳请您不要吝啬，将其贡献出来，为开源项目做出贡献。\n\njpom 是一款 java 编写的前后端分离项目，并且默认使用 h2 数据库安装此软件非常简单，但前提条件是您已经会安装 java 环境了，如果您还没有安装 java 环境，请先安装 java 环境。\n\njpom 理论上支持在有 java 环境的任意平台安装，但为了更好的使用体验，我们建议您安装在 linux 系统上。\n\n\n# 需要考虑部署 jpom 的前端吗？\n\n不需要，因为 jpom 默认已经将前端打包到 jar 包里面了，您只需要运行我们的安装包即可\n\n\n# 数据库\n\njpom 默认使用 h2 数据库，我们还支持 mysql、postgresql、mariadb 数据库。\n\n在大多数使用场景下其实您使用默认的 h2 数据库可以满足您的日常需求，如果您对数据稳定性和数据备份有一定要求那则建议您使用 mysql / postgresql / mariadb 数据库。\n\n我们为了简化您的安装流程，系统会在启动时自动执行表结构ddl脚本，完全不需要您手动控制。\n\n注意\n\nh2 数据库在一些极端情况下（断电关闭、强杀进程）会出现数据库损坏，如果出现启动过程中数据库异常请不要慌，系统默认开启了 h2 数据库的备份功能，您可以使用已经备份的数据文件进行还原\n\n\n# java 版本（jdk要求）\n\njpom 采用 jdk 1.8 开发，我们推荐您在 java 8 环境下使用，如果您想在高版本中使用您可以需要修改我们的启动脚本。\n\n如果您在使用高版本的 jdk 过程中遇到了问题可以先尝试搜索引擎了解或者联系我们一起排查\n\n我们更期望您把您遇到的问题反馈给我们，一起完善 jpom\n\n经社区测试：\n\njdk 17、21 在适当修改启动参数后可以正常运行。\n\n\n# 高版本 jdk 非法反射访问警告\n\n * unable to make protected\n * unable to make private\n * .....\n\n这种问题不会在jdk8出现，但是 jdk8+ 可能出现因此解决方式类似，开放模块即可。\n\n需要添加如下启动参数：\n\n * --add-opens java.base/java.lang=all-unnamed\n * --add-opens java.base/sun.net.util=all-unnamed\n * --add-opens java.base/java.util=all-unnamed\n * --add-opens java.base/java.lang.reflect=all-unnamed\n\n通过规律可以看到，再报类似错误，都是一个套路，\n\nmodule java.base does not “opens java.lang“ to unnamed module\n\n直接加：java.base/java.lang=all-unnamed\n\n\n# could not create the java virtual machine.\n\n高版本出现如下错误是因为启动脚本中的默认参数在高版本中不支持，解决办法是提示什么参数错误就删除什么参数，如果不怎么删除什么参数可以将 jvm 参数仅保留：\n\n-server -xms200m -xmx600m -xx:+useg1gc\n\n\n# 如何选择服务端&插件端\n\njpom 是一个带插件端（agent）的软件。\n\n插件端（agent） 主要作用是控制需要被管理的服务器（项目文件控制、执行脚本等）\n\n服务端（server）主要作用是管控所有 agent、执行项目构建打包等\n\n注意\n\nserver端和agent端不可安装在同一目录下，因为两个程序数据目录会使用到同一个文件夹/文件会造成数据错乱\n\n\n# 网络限制\n\njpom 的插件端和服务端通讯协议目前采用 http+websocket 协议。\n\n所以服务器需要能正常使用 http 协议访问到插件端的端口才能正常添加节点。\n\n如果您的网络环境下服务端不能正常访问到插件端端口需要您自行使用\n\n * 内网穿透\n * 端口代理\n * 防火墙策略\n\n等方案来解决\n\n内网穿透可以采用：frp、ngrok、neutrino-proxy 等常用软件来实现\n\n\n# 可以只安装服务端吗？\n\n可以，服务端在没有插件端时，节点相关功能均不可以，但是其他功能如：ssh 管理、docker 管理、在线构建、文件管理、服务端脚本管理等可以正常使用\n\n\n# 如果管理安装过服务端的服务器\n\n在同一台服务器上安装插件端并添加到节点即可\n\n\n# 一台服务器安装多个插件端\n\n非常不建议如此操作\n\n\n# 分布式、集群\n\njpom 支持集群部署服务端、前提是您需要使用 mysql 数据库。\n\n集群更详细说明请查阅集群相关文档：集群管理\n\n\n# 安装方式\n\n我们提供了如下安装方式：\n\n * 一键安装：插件端、服务端\n * 下载安装：插件端、服务端\n * 编译安装：插件端、服务端\n * 容器安装：服务端\n\n您可以根据使用情况来选择合适的安装方式\n\n\n# 流程变动\n\n如果您是第一次使用 jpom 或者类似的 ops 软件，那么您之前如果使用纯原生方式来运维部署，您在使用 jpom 后很大概率会涉及到您发布流程 使用思路、使用方式、操作步骤和规范，甚至需要调整代码来达到使用本软件系统适配来优化您的运维部署流程\n\n这个变动可能是很艰难的，但是变动后能提高效率以及带来的标准化流程也是值得的\n\n温馨提醒\n\n如果您不知道改如何变动，或者遇到问题，您可以添加我们社群咨询，如果您期望准确的咨询方案请参考赞赏支持说明\n\n\n# 过度方案\n\n如果您在使用到本系统过程中发现有不足的地方您可以及时提出来，我们会评估是否有能替代的功能来满足您的需求。\n\n\n# 有代替功能\n\n您可能需要使用对应功能来适配您期望的需求\n\n\n# 待优化的功能\n\n如果有已有功能可以代替但是功能使用起来不是很方便和流畅，请您及时反馈我们会在后续版本考虑去优化相应功能\n\n\n# 不能满足需求\n\n如果有不能满足您的需求，您可以反馈给我们，我们会评估这个需求是否在 jpom 产品规划范畴，有可能您期望的功能并未在 jpom 短期或者长期的规划范畴\n\n此时您需要考虑是否有能满足您此需求的其他产品了\n\n如果相应功能只是我们还未开放（有规划）的情况还请您及时关注 jpom 后续发版是否新增对应的功能\n\n温馨提醒\n\n如果您期望在 jpom 中提出需求或者新增功能您可以考虑赞赏支持来提高我们开发功能的积极性（开源不易请多多理解）\n\n----------------------------------------\n\n如果需要定制化您也考虑企业服务由我们单独为您定制开发",charsets:{cjk:!0},lastUpdated:"2024/11/28, 09:29:39",lastUpdatedTimestamp:1732786179e3},{title:"提问的智慧",frontmatter:{title:"提问的智慧",date:"2022-11-03T22:55:30.000Z",permalink:"/pages/FQA/how-to-ask-questions-the-smart-way/",categories:["docs","FQA"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/00.%E8%87%AA%E8%BF%B0%E5%BA%8F%E8%A8%80/999.%E6%8F%90%E9%97%AE%E6%99%BA%E6%85%A7.html",relativePath:"文档/00.自述序言/999.提问智慧.md",key:"v-057f5752",path:"/pages/FQA/how-to-ask-questions-the-smart-way/",headers:[{level:2,title:"提问的智慧（如何以聪明的方式提问）？",slug:"提问的智慧-如何以聪明的方式提问",normalizedTitle:"提问的智慧（如何以聪明的方式提问）？",charIndex:2},{level:2,title:"声明",slug:"声明",normalizedTitle:"声明",charIndex:381},{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:752},{level:2,title:"在提问之前",slug:"在提问之前",normalizedTitle:"在提问之前",charIndex:2128},{level:2,title:"当你提问时",slug:"当你提问时",normalizedTitle:"当你提问时",charIndex:3254},{level:3,title:"慎选提问的论坛",slug:"慎选提问的论坛",normalizedTitle:"慎选提问的论坛",charIndex:3264},{level:3,title:"Stack Overflow",slug:"stack-overflow",normalizedTitle:"stack overflow",charIndex:4289},{level:3,title:"网站和 IRC 论坛",slug:"网站和-irc-论坛",normalizedTitle:"网站和 irc 论坛",charIndex:4934},{level:3,title:"第二步，使用项目邮件列表",slug:"第二步-使用项目邮件列表",normalizedTitle:"第二步，使用项目邮件列表",charIndex:5471},{level:3,title:"使用有意义且描述明确的标题",slug:"使用有意义且描述明确的标题",normalizedTitle:"使用有意义且描述明确的标题",charIndex:6263},{level:3,title:"使问题容易回复",slug:"使问题容易回复",normalizedTitle:"使问题容易回复",charIndex:7346},{level:3,title:"使用清晰、正确、精准且合乎语法的语句",slug:"使用清晰、正确、精准且合乎语法的语句",normalizedTitle:"使用清晰、正确、精准且合乎语法的语句",charIndex:7619},{level:3,title:"使用易于读取且标准的文件格式发送问题",slug:"使用易于读取且标准的文件格式发送问题",normalizedTitle:"使用易于读取且标准的文件格式发送问题",charIndex:8883},{level:3,title:"精确地描述问题并言之有物",slug:"精确地描述问题并言之有物",normalizedTitle:"精确地描述问题并言之有物",charIndex:9804},{level:3,title:"话不在多而在精",slug:"话不在多而在精",normalizedTitle:"话不在多而在精",charIndex:10206},{level:3,title:"别动辄声称找到 Bug",slug:"别动辄声称找到-bug",normalizedTitle:"别动辄声称找到 bug",charIndex:10415},{level:3,title:"低声下气不能代替你的功课",slug:"低声下气不能代替你的功课",normalizedTitle:"低声下气不能代替你的功课",charIndex:10864},{level:3,title:"描述问题症状而非你的猜测",slug:"描述问题症状而非你的猜测",normalizedTitle:"描述问题症状而非你的猜测",charIndex:11110},{level:3,title:"按发生时间先后列出问题症状",slug:"按发生时间先后列出问题症状",normalizedTitle:"按发生时间先后列出问题症状",charIndex:11792},{level:3,title:"描述目标而不是过程",slug:"描述目标而不是过程",normalizedTitle:"描述目标而不是过程",charIndex:12097},{level:3,title:"别要求使用私人电邮回复",slug:"别要求使用私人电邮回复",normalizedTitle:"别要求使用私人电邮回复",charIndex:12441},{level:3,title:"清楚明确的表达你的问题以及需求",slug:"清楚明确的表达你的问题以及需求",normalizedTitle:"清楚明确的表达你的问题以及需求",charIndex:12761},{level:3,title:"询问有关代码的问题时",slug:"询问有关代码的问题时",normalizedTitle:"询问有关代码的问题时",charIndex:13217},{level:3,title:"别把自己家庭作业的问题贴上来",slug:"别把自己家庭作业的问题贴上来",normalizedTitle:"别把自己家庭作业的问题贴上来",charIndex:13798},{level:3,title:"去掉无意义的提问句",slug:"去掉无意义的提问句",normalizedTitle:"去掉无意义的提问句",charIndex:14003},{level:3,title:"即使你很急也不要在标题写紧急",slug:"即使你很急也不要在标题写紧急",normalizedTitle:"即使你很急也不要在标题写紧急",charIndex:14200},{level:3,title:"礼多人不怪，而且有时还很有帮助",slug:"礼多人不怪-而且有时还很有帮助",normalizedTitle:"礼多人不怪，而且有时还很有帮助",charIndex:14628},{level:3,title:"问题解决后，加个简短的补充说明",slug:"问题解决后-加个简短的补充说明",normalizedTitle:"问题解决后，加个简短的补充说明",charIndex:14993},{level:2,title:"如何解读答案",slug:"如何解读答案",normalizedTitle:"如何解读答案",charIndex:15813},{level:3,title:"RTFM 和 STFW：如何知道你已完全搞砸了",slug:"rtfm-和-stfw-如何知道你已完全搞砸了",normalizedTitle:"rtfm 和 stfw：如何知道你已完全搞砸了",charIndex:15824},{level:3,title:"如果还是搞不懂",slug:"如果还是搞不懂",normalizedTitle:"如果还是搞不懂",charIndex:16300},{level:3,title:"处理无礼的回应",slug:"处理无礼的回应",normalizedTitle:"处理无礼的回应",charIndex:16566},{level:2,title:"如何避免扮演失败者",slug:"如何避免扮演失败者",normalizedTitle:"如何避免扮演失败者",charIndex:17188},{level:2,title:"不该问的问题",slug:"不该问的问题",normalizedTitle:"不该问的问题",charIndex:18053},{level:2,title:"好问题与蠢问题",slug:"好问题与蠢问题",normalizedTitle:"好问题与蠢问题",charIndex:19528},{level:2,title:"如果得不到回答",slug:"如果得不到回答",normalizedTitle:"如果得不到回答",charIndex:20755},{level:2,title:"如何更好地回答问题",slug:"如何更好地回答问题",normalizedTitle:"如何更好地回答问题",charIndex:21297},{level:2,title:"相关资源",slug:"相关资源",normalizedTitle:"相关资源",charIndex:21987},{level:2,title:"鸣谢",slug:"鸣谢",normalizedTitle:"鸣谢",charIndex:22071}],headersStr:"提问的智慧（如何以聪明的方式提问）？ 声明 简介 在提问之前 当你提问时 慎选提问的论坛 Stack Overflow 网站和 IRC 论坛 第二步，使用项目邮件列表 使用有意义且描述明确的标题 使问题容易回复 使用清晰、正确、精准且合乎语法的语句 使用易于读取且标准的文件格式发送问题 精确地描述问题并言之有物 话不在多而在精 别动辄声称找到 Bug 低声下气不能代替你的功课 描述问题症状而非你的猜测 按发生时间先后列出问题症状 描述目标而不是过程 别要求使用私人电邮回复 清楚明确的表达你的问题以及需求 询问有关代码的问题时 别把自己家庭作业的问题贴上来 去掉无意义的提问句 即使你很急也不要在标题写紧急 礼多人不怪，而且有时还很有帮助 问题解决后，加个简短的补充说明 如何解读答案 RTFM 和 STFW：如何知道你已完全搞砸了 如果还是搞不懂 处理无礼的回应 如何避免扮演失败者 不该问的问题 好问题与蠢问题 如果得不到回答 如何更好地回答问题 相关资源 鸣谢",content:"# 提问的智慧（如何以聪明的方式提问）？\n\nHow To Ask Questions The Smart Way\n\nCopyright © 2001,2006,2014 Eric S. Raymond, Rick Moen\n\n本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。\n\n原文网址：http://www.catb.org/~esr/faqs/smart-questions.html\n\nCopyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu\n\n本中文指南是基于原文 3.10 版以及 2010 年由 Gasolin 所翻译版本的最新翻译；\n\n协助指出翻译问题，请发 issue，或直接发 pull request 给我。\n\n\n# 声明\n\n许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：\n\n本指南不提供此项目的实际支持服务！\n\n我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。\n\n如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件或硬件问题的人处取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。\n\n\n# 简介\n\n在黑客的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。\n\n现在开源（Open Source）软件已经相当盛行，您通常可以从其他更有经验的用户那里获得与黑客一样好的答案，这是件好事；和黑客相比，用户们往往对那些新手常遇到的问题更宽容一些。尽管如此，以我们在此推荐的方式对待这些有经验的用户通常也是从他们那里获得有用答案的最有效方式。\n\n首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。\n\n尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。\n\n我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 失败者（撸瑟） （由于历史原因，我们有时把它拼作 lusers）。\n\n我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。\n\n我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情地滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效地利用时间来回答赢家（winner）的问题。\n\n如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。\n\n所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。\n\n如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。\n\n（欢迎对本指南提出改进意见。你可以把你的建议发送至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。然而请注意，本文并非网络礼节的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。\n\n\n# 在提问之前\n\n在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：\n\n 1. 尝试在你准备提问的论坛的旧文章中搜索答案。\n 2. 尝试上网搜索以找到答案。\n 3. 尝试阅读手册以找到答案。\n 4. 尝试阅读常见问题文件（FAQ）以找到答案。\n 5. 尝试自己检查或试验以找到答案。\n 6. 向你身边的强者朋友打听以找到答案。\n 7. 如果你是程序开发者，请尝试阅读源代码以找到答案。\n\n当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。\n\n运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 Google 论坛和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 我在 Google 中搜过下列句子但没有找到什么有用的东西 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。\n\n别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐得舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。\n\n准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。\n\n小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着蠢问题…，一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。\n\n绝不要自以为够格得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去挣到一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。\n\n另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。谁能给点提示？、我的这个例子里缺了什么？以及我应该检查什么地方比请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。\n\n\n# 当你提问时\n\n\n# 慎选提问的论坛\n\n小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：\n\n * 在与主题不合的论坛上贴出你的问题。\n * 在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。\n * 在太多的不同新闻群组上重复转贴同样的问题（cross-post）。\n * 向既非熟人也没有义务解决你问题的人发送私人电邮。\n\n黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。\n\n因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括阅读 FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。\n\n向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。\n\n在选择论坛、新闻群组或邮件列表时，别太相信它的名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。\n\n别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。\n\n搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。\n\n一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。\n\n可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者由于涌入其私人邮箱的大量不堪忍受的无用邮件而不再提供支持。\n\n\n# Stack Overflow\n\n搜索，然后在 Stack Exchange 问。\n\n近年来，Stack Exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。\n\n因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的几率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。\n\n如果你还是找不到任何对你的问题有用的内容，请把你的问题发在与它最相关的网站上。提问的时候请善用善用格式化工具，尤其注意为代码添加格式，并且添加相关的标签（特别是编程语言、操作系统或库/包的名称）。当有人要求你提供更多相关信息时，请编辑你的贴子来补充它们[译注：而不是发一个回帖或回答！]。如果你觉得一个答案对你有帮助，点击向上的箭头来为它投票；如果一个答案提供了问题的正确解决方案，点击投票按钮下方的对勾来将它标记为正解。\n\nStack Exchange 已经成长到超过一百个网站，以下是最常用的几个站：\n\n * Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。\n * Stack Overflow 是问写程序有关的问题。\n * Server Fault 是问服务器和网管相关的问题。\n\n\n# 网站和 IRC 论坛\n\n本地的用户群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表），这些都是开始提问的好地方，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。\n\n事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复“使用我们的版本”。\n\n在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。\n\n通过论坛或 IRC 频道来提供用户支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。\n\n在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。\n\n\n# 第二步，使用项目邮件列表\n\n当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：\n\n * 任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，那这也不能成为骚扰个别开发者的理由。\n * 向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。\n * 大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其他人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。\n * 如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。\n\n如果一个项目既有“用户”也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。\n\n然而，如果你确信你的问题很特别，而且在“用户”列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）\n\n如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。\n\n\n# 使用有意义且描述明确的标题\n\n在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的帮帮忙、跪求、急（更别说救命啊！！！！这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。\n\n一个好标题范例是目标 —— 差异式的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在差异部分则描述与期望的行为不一致的地方。\n\n> 蠢问题：救命啊！我的笔记本电脑不能正常显示了！\n\n> 聪明问题：X.org 6.8.1 的鼠标指针会变形，某牌显卡 MV1005 芯片组。\n\n> 更聪明问题：X.org 6.8.1 的鼠标指针，在某牌显卡 MV1005 芯片组环境下 - 会变形。\n\n编写目标 —— 差异 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标指针或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境和你遇到的问题。\n\n总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。\n\n如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 Re: 测试 或者 Re: 新 bug 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。\n\n对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许用户按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。\n\n仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。\n\n在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你只想在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。\n\n\n# 使问题容易回复\n\n以请将你的回复发送到……来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，换个好点的；如果是操作系统不支持这种邮件程序，也换个好点的。\n\n在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如追踪此讨论串、有回复时发送邮件提醒等功能。\n\n\n# 使用清晰、正确、精准且合乎语法的语句\n\n我们从经验中发现，粗心的提问者通常也会粗心地写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。\n\n正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它必须很准确，而且有迹象表明你是在思考和关注问题。\n\n正确地拼写、使用标点和大小写，不要将its混淆为it's，loose搞成lose或者将discrete弄成discreet。不要全部用大写，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。Alan Cox 也许可以这样做，但你不行）。\n\n更白话的说，如果你写得像是个半文盲[译注：小白]，那多半得不到理睬。也不要使用即时通信中的简写或火星文，如将的简化为d会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。\n\n如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂的语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。\n\n如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的： [译注：以下附上原文以供使用]\n\n> English is not my native language; please excuse typing errors.\n\n * 英文不是我的母语，请原谅我的错字或语法。\n\n> If you speak $LANGUAGE, please email/PM me; I may need assistance translating my question.\n\n * 如果你说某语言，请向我发电邮/私信；\n * 我需要有人协助我翻译我的问题。\n\n> I am familiar with the technical terms, but some slang expressions and idioms are difficult for me.\n\n * 我对技术名词很熟悉，但对于俗语或是特别用法不甚了解。\n\n> I’ve posted my question in $LANGUAGE and English. I’ll be glad to translate responses, if you only use one or the other.\n\n * 我把我的问题用某语言和英文写出来。\n * 如果你只用其中的一种语言回答，我会乐意将回复翻译成为你使用的语言。\n\n\n# 使用易于读取且标准的文件格式发送问题\n\n如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：\n\n * 使用纯文字而不是 HTML (关闭 HTML 并不难）。\n * 使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。\n * 不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。\n * 但是，对一些特殊的文件不要设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。\n * 在英语论坛中，不要使用Quoted-Printable MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的=20符号既难看也分散注意力，甚至有可能破坏内容的语意。\n * 绝对，永远不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。\n * 如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的智能引号功能 （从[选项] > [校订] > [自动校正选项]，勾选掉智能引号单选框），以免在你的邮件中到处散布垃圾字符。\n * 在论坛，勿滥用表情符号和HTML功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。\n\n如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的查看源代码命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。\n\n\n# 精确地描述问题并言之有物\n\n * 仔细、清楚地描述你的问题或 Bug 的症状。\n * 描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：Fedora Core 4、Slackware 9.1等）。\n * 描述在提问前你是怎样去研究和理解这个问题的。\n * 描述在提问前为确定问题而采取的诊断步骤。\n * 描述最近做过什么可能相关的硬件或软件变更。\n * 尽可能地提供一个可以重现这个问题的可控环境的方法。\n\n尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能提出的问题回答一遍。\n\n以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。\n\nSimon Tatham 写过一篇名为《如何有效的报告 Bug》的出色文章。强力推荐你也读一读。\n\n\n# 话不在多而在精\n\n你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。\n\n这样做的用处至少有三点。 第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加； 第二，简化问题使你更有可能得到有用的答案； 第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。\n\n\n# 别动辄声称找到 Bug\n\n当你在使用软件中遇到问题，除非你非常、非常的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的Bug，你应该能提供相应位置的修正或替代文件。\n\n请记得，还有其他许多用户没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前已经做了这些，是吧？）。这也意味着很有可能是你弄错了而不是软件本身有问题。\n\n编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有Bug时，这尤其严重。\n\n提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是你做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。\n\n\n# 低声下气不能代替你的功课\n\n有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：我知道我只是个可悲的新手，一个撸瑟，但...。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。\n\n别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。\n\n有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。\n\n\n# 描述问题症状而非你的猜测\n\n告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。\n\n蠢问题\n\n> 我在编译内核时接连遇到 SIG11 错误， 我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？\n\n聪明问题 > 我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组）， > 256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误， > 但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。 > 所有内存都换过了，没有效果。相关部分的标准编译记录如下…\n\n由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：所有的诊断专家都来自密苏里州。 美国国务院的官方座右铭则是：让我看看（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！\n\n\n# 按发生时间先后列出问题症状\n\n问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。\n\n如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，多不等于好。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。\n\n如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。\n\n\n# 描述目标而不是过程\n\n如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。\n\n经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。\n\n蠢问题 > 我怎样才能从某绘图程序的颜色选择器中取得十六进制的 RGB 值？\n\n聪明问题 > 我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot）， > 但却无法从某绘图程序的颜色选择器取得十六进制的 RGB 值。\n\n第二种提问法比较聪明，你可能得到像是建议采用另一个更合适的工具的回复。\n\n\n# 别要求使用私人电邮回复\n\n黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。\n\n当你要求私下回复时，这个过程和奖励都被中止。别这样做，让回复者来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于不可能使其他人产生兴趣。\n\n这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是向我发电邮，我将为论坛归纳这些回复。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。\n\n\n# 清楚明确的表达你的问题以及需求\n\n漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。\n\n如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。\n\n要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。\n\n所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问我想更好地理解 X，可否指点一下哪有好一点说明？通常比问你能解释一下 X 吗？更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。\n\n\n# 询问有关代码的问题时\n\n别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：它不能工作会让你完全被忽略。只贴几十行代码，然后说一句：在第七行以后，我期待它显示 <x>，但实际出现的是 <y>比较有可能让你得到回应。\n\n最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能刚好展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看话不在多而在精一节）。\n\n一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。\n\n如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。\n\n\n# 别把自己家庭作业的问题贴上来\n\n黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。\n\n如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户群组，论坛或（最后一招）在项目的用户邮件列表或论坛中提问。尽管黑客们会看出来，但一些有经验的用户也许仍会给你一些提示。\n\n\n# 去掉无意义的提问句\n\n避免用无意义的话结束提问，例如有人能帮我吗？或者这有答案吗？。\n\n首先：如果你对问题的描述不是很好，这样问更是画蛇添足。\n\n其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：没错，有人能帮你或者不，没答案。\n\n一般来说，避免用 是或否、对或错、有或没有类型的问句，除非你想得到是或否类型的回答。\n\n\n# 即使你很急也不要在标题写紧急\n\n这是你的问题，不是我们的。宣称紧急极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，紧急这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。\n\n有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。\n\n当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如紧急：帮我救救这个毛茸茸的小海豹！肯定让你被黑客忽略或惹恼他们，即使他们认为毛茸茸的小海豹很重要。\n\n如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。\n\n\n# 礼多人不怪，而且有时还很有帮助\n\n彬彬有礼，多用请和谢谢您的关注，或谢谢你的关照。让大家都知道你对他们花时间免费提供帮助心存感激。\n\n坦白说，这一点并没有比使用清晰、正确、精准且合乎语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）\n\n然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。\n\n（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得先谢了意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说先谢了，然后事后再对回复者表示感谢，或者换种方式表达感激，譬如用谢谢你的关注或谢谢你的关照。）\n\n\n# 问题解决后，加个简短的补充说明\n\n问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。\n\n最理想的方式是向最初提问的话题回复此消息，并在标题中包含已修正，已解决或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串问题 X和问题 X - 已解决的潜在回复者就明白不用再浪费时间了（除非他个人觉得问题 X的有趣），因此可以利用此时间去解决其它问题。\n\n补充说明不必很长或是很深入；简单的一句你好，原来是网线出了问题！谢谢大家 – Bill比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。\n\n对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此之后才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。\n\n除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。\n\n至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。\n\n思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。\n\n在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。\n\n\n# 如何解读答案\n\n\n# RTFM 和 STFW：如何知道你已完全搞砸了\n\n有一个古老而神圣的传统：如果你收到RTFM（Read The Fucking Manual）的回应，回答者认为你应该去读他妈的手册。当然，基本上他是对的，你应该去读一读。\n\nRTFM 有一个年轻的亲戚。如果你收到STFW（Search The Fucking Web）的回应，回答者认为你应该到他妈的网上搜索。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 Google 是你的朋友！）\n\n在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。\n\n通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为\n\n * 你需要的信息非常容易获得；\n * 你自己去搜索这些信息比灌给你，能让你学到更多。\n\n你不应该因此不爽；依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见。你应该对他祖母般的慈祥表示感谢。\n\n\n# 如果还是搞不懂\n\n如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。\n\n比方说，如果我回答你：看来似乎是 zentry 卡住了；你应该先清除它。，然后，这是一个很糟的后续问题回应：zentry 是什么？ 好的问法应该是这样：哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？\n\n\n# 处理无礼的回应\n\n很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直截了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。\n\n如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这没有发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而你将被视为有错的一方，这将伤害到你获取信息或帮助的机会。\n\n另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。\n\n（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会正常交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们喜欢我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。）\n\nJeff Bigler 的观察总结和这个相关也值得一读 (tact filters)。\n\n在下一节，我们会谈到另一个问题，当你行为不当时所会受到的冒犯。\n\n\n# 如何避免扮演失败者\n\n在黑客社区的论坛中，你以本指南所描述的或类似的方式，可能会有那么几次搞砸了。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。\n\n这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被言语攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、不去关马桶盖等等。相反地，你该这么做：\n\n熬过去，这很正常。事实上，它是有益健康且合理的。\n\n社区的标准不会自行维持，它们是通过参与者积极而公开地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。\n\n也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称如果你不想帮助用户就闭嘴。 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。\n\n夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。\n\n记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。\n\n有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是真的会把问题搞砸。\n\n这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。\n\n也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。\n\n\n# 不该问的问题\n\n以下是几个经典蠢问题，以及黑客没回答时心中所想的：\n\n问题：我能在哪找到 X 程序或 X 资源？\n\n问题：我怎样用 X 做 Y？\n\n问题：如何设定我的 shell 提示？\n\n问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？\n\n问题：我的程序/设定/SQL 语句没有用\n\n问题：我的 Windows 电脑有问题，你能帮我吗？\n\n问题：我的程序不会动了，我认为系统工具 X 有问题\n\n问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？\n\n问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？\n\n----------------------------------------\n\n> 问题：我能在哪找到 X 程序或 X 资源？\n\n回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 Google 吗？\n\n> 问题：我怎样用 X 做 Y？\n\n回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。\n\n> 问题：如何设定我的 shell 提示？？\n\n回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 RTFM，然后自己去找出来。\n\n> 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 文件转换为 TeX 格式吗？\n\n回答：试试看就知道了。如果你试过，你就知道了答案，就不用浪费我的时间了。\n\n> 问题：我的{程序/设定/SQL 语句}没有用\n\n回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种\n\n * 你还有什么要补充的吗？\n * 真糟糕，希望你能搞定。\n * 这关我屁事？\n\n> 问题：我的 Windows 电脑有问题，你能帮我吗？\n\n回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。\n\n注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你可以问与 Windows 相关的问题，只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。\n\n> 问题：我的程序不会动了，我认为系统工具 X 有问题\n\n回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。\n\n> 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？\n\n回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在这儿找到用户群组的清单）。\n\n注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地用户群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 Linux 和所有被怀疑的硬件作关键词仔细搜索。\n\n> 问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？\n\n回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！\n\n\n# 好问题与蠢问题\n\n最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。\n\n蠢问题：\n\n> 我可以在哪儿找到关于 Foonly Flurbamatic 的资料？\n\n这种问法无非想得到 STFW 这样的回答。\n\n聪明问题：\n\n> 我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？\n\n这个问题已经 STFW 过了，看起来他真的遇到了麻烦。\n\n蠢问题：\n\n> 我从 foo 项目找来的源码没法编译。它怎么这么烂？\n\n他觉得都是别人的错，这个傲慢自大的提问者。\n\n聪明问题：\n\n> foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？\n\n提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。\n\n蠢问题：\n\n> 我的主机板有问题了，谁来帮我？\n\n某黑客对这类问题的回答通常是：好的，还要帮你拍拍背和换尿布吗？，然后按下删除键。\n\n聪明问题：\n\n> 我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？\n\n这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。\n\n在最后一个问题中，注意告诉我答案和给我启示，指出我还应该做什么诊断工作之间微妙而又重要的区别。\n\n事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。\n\n通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。\n\n事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候，一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的名人，而是因为我用了正确的方式来提问。\n\n黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我像个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。\n\n\n# 如果得不到回答\n\n如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。\n\n总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。\n\n你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。\n\n有许多网上的以及本地的用户群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。\n\n另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。\n\n对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名用户。根本不可能由一个人来处理来自上万名用户的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。\n\n\n# 如何更好地回答问题\n\n态度和善一点。 问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。\n\n对初犯者私下回复。 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。\n\n如果你不确定，一定要说出来！ 一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。\n\n如果帮不了忙，也别妨碍他。 不要在实际步骤上开玩笑，那样也许会毁了提问者的设置 —— 有些可怜的呆瓜会把它当成真的指令。\n\n试探性的反问以引出更多的细节。 如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。\n\n尽管对那些懒虫抱怨一声 RTFM 是正当的，但能给出文档的链接（即使只是建议个 Google 搜索关键词）会更好。\n\n如果你决定回答，就请给出好的答案。 当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。\n\n正面地回答问题！ 如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 试试看 A 或是 B 或者 试试 X 、 Y 、 Z 、 A 、 B 、 C 并附上一个链接一点用都没有。\n\n帮助你的社区从问题中学习。 当回复一个好问题时，问问自己如何修改相关文件或常见问题文件以免再次解答同样的问题？，接着再向文件维护者发一份补丁。\n\n如果你在研究一番后才作出了回答，展现你的技巧而不是直接端出结果。毕竟授人以鱼不如授人以渔。\n\n\n# 相关资源\n\n如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 Unix 系统和网络基本原理。\n\n当你发布软件或补丁时，试着按软件发布实践操作。\n\n\n# 鸣谢\n\nEvelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。",normalizedContent:"# 提问的智慧（如何以聪明的方式提问）？\n\nhow to ask questions the smart way\n\ncopyright © 2001,2006,2014 eric s. raymond, rick moen\n\n本指南英文版版权为 eric s. raymond, rick moen 所有。\n\n原文网址：http://www.catb.org/~esr/faqs/smart-questions.html\n\ncopyleft 2001 by d.h.grand(nobody/ginux), 2010 by gasolin, 2015 by ryan wu\n\n本中文指南是基于原文 3.10 版以及 2010 年由 gasolin 所翻译版本的最新翻译；\n\n协助指出翻译问题，请发 issue，或直接发 pull request 给我。\n\n\n# 声明\n\n许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：\n\n本指南不提供此项目的实际支持服务！\n\n我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。\n\n如果你因寻求某些帮助而阅读本指南，并在离开时还觉得可以从本文作者这里得到直接帮助，那你就是我们之前说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中想教你如何从那些真正懂得你所遇到的软件或硬件问题的人处取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。\n\n\n# 简介\n\n在黑客的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。\n\n现在开源（open source）软件已经相当盛行，您通常可以从其他更有经验的用户那里获得与黑客一样好的答案，这是件好事；和黑客相比，用户们往往对那些新手常遇到的问题更宽容一些。尽管如此，以我们在此推荐的方式对待这些有经验的用户通常也是从他们那里获得有用答案的最有效方式。\n\n首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，“好问题！”是诚挚的大力称赞。\n\n尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。\n\n我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 失败者（撸瑟） （由于历史原因，我们有时把它拼作 lusers）。\n\n我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。\n\n我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情地滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效地利用时间来回答赢家（winner）的问题。\n\n如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。\n\n所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。\n\n如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。\n\n（欢迎对本指南提出改进意见。你可以把你的建议发送至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。然而请注意，本文并非网络礼节的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。\n\n\n# 在提问之前\n\n在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：\n\n 1. 尝试在你准备提问的论坛的旧文章中搜索答案。\n 2. 尝试上网搜索以找到答案。\n 3. 尝试阅读手册以找到答案。\n 4. 尝试阅读常见问题文件（faq）以找到答案。\n 5. 尝试自己检查或试验以找到答案。\n 6. 向你身边的强者朋友打听以找到答案。\n 7. 如果你是程序开发者，请尝试阅读源代码以找到答案。\n\n当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。\n\n运用某些策略，比如先用 google 搜索你所遇到的各种错误信息（搜索 google 论坛和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 我在 google 中搜过下列句子但没有找到什么有用的东西 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。\n\n别着急，不要指望几秒钟的 google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（faq）、放轻松、坐得舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。\n\n准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。\n\n小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（j. random hacker）多半会一边在心里想着蠢问题…，一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。\n\n绝不要自以为够格得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去挣到一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。\n\n另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。谁能给点提示？、我的这个例子里缺了什么？以及我应该检查什么地方比请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。\n\n\n# 当你提问时\n\n\n# 慎选提问的论坛\n\n小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：\n\n * 在与主题不合的论坛上贴出你的问题。\n * 在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。\n * 在太多的不同新闻群组上重复转贴同样的问题（cross-post）。\n * 向既非熟人也没有义务解决你问题的人发送私人电邮。\n\n黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。\n\n因此，第一步是找到对的论坛。再说一次，google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（faq）、邮件列表及相关说明文件的链接。如果你的努力（包括阅读 faq）都没有结果，网站上也许还有报告 bug（bug-reporting）的流程或链接，如果是这样，链过去看看。\n\n向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。\n\n在选择论坛、新闻群组或邮件列表时，别太相信它的名字，先看看 faq 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。\n\n别像机关枪似的一次“扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。\n\n搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 unix 或 windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。\n\n一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。\n\n可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者由于涌入其私人邮箱的大量不堪忍受的无用邮件而不再提供支持。\n\n\n# stack overflow\n\n搜索，然后在 stack exchange 问。\n\n近年来，stack exchange 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。\n\n因为 google 索引是即时的，在看 stack exchange 之前先在 google 搜索。有很高的几率某人已经问了一个类似的问题，而且 stack exchange 网站们往往会是搜索结果中最前面几个。如果你在 google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（tag）搜索能让你更缩小你的搜索结果。\n\n如果你还是找不到任何对你的问题有用的内容，请把你的问题发在与它最相关的网站上。提问的时候请善用善用格式化工具，尤其注意为代码添加格式，并且添加相关的标签（特别是编程语言、操作系统或库/包的名称）。当有人要求你提供更多相关信息时，请编辑你的贴子来补充它们[译注：而不是发一个回帖或回答！]。如果你觉得一个答案对你有帮助，点击向上的箭头来为它投票；如果一个答案提供了问题的正确解决方案，点击投票按钮下方的对勾来将它标记为正解。\n\nstack exchange 已经成长到超过一百个网站，以下是最常用的几个站：\n\n * super user 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。\n * stack overflow 是问写程序有关的问题。\n * server fault 是问服务器和网管相关的问题。\n\n\n# 网站和 irc 论坛\n\n本地的用户群组（user group），或者你所用的 linux 发行版本也许正在宣传他们的网页论坛或 irc 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表），这些都是开始提问的好地方，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 irc 频道是公开欢迎提问的地方，通常可以即时得到回应。\n\n事实上，如果程序出的问题只发生在特定 linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复“使用我们的版本”。\n\n在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。\n\n通过论坛或 irc 频道来提供用户支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 irc 中寻求与该项目相关的协助。\n\n在使用 irc 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。\n\n\n# 第二步，使用项目邮件列表\n\n当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：\n\n * 任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，那这也不能成为骚扰个别开发者的理由。\n * 向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。\n * 大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其他人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。\n * 如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。\n\n如果一个项目既有“用户”也有“开发者”（或“黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向“用户”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。\n\n然而，如果你确信你的问题很特别，而且在“用户”列表或论坛中几天都没有回复，可以试试前往“开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）\n\n如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。\n\n\n# 使用有意义且描述明确的标题\n\n在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的帮帮忙、跪求、急（更别说救命啊！！！！这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。\n\n一个好标题范例是目标 —— 差异式的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在差异部分则描述与期望的行为不一致的地方。\n\n> 蠢问题：救命啊！我的笔记本电脑不能正常显示了！\n\n> 聪明问题：x.org 6.8.1 的鼠标指针会变形，某牌显卡 mv1005 芯片组。\n\n> 更聪明问题：x.org 6.8.1 的鼠标指针，在某牌显卡 mv1005 芯片组环境下 - 会变形。\n\n编写目标 —— 差异 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标指针或者还有其它图形？只在 x.org 的 x 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 mv1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境和你遇到的问题。\n\n总而言之，请想像一下你正在一个只显示标题的存档讨论串（thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。\n\n如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 re: 测试 或者 re: 新 bug 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。\n\n对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许用户按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。\n\n仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。\n\n在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你只想在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。\n\n\n# 使问题容易回复\n\n以请将你的回复发送到……来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，换个好点的；如果是操作系统不支持这种邮件程序，也换个好点的。\n\n在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如追踪此讨论串、有回复时发送邮件提醒等功能。\n\n\n# 使用清晰、正确、精准且合乎语法的语句\n\n我们从经验中发现，粗心的提问者通常也会粗心地写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。\n\n正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它必须很准确，而且有迹象表明你是在思考和关注问题。\n\n正确地拼写、使用标点和大小写，不要将its混淆为it's，loose搞成lose或者将discrete弄成discreet。不要全部用大写，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。alan cox 也许可以这样做，但你不行）。\n\n更白话的说，如果你写得像是个半文盲[译注：小白]，那多半得不到理睬。也不要使用即时通信中的简写或火星文，如将的简化为d会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。\n\n如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂的语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。\n\n如果英文是你的外语（second language），提示潜在回复者你有潜在的语言困难是很好的： [译注：以下附上原文以供使用]\n\n> english is not my native language; please excuse typing errors.\n\n * 英文不是我的母语，请原谅我的错字或语法。\n\n> if you speak $language, please email/pm me; i may need assistance translating my question.\n\n * 如果你说某语言，请向我发电邮/私信；\n * 我需要有人协助我翻译我的问题。\n\n> i am familiar with the technical terms, but some slang expressions and idioms are difficult for me.\n\n * 我对技术名词很熟悉，但对于俗语或是特别用法不甚了解。\n\n> i’ve posted my question in $language and english. i’ll be glad to translate responses, if you only use one or the other.\n\n * 我把我的问题用某语言和英文写出来。\n * 如果你只用其中的一种语言回答，我会乐意将回复翻译成为你使用的语言。\n\n\n# 使用易于读取且标准的文件格式发送问题\n\n如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：\n\n * 使用纯文字而不是 html (关闭 html 并不难）。\n * 使用 mime 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。\n * 不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。\n * 但是，对一些特殊的文件不要设置固定宽度（譬如日志文件拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。\n * 在英语论坛中，不要使用quoted-printable mime 编码发送消息。这种编码对于张贴非 ascii 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的=20符号既难看也分散注意力，甚至有可能破坏内容的语意。\n * 绝对，永远不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 word 或 excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。\n * 如果你从使用 windows 的电脑发送电子邮件，关闭微软愚蠢的智能引号功能 （从[选项] > [校订] > [自动校正选项]，勾选掉智能引号单选框），以免在你的邮件中到处散布垃圾字符。\n * 在论坛，勿滥用表情符号和html功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。\n\n如果你使用图形用户界面的邮件程序（如微软公司的 outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的查看源代码命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。\n\n\n# 精确地描述问题并言之有物\n\n * 仔细、清楚地描述你的问题或 bug 的症状。\n * 描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：fedora core 4、slackware 9.1等）。\n * 描述在提问前你是怎样去研究和理解这个问题的。\n * 描述在提问前为确定问题而采取的诊断步骤。\n * 描述最近做过什么可能相关的硬件或软件变更。\n * 尽可能地提供一个可以重现这个问题的可控环境的方法。\n\n尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能提出的问题回答一遍。\n\n以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。\n\nsimon tatham 写过一篇名为《如何有效的报告 bug》的出色文章。强力推荐你也读一读。\n\n\n# 话不在多而在精\n\n你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。\n\n这样做的用处至少有三点。 第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加； 第二，简化问题使你更有可能得到有用的答案； 第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。\n\n\n# 别动辄声称找到 bug\n\n当你在使用软件中遇到问题，除非你非常、非常的有根据，不要动辄声称找到了 bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的bug，你应该能提供相应位置的修正或替代文件。\n\n请记得，还有其他许多用户没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前已经做了这些，是吧？）。这也意味着很有可能是你弄错了而不是软件本身有问题。\n\n编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有bug时，这尤其严重。\n\n提问时，即使你私下非常确信已经发现一个真正的 bug，最好写得像是你做错了什么。如果真的有 bug，你会在回复中看到这点。这样做的话，如果真有 bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。\n\n\n# 低声下气不能代替你的功课\n\n有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：我知道我只是个可悲的新手，一个撸瑟，但...。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。\n\n别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。\n\n有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。\n\n\n# 描述问题症状而非你的猜测\n\n告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。\n\n蠢问题\n\n> 我在编译内核时接连遇到 sig11 错误， 我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？\n\n聪明问题 > 我的组装电脑是 fic-pa2007 主机板搭载 amd k6/233 cpu（威盛 apollo vp2 芯片组）， > 256mb corsair pc133 sdram 内存，在编译内核时，从开机 20 分钟以后就频频产生 sig11 错误， > 但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。 > 所有内存都换过了，没有效果。相关部分的标准编译记录如下…\n\n由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：所有的诊断专家都来自密苏里州。 美国国务院的官方座右铭则是：让我看看（出自国会议员 willard d. vandiver 在 1899 年时的讲话：我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！\n\n\n# 按发生时间先后列出问题症状\n\n问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。\n\n如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，多不等于好。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。\n\n如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。\n\n\n# 描述目标而不是过程\n\n如果你想弄清楚如何做某事（而不是报告一个 bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。\n\n经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。\n\n蠢问题 > 我怎样才能从某绘图程序的颜色选择器中取得十六进制的 rgb 值？\n\n聪明问题 > 我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot）， > 但却无法从某绘图程序的颜色选择器取得十六进制的 rgb 值。\n\n第二种提问法比较聪明，你可能得到像是建议采用另一个更合适的工具的回复。\n\n\n# 别要求使用私人电邮回复\n\n黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。\n\n当你要求私下回复时，这个过程和奖励都被中止。别这样做，让回复者来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于不可能使其他人产生兴趣。\n\n这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是向我发电邮，我将为论坛归纳这些回复。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。\n\n\n# 清楚明确的表达你的问题以及需求\n\n漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。\n\n如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。\n\n要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。\n\n所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问我想更好地理解 x，可否指点一下哪有好一点说明？通常比问你能解释一下 x 吗？更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。\n\n\n# 询问有关代码的问题时\n\n别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：它不能工作会让你完全被忽略。只贴几十行代码，然后说一句：在第七行以后，我期待它显示 <x>，但实际出现的是 <y>比较有可能让你得到回应。\n\n最有效描述程序问题的方法是提供最精简的 bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能刚好展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看话不在多而在精一节）。\n\n一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。\n\n如果你只是想让别人帮忙审查（review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。\n\n\n# 别把自己家庭作业的问题贴上来\n\n黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。\n\n如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在用户群组，论坛或（最后一招）在项目的用户邮件列表或论坛中提问。尽管黑客们会看出来，但一些有经验的用户也许仍会给你一些提示。\n\n\n# 去掉无意义的提问句\n\n避免用无意义的话结束提问，例如有人能帮我吗？或者这有答案吗？。\n\n首先：如果你对问题的描述不是很好，这样问更是画蛇添足。\n\n其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：没错，有人能帮你或者不，没答案。\n\n一般来说，避免用 是或否、对或错、有或没有类型的问句，除非你想得到是或否类型的回答。\n\n\n# 即使你很急也不要在标题写紧急\n\n这是你的问题，不是我们的。宣称紧急极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，紧急这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。\n\n有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。\n\n当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 nasa 国际空间站（international space station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如紧急：帮我救救这个毛茸茸的小海豹！肯定让你被黑客忽略或惹恼他们，即使他们认为毛茸茸的小海豹很重要。\n\n如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。\n\n\n# 礼多人不怪，而且有时还很有帮助\n\n彬彬有礼，多用请和谢谢您的关注，或谢谢你的关照。让大家都知道你对他们花时间免费提供帮助心存感激。\n\n坦白说，这一点并没有比使用清晰、正确、精准且合乎语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）\n\n然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。\n\n（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得先谢了意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说先谢了，然后事后再对回复者表示感谢，或者换种方式表达感激，譬如用谢谢你的关注或谢谢你的关照。）\n\n\n# 问题解决后，加个简短的补充说明\n\n问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。\n\n最理想的方式是向最初提问的话题回复此消息，并在标题中包含已修正，已解决或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串问题 x和问题 x - 已解决的潜在回复者就明白不用再浪费时间了（除非他个人觉得问题 x的有趣），因此可以利用此时间去解决其它问题。\n\n补充说明不必很长或是很深入；简单的一句你好，原来是网线出了问题！谢谢大家 – bill比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。\n\n对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此之后才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。\n\n除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。\n\n至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。\n\n思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（faq）会不会有帮助。如果是的话就将它们发给维护者。\n\n在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。\n\n\n# 如何解读答案\n\n\n# rtfm 和 stfw：如何知道你已完全搞砸了\n\n有一个古老而神圣的传统：如果你收到rtfm（read the fucking manual）的回应，回答者认为你应该去读他妈的手册。当然，基本上他是对的，你应该去读一读。\n\nrtfm 有一个年轻的亲戚。如果你收到stfw（search the fucking web）的回应，回答者认为你应该到他妈的网上搜索。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 google 是你的朋友！）\n\n在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。\n\n通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为\n\n * 你需要的信息非常容易获得；\n * 你自己去搜索这些信息比灌给你，能让你学到更多。\n\n你不应该因此不爽；依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见。你应该对他祖母般的慈祥表示感谢。\n\n\n# 如果还是搞不懂\n\n如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，faq，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。\n\n比方说，如果我回答你：看来似乎是 zentry 卡住了；你应该先清除它。，然后，这是一个很糟的后续问题回应：zentry 是什么？ 好的问法应该是这样：哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？\n\n\n# 处理无礼的回应\n\n很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直截了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。\n\n如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这没有发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而你将被视为有错的一方，这将伤害到你获取信息或帮助的机会。\n\n另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。\n\n（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会正常交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们喜欢我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。）\n\njeff bigler 的观察总结和这个相关也值得一读 (tact filters)。\n\n在下一节，我们会谈到另一个问题，当你行为不当时所会受到的冒犯。\n\n\n# 如何避免扮演失败者\n\n在黑客社区的论坛中，你以本指南所描述的或类似的方式，可能会有那么几次搞砸了。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。\n\n这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被言语攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、不去关马桶盖等等。相反地，你该这么做：\n\n熬过去，这很正常。事实上，它是有益健康且合理的。\n\n社区的标准不会自行维持，它们是通过参与者积极而公开地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。\n\n也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称如果你不想帮助用户就闭嘴。 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。\n\n夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。\n\n记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。\n\n有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是真的会把问题搞砸。\n\n这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。\n\n也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。\n\n\n# 不该问的问题\n\n以下是几个经典蠢问题，以及黑客没回答时心中所想的：\n\n问题：我能在哪找到 x 程序或 x 资源？\n\n问题：我怎样用 x 做 y？\n\n问题：如何设定我的 shell 提示？\n\n问题：我可以用 bass-o-matic 文件转换工具将 acmecorp 文件转换为 tex 格式吗？\n\n问题：我的程序/设定/sql 语句没有用\n\n问题：我的 windows 电脑有问题，你能帮我吗？\n\n问题：我的程序不会动了，我认为系统工具 x 有问题\n\n问题：我在安装 linux（或者 x ）时有问题，你能帮我吗？\n\n问题：我怎么才能破解 root 帐号/窃取 op 特权/读别人的邮件呢？\n\n----------------------------------------\n\n> 问题：我能在哪找到 x 程序或 x 资源？\n\n回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 google 吗？\n\n> 问题：我怎样用 x 做 y？\n\n回答：如果你想解决的是 y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 x 完全无知，也对 y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。\n\n> 问题：如何设定我的 shell 提示？？\n\n回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 rtfm，然后自己去找出来。\n\n> 问题：我可以用 bass-o-matic 文件转换工具将 acmecorp 文件转换为 tex 格式吗？\n\n回答：试试看就知道了。如果你试过，你就知道了答案，就不用浪费我的时间了。\n\n> 问题：我的{程序/设定/sql 语句}没有用\n\n回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种\n\n * 你还有什么要补充的吗？\n * 真糟糕，希望你能搞定。\n * 这关我屁事？\n\n> 问题：我的 windows 电脑有问题，你能帮我吗？\n\n回答：能啊，扔掉微软的垃圾，换个像 linux 或 bsd 的开源操作系统吧。\n\n注意：如果程序有官方版 windows 或者与 windows 有互动（如 samba），你可以问与 windows 相关的问题，只是别对问题是由 windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 windows 一般来说实在太烂，这种说法通常都是对的。\n\n> 问题：我的程序不会动了，我认为系统工具 x 有问题\n\n回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库文件有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。\n\n> 问题：我在安装 linux（或者 x ）时有问题，你能帮我吗？\n\n回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 linux 使用群组者寻求实际的指导吧（你能在这儿找到用户群组的清单）。\n\n注意：如果安装问题与某 linux 的发行版有关，在它的邮件列表、论坛或本地用户群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 linux 和所有被怀疑的硬件作关键词仔细搜索。\n\n> 问题：我怎么才能破解 root 帐号/窃取 op 特权/读别人的邮件呢？\n\n回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！\n\n\n# 好问题与蠢问题\n\n最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。\n\n蠢问题：\n\n> 我可以在哪儿找到关于 foonly flurbamatic 的资料？\n\n这种问法无非想得到 stfw 这样的回答。\n\n聪明问题：\n\n> 我用 google 搜索过 “foonly flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？\n\n这个问题已经 stfw 过了，看起来他真的遇到了麻烦。\n\n蠢问题：\n\n> 我从 foo 项目找来的源码没法编译。它怎么这么烂？\n\n他觉得都是别人的错，这个傲慢自大的提问者。\n\n聪明问题：\n\n> foo 项目代码在 nulix 6.2 版下无法编译通过。我读过了 faq，但里面没有提到跟 nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？\n\n提问者已经指明了环境，也读过了 faq，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。\n\n蠢问题：\n\n> 我的主机板有问题了，谁来帮我？\n\n某黑客对这类问题的回答通常是：好的，还要帮你拍拍背和换尿布吗？，然后按下删除键。\n\n聪明问题：\n\n> 我在 s2464 主机板上试过了 x 、 y 和 z ，但没什么作用，我又试了 a 、 b 和 c 。请注意当我尝试 c 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 athlon mp 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？\n\n这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。\n\n在最后一个问题中，注意告诉我答案和给我启示，指出我还应该做什么诊断工作之间微妙而又重要的区别。\n\n事实上，后一个问题源自于 2001 年 8 月在 linux 内核邮件列表（lkml）上的一个真实的提问。我（eric）就是那个提出问题的人。我在 tyan s2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。\n\n通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。\n\n事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候，一个 linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的名人，而是因为我用了正确的方式来提问。\n\n黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我像个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。\n\n\n# 如果得不到回答\n\n如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。\n\n总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。\n\n你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。\n\n有许多网上的以及本地的用户群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。\n\n另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。\n\n对像是 linux 这种大众化的软件，每个开发者至少会对应到上万名用户。根本不可能由一个人来处理来自上万名用户的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。\n\n\n# 如何更好地回答问题\n\n态度和善一点。 问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。\n\n对初犯者私下回复。 对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。\n\n如果你不确定，一定要说出来！ 一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。\n\n如果帮不了忙，也别妨碍他。 不要在实际步骤上开玩笑，那样也许会毁了提问者的设置 —— 有些可怜的呆瓜会把它当成真的指令。\n\n试探性的反问以引出更多的细节。 如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。\n\n尽管对那些懒虫抱怨一声 rtfm 是正当的，但能给出文档的链接（即使只是建议个 google 搜索关键词）会更好。\n\n如果你决定回答，就请给出好的答案。 当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。\n\n正面地回答问题！ 如果这个提问者已经很深入的研究而且也表明已经试过 x 、 y 、 z 、 a 、 b 、 c 但没得到结果，回答 试试看 a 或是 b 或者 试试 x 、 y 、 z 、 a 、 b 、 c 并附上一个链接一点用都没有。\n\n帮助你的社区从问题中学习。 当回复一个好问题时，问问自己如何修改相关文件或常见问题文件以免再次解答同样的问题？，接着再向文件维护者发一份补丁。\n\n如果你在研究一番后才作出了回答，展现你的技巧而不是直接端出结果。毕竟授人以鱼不如授人以渔。\n\n\n# 相关资源\n\n如果你需要个人电脑、unix 系统和网络如何运作的基础知识，参阅 unix 系统和网络基本原理。\n\n当你发布软件或补丁时，试着按软件发布实践操作。\n\n\n# 鸣谢\n\nevelyn mitchel 贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节， mikhail ramendik 贡献了一些特别有价值的建议和改进。",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"贡献者",frontmatter:{title:"贡献者",date:"2022-10-28T22:17:38.000Z",permalink:"/pages/praise/friends/",categories:["docs","支持"],tags:["贡献者"],readingShow:"top"},regularPath:"/%E6%94%AF%E6%8C%81/102.%E8%B4%A1%E7%8C%AE%E8%AF%B4%E6%98%8E/103.%E8%B4%A1%E7%8C%AE%E8%80%85.html",relativePath:"支持/102.贡献说明/103.贡献者.md",key:"v-083c3760",path:"/pages/praise/friends/",headers:[{level:2,title:"Jpom 的贡献者们",slug:"jpom-的贡献者们",normalizedTitle:"jpom 的贡献者们",charIndex:2},{level:2,title:"如何贡献",slug:"如何贡献",normalizedTitle:"如何贡献",charIndex:96},{level:2,title:"最佳贡献者",slug:"最佳贡献者",normalizedTitle:"最佳贡献者",charIndex:245},{level:2,title:"More",slug:"more",normalizedTitle:"more",charIndex:1266},{level:2,title:"CLA 协议",slug:"cla-协议",normalizedTitle:"cla 协议",charIndex:2051}],headersStr:"Jpom 的贡献者们 如何贡献 最佳贡献者 More CLA 协议",content:"# Jpom 的贡献者们\n\n我希望对开源有热情的同学都来贡献 Jpom，让这个项目变的越来越好，我们一起为爱发电。\n\n感谢下列成员为 Jpom 做出过一份贡献，让 Jpom 变得更好\n\n\n# 如何贡献\n\n * 💻代码：可以帮助完成一些任务、编写新的功能或者是修复一些bug；\n * ⚠️测试：可以来参与测试在不同平台和系统中的兼容性；\n * 📖文档：可以编写或完善文档，来帮助用户更好地了解和使用 Jpom；\n * 📝博客：可以撰写 Jpom 的相关文章，来帮助更好地推广；\n\n\n# 最佳贡献者\n\n蓝枫\n\n一名菜鸟程序员，上班就喝咖啡，下班就玩蛇，天天加班玩游戏\n\nHotstrip\n\n没啥好说的(✪▽✪)、没啥好说的、哒哒哒哒哒哒哒哒哒哒哒哒\n\n魏宏斌\n\n加钱能解决的问题，都不是问题\n\n许长安\n\n心之所向，便是文城\n\n赵忠洋\n\nCV工程师、面向Search Engines编程开发者\n\n- name: 蓝枫\n  desc: 一名菜鸟程序员，上班就喝咖啡，下班就玩蛇，天天加班玩游戏\n  avatar: /images/team/lf.jpg\n  link: https://gitee.com/F7575\n  bgColor: '#CBEAFA' \n  textColor: '#6854A1'\n- name: Hotstrip\n  desc: 没啥好说的(✪▽✪)、没啥好说的、哒哒哒哒哒哒哒哒哒哒哒哒\n  avatar: /images/team/Hotsrip.jpg\n  link: https://gitee.com/hotstrip\n  bgColor: '#B7DBFF'\n  textColor: '#294D71'\n- name: 魏宏斌\n  desc: '加钱能解决的问题，都不是问题'\n  avatar: /images/team/weihongbin.png\n  link: https://weihongbin.com\n  bgColor: '#B9D59C'\n  textColor: '#3B551F'\n- name: 许长安\n  desc: '心之所向，便是文城'\n  avatar: /images/team/hong_ej.png\n  link: https://gitee.com/hong_ej\n  bgColor: '#c49b5d'\n  textColor: '#040300'\n- name: 赵忠洋\n  desc: 'CV工程师、面向Search Engines编程开发者'\n  avatar: /images/team/zzy.png\n  link: https://gitee.com/a20070322\n  bgColor: '#dddfda'\n  textColor: '#2b2c2a'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# More\n\nloyal\n\n我的世界只有0和1\n\nArnoHand\n\n一个普通的电脑爱好者，一个bug制造者，喜欢音乐，热爱生活。\n\n胖虎\n\n代码和人只要有一个能跑就行\n\nSam\n\n不想写前端的后端工程师,少说多做。Talk is cheap, show me the code!\n\n张盛帆\n\n做想做的事，做想做的人。\n\n- name: loyal\n  desc: 我的世界只有0和1\n  avatar: /images/team/loyal.png\n  link: https://gitee.com/Mr_loyal\n- name: ArnoHand\n  desc: 一个普通的电脑爱好者，一个bug制造者，喜欢音乐，热爱生活。\n  avatar: /images/team/arnoHand.jpg\n  link: https://gitee.com/arnohand\n- name: 胖虎\n  desc: 代码和人只要有一个能跑就行\n  avatar: /images/team/panghu.jpg\n  link: https://gitee.com/daofuli\n- name: Sam\n  desc: 不想写前端的后端工程师,少说多做。Talk is cheap, show me the code!\n  avatar: /images/team/sam.jpg\n  link: https://gitee.com/hjk2008\n- name: 张盛帆\n  desc: '做想做的事，做想做的人。'\n  avatar: /images/team/zdchdj.png\n  link: https://gitee.com/zsf_008/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# CLA 协议\n\n * CLA协议\n\n提交贡献即认为签署了本协议，若对本协议有异议，请勿提交贡献。",normalizedContent:"# jpom 的贡献者们\n\n我希望对开源有热情的同学都来贡献 jpom，让这个项目变的越来越好，我们一起为爱发电。\n\n感谢下列成员为 jpom 做出过一份贡献，让 jpom 变得更好\n\n\n# 如何贡献\n\n * 💻代码：可以帮助完成一些任务、编写新的功能或者是修复一些bug；\n * ⚠️测试：可以来参与测试在不同平台和系统中的兼容性；\n * 📖文档：可以编写或完善文档，来帮助用户更好地了解和使用 jpom；\n * 📝博客：可以撰写 jpom 的相关文章，来帮助更好地推广；\n\n\n# 最佳贡献者\n\n蓝枫\n\n一名菜鸟程序员，上班就喝咖啡，下班就玩蛇，天天加班玩游戏\n\nhotstrip\n\n没啥好说的(✪▽✪)、没啥好说的、哒哒哒哒哒哒哒哒哒哒哒哒\n\n魏宏斌\n\n加钱能解决的问题，都不是问题\n\n许长安\n\n心之所向，便是文城\n\n赵忠洋\n\ncv工程师、面向search engines编程开发者\n\n- name: 蓝枫\n  desc: 一名菜鸟程序员，上班就喝咖啡，下班就玩蛇，天天加班玩游戏\n  avatar: /images/team/lf.jpg\n  link: https://gitee.com/f7575\n  bgcolor: '#cbeafa' \n  textcolor: '#6854a1'\n- name: hotstrip\n  desc: 没啥好说的(✪▽✪)、没啥好说的、哒哒哒哒哒哒哒哒哒哒哒哒\n  avatar: /images/team/hotsrip.jpg\n  link: https://gitee.com/hotstrip\n  bgcolor: '#b7dbff'\n  textcolor: '#294d71'\n- name: 魏宏斌\n  desc: '加钱能解决的问题，都不是问题'\n  avatar: /images/team/weihongbin.png\n  link: https://weihongbin.com\n  bgcolor: '#b9d59c'\n  textcolor: '#3b551f'\n- name: 许长安\n  desc: '心之所向，便是文城'\n  avatar: /images/team/hong_ej.png\n  link: https://gitee.com/hong_ej\n  bgcolor: '#c49b5d'\n  textcolor: '#040300'\n- name: 赵忠洋\n  desc: 'cv工程师、面向search engines编程开发者'\n  avatar: /images/team/zzy.png\n  link: https://gitee.com/a20070322\n  bgcolor: '#dddfda'\n  textcolor: '#2b2c2a'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# more\n\nloyal\n\n我的世界只有0和1\n\narnohand\n\n一个普通的电脑爱好者，一个bug制造者，喜欢音乐，热爱生活。\n\n胖虎\n\n代码和人只要有一个能跑就行\n\nsam\n\n不想写前端的后端工程师,少说多做。talk is cheap, show me the code!\n\n张盛帆\n\n做想做的事，做想做的人。\n\n- name: loyal\n  desc: 我的世界只有0和1\n  avatar: /images/team/loyal.png\n  link: https://gitee.com/mr_loyal\n- name: arnohand\n  desc: 一个普通的电脑爱好者，一个bug制造者，喜欢音乐，热爱生活。\n  avatar: /images/team/arnohand.jpg\n  link: https://gitee.com/arnohand\n- name: 胖虎\n  desc: 代码和人只要有一个能跑就行\n  avatar: /images/team/panghu.jpg\n  link: https://gitee.com/daofuli\n- name: sam\n  desc: 不想写前端的后端工程师,少说多做。talk is cheap, show me the code!\n  avatar: /images/team/sam.jpg\n  link: https://gitee.com/hjk2008\n- name: 张盛帆\n  desc: '做想做的事，做想做的人。'\n  avatar: /images/team/zdchdj.png\n  link: https://gitee.com/zsf_008/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# cla 协议\n\n * cla协议\n\n提交贡献即认为签署了本协议，若对本协议有异议，请勿提交贡献。",charsets:{cjk:!0},lastUpdated:"2024/04/08, 06:02:01",lastUpdatedTimestamp:1712556121e3},{title:"一键安装（linux）",frontmatter:{title:"一键安装（linux）",date:"2022-06-11T16:05:40.000Z",permalink:"/pages/fe28e9/",tags:["安装"],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/02.%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85.html",relativePath:"文档/01.安装使用/02.一键安装.md",key:"v-695409bb",path:"/pages/fe28e9/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"安装服务端",slug:"安装服务端",normalizedTitle:"安装服务端",charIndex:167},{level:3,title:"默认安装",slug:"默认安装",normalizedTitle:"默认安装",charIndex:177},{level:4,title:"有 JDK",slug:"有-jdk",normalizedTitle:"有 jdk",charIndex:227},{level:4,title:"无 JDK",slug:"无-jdk",normalizedTitle:"无 jdk",charIndex:403},{level:4,title:"自动安装服务",slug:"自动安装服务",normalizedTitle:"自动安装服务",charIndex:605},{level:3,title:"自定义安装",slug:"自定义安装",normalizedTitle:"自定义安装",charIndex:63},{level:4,title:"有 JDK",slug:"有-jdk-2",normalizedTitle:"有 jdk",charIndex:227},{level:4,title:"无 JDK",slug:"无-jdk-2",normalizedTitle:"无 jdk",charIndex:403},{level:4,title:"自动安装服务",slug:"自动安装服务-2",normalizedTitle:"自动安装服务",charIndex:605},{level:2,title:"插件端",slug:"插件端",normalizedTitle:"插件端",charIndex:1713},{level:3,title:"默认安装",slug:"默认安装-2",normalizedTitle:"默认安装",charIndex:177},{level:4,title:"有 JDK",slug:"有-jdk-3",normalizedTitle:"有 jdk",charIndex:227},{level:4,title:"无 JDK",slug:"无-jdk-3",normalizedTitle:"无 jdk",charIndex:403},{level:4,title:"自动安装服务",slug:"自动安装服务-3",normalizedTitle:"自动安装服务",charIndex:605},{level:3,title:"自定义安装",slug:"自定义安装-2",normalizedTitle:"自定义安装",charIndex:63},{level:4,title:"有 JDK",slug:"有-jdk-4",normalizedTitle:"有 jdk",charIndex:227},{level:4,title:"无 JDK",slug:"无-jdk-4",normalizedTitle:"无 jdk",charIndex:403},{level:4,title:"自动安装服务",slug:"自动安装服务-4",normalizedTitle:"自动安装服务",charIndex:605},{level:2,title:"温馨提示",slug:"温馨提示",normalizedTitle:"温馨提示",charIndex:3245}],headersStr:"前言 安装服务端 默认安装 有 JDK 无 JDK 自动安装服务 自定义安装 有 JDK 无 JDK 自动安装服务 插件端 默认安装 有 JDK 无 JDK 自动安装服务 自定义安装 有 JDK 无 JDK 自动安装服务 温馨提示",content:"# 前言\n\n一键安装仅支持 linux 系统、并且需要安装的服务器有公网能力才行奥\n\n如果您期望在安装过程中修改一部分配置或者自定义安装我们不建议您使用一键安装\n\n一键安装脚本默认使用 Jpom 稳定版\n\n注意\n\nServer端和Agent端不可安装在同一目录下，因为两个程序数据目录会使用到同一个文件夹/文件会造成数据错乱\n\n\n# 安装服务端\n\n\n# 默认安装\n\n默认安装是将服务端安装到默认位置：/usr/local/jpom-server/\n\n# 有 JDK\n\n系统中已经有 JDK 并且配置环境变量、使用默认路径安装（注意：需要有 sudo 权限、建议在 root 用户使用）\n\n默认安装路径：/usr/local/jpom-server/\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server default\n\n\n1\n\n\n# 无 JDK\n\n系统中没有 JDK、期望自动安装 JDK8、使用默认路径安装（注意：服务器需要有公网下使用）\n\nJpom 服务端默认安装路径：/usr/local/jpom-server/ JDK 默认安装路径：/usr/java/xxxx\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+default\n\n\n1\n\n\n# 自动安装服务\n\n期望自动将服务端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+default+service\n\n\n1\n\n\n提醒\n\n如果您安装的服务端没有 sudo 或者 root 权限我们不建议您使用默认安装方式来安装\n\n\n# 自定义安装\n\n自定义安装会在安装过程中询问您将软件按到指定目录\n\n# 有 JDK\n\n系统中已经有 JDK 并且配置环境变量\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server\n\n\n1\n2\n3\n\n\n# 无 JDK\n\n系统中没有 JDK、期望自动安装 JDK8\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk\n\n\n1\n2\n3\n\n\n# 自动安装服务\n\n期望自动将 Jpom 服务端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk+service\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk+service\n\n\n1\n2\n3\n\n\n提醒\n\n如果需要注册服务需要在 sudo 或者 root 条件下执行\n\n\n# 插件端\n\n\n# 默认安装\n\n默认安装是将插件端安装到默认位置：/usr/local/jpom-agent/\n\n# 有 JDK\n\n系统中已经有 JDK 并且配置环境变量、使用默认路径安装（注意：需要有 sudo 权限、建议在 root 用户使用）\n\n默认安装路径：/usr/local/jpom-agent/\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent default\n\n\n1\n\n\n# 无 JDK\n\n系统中没有 JDK、期望自动安装 JDK8、使用默认路径安装（注意：服务器需要有公网下使用）\n\nJpom 服务端默认安装路径：/usr/local/jpom-agent/ JDK 默认安装路径：/usr/java/xxxx\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent jdk+default\n\n\n1\n\n\n# 自动安装服务\n\n期望自动将插件端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Agent jdk+default+service\n\n\n1\n\n\n提醒\n\n如果您安装的服务端没有 sudo 或者 root 权限我们不建议您使用默认安装方式来安装\n\n\n# 自定义安装\n\n自定义安装会在安装过程中询问您将软件按到指定目录\n\n# 有 JDK\n\n系统中已经有 JDK 并且配置环境变量\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent\n\n\n1\n2\n3\n\n\n# 无 JDK\n\n系统中没有 JDK、期望自动安装 JDK8\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk\n\n\n1\n2\n3\n\n\n# 自动安装服务\n\n期望自动将 Jpom 服务端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk+service\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Agent jdk+service\n\n\n1\n2\n3\n\n\n提醒\n\n如果需要注册服务需要在 sudo 或者 root 条件下执行\n\n\n# 温馨提示\n\n如果您使用了一键安装依赖插件：jdk、node、maven。\n\n安装成功后您在终端里面使用相应的命令是不生效的奥。\n\n您需要手动 source 一下或者退出终端重新登录进入即可。",normalizedContent:"# 前言\n\n一键安装仅支持 linux 系统、并且需要安装的服务器有公网能力才行奥\n\n如果您期望在安装过程中修改一部分配置或者自定义安装我们不建议您使用一键安装\n\n一键安装脚本默认使用 jpom 稳定版\n\n注意\n\nserver端和agent端不可安装在同一目录下，因为两个程序数据目录会使用到同一个文件夹/文件会造成数据错乱\n\n\n# 安装服务端\n\n\n# 默认安装\n\n默认安装是将服务端安装到默认位置：/usr/local/jpom-server/\n\n# 有 jdk\n\n系统中已经有 jdk 并且配置环境变量、使用默认路径安装（注意：需要有 sudo 权限、建议在 root 用户使用）\n\n默认安装路径：/usr/local/jpom-server/\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server default\n\n\n1\n\n\n# 无 jdk\n\n系统中没有 jdk、期望自动安装 jdk8、使用默认路径安装（注意：服务器需要有公网下使用）\n\njpom 服务端默认安装路径：/usr/local/jpom-server/ jdk 默认安装路径：/usr/java/xxxx\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+default\n\n\n1\n\n\n# 自动安装服务\n\n期望自动将服务端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+default+service\n\n\n1\n\n\n提醒\n\n如果您安装的服务端没有 sudo 或者 root 权限我们不建议您使用默认安装方式来安装\n\n\n# 自定义安装\n\n自定义安装会在安装过程中询问您将软件按到指定目录\n\n# 有 jdk\n\n系统中已经有 jdk 并且配置环境变量\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server\n\n\n1\n2\n3\n\n\n# 无 jdk\n\n系统中没有 jdk、期望自动安装 jdk8\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk\n\n\n1\n2\n3\n\n\n# 自动安装服务\n\n期望自动将 jpom 服务端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk+service\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk+service\n\n\n1\n2\n3\n\n\n提醒\n\n如果需要注册服务需要在 sudo 或者 root 条件下执行\n\n\n# 插件端\n\n\n# 默认安装\n\n默认安装是将插件端安装到默认位置：/usr/local/jpom-agent/\n\n# 有 jdk\n\n系统中已经有 jdk 并且配置环境变量、使用默认路径安装（注意：需要有 sudo 权限、建议在 root 用户使用）\n\n默认安装路径：/usr/local/jpom-agent/\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent default\n\n\n1\n\n\n# 无 jdk\n\n系统中没有 jdk、期望自动安装 jdk8、使用默认路径安装（注意：服务器需要有公网下使用）\n\njpom 服务端默认安装路径：/usr/local/jpom-agent/ jdk 默认安装路径：/usr/java/xxxx\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent jdk+default\n\n\n1\n\n\n# 自动安装服务\n\n期望自动将插件端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s agent jdk+default+service\n\n\n1\n\n\n提醒\n\n如果您安装的服务端没有 sudo 或者 root 权限我们不建议您使用默认安装方式来安装\n\n\n# 自定义安装\n\n自定义安装会在安装过程中询问您将软件按到指定目录\n\n# 有 jdk\n\n系统中已经有 jdk 并且配置环境变量\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent\n\n\n1\n2\n3\n\n\n# 无 jdk\n\n系统中没有 jdk、期望自动安装 jdk8\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk\n\n\n1\n2\n3\n\n\n# 自动安装服务\n\n期望自动将 jpom 服务端注册到系统服务中，来达到开机自启动或者用服务的方式来管理\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk+service\n\n\n1\n2\n3\n\n\napt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh agent jdk+service\n\n\n1\n2\n3\n\n\n提醒\n\n如果需要注册服务需要在 sudo 或者 root 条件下执行\n\n\n# 温馨提示\n\n如果您使用了一键安装依赖插件：jdk、node、maven。\n\n安装成功后您在终端里面使用相应的命令是不生效的奥。\n\n您需要手动 source 一下或者退出终端重新登录进入即可。",charsets:{cjk:!0},lastUpdated:"2023/12/25, 08:40:46",lastUpdatedTimestamp:1703493646e3},{title:"容器化安装",frontmatter:{title:"容器化安装",date:"2022-06-11T16:11:41.000Z",permalink:"/pages/820286/",tags:["安装"],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/04.%E5%AE%B9%E5%99%A8%E5%8C%96%E5%AE%89%E8%A3%85.html",relativePath:"文档/01.安装使用/04.容器化安装.md",key:"v-207eb677",path:"/pages/820286/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"一键安装（不推荐）",slug:"一键安装-不推荐",normalizedTitle:"一键安装（不推荐）",charIndex:234},{level:2,title:"挂载安装",slug:"挂载安装",normalizedTitle:"挂载安装",charIndex:511},{level:2,title:"卷安装",slug:"卷安装",normalizedTitle:"卷安装",charIndex:1963},{level:2,title:"支持自动管理 Docker",slug:"支持自动管理-docker",normalizedTitle:"支持自动管理 docker",charIndex:3818},{level:3,title:"linux",slug:"linux",normalizedTitle:"linux",charIndex:3975},{level:2,title:"补充说明",slug:"补充说明",normalizedTitle:"补充说明",charIndex:4863}],headersStr:"前言 一键安装（不推荐） 挂载安装 卷安装 支持自动管理 Docker linux 补充说明",content:"# 前言\n\nJpom 为大家提供了 docker 镜像方便大家快速安装。使用容器前提是您已经会使用 docker 才可以进行容器化安装奥。\n\n容器安装仅支持 Jpom 的服务端，插件端还是需要使用原生方式安装（由于容器和宿主机环境隔离，而导致插件端的很多功能无法正常使用，因此对插件端容器化意义不大。）\n\n注意\n\n容器安装的方式禁用了在线构建中的本地构建，请大家使用容器构建来构建项目。\n\n如果您还未安装 docker 可以查看我们：安装 docker 文档\n\n\n# 一键安装（不推荐）\n\n一键安装未挂载数据目录，如果容器删除那么 Jpom 中的数据也将自动删除\n\n 1. 阿里云仓库\n\ndocker run -p 2122:2122 --name jpom-server --restart=always registry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n\n 2. dockerhub 仓库\n\ndocker run -p 2122:2122 --name jpom-server --restart=always jpomdocker/jpom\n\n\n1\n\n\n\n# 挂载安装\n\n假设将 Jpom 的数据、日志、配置相关存储到：/home/jpom-server/ 目录\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v D:/etc/localtime:/etc/localtime:ro ^\n\t-v D:/home/jpom-server/logs:/usr/local/jpom-server/logs ^\n\t-v D:/home/jpom-server/data:/usr/local/jpom-server/data ^\n\t-v D:/home/jpom-server/conf:/usr/local/jpom-server/conf ^\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v D:/etc/localtime:/etc/localtime:ro ^\n\t-v D:/home/jpom-server/logs:/usr/local/jpom-server/logs ^\n\t-v D:/home/jpom-server/data:/usr/local/jpom-server/data ^\n\t-v D:/home/jpom-server/conf:/usr/local/jpom-server/conf ^\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 卷安装\n\n假设将 Jpom 的数据、日志、配置相关存储到名称为：jpom-server-xxxx 的容器卷中\n\n阿里云仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v jpom-server-data:/usr/local/jpom-server/data \\\n\t-v jpom-server-logs:/usr/local/jpom-server/logs \\\n\t-v jpom-server-conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\ndockerhub 仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v jpom-server-data:/usr/local/jpom-server/data \\\n\t-v jpom-server-logs:/usr/local/jpom-server/logs \\\n\t-v jpom-server-conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n阿里云仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v /etc/localtime:/etc/localtime:ro ^\n\t-v jpom-server-data:/usr/local/jpom-server/data ^\n\t-v jpom-server-logs:/usr/local/jpom-server/logs ^\n\t-v jpom-server-conf:/usr/local/jpom-server/conf ^\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\ndockerhub 仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v /etc/localtime:/etc/localtime:ro ^\n\t-v jpom-server-data:/usr/local/jpom-server/data ^\n\t-v jpom-server-logs:/usr/local/jpom-server/logs ^\n\t-v jpom-server-conf:/usr/local/jpom-server/conf ^\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 支持自动管理 Docker\n\n使用上述方式创建的容器，在Jpom 中不能自动监测到本地 docker 服务，需要手动开源 2375端口并添加 docker 服务来实现管理本地 docker\n\n但是如果想快速使用本地 docker 可以实现如下方式来创建容器实现在 Jpom 中添加本地 docker 服务\n\n\n# linux\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 补充说明\n\n在低版本 docker 中运行可能出现 ls: cannot access'/usr/local/jpom-server/lib/': Operation not permitted 错误，此时需要添加 --privileged 参数\n\n如：docker run -p 2122:2122 --name jpom-server --restart=always jpomdocker/jpom --privileged",normalizedContent:"# 前言\n\njpom 为大家提供了 docker 镜像方便大家快速安装。使用容器前提是您已经会使用 docker 才可以进行容器化安装奥。\n\n容器安装仅支持 jpom 的服务端，插件端还是需要使用原生方式安装（由于容器和宿主机环境隔离，而导致插件端的很多功能无法正常使用，因此对插件端容器化意义不大。）\n\n注意\n\n容器安装的方式禁用了在线构建中的本地构建，请大家使用容器构建来构建项目。\n\n如果您还未安装 docker 可以查看我们：安装 docker 文档\n\n\n# 一键安装（不推荐）\n\n一键安装未挂载数据目录，如果容器删除那么 jpom 中的数据也将自动删除\n\n 1. 阿里云仓库\n\ndocker run -p 2122:2122 --name jpom-server --restart=always registry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n\n 2. dockerhub 仓库\n\ndocker run -p 2122:2122 --name jpom-server --restart=always jpomdocker/jpom\n\n\n1\n\n\n\n# 挂载安装\n\n假设将 jpom 的数据、日志、配置相关存储到：/home/jpom-server/ 目录\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v d:/etc/localtime:/etc/localtime:ro ^\n\t-v d:/home/jpom-server/logs:/usr/local/jpom-server/logs ^\n\t-v d:/home/jpom-server/data:/usr/local/jpom-server/data ^\n\t-v d:/home/jpom-server/conf:/usr/local/jpom-server/conf ^\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v d:/etc/localtime:/etc/localtime:ro ^\n\t-v d:/home/jpom-server/logs:/usr/local/jpom-server/logs ^\n\t-v d:/home/jpom-server/data:/usr/local/jpom-server/data ^\n\t-v d:/home/jpom-server/conf:/usr/local/jpom-server/conf ^\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 卷安装\n\n假设将 jpom 的数据、日志、配置相关存储到名称为：jpom-server-xxxx 的容器卷中\n\n阿里云仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v jpom-server-data:/usr/local/jpom-server/data \\\n\t-v jpom-server-logs:/usr/local/jpom-server/logs \\\n\t-v jpom-server-conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\ndockerhub 仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v jpom-server-data:/usr/local/jpom-server/data \\\n\t-v jpom-server-logs:/usr/local/jpom-server/logs \\\n\t-v jpom-server-conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n阿里云仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v /etc/localtime:/etc/localtime:ro ^\n\t-v jpom-server-data:/usr/local/jpom-server/data ^\n\t-v jpom-server-logs:/usr/local/jpom-server/logs ^\n\t-v jpom-server-conf:/usr/local/jpom-server/conf ^\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\ndockerhub 仓库\n\ndocker volume create jpom-server-data\ndocker volume create jpom-server-logs\ndocker volume create jpom-server-conf\ndocker run -d -p 2122:2122 ^\n\t--name jpom-server ^\n\t--restart=always ^\n\t-v /etc/localtime:/etc/localtime:ro ^\n\t-v jpom-server-data:/usr/local/jpom-server/data ^\n\t-v jpom-server-logs:/usr/local/jpom-server/logs ^\n\t-v jpom-server-conf:/usr/local/jpom-server/conf ^\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 支持自动管理 docker\n\n使用上述方式创建的容器，在jpom 中不能自动监测到本地 docker 服务，需要手动开源 2375端口并添加 docker 服务来实现管理本地 docker\n\n但是如果想快速使用本地 docker 可以实现如下方式来创建容器实现在 jpom 中添加本地 docker 服务\n\n\n# linux\n\n阿里云仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\ndockerhub 仓库\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t--restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 补充说明\n\n在低版本 docker 中运行可能出现 ls: cannot access'/usr/local/jpom-server/lib/': operation not permitted 错误，此时需要添加 --privileged 参数\n\n如：docker run -p 2122:2122 --name jpom-server --restart=always jpomdocker/jpom --privileged",charsets:{cjk:!0},lastUpdated:"2024/12/02, 02:18:13",lastUpdatedTimestamp:1733105893e3},{title:"自行编译",frontmatter:{title:"自行编译",date:"2022-06-11T16:09:01.000Z",permalink:"/pages/e6e8bf/",tags:["安装"],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/05.%E8%87%AA%E8%A1%8C%E7%BC%96%E8%AF%91.html",relativePath:"文档/01.安装使用/05.自行编译.md",key:"v-43b57019",path:"/pages/e6e8bf/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"编译安装（打包安装）",slug:"编译安装-打包安装",normalizedTitle:"编译安装（打包安装）",charIndex:82},{level:2,title:"编译运行",slug:"编译运行",normalizedTitle:"编译运行",charIndex:51}],headersStr:"前言 编译安装（打包安装） 编译运行",content:"# 前言\n\n编译安装是需要有一定开发经验才能使用的方式奥，作为开源项目不能保证在您自己的环境中可以正常编译运行。\n\n编译期间遇到问题请优先考虑自己环境问题\n\n\n# 编译安装（打包安装）\n\n> 此方式为用户下载最新源码或者定制功能后编译打包安装的方式\n\n 1. 访问 Jpom 的码云主页,拉取最新完整代码(建议使用master分支)\n 2. 切换到web-vue目录 执行npm install (vue环境需要提前搭建和安装依赖包详情可以查看web-vue目录下README.md)\n 3. 执行npm run build进行vue项目打包(vue环境需要提前搭建和安装依赖包详情可以查看web-vue目录下README.md)\n 4. 切换到项目根目录执行:mvn clean package\n 5. 查看插件端安装包 modules/agent/target/agent-x.x.x-release\n 6. 查看插件端安装包 modules/server/target/server-x.x.x-release\n\n有安装包后请查看下载安装的说明安装到服务器中\n\n\n# 编译运行\n\n 1. 访问 Jpom 的码云主页,拉取最新完整代码(建议使用master分支、如果想体验新功能请使用dev分支)\n 2. 运行插件端\n    1. 运行org.dromara.jpom.JpomAgentApplication\n    2. 注意控制台打印的默认账号密码信息\n    3. 默认运行端口：2123\n 3. 运行服务端\n    1. 运行org.dromara.jpom.JpomServerApplication\n    2. 默认运行端口：2122\n 4. 构建vue页面 切换到web-vue目录（前提需要本地开发环境有node、npm环境）\n 5. 安装项目vue依赖 控制台执行 npm install\n 6. 启动开发模式 控制台执行 npm run dev\n 7. 根据控制台输出的地址访问前端页面 例如http://127.0.0.1:3000/",normalizedContent:"# 前言\n\n编译安装是需要有一定开发经验才能使用的方式奥，作为开源项目不能保证在您自己的环境中可以正常编译运行。\n\n编译期间遇到问题请优先考虑自己环境问题\n\n\n# 编译安装（打包安装）\n\n> 此方式为用户下载最新源码或者定制功能后编译打包安装的方式\n\n 1. 访问 jpom 的码云主页,拉取最新完整代码(建议使用master分支)\n 2. 切换到web-vue目录 执行npm install (vue环境需要提前搭建和安装依赖包详情可以查看web-vue目录下readme.md)\n 3. 执行npm run build进行vue项目打包(vue环境需要提前搭建和安装依赖包详情可以查看web-vue目录下readme.md)\n 4. 切换到项目根目录执行:mvn clean package\n 5. 查看插件端安装包 modules/agent/target/agent-x.x.x-release\n 6. 查看插件端安装包 modules/server/target/server-x.x.x-release\n\n有安装包后请查看下载安装的说明安装到服务器中\n\n\n# 编译运行\n\n 1. 访问 jpom 的码云主页,拉取最新完整代码(建议使用master分支、如果想体验新功能请使用dev分支)\n 2. 运行插件端\n    1. 运行org.dromara.jpom.jpomagentapplication\n    2. 注意控制台打印的默认账号密码信息\n    3. 默认运行端口：2123\n 3. 运行服务端\n    1. 运行org.dromara.jpom.jpomserverapplication\n    2. 默认运行端口：2122\n 4. 构建vue页面 切换到web-vue目录（前提需要本地开发环境有node、npm环境）\n 5. 安装项目vue依赖 控制台执行 npm install\n 6. 启动开发模式 控制台执行 npm run dev\n 7. 根据控制台输出的地址访问前端页面 例如http://127.0.0.1:3000/",charsets:{cjk:!0},lastUpdated:"2024/01/24, 09:45:18",lastUpdatedTimestamp:1706089518e3},{title:"下载安装",frontmatter:{title:"下载安装",date:"2022-06-11T16:02:24.000Z",permalink:"/pages/db3065/",tags:["安装"],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/03.%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85.html",relativePath:"文档/01.安装使用/03.下载安装.md",key:"v-5693e255",path:"/pages/db3065/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"下载安装包",slug:"下载安装包",normalizedTitle:"下载安装包",charIndex:83},{level:2,title:"上传安装包",slug:"上传安装包",normalizedTitle:"上传安装包",charIndex:262},{level:2,title:"启动服务-Linux",slug:"启动服务-linux",normalizedTitle:"启动服务-linux",charIndex:380},{level:3,title:"服务端启动",slug:"服务端启动",normalizedTitle:"服务端启动",charIndex:395},{level:3,title:"插件端启动",slug:"插件端启动",normalizedTitle:"插件端启动",charIndex:519},{level:2,title:"启动服务-Windows",slug:"启动服务-windows",normalizedTitle:"启动服务-windows",charIndex:642},{level:3,title:"服务端启动",slug:"服务端启动-2",normalizedTitle:"服务端启动",charIndex:395},{level:4,title:"双击",slug:"双击",normalizedTitle:"双击",charIndex:668},{level:4,title:"终端",slug:"终端",normalizedTitle:"终端",charIndex:715},{level:3,title:"插件端启动",slug:"插件端启动-2",normalizedTitle:"插件端启动",charIndex:519},{level:4,title:"双击",slug:"双击-2",normalizedTitle:"双击",charIndex:668},{level:4,title:"终端",slug:"终端-2",normalizedTitle:"终端",charIndex:715},{level:2,title:"安装包说明（2.10.0 以上）",slug:"安装包说明-2-10-0-以上",normalizedTitle:"安装包说明（2.10.0 以上）",charIndex:901},{level:3,title:"完整包",slug:"完整包",normalizedTitle:"完整包",charIndex:922},{level:3,title:"插件端包",slug:"插件端包",normalizedTitle:"插件端包",charIndex:1450},{level:3,title:"服务端包",slug:"服务端包",normalizedTitle:"服务端包",charIndex:1714},{level:2,title:"安装包说明（2.10.0 以下）",slug:"安装包说明-2-10-0-以下",normalizedTitle:"安装包说明（2.10.0 以下）",charIndex:2010},{level:3,title:"完整包",slug:"完整包-2",normalizedTitle:"完整包",charIndex:922},{level:3,title:"插件端包",slug:"插件端包-2",normalizedTitle:"插件端包",charIndex:1450},{level:3,title:"服务端包",slug:"服务端包-2",normalizedTitle:"服务端包",charIndex:1714}],headersStr:"前言 下载安装包 上传安装包 启动服务-Linux 服务端启动 插件端启动 启动服务-Windows 服务端启动 双击 终端 插件端启动 双击 终端 安装包说明（2.10.0 以上） 完整包 插件端包 服务端包 安装包说明（2.10.0 以下） 完整包 插件端包 服务端包",content:'# 前言\n\n下载安装是自己手动下载安装，适合对Linux、Windows系统比较熟悉的朋友使用。\n\n如果您的服务器没有公网能力则也需要使用此方式来安装使用。\n\n\n# 下载安装包\n\nJpom 官方安装包下载地址：下载中心\n\n我们提供了如下包供您选择使用：\n\n * 完整安装包.zip\n * 服务端安装包.zip\n * 插件端安装包.zip\n * 服务端安装包.tar.gz\n * 插件端安装包.tar.gz\n\n同时我们还提供了安装包的 sha1sum 校验文件，方便您在下载安装包后进行校验，防止下载的安装包被篡改。\n\n\n# 上传安装包\n\n将您下载好地安装包上传到您的服务器，并解压到您想安装的目录。\n\n您也可以在本地解压后再上传到服务器中安装目录。\n\n解压命令示例：\n\ntar -zxf "xxxxx.tar.gz" -C "/xxxxx"\n\n\n1\n\n\n\n# 启动服务-Linux\n\n\n# 服务端启动\n\n# 进入安装目录\ncd /xxxxx\n# 启动服务端\nbash ./bin/Server.sh start\n\n\n1\n2\n3\n4\n\n\n# 启动服务端\nbash /xxxxx/bin/Server.sh start\n\n\n1\n2\n\n\n\n# 插件端启动\n\n# 进入安装目录\ncd /xxxxx\n# 启动插件端\nbash ./bin/Agent.sh start\n\n\n1\n2\n3\n4\n\n\n# 启动 插件端\nbash /xxxxx/bin/Agent.sh start\n\n\n1\n2\n\n\n\n# 启动服务-Windows\n\n\n# 服务端启动\n\n# 双击\n\n到安装目录->bin\n\n双击 Server.bat 启动后输入对应数字选择启动\n\n# 终端\n\n# 进入安装目录\ncd X:/xxxxx\ncd bin\n./Server.bat start\n\n\n1\n2\n3\n4\n\n\n\n# 插件端启动\n\n# 双击\n\n到安装目录->bin\n\n双击 Agent.bat 启动后输入对应数字选择启动\n\n# 终端\n\n# 进入安装目录\ncd X:/xxxxx\ncd bin\n./Agent.bat start\n\n\n1\n2\n3\n4\n\n\n\n# 安装包说明（2.10.0 以上）\n\n\n# 完整包\n\njpom-x.x.x.zip\n\n.\n├── agent-x.x.x-release.zip\n├────── lib\n├────────── agent-x.x.x.jar\n├────── bin\n├────────── Agent.bat\n├────────── Agent.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── LICENSE\n├── server-x.x.x-release.zip\n├────── lib\n├────────── server-x.x.x.jar\n├────── bin\n├────────── Server.bat\n├────────── Server.sh\n├────────── BlockListener.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 插件端包\n\nagent-x.x.x-release.zip\n\n.\n├── agent-x.x.x-release\n├────── lib\n├────────── agent-x.x.x.jar\n├────── bin\n├────────── Agent.bat\n├────────── Agent.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 服务端包\n\nserver-x.x.x-release.zip\n\n├── server-x.x.x-release\n├────── lib\n├────────── server-x.x.x.jar\n├────── bin\n├────────── Server.bat\n├────────── Server.sh\n├────────── BlockListener.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 安装包说明（2.10.0 以下）\n\n\n# 完整包\n\njpom-x.x.x.zip\n\n.\n├── agent-x.x.x-release.zip\n├────── lib\n├────────── agent-x.x.x.jar\n├────── Agent.bat\n├────── Agent.sh\n├────── extConfig.yml\n├────── LICENSE\n├── server-x.x.x-release.zip\n├────── lib\n├────────── server-x.x.x.jar\n├────── Server.bat\n├────── Server.sh\n├────── extConfig.yml\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 插件端包\n\nagent-x.x.x-release.zip\n\n.\n├─── lib\n├────────── agent-x.x.x.jar\n├─── Agent.bat\n├─── Agent.sh\n├─── extConfig.yml\n└─── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 服务端包\n\nserver-x.x.x-release.zip\n\n.\n├─── lib\n├────────── server-x.x.x.jar\n├─── Server.bat\n├─── Server.sh\n├─── extConfig.yml\n└─── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'# 前言\n\n下载安装是自己手动下载安装，适合对linux、windows系统比较熟悉的朋友使用。\n\n如果您的服务器没有公网能力则也需要使用此方式来安装使用。\n\n\n# 下载安装包\n\njpom 官方安装包下载地址：下载中心\n\n我们提供了如下包供您选择使用：\n\n * 完整安装包.zip\n * 服务端安装包.zip\n * 插件端安装包.zip\n * 服务端安装包.tar.gz\n * 插件端安装包.tar.gz\n\n同时我们还提供了安装包的 sha1sum 校验文件，方便您在下载安装包后进行校验，防止下载的安装包被篡改。\n\n\n# 上传安装包\n\n将您下载好地安装包上传到您的服务器，并解压到您想安装的目录。\n\n您也可以在本地解压后再上传到服务器中安装目录。\n\n解压命令示例：\n\ntar -zxf "xxxxx.tar.gz" -c "/xxxxx"\n\n\n1\n\n\n\n# 启动服务-linux\n\n\n# 服务端启动\n\n# 进入安装目录\ncd /xxxxx\n# 启动服务端\nbash ./bin/server.sh start\n\n\n1\n2\n3\n4\n\n\n# 启动服务端\nbash /xxxxx/bin/server.sh start\n\n\n1\n2\n\n\n\n# 插件端启动\n\n# 进入安装目录\ncd /xxxxx\n# 启动插件端\nbash ./bin/agent.sh start\n\n\n1\n2\n3\n4\n\n\n# 启动 插件端\nbash /xxxxx/bin/agent.sh start\n\n\n1\n2\n\n\n\n# 启动服务-windows\n\n\n# 服务端启动\n\n# 双击\n\n到安装目录->bin\n\n双击 server.bat 启动后输入对应数字选择启动\n\n# 终端\n\n# 进入安装目录\ncd x:/xxxxx\ncd bin\n./server.bat start\n\n\n1\n2\n3\n4\n\n\n\n# 插件端启动\n\n# 双击\n\n到安装目录->bin\n\n双击 agent.bat 启动后输入对应数字选择启动\n\n# 终端\n\n# 进入安装目录\ncd x:/xxxxx\ncd bin\n./agent.bat start\n\n\n1\n2\n3\n4\n\n\n\n# 安装包说明（2.10.0 以上）\n\n\n# 完整包\n\njpom-x.x.x.zip\n\n.\n├── agent-x.x.x-release.zip\n├────── lib\n├────────── agent-x.x.x.jar\n├────── bin\n├────────── agent.bat\n├────────── agent.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── license\n├── server-x.x.x-release.zip\n├────── lib\n├────────── server-x.x.x.jar\n├────── bin\n├────────── server.bat\n├────────── server.sh\n├────────── blocklistener.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# 插件端包\n\nagent-x.x.x-release.zip\n\n.\n├── agent-x.x.x-release\n├────── lib\n├────────── agent-x.x.x.jar\n├────── bin\n├────────── agent.bat\n├────────── agent.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 服务端包\n\nserver-x.x.x-release.zip\n\n├── server-x.x.x-release\n├────── lib\n├────────── server-x.x.x.jar\n├────── bin\n├────────── server.bat\n├────────── server.sh\n├────────── blocklistener.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 安装包说明（2.10.0 以下）\n\n\n# 完整包\n\njpom-x.x.x.zip\n\n.\n├── agent-x.x.x-release.zip\n├────── lib\n├────────── agent-x.x.x.jar\n├────── agent.bat\n├────── agent.sh\n├────── extconfig.yml\n├────── license\n├── server-x.x.x-release.zip\n├────── lib\n├────────── server-x.x.x.jar\n├────── server.bat\n├────── server.sh\n├────── extconfig.yml\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 插件端包\n\nagent-x.x.x-release.zip\n\n.\n├─── lib\n├────────── agent-x.x.x.jar\n├─── agent.bat\n├─── agent.sh\n├─── extconfig.yml\n└─── license\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 服务端包\n\nserver-x.x.x-release.zip\n\n.\n├─── lib\n├────────── server-x.x.x.jar\n├─── server.bat\n├─── server.sh\n├─── extconfig.yml\n└─── license\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"docker-compose",frontmatter:{title:"docker-compose",date:"2022-06-11T16:10:10.000Z",permalink:"/pages/a06a94/",tags:["安装"],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/06.docker-compose.html",relativePath:"文档/01.安装使用/06.docker-compose.md",key:"v-0116a4c0",path:"/pages/a06a94/",headers:[{level:2,title:"docker-compose",slug:"docker-compose",normalizedTitle:"docker-compose",charIndex:2}],headersStr:"docker-compose",content:"# docker-compose\n\n如果您还未安装 docker 可以查看我们：安装 docker 文档\n\n * 无需安装任何环境,自动编译构建\n\n> 需要注意修改 .env 文件中的 token 值\n\ngit clone https://gitee.com/dromara/Jpom.git\ncd Jpom\ndocker-compose up -d\n\n\n1\n2\n3\n",normalizedContent:"# docker-compose\n\n如果您还未安装 docker 可以查看我们：安装 docker 文档\n\n * 无需安装任何环境,自动编译构建\n\n> 需要注意修改 .env 文件中的 token 值\n\ngit clone https://gitee.com/dromara/jpom.git\ncd jpom\ndocker-compose up -d\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2024/01/11, 09:20:27",lastUpdatedTimestamp:1704964827e3},{title:"安装服务",frontmatter:{title:"安装服务",date:"2023-12-20T18:46:35.000Z",permalink:"/pages/929085/",categories:["docs","文档","安装使用"],tags:["安装"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/20.%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1.html",relativePath:"文档/01.安装使用/20.安装服务.md",key:"v-2594b856",path:"/pages/929085/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"安装服务",slug:"安装服务",normalizedTitle:"安装服务",charIndex:129},{level:3,title:"linux",slug:"linux",normalizedTitle:"linux",charIndex:14},{level:2,title:"卸载服务",slug:"卸载服务",normalizedTitle:"卸载服务",charIndex:378},{level:3,title:"linux",slug:"linux-2",normalizedTitle:"linux",charIndex:14},{level:2,title:"开机自启",slug:"开机自启",normalizedTitle:"开机自启",charIndex:512},{level:2,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:194}],headersStr:"前言 安装服务 linux 卸载服务 linux 开机自启 注意",content:"# 前言\n\n我们默认仅提供 linux 下的安装方式，其他系统请自行研究。\n\n我们不能保证所有系统都支持，如果您遇到问题，请优先自己排查解决或者联系我们一起排查。\n\n（感谢为开源项目添砖加瓦）\n\nWindows 推荐使用：winsw 或者 nssm\n\n\n# 安装服务\n\n我们推荐您在初始化安装时候就安装服务并配置开机自动启动。\n\n如果您当时未安装则可以后续手动安装\n\n\n# linux\n\n注意：安装服务是在有 sudo 或者 root 权限下使用\n\nbash /xxxx/bin/Service.sh install\n\n\n1\n\n\n注意\n\n服务端和插件端操作方式一致，均是到对应的安装目录下执行 Service.sh install\n\n提醒\n\n如果您已经安装服务后请勿修改服务端或者插件端的目录，因为服务是绑定到目录的，修改目录后服务会无法启动。\n\n需要手动卸载服务重新安装才能正常使用\n\n\n# 卸载服务\n\n\n# linux\n\nbash /xxxx/bin/Service.sh uninstall\n\n\n1\n\n\n注意\n\n服务端和插件端操作方式一致，均是到对应的安装目录下执行 Service.sh uninstall\n\n\n# 开机自启\n\n> 需要先安装服务后才能使用如下命令\n\nlinux 下安装服务后不会自动添加开机自启，需要手动开启\n\n服务端\n\nsystemctl enable jpom-server\n\n\n1\n\n\n插件端\n\nsystemctl enable jpom-agent\n\n\n1\n\n\n\n# 注意\n\n使用服务方式启动在服务端使用构建或者服务端脚本等需要执行宿主机中的脚本并依赖环境变量的情况可能出现环境变量找不到的情况。\n\n我们建议您在 Jpom 系统中再次配置环境变量，使其来生效。配置路径：\n\n【系统管理】-> 【配置管理】->【系统配置目录】->[ exec/template.sh/exec/template.bat ]\n\n如果服务端在 Linux 系统中请修改 sh 文件、Windows 系统中情修改 bat 文件\n\n",normalizedContent:"# 前言\n\n我们默认仅提供 linux 下的安装方式，其他系统请自行研究。\n\n我们不能保证所有系统都支持，如果您遇到问题，请优先自己排查解决或者联系我们一起排查。\n\n（感谢为开源项目添砖加瓦）\n\nwindows 推荐使用：winsw 或者 nssm\n\n\n# 安装服务\n\n我们推荐您在初始化安装时候就安装服务并配置开机自动启动。\n\n如果您当时未安装则可以后续手动安装\n\n\n# linux\n\n注意：安装服务是在有 sudo 或者 root 权限下使用\n\nbash /xxxx/bin/service.sh install\n\n\n1\n\n\n注意\n\n服务端和插件端操作方式一致，均是到对应的安装目录下执行 service.sh install\n\n提醒\n\n如果您已经安装服务后请勿修改服务端或者插件端的目录，因为服务是绑定到目录的，修改目录后服务会无法启动。\n\n需要手动卸载服务重新安装才能正常使用\n\n\n# 卸载服务\n\n\n# linux\n\nbash /xxxx/bin/service.sh uninstall\n\n\n1\n\n\n注意\n\n服务端和插件端操作方式一致，均是到对应的安装目录下执行 service.sh uninstall\n\n\n# 开机自启\n\n> 需要先安装服务后才能使用如下命令\n\nlinux 下安装服务后不会自动添加开机自启，需要手动开启\n\n服务端\n\nsystemctl enable jpom-server\n\n\n1\n\n\n插件端\n\nsystemctl enable jpom-agent\n\n\n1\n\n\n\n# 注意\n\n使用服务方式启动在服务端使用构建或者服务端脚本等需要执行宿主机中的脚本并依赖环境变量的情况可能出现环境变量找不到的情况。\n\n我们建议您在 jpom 系统中再次配置环境变量，使其来生效。配置路径：\n\n【系统管理】-> 【配置管理】->【系统配置目录】->[ exec/template.sh/exec/template.bat ]\n\n如果服务端在 linux 系统中请修改 sh 文件、windows 系统中情修改 bat 文件\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/13, 14:43:54",lastUpdatedTimestamp:1705157034e3},{title:"如何访问",frontmatter:{title:"如何访问",date:"2023-12-20T12:49:55.000Z",permalink:"/pages/892df7/",categories:["docs","文档","开始使用"],tags:["使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/30.%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8/001.%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE.html",relativePath:"文档/01.安装使用/30.开始使用/001.如何访问.md",key:"v-89482816",path:"/pages/892df7/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"服务端",slug:"服务端",normalizedTitle:"服务端",charIndex:65},{level:2,title:"插件端",slug:"插件端",normalizedTitle:"插件端",charIndex:384},{level:2,title:"如何修改访问端口",slug:"如何修改访问端口",normalizedTitle:"如何修改访问端口",charIndex:575},{level:2,title:"安全说明",slug:"安全说明",normalizedTitle:"安全说明",charIndex:684},{level:2,title:"开启 HTTPS",slug:"开启-https",normalizedTitle:"开启 https",charIndex:927}],headersStr:"前言 服务端 插件端 如何修改访问端口 安全说明 开启 HTTPS",content:"# 前言\n\n当您通过我们提供的各种安装方式或者您自己 DIY 安装完成之后，您将拥有一个可以正常运行的 Jpom 应用。\n\n\n# 服务端\n\nJpom 服务端的默认端口是：2122\n\n此时您只需要在浏览器地址栏输入：http://您服务器的IP:2122 即可访问到 Jpom 服务端。\n\n如果您的服务不能直接通过 IP 地址访问端口，您可以通过 Nginx 进行反向代理。\n\n如果您想通过端口访问，但是访问不了此时您应该先检查 Jpom 服务端是否正常运行，如果正常运行则您需要检查您本地网络和服务器网络是否通畅。\n\n如果不通畅则需要您自行排查并解决，当您确认网络通畅但是端口无法访问请检查服务器防火墙、云服务器网络安全组\n\n注意\n\nLinux 系统中有多种防火墙：Firewall、Iptables、SELinux 等，再检查防火墙配置时候需要都检查一下。\n\n\n# 插件端\n\nJpom 服务端的默认端口是：2123\n\n注意：Jpom 插件端没有 web 界面，仅是提供 api 接口供服务端调用所以您无需关心插件端访问页面异常问题\n\n如果您访问插件端端口：http://您服务器的IP:2123 会响应：Jpom-Agent,Can't access directly,Please configure it to JPOM server\n\n\n# 如何修改访问端口\n\nJpom 是 Spring Boot 项目端口遵循其配置，更改方式请查看安装目录下的配置目录(conf)中的 application.yml 具体说明您可以在文档中继续探索其他处有详细说明\n\n\n# 安全说明\n\n服务端端口是页面操作的 UI 端口，用户使用和访问均使用服务端端口（2122），插件端端口是供服务端管控使用的，不需要对外开放，请根据您实际使用中的网络架构要求开放和限制对应端口访问权限\n\n服务端您使用反向代理配置后访问\n\n我们不建议您将插件端端口（2123）暴露在公网下使用，虽然插件端接口访问是有帐户限制的但是请注意密码泄露和弱密码问题（插件端访问密码默认随机生成 10 位随机字符串）\n\n安全防范于未然\n\n虽然系统基本保证安全但是使用习惯和安全意识是不能大意\n\n\n# 开启 HTTPS\n\nJpom 是 Spring Boot 项目并且使用 tomcat web 容器 如果您有条件下您可以自行修改配置来实现 https 证书配置到 2123 端口。\n\n但是我们更推荐您使用反向代理插件来实现为端口配置 HTTPS 证书",normalizedContent:"# 前言\n\n当您通过我们提供的各种安装方式或者您自己 diy 安装完成之后，您将拥有一个可以正常运行的 jpom 应用。\n\n\n# 服务端\n\njpom 服务端的默认端口是：2122\n\n此时您只需要在浏览器地址栏输入：http://您服务器的ip:2122 即可访问到 jpom 服务端。\n\n如果您的服务不能直接通过 ip 地址访问端口，您可以通过 nginx 进行反向代理。\n\n如果您想通过端口访问，但是访问不了此时您应该先检查 jpom 服务端是否正常运行，如果正常运行则您需要检查您本地网络和服务器网络是否通畅。\n\n如果不通畅则需要您自行排查并解决，当您确认网络通畅但是端口无法访问请检查服务器防火墙、云服务器网络安全组\n\n注意\n\nlinux 系统中有多种防火墙：firewall、iptables、selinux 等，再检查防火墙配置时候需要都检查一下。\n\n\n# 插件端\n\njpom 服务端的默认端口是：2123\n\n注意：jpom 插件端没有 web 界面，仅是提供 api 接口供服务端调用所以您无需关心插件端访问页面异常问题\n\n如果您访问插件端端口：http://您服务器的ip:2123 会响应：jpom-agent,can't access directly,please configure it to jpom server\n\n\n# 如何修改访问端口\n\njpom 是 spring boot 项目端口遵循其配置，更改方式请查看安装目录下的配置目录(conf)中的 application.yml 具体说明您可以在文档中继续探索其他处有详细说明\n\n\n# 安全说明\n\n服务端端口是页面操作的 ui 端口，用户使用和访问均使用服务端端口（2122），插件端端口是供服务端管控使用的，不需要对外开放，请根据您实际使用中的网络架构要求开放和限制对应端口访问权限\n\n服务端您使用反向代理配置后访问\n\n我们不建议您将插件端端口（2123）暴露在公网下使用，虽然插件端接口访问是有帐户限制的但是请注意密码泄露和弱密码问题（插件端访问密码默认随机生成 10 位随机字符串）\n\n安全防范于未然\n\n虽然系统基本保证安全但是使用习惯和安全意识是不能大意\n\n\n# 开启 https\n\njpom 是 spring boot 项目并且使用 tomcat web 容器 如果您有条件下您可以自行修改配置来实现 https 证书配置到 2123 端口。\n\n但是我们更推荐您使用反向代理插件来实现为端口配置 https 证书",charsets:{cjk:!0},lastUpdated:"2023/12/23, 17:01:57",lastUpdatedTimestamp:1703350917e3},{title:"辅助安装",frontmatter:{title:"辅助安装",date:"2023-12-20T13:45:55.000Z",permalink:"/pages/feb7c1/",categories:["docs","文档","安装使用"],tags:["安装"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/099.%E8%BE%85%E5%8A%A9%E5%AE%89%E8%A3%85.html",relativePath:"文档/01.安装使用/099.辅助安装.md",key:"v-adb25576",path:"/pages/feb7c1/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"安装全套环境",slug:"安装全套环境",normalizedTitle:"安装全套环境",charIndex:44},{level:2,title:"root 用户【推荐】",slug:"root-用户【推荐】",normalizedTitle:"root 用户【推荐】",charIndex:211},{level:3,title:"仅安装 jdk",slug:"仅安装-jdk",normalizedTitle:"仅安装 jdk",charIndex:227},{level:3,title:"仅安装 mvn",slug:"仅安装-mvn",normalizedTitle:"仅安装 mvn",charIndex:410},{level:3,title:"仅安装 node",slug:"仅安装-node",normalizedTitle:"仅安装 node",charIndex:576},{level:3,title:"指定 Jpom 版本安装",slug:"指定-jpom-版本安装",normalizedTitle:"指定 jpom 版本安装",charIndex:749},{level:2,title:"非 root 用户 (yum+wget)",slug:"非-root-用户-yum-wget",normalizedTitle:"非 root 用户 (yum+wget)",charIndex:882},{level:3,title:"仅安装 jdk",slug:"仅安装-jdk-2",normalizedTitle:"仅安装 jdk",charIndex:227},{level:3,title:"仅安装 mvn",slug:"仅安装-mvn-2",normalizedTitle:"仅安装 mvn",charIndex:410},{level:3,title:"仅安装 node",slug:"仅安装-node-2",normalizedTitle:"仅安装 node",charIndex:576},{level:3,title:"指定 Jpom 版本安装",slug:"指定-jpom-版本安装-2",normalizedTitle:"指定 jpom 版本安装",charIndex:749},{level:2,title:"非 root 用户 (apt-get+wget)",slug:"非-root-用户-apt-get-wget",normalizedTitle:"非 root 用户 (apt-get+wget)",charIndex:1798},{level:3,title:"仅安装 jdk",slug:"仅安装-jdk-3",normalizedTitle:"仅安装 jdk",charIndex:227},{level:3,title:"仅安装 mvn",slug:"仅安装-mvn-3",normalizedTitle:"仅安装 mvn",charIndex:410},{level:3,title:"仅安装 node",slug:"仅安装-node-3",normalizedTitle:"仅安装 node",charIndex:576},{level:3,title:"指定 Jpom 版本安装",slug:"指定-jpom-版本安装-3",normalizedTitle:"指定 jpom 版本安装",charIndex:749},{level:2,title:"温馨提示",slug:"温馨提示",normalizedTitle:"温馨提示",charIndex:2754}],headersStr:"前言 安装全套环境 root 用户【推荐】 仅安装 jdk 仅安装 mvn 仅安装 node 指定 Jpom 版本安装 非 root 用户 (yum+wget) 仅安装 jdk 仅安装 mvn 仅安装 node 指定 Jpom 版本安装 非 root 用户 (apt-get+wget) 仅安装 jdk 仅安装 mvn 仅安装 node 指定 Jpom 版本安装 温馨提示",content:"# 前言\n\n辅助安装是指帮您快速安装以下环境如：jdk、mvn、node 环境\n\n\n# 安装全套环境\n\n此脚本会自动检查当前环境中是否存在：jdk、mvn、node，如果不存在则执行安装。 当前依赖插件完成后将自动安装 Jpom 服务端\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+mvn+node+default\n\n\n1\n\n\n\n# root 用户【推荐】\n\n\n# 仅安装 jdk\n\n默认路径：/usr/java/xxxx\n\n版本：1.8\n\n来源：https://mirrors.tuna.tsinghua.edu.cn/Adoptium/\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server jdk+only-module+default\n\n\n1\n\n\n\n# 仅安装 mvn\n\n默认路径：/usr/maven/xxxx\n\n版本：3.6.3\n\n来源：https://mirrors.aliyun.com\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server mvn+only-module+default\n\n\n1\n\n\n\n# 仅安装 node\n\n默认路径：/usr/node/xxxx\n\n版本：16.13.1\n\n来源：https://npmmirror.com/mirrors/\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server node+only-module+default\n\n\n1\n\n\n\n# 指定 Jpom 版本安装\n\n如果您想通过脚本安装并且指定版本\n\ncurl -fsSL https://jpom.top/docs/install.sh | bash -s Server-2.10.x\n\n\n1\n\n\n请将：2.10.x 替换为您使用需要的版本号\n\n\n# 非 root 用户 (yum+wget)\n\n提醒\n\n此方式如果当前用户没有对应默认路径的权限时，会提醒您手动输入安装路径。输入时请一次输入完成避免出现一些未知符号导致安装失败。\n\n\n# 仅安装 jdk\n\n默认路径：/usr/java/xxxx\n\n版本：1.8\n\n来源：https://mirrors.tuna.tsinghua.edu.cn/Adoptium/\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 mvn\n\n默认路径：/usr/maven/xxxx\n\n版本：3.6.3\n\n来源：https://mirrors.aliyun.com\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server mvn+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 node\n\n默认路径：/usr/node/xxxx\n\n版本：16.13.1\n\n来源：https://npmmirror.com/mirrors/\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server node+only-module\n\n\n1\n2\n3\n\n\n\n# 指定 Jpom 版本安装\n\n如果您想通过脚本安装并且指定版本\n\nyum install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server-2.10.x\n\n\n1\n2\n3\n\n\n请将：2.10.x 替换为您使用需要的版本号\n\n\n# 非 root 用户 (apt-get+wget)\n\n提醒\n\n此方式如果当前用户没有对应默认路径的权限时，会提醒您手动输入安装路径。输入时请一次输入完成避免出现一些未知符号导致安装失败。\n\n\n# 仅安装 jdk\n\n默认路径：/usr/java/xxxx\n\n版本：1.8\n\n来源：https://mirrors.tuna.tsinghua.edu.cn/Adoptium/\n\nsudo apt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 mvn\n\n默认路径：/usr/maven/xxxx\n\n版本：3.6.3\n\n来源：https://mirrors.aliyun.com\n\nsudo apt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server mvn+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 node\n\n默认路径：/usr/node/xxxx\n\n版本：16.13.1\n\n来源：https://npmmirror.com/mirrors/\n\nsudo apt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server node+only-module\n\n\n1\n2\n3\n\n\n\n# 指定 Jpom 版本安装\n\n如果您想通过脚本安装并且指定版本\n\nsudo apt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server-2.10.x\n\n\n1\n2\n3\n\n\n请将：2.10.x 替换为您使用需要的版本号\n\n\n# 温馨提示\n\n如果您使用了一键安装依赖插件：jdk、node、maven。\n\n安装成功后您在终端里面使用相应的命令是不生效的奥。\n\n您需要手动 source 一下或者退出终端重新登录进入即可。",normalizedContent:"# 前言\n\n辅助安装是指帮您快速安装以下环境如：jdk、mvn、node 环境\n\n\n# 安装全套环境\n\n此脚本会自动检查当前环境中是否存在：jdk、mvn、node，如果不存在则执行安装。 当前依赖插件完成后将自动安装 jpom 服务端\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+mvn+node+default\n\n\n1\n\n\n\n# root 用户【推荐】\n\n\n# 仅安装 jdk\n\n默认路径：/usr/java/xxxx\n\n版本：1.8\n\n来源：https://mirrors.tuna.tsinghua.edu.cn/adoptium/\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server jdk+only-module+default\n\n\n1\n\n\n\n# 仅安装 mvn\n\n默认路径：/usr/maven/xxxx\n\n版本：3.6.3\n\n来源：https://mirrors.aliyun.com\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server mvn+only-module+default\n\n\n1\n\n\n\n# 仅安装 node\n\n默认路径：/usr/node/xxxx\n\n版本：16.13.1\n\n来源：https://npmmirror.com/mirrors/\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server node+only-module+default\n\n\n1\n\n\n\n# 指定 jpom 版本安装\n\n如果您想通过脚本安装并且指定版本\n\ncurl -fssl https://jpom.top/docs/install.sh | bash -s server-2.10.x\n\n\n1\n\n\n请将：2.10.x 替换为您使用需要的版本号\n\n\n# 非 root 用户 (yum+wget)\n\n提醒\n\n此方式如果当前用户没有对应默认路径的权限时，会提醒您手动输入安装路径。输入时请一次输入完成避免出现一些未知符号导致安装失败。\n\n\n# 仅安装 jdk\n\n默认路径：/usr/java/xxxx\n\n版本：1.8\n\n来源：https://mirrors.tuna.tsinghua.edu.cn/adoptium/\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 mvn\n\n默认路径：/usr/maven/xxxx\n\n版本：3.6.3\n\n来源：https://mirrors.aliyun.com\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server mvn+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 node\n\n默认路径：/usr/node/xxxx\n\n版本：16.13.1\n\n来源：https://npmmirror.com/mirrors/\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server node+only-module\n\n\n1\n2\n3\n\n\n\n# 指定 jpom 版本安装\n\n如果您想通过脚本安装并且指定版本\n\nyum install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server-2.10.x\n\n\n1\n2\n3\n\n\n请将：2.10.x 替换为您使用需要的版本号\n\n\n# 非 root 用户 (apt-get+wget)\n\n提醒\n\n此方式如果当前用户没有对应默认路径的权限时，会提醒您手动输入安装路径。输入时请一次输入完成避免出现一些未知符号导致安装失败。\n\n\n# 仅安装 jdk\n\n默认路径：/usr/java/xxxx\n\n版本：1.8\n\n来源：https://mirrors.tuna.tsinghua.edu.cn/adoptium/\n\nsudo apt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 mvn\n\n默认路径：/usr/maven/xxxx\n\n版本：3.6.3\n\n来源：https://mirrors.aliyun.com\n\nsudo apt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server mvn+only-module\n\n\n1\n2\n3\n\n\n\n# 仅安装 node\n\n默认路径：/usr/node/xxxx\n\n版本：16.13.1\n\n来源：https://npmmirror.com/mirrors/\n\nsudo apt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server node+only-module\n\n\n1\n2\n3\n\n\n\n# 指定 jpom 版本安装\n\n如果您想通过脚本安装并且指定版本\n\nsudo apt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server-2.10.x\n\n\n1\n2\n3\n\n\n请将：2.10.x 替换为您使用需要的版本号\n\n\n# 温馨提示\n\n如果您使用了一键安装依赖插件：jdk、node、maven。\n\n安装成功后您在终端里面使用相应的命令是不生效的奥。\n\n您需要手动 source 一下或者退出终端重新登录进入即可。",charsets:{cjk:!0},lastUpdated:"2024/08/29, 08:47:15",lastUpdatedTimestamp:1724921235e3},{title:"Nginx推荐配置",frontmatter:{title:"Nginx推荐配置",date:"2022-06-11T14:49:51.000Z",permalink:"/pages/FQA/nginx-conf",tags:["Nginx 配置"],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/30.%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8/099.nginx.html",relativePath:"文档/01.安装使用/30.开始使用/099.nginx.md",key:"v-7ee3e430",path:"/pages/FQA/nginx-conf/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"Http 相关配置",slug:"http-相关配置",normalizedTitle:"http 相关配置",charIndex:83},{level:2,title:"Https 推荐配置",slug:"https-推荐配置",normalizedTitle:"https 推荐配置",charIndex:1e3},{level:2,title:"二级路径",slug:"二级路径",normalizedTitle:"二级路径",charIndex:65}],headersStr:"前言 Http 相关配置 Https 推荐配置 二级路径",content:'# 前言\n\n配置 Jpom 反向代理需要注意如下几点：\n\n * 开启 websocket\n * 配置文件上传大小\n * 如果使用了二级路径，需要配置二级路径\n\n\n# Http 相关配置\n\nserver {\n    #charset koi8-r;\n    access_log  /var/log/nginx/jpom.log main;\n    listen       80;\n    server_name  jpom.xxxxxx.cn;\n    \n    location / {\n        proxy_pass   http://127.0.0.1:2122/;\n        proxy_set_header Host      $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # iframe 重定向\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port $server_port;\n        # 上传文件大小\n        client_max_body_size  50000m;\n        client_body_buffer_size 128k;\n        #  websocket 配置\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n        #  代理的二级路径配置 值填写nginx 中location的值  如 location /test-path/ {}\n        #  proxy_set_header Jpom-ProxyPath      /test-path/;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# Https 推荐配置\n\n注意 https 证书需要您自己生成\n\nserver {\n    listen 443;\n    server_name jpom.xxxxxx.cn;\n    access_log  /var/log/nginx/jpom.log main;\n    ssl on;\n    ssl_certificate   /etc/nginx/ssl/jpom-xxxxxx.pem;\n    ssl_certificate_key  /etc/nginx/ssl/jpom-xxxxxx.key;\n    ssl_session_timeout 5m;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_prefer_server_ciphers on;\n    \n    location / {\n        proxy_pass   http://127.0.0.1:2122/;\n        # 代理的二级路径配置 值填写nginx 中location的值  如 location /test-path/ {}\n        # proxy_set_header Jpom-ProxyPath      /test-path/;\n        proxy_set_header Host      $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # iframe 重定向\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port $server_port;\n        client_max_body_size  50000m;\n        client_body_buffer_size 128k;\n        #\twebsocket 配置\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n    }\n}\n\nserver {\n    #charset koi8-r;\n    listen       80;\n    server_name  jpom.xxxxxx.cn;\n    rewrite ^(.*)$  https://$host$1 permanent;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 二级路径\n\n如果您需要使用二级路径，那么需要配置二级路径。\n\nhttps://abc.xxxxxx.cn/jpom/\n\nserver {\n    listen 443;\n    server_name abc.xxxxxx.cn;\n    access_log  /var/log/nginx/jpom.log main;\n    ssl on;\n    ssl_certificate   /etc/nginx/ssl/jpom-xxxxxx.pem;\n    ssl_certificate_key  /etc/nginx/ssl/jpom-xxxxxx.key;\n    ssl_session_timeout 5m;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_prefer_server_ciphers on;\n    \n    location /jpom/ {\n        proxy_pass   http://127.0.0.1:2122/;\n        proxy_set_header Jpom-ProxyPath      /jpom/;\n        proxy_set_header Host      $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # iframe 重定向\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Port $server_port;\n        client_max_body_size  50000m;\n        client_body_buffer_size 128k;\n        #\twebsocket 配置\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n',normalizedContent:'# 前言\n\n配置 jpom 反向代理需要注意如下几点：\n\n * 开启 websocket\n * 配置文件上传大小\n * 如果使用了二级路径，需要配置二级路径\n\n\n# http 相关配置\n\nserver {\n    #charset koi8-r;\n    access_log  /var/log/nginx/jpom.log main;\n    listen       80;\n    server_name  jpom.xxxxxx.cn;\n    \n    location / {\n        proxy_pass   http://127.0.0.1:2122/;\n        proxy_set_header host      $host;\n        proxy_set_header x-real-ip $remote_addr;\n        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n        # iframe 重定向\n        proxy_set_header x-forwarded-proto $scheme;\n        proxy_set_header x-forwarded-port $server_port;\n        # 上传文件大小\n        client_max_body_size  50000m;\n        client_body_buffer_size 128k;\n        #  websocket 配置\n        proxy_set_header upgrade $http_upgrade;\n        proxy_set_header connection "upgrade";\n        #  代理的二级路径配置 值填写nginx 中location的值  如 location /test-path/ {}\n        #  proxy_set_header jpom-proxypath      /test-path/;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# https 推荐配置\n\n注意 https 证书需要您自己生成\n\nserver {\n    listen 443;\n    server_name jpom.xxxxxx.cn;\n    access_log  /var/log/nginx/jpom.log main;\n    ssl on;\n    ssl_certificate   /etc/nginx/ssl/jpom-xxxxxx.pem;\n    ssl_certificate_key  /etc/nginx/ssl/jpom-xxxxxx.key;\n    ssl_session_timeout 5m;\n    ssl_ciphers ecdhe-rsa-aes128-gcm-sha256:ecdhe:ecdh:aes:high:!null:!anull:!md5:!adh:!rc4;\n    ssl_protocols tlsv1 tlsv1.1 tlsv1.2;\n    ssl_prefer_server_ciphers on;\n    \n    location / {\n        proxy_pass   http://127.0.0.1:2122/;\n        # 代理的二级路径配置 值填写nginx 中location的值  如 location /test-path/ {}\n        # proxy_set_header jpom-proxypath      /test-path/;\n        proxy_set_header host      $host;\n        proxy_set_header x-real-ip $remote_addr;\n        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n        # iframe 重定向\n        proxy_set_header x-forwarded-proto $scheme;\n        proxy_set_header x-forwarded-port $server_port;\n        client_max_body_size  50000m;\n        client_body_buffer_size 128k;\n        #\twebsocket 配置\n        proxy_set_header upgrade $http_upgrade;\n        proxy_set_header connection "upgrade";\n    }\n}\n\nserver {\n    #charset koi8-r;\n    listen       80;\n    server_name  jpom.xxxxxx.cn;\n    rewrite ^(.*)$  https://$host$1 permanent;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# 二级路径\n\n如果您需要使用二级路径，那么需要配置二级路径。\n\nhttps://abc.xxxxxx.cn/jpom/\n\nserver {\n    listen 443;\n    server_name abc.xxxxxx.cn;\n    access_log  /var/log/nginx/jpom.log main;\n    ssl on;\n    ssl_certificate   /etc/nginx/ssl/jpom-xxxxxx.pem;\n    ssl_certificate_key  /etc/nginx/ssl/jpom-xxxxxx.key;\n    ssl_session_timeout 5m;\n    ssl_ciphers ecdhe-rsa-aes128-gcm-sha256:ecdhe:ecdh:aes:high:!null:!anull:!md5:!adh:!rc4;\n    ssl_protocols tlsv1 tlsv1.1 tlsv1.2;\n    ssl_prefer_server_ciphers on;\n    \n    location /jpom/ {\n        proxy_pass   http://127.0.0.1:2122/;\n        proxy_set_header jpom-proxypath      /jpom/;\n        proxy_set_header host      $host;\n        proxy_set_header x-real-ip $remote_addr;\n        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;\n        # iframe 重定向\n        proxy_set_header x-forwarded-proto $scheme;\n        proxy_set_header x-forwarded-port $server_port;\n        client_max_body_size  50000m;\n        client_body_buffer_size 128k;\n        #\twebsocket 配置\n        proxy_set_header upgrade $http_upgrade;\n        proxy_set_header connection "upgrade";\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n',charsets:{cjk:!0},lastUpdated:"2023/12/23, 17:01:57",lastUpdatedTimestamp:1703350917e3},{title:"Windows安装",frontmatter:{title:"Windows安装",date:"2024-07-05T14:43:57.000Z",permalink:"/pages/a13d8d/",categories:["docs","文档","安装使用"],tags:[null],author:{name:"程鯤鵬",link:"https://github.com/conancheng"},readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/35.Windows%E5%AE%89%E8%A3%85.html",relativePath:"文档/01.安装使用/35.Windows安装.md",key:"v-12e1cef3",path:"/pages/a13d8d/",headers:[{level:2,title:"win主机首次连接说明",slug:"win主机首次连接说明",normalizedTitle:"win主机首次连接说明",charIndex:2},{level:2,title:"1、打开win主机的ssh服务和防火墙",slug:"_1、打开win主机的ssh服务和防火墙",normalizedTitle:"1、打开win主机的ssh服务和防火墙",charIndex:109},{level:3,title:"修改镜像地址",slug:"修改镜像地址",normalizedTitle:"修改镜像地址",charIndex:133},{level:3,title:"开启 OpenSSH.Server",slug:"开启-openssh-server",normalizedTitle:"开启 openssh.server",charIndex:356},{level:2,title:"2、Jpom后台添加服务器ssh",slug:"_2、jpom后台添加服务器ssh",normalizedTitle:"2、jpom后台添加服务器ssh",charIndex:1573},{level:2,title:"3、编写winsetupandrunagent.bat",slug:"_3、编写win-setup-and-run-agent-bat",normalizedTitle:"3、编写winsetupandrunagent.bat",charIndex:null},{level:2,title:"4、手动执行bat脚本让agent上线",slug:"_4、手动执行bat脚本让agent上线",normalizedTitle:"4、手动执行bat脚本让agent上线",charIndex:3471}],headersStr:"win主机首次连接说明 1、打开win主机的ssh服务和防火墙 修改镜像地址 开启 OpenSSH.Server 2、Jpom后台添加服务器ssh 3、编写winsetupandrunagent.bat 4、手动执行bat脚本让agent上线",content:'# win主机首次连接说明\n\n大部分winserver系统默认不开启ssh服务的，建议大家通过powershell脚本来直接开启并放通本机防火墙，然后通过bat脚本安装agent后使用Jpom，具体操作如下：\n\n\n# 1、打开win主机的ssh服务和防火墙\n\n\n# 修改镜像地址\n\n用远程桌面用户登录win-server主机，用管理员命令打开powershell，输入如下指令：\n\n设置环境变量为清华的，确保openssh的下载速度：\n\n[System.Environment]::SetEnvironmentVariable("chocolateySources", "https://mirrors.tuna.tsinghua.edu.cn/chocolatey/", "User") ;\n\n\n1\n\n\n\n# 开启 OpenSSH.Server\n\n在 Windows 系统中在线添加 OpenSSH.Server 的功能并启用\n\nAdd-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0;Start-Service sshd;\n\n\n1\n\n\n添加防火墙端口22并启用，会自动检查是否存在同名防火墙\n\nif (!(Get-NetFirewallRule -Name "OpenSSH-Server-In-TCP" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) { New-NetFirewallRule -Name \'OpenSSH-Server-In-TCP\' -DisplayName \'OpenSSH Server (sshd)\' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 } else { Write-Output "Firewall rule \'OpenSSH-Server-In-TCP\' has been created and exists." }\n\n\n1\n\n\n上述命令可以合并一次性执行完毕，如下：\n\n[System.Environment]::SetEnvironmentVariable("chocolateySources", "https://mirrors.tuna.tsinghua.edu.cn/chocolatey/", "User") ; Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 ; Start-Service sshd ; if (!(Get-NetFirewallRule -Name "OpenSSH-Server-In-TCP" -ErrorAction SilentlyContinue | Select-Object Name, Enabled)) { New-NetFirewallRule -Name \'OpenSSH-Server-In-TCP\' -DisplayName \'OpenSSH Server (sshd)\' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 } else { Write-Output "Firewall rule \'OpenSSH-Server-In-TCP\' has been created and exists." }\n\n\n1\n\n\n至此，你就可以不用再通过远程桌面登录服务器了，后面皆可在Jpom页面进行操作了\n\n\n# 2、Jpom后台添加服务器ssh\n\n进入Jpom后台，打开系统管理-资产管理-ssh管理，新增ssh输入host地址，端口默认22，用户名和密码就是远程登录winserver的账号密码，然后就可以在Jpom后台通过终端ssh登录服务器了\n\n\n# 3、编写win_setup_and_run_agent.bat\n\n直接复制如下内容到bat文件中，然后替换bat中的IP，token和workspaceId：\n\n@echo off\nsetlocal\n\n:: 获取系统配置的 JAVA_HOME 变量\nfor /f "tokens=2 delims==" %%A in (\'set JAVA_HOME\') do set JAVA_HOME=%%A\n\n:: 检查 JAVA_HOME 是否已设置\nif "%JAVA_HOME%"=="" (\necho JAVA_HOME is not set. Please set JAVA_HOME before running this script.\nexit /b 1\n)\n\n:: 检查并更新 PATH 变量\nset "newPath=%JAVA_HOME%\\bin"\necho %PATH% | find /i "%newPath%" >nul\nif %errorlevel%==1 (\necho Updating PATH variable...\nsetx PATH "%PATH%;%newPath%"\necho PATH variable updated.\n) else (\necho PATH variable already contains %newPath%.\n)\n\n:: 验证 PATH\necho JAVA_HOME is set to %JAVA_HOME%\necho PATH is %PATH%\n\n:: 重新加载环境变量\nset PATH=%PATH%\n\n:: 立即生效\necho Environment variables reloaded.\n\n:: 检查端口2123是否已经打开\nnetsh advfirewall firewall show rule name="Open Port 2123" >nul 2>&1\nif %errorlevel% neq 0 (\necho Opening firewall port 2123...\nnetsh advfirewall firewall add rule name="Open Port 2123" dir=in action=allow protocol=TCP localport=2123\necho Firewall port 2123 opened.\n) else (\necho Firewall port 2123 is already opened.\n)\n\n:: 创建目录并下载文件\ncd /d C:\ncd\\\nmkdir Jpom_agent\n:: 默认为官方2.11.8下载地址，你也可以将agent下载到你内网服务器上\ncurl -L -o agent-2.11.8-release.zip "https://d.jpom.download/release/2.11.8/agent-2.11.8-release.zip"\npowershell -command "Expand-Archive -Path \'C:\\agent-2.11.8-release.zip\' -DestinationPath \'C:\\Jpom_agent\' -Force"\n\n:: 进入目录并执行 Agent.bat\ncd C:\\Jpom_agent\\bin\n:: IP替换成自己服务器的IP，token和workspaceId去节点&项目-逻辑节点-快速安装里面复制替换即可\nAgent.bat restart jdk+default --auto-push-to-server "http://IP:2122/api/node/receive_push?token=XXX&workspaceId=XXX"\n\nendlocal\npause\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n\n# 4、手动执行bat脚本让agent上线\n\nbat文件在本地编写好后，通过Jpom里面资产管理-ssh管理自带的文件功能，上传bat至服务器的C盘根目录，然后通过Jpom的终端运行bat文件，例如：\n\nMicrosoft Windows [版本 10.0.17763.2183]\n(c) 2018 Microsoft Corporation。保留所有权利。\n\nadministrator@win-server C:\\>win_setup_and_run_agent.bat \n\n\n1\n2\n3\n4\n',normalizedContent:'# win主机首次连接说明\n\n大部分winserver系统默认不开启ssh服务的，建议大家通过powershell脚本来直接开启并放通本机防火墙，然后通过bat脚本安装agent后使用jpom，具体操作如下：\n\n\n# 1、打开win主机的ssh服务和防火墙\n\n\n# 修改镜像地址\n\n用远程桌面用户登录win-server主机，用管理员命令打开powershell，输入如下指令：\n\n设置环境变量为清华的，确保openssh的下载速度：\n\n[system.environment]::setenvironmentvariable("chocolateysources", "https://mirrors.tuna.tsinghua.edu.cn/chocolatey/", "user") ;\n\n\n1\n\n\n\n# 开启 openssh.server\n\n在 windows 系统中在线添加 openssh.server 的功能并启用\n\nadd-windowscapability -online -name openssh.server~~~~0.0.1.0;start-service sshd;\n\n\n1\n\n\n添加防火墙端口22并启用，会自动检查是否存在同名防火墙\n\nif (!(get-netfirewallrule -name "openssh-server-in-tcp" -erroraction silentlycontinue | select-object name, enabled)) { new-netfirewallrule -name \'openssh-server-in-tcp\' -displayname \'openssh server (sshd)\' -enabled true -direction inbound -protocol tcp -action allow -localport 22 } else { write-output "firewall rule \'openssh-server-in-tcp\' has been created and exists." }\n\n\n1\n\n\n上述命令可以合并一次性执行完毕，如下：\n\n[system.environment]::setenvironmentvariable("chocolateysources", "https://mirrors.tuna.tsinghua.edu.cn/chocolatey/", "user") ; add-windowscapability -online -name openssh.server~~~~0.0.1.0 ; start-service sshd ; if (!(get-netfirewallrule -name "openssh-server-in-tcp" -erroraction silentlycontinue | select-object name, enabled)) { new-netfirewallrule -name \'openssh-server-in-tcp\' -displayname \'openssh server (sshd)\' -enabled true -direction inbound -protocol tcp -action allow -localport 22 } else { write-output "firewall rule \'openssh-server-in-tcp\' has been created and exists." }\n\n\n1\n\n\n至此，你就可以不用再通过远程桌面登录服务器了，后面皆可在jpom页面进行操作了\n\n\n# 2、jpom后台添加服务器ssh\n\n进入jpom后台，打开系统管理-资产管理-ssh管理，新增ssh输入host地址，端口默认22，用户名和密码就是远程登录winserver的账号密码，然后就可以在jpom后台通过终端ssh登录服务器了\n\n\n# 3、编写win_setup_and_run_agent.bat\n\n直接复制如下内容到bat文件中，然后替换bat中的ip，token和workspaceid：\n\n@echo off\nsetlocal\n\n:: 获取系统配置的 java_home 变量\nfor /f "tokens=2 delims==" %%a in (\'set java_home\') do set java_home=%%a\n\n:: 检查 java_home 是否已设置\nif "%java_home%"=="" (\necho java_home is not set. please set java_home before running this script.\nexit /b 1\n)\n\n:: 检查并更新 path 变量\nset "newpath=%java_home%\\bin"\necho %path% | find /i "%newpath%" >nul\nif %errorlevel%==1 (\necho updating path variable...\nsetx path "%path%;%newpath%"\necho path variable updated.\n) else (\necho path variable already contains %newpath%.\n)\n\n:: 验证 path\necho java_home is set to %java_home%\necho path is %path%\n\n:: 重新加载环境变量\nset path=%path%\n\n:: 立即生效\necho environment variables reloaded.\n\n:: 检查端口2123是否已经打开\nnetsh advfirewall firewall show rule name="open port 2123" >nul 2>&1\nif %errorlevel% neq 0 (\necho opening firewall port 2123...\nnetsh advfirewall firewall add rule name="open port 2123" dir=in action=allow protocol=tcp localport=2123\necho firewall port 2123 opened.\n) else (\necho firewall port 2123 is already opened.\n)\n\n:: 创建目录并下载文件\ncd /d c:\ncd\\\nmkdir jpom_agent\n:: 默认为官方2.11.8下载地址，你也可以将agent下载到你内网服务器上\ncurl -l -o agent-2.11.8-release.zip "https://d.jpom.download/release/2.11.8/agent-2.11.8-release.zip"\npowershell -command "expand-archive -path \'c:\\agent-2.11.8-release.zip\' -destinationpath \'c:\\jpom_agent\' -force"\n\n:: 进入目录并执行 agent.bat\ncd c:\\jpom_agent\\bin\n:: ip替换成自己服务器的ip，token和workspaceid去节点&项目-逻辑节点-快速安装里面复制替换即可\nagent.bat restart jdk+default --auto-push-to-server "http://ip:2122/api/node/receive_push?token=xxx&workspaceid=xxx"\n\nendlocal\npause\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n\n# 4、手动执行bat脚本让agent上线\n\nbat文件在本地编写好后，通过jpom里面资产管理-ssh管理自带的文件功能，上传bat至服务器的c盘根目录，然后通过jpom的终端运行bat文件，例如：\n\nmicrosoft windows [版本 10.0.17763.2183]\n(c) 2018 microsoft corporation。保留所有权利。\n\nadministrator@win-server c:\\>win_setup_and_run_agent.bat \n\n\n1\n2\n3\n4\n',charsets:{cjk:!0},lastUpdated:"2024/07/05, 07:27:23",lastUpdatedTimestamp:1720164443e3},{title:"宝塔面板部署",frontmatter:{title:"宝塔面板部署",date:"2024-11-05T09:40:41.000Z",permalink:"/pages/40765e/",categories:["docs","文档","安装使用"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/9999.%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85.html",relativePath:"文档/01.安装使用/9999.宝塔安装.md",key:"v-24b77e56",path:"/pages/40765e/",headers:[{level:2,title:"宝塔简介",slug:"宝塔简介",normalizedTitle:"宝塔简介",charIndex:2},{level:2,title:"前提",slug:"前提",normalizedTitle:"前提",charIndex:45},{level:2,title:"宝塔面板一键部署 Jpom",slug:"宝塔面板一键部署-jpom",normalizedTitle:"宝塔面板一键部署 jpom",charIndex:95},{level:2,title:"访问 Jpom",slug:"访问-jpom",normalizedTitle:"访问 jpom",charIndex:467}],headersStr:"宝塔简介 前提 宝塔面板一键部署 Jpom 访问 Jpom",content:"# 宝塔简介\n\n宝塔服务器面板，一键全能部署及管理 安全高效的服务器运维面板\n\n\n\n\n# 前提\n\n安装宝塔面板，前往宝塔面板官网，选择对应的脚本下载安装。\n\n宝塔版本 9.2.0+\n\n\n# 宝塔面板一键部署 Jpom\n\n 1. 登录宝塔面板，在菜单栏中点击 Docker，根据提示安装 Docker 和 Docker Compose 服务。\n\n\n\n在宝塔面板安装 Docker 服务，若已有则跳过。\n\n 2. 在Docker-应用商店查询到 Jpom，点击安装\n\n\n\n 3. 设置域名等基本信息，点击确定\n\n\n\n名称：应用名称，默认Jpom-随机字符\n\n版本选择：建议选择最新版本\n\n域名：如需通过域名直接访问，请在此配置域名并将域名解析到服务器\n\n允许外部访问：如您需通过IP+Port直接访问，请勾选，如您已经设置了域名，请不要勾选此处\n\n端口：默认 2122，可自行修改\n\n提交后面板会自动进行应用初始化，大概需要1-5分钟，初始化完成后即可访问。\n\n 4. 安装过程中无法拉取镜像解决方案\n\n配置docker加速\n\n\n\n\n# 访问 Jpom\n\n如您设置了域名，请直接在浏览器地址栏中输入域名访问，如http://demo.jpom.top:2122 ，即可访问 Jpom 控制台。\n\n如您选择了通过IP+Port访问，请在浏览器地址栏中输入域名访问 http://<宝塔面板IP>:2122，即可访问 Jpom 控制台。\n\n",normalizedContent:"# 宝塔简介\n\n宝塔服务器面板，一键全能部署及管理 安全高效的服务器运维面板\n\n\n\n\n# 前提\n\n安装宝塔面板，前往宝塔面板官网，选择对应的脚本下载安装。\n\n宝塔版本 9.2.0+\n\n\n# 宝塔面板一键部署 jpom\n\n 1. 登录宝塔面板，在菜单栏中点击 docker，根据提示安装 docker 和 docker compose 服务。\n\n\n\n在宝塔面板安装 docker 服务，若已有则跳过。\n\n 2. 在docker-应用商店查询到 jpom，点击安装\n\n\n\n 3. 设置域名等基本信息，点击确定\n\n\n\n名称：应用名称，默认jpom-随机字符\n\n版本选择：建议选择最新版本\n\n域名：如需通过域名直接访问，请在此配置域名并将域名解析到服务器\n\n允许外部访问：如您需通过ip+port直接访问，请勾选，如您已经设置了域名，请不要勾选此处\n\n端口：默认 2122，可自行修改\n\n提交后面板会自动进行应用初始化，大概需要1-5分钟，初始化完成后即可访问。\n\n 4. 安装过程中无法拉取镜像解决方案\n\n配置docker加速\n\n\n\n\n# 访问 jpom\n\n如您设置了域名，请直接在浏览器地址栏中输入域名访问，如http://demo.jpom.top:2122 ，即可访问 jpom 控制台。\n\n如您选择了通过ip+port访问，请在浏览器地址栏中输入域名访问 http://<宝塔面板ip>:2122，即可访问 jpom 控制台。\n\n",charsets:{cjk:!0},lastUpdated:"2024/11/05, 02:31:00",lastUpdatedTimestamp:173077386e4},{title:"备份数据",frontmatter:{title:"备份数据",date:"2023-12-23T16:25:59.000Z",permalink:"/pages/2026d1/",categories:["docs","文档","如何升级&迁移"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/010.%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE.html",relativePath:"文档/012.备份&升级/010.备份数据.md",key:"v-d46babc2",path:"/pages/2026d1/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"目录结构",slug:"目录结构",normalizedTitle:"目录结构",charIndex:36},{level:3,title:"服务端",slug:"服务端",normalizedTitle:"服务端",charIndex:163},{level:3,title:"插件端",slug:"插件端",normalizedTitle:"插件端",charIndex:3686},{level:2,title:"容器备份",slug:"容器备份",normalizedTitle:"容器备份",charIndex:5368},{level:3,title:"挂载方式",slug:"挂载方式",normalizedTitle:"挂载方式",charIndex:5420},{level:3,title:"卷方式",slug:"卷方式",normalizedTitle:"卷方式",charIndex:5406}],headersStr:"前言 目录结构 服务端 插件端 容器备份 挂载方式 卷方式",content:"# 前言\n\n定期备份数据是一个良好的习惯，数据安全是防患于未然\n\n\n# 目录结构\n\n在您需要备份前需要了解到 Jpom 中目录结构能帮助您高效备份\n\n这里列举的目录结构是当您已经正常使用 Jpom 并且没有修改数据目录的情况下，如果您手动修改过数据目录您可以直接备份对应目录，但是您仍然需要了解整个系统的完整目录结构\n\n\n# 服务端\n\n.\n├── lib                                               程序安装包（jar）文件\n├───── server-x.x.x.jar\n├───── oldJars                                        升级成功后会将之前版本的安装包备份至此目录\n├───── run.bin                                        当 lib 下有多个安装包时，告知脚本应该使用哪个安装包\n├─── bin                                              管理脚本\n├───── Server.bat\n├───── Server.sh\n├───── BlockListener.sh\n├── conf                                              配置文件目录\n├───── application.yml\n├───── logback.xml\n├── logs                                              程序运行日志目录\n├───── server.log\n├───── stdout.log\n├── LICENSE\n├── tmp                                               程序临时目录（java.io.tmpdir）\n├── data\n├────── build =>                                      构建相关文件夹\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     单个构建存储相关文件夹\n├──────────────── history =>                          需要执行的脚本\n├───────────────────── #1 =>                          单次执行记录相关文件夹\n├─────────────────────── info.log =>                  构建日志\n├─────────────────────── result =>                    构建产物存储文件夹\n├──────────────── source =>                           构建的仓库文件夹\n├────── script =>                                     服务端脚本文件夹\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     脚本对应相关文件夹\n├──────────────── script.sh =>                        需要执行的脚本\n├──────────────── log =>                              执行日志\n├──────────── xxxx =>                                 其他脚本信息\n├────── command_log => ssh                            脚本执行记录\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     单个脚本相关文件夹\n├──────────────── 004d320e00794d63831d63e3a5ed4344 => 脚本批量执行日志\n├──────────── ....... =>                              更多脚本文件\n├────── agent =>                                      服务端保留插件的 jar 包文件夹\n├────── INSTALL.json =>                               安装文件【非常重要，安装ID为集群ID】\n├────── docker =>                                     docker 相关文件\n├──────────── tls-cert =>                             docker tls 证书文件保存路径\n├────── file-storage =>                               文件中心存储路径\n├────── certificate =>                                证书中心存储路径\n├────── temp =>                                       临时文件，上传文件缓存目录，运行中产生\n├── db =>                                             服务端数据存储文件夹\n├────── backup =>                                     备份数据文件夹\n├──────────── 20220609120000.sql =>                   sql 文件\n├──────────── .......sql =>                           更多 sql 文件\n├────── recover_backup =>                             执行修复数据后的原数据库备份文件夹\n├──────────── 2022-06-10 09/16/38 =>                  单次备份文件夹\n├──────────────── Server.mv.db =>                     数据库文件\n├──────────────── Server.trace.db =>                  数据库文件\n├──────────── ...... =>                               单次备份文件夹\n├────── execute.init.sql.log  =>                      记录已经初始化过 sql hash,避免重复初始化数据库\n├────── Server.mv.db =>                               数据库文件\n└────── Server.trace.db =>                            数据库文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n\n\n重要目录列举\n\n * db/Server.mv.db\n * db/Server.trace.db\n * db/backup\n * data/INSTALL.json\n * data/file-storage\n * data/certificate\n\n说明：这里列举重要指非常重要如果丢失或者损坏系统无法正常运行或者您的数据丢失\n\n未列举的举例说明\n\n * data/build\n * data/command_log\n * data/script\n\n这些均未运行和使用过程中产生的文件，次部分丢失不会造成系统无法使用。但是如果构建日志记录、脚本日志记录等日志相关丢失\n\n最后说明\n\n当您选择备份时我们建议您备份 Jpom 整个目录才能保证系统数据完整性，如果条件有限或者精简备份可以先备份上述重要目录\n\n----------------------------------------\n\n声明：文档中可能并未完整列出所有目录使用说明，因为功能可能随着迭代时候变动\n\n\n# 插件端\n\n.\n├── lib                                               程序安装包（jar）文件\n├───── server-x.x.x.jar\n├───── oldJars                                        升级成功后会将之前版本的安装包备份至此目录\n├───── run.bin                                        当 lib 下有多个安装包时，告知脚本应该使用哪个安装包\n├─── bin                                              管理脚本\n├───── Server.bat\n├───── Server.sh\n├───── BlockListener.sh\n├── conf                                              配置文件目录\n├───── application.yml\n├───── logback.xml\n├── logs                                              程序运行日志目录\n├───── server.log\n├───── stdout.log\n├── LICENSE\n├── tmp                                               程序临时目录（java.io.tmpdir）\n├── data\n├────── script.json =>                                存储机器脚本相关数据\n├────── project.json =>                               存储机器项目相关数据\n├────── INSTALL.json =>                               安装记录【非常重要】\n├────── script =>                                     机器端脚本文件夹\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     脚本对应相关文件夹\n├──────────────── script.sh =>                        需要执行的脚本\n├──────────────── log =>                              执行日志\n├──────────── xxxx =>                                 其他脚本信息\n├────── script_log.json =>                            临时记录脚本执行记录（服务端管控请勿手动修改）\n├────── whitelistDirectory.json =>                    授权（白名单）目录配置\n├────── workspace_env_var.json =>                     环境变量配置\n├────── nginx_conf.json =>                            nginx配置\n├────── temp =>                                       临时文件，上传文件缓存目录，运行中产生\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n说明\n\n由于插件端数据较少，我们期望您在备份时候尽量全备份\n\n如果需要选择备份或者轻量备份，您可以选择不备份脚本文件夹 和 temp文件夹\n\n\n# 容器备份\n\n如果您的服务端是使用容器安装的，您需要判断您是否使用容器挂载或者卷方式来创建容器。\n\n\n# 挂载方式\n\n根据我们提供的文档我们推荐您挂载了\n\n * /usr/local/jpom-server/logs\n * /usr/local/jpom-server/data\n * /usr/local/jpom-server/conf\n\n备份时我们建议您备份：/usr/local/jpom-server/data、/usr/local/jpom-server/conf 两个目录挂载的宿主机目录\n\n\n# 卷方式\n\n请参考 docker 官方对卷进行备份的操作\n\ndocker volume inspect xxxxx",normalizedContent:"# 前言\n\n定期备份数据是一个良好的习惯，数据安全是防患于未然\n\n\n# 目录结构\n\n在您需要备份前需要了解到 jpom 中目录结构能帮助您高效备份\n\n这里列举的目录结构是当您已经正常使用 jpom 并且没有修改数据目录的情况下，如果您手动修改过数据目录您可以直接备份对应目录，但是您仍然需要了解整个系统的完整目录结构\n\n\n# 服务端\n\n.\n├── lib                                               程序安装包（jar）文件\n├───── server-x.x.x.jar\n├───── oldjars                                        升级成功后会将之前版本的安装包备份至此目录\n├───── run.bin                                        当 lib 下有多个安装包时，告知脚本应该使用哪个安装包\n├─── bin                                              管理脚本\n├───── server.bat\n├───── server.sh\n├───── blocklistener.sh\n├── conf                                              配置文件目录\n├───── application.yml\n├───── logback.xml\n├── logs                                              程序运行日志目录\n├───── server.log\n├───── stdout.log\n├── license\n├── tmp                                               程序临时目录（java.io.tmpdir）\n├── data\n├────── build =>                                      构建相关文件夹\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     单个构建存储相关文件夹\n├──────────────── history =>                          需要执行的脚本\n├───────────────────── #1 =>                          单次执行记录相关文件夹\n├─────────────────────── info.log =>                  构建日志\n├─────────────────────── result =>                    构建产物存储文件夹\n├──────────────── source =>                           构建的仓库文件夹\n├────── script =>                                     服务端脚本文件夹\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     脚本对应相关文件夹\n├──────────────── script.sh =>                        需要执行的脚本\n├──────────────── log =>                              执行日志\n├──────────── xxxx =>                                 其他脚本信息\n├────── command_log => ssh                            脚本执行记录\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     单个脚本相关文件夹\n├──────────────── 004d320e00794d63831d63e3a5ed4344 => 脚本批量执行日志\n├──────────── ....... =>                              更多脚本文件\n├────── agent =>                                      服务端保留插件的 jar 包文件夹\n├────── install.json =>                               安装文件【非常重要，安装id为集群id】\n├────── docker =>                                     docker 相关文件\n├──────────── tls-cert =>                             docker tls 证书文件保存路径\n├────── file-storage =>                               文件中心存储路径\n├────── certificate =>                                证书中心存储路径\n├────── temp =>                                       临时文件，上传文件缓存目录，运行中产生\n├── db =>                                             服务端数据存储文件夹\n├────── backup =>                                     备份数据文件夹\n├──────────── 20220609120000.sql =>                   sql 文件\n├──────────── .......sql =>                           更多 sql 文件\n├────── recover_backup =>                             执行修复数据后的原数据库备份文件夹\n├──────────── 2022-06-10 09/16/38 =>                  单次备份文件夹\n├──────────────── server.mv.db =>                     数据库文件\n├──────────────── server.trace.db =>                  数据库文件\n├──────────── ...... =>                               单次备份文件夹\n├────── execute.init.sql.log  =>                      记录已经初始化过 sql hash,避免重复初始化数据库\n├────── server.mv.db =>                               数据库文件\n└────── server.trace.db =>                            数据库文件\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n\n\n重要目录列举\n\n * db/server.mv.db\n * db/server.trace.db\n * db/backup\n * data/install.json\n * data/file-storage\n * data/certificate\n\n说明：这里列举重要指非常重要如果丢失或者损坏系统无法正常运行或者您的数据丢失\n\n未列举的举例说明\n\n * data/build\n * data/command_log\n * data/script\n\n这些均未运行和使用过程中产生的文件，次部分丢失不会造成系统无法使用。但是如果构建日志记录、脚本日志记录等日志相关丢失\n\n最后说明\n\n当您选择备份时我们建议您备份 jpom 整个目录才能保证系统数据完整性，如果条件有限或者精简备份可以先备份上述重要目录\n\n----------------------------------------\n\n声明：文档中可能并未完整列出所有目录使用说明，因为功能可能随着迭代时候变动\n\n\n# 插件端\n\n.\n├── lib                                               程序安装包（jar）文件\n├───── server-x.x.x.jar\n├───── oldjars                                        升级成功后会将之前版本的安装包备份至此目录\n├───── run.bin                                        当 lib 下有多个安装包时，告知脚本应该使用哪个安装包\n├─── bin                                              管理脚本\n├───── server.bat\n├───── server.sh\n├───── blocklistener.sh\n├── conf                                              配置文件目录\n├───── application.yml\n├───── logback.xml\n├── logs                                              程序运行日志目录\n├───── server.log\n├───── stdout.log\n├── license\n├── tmp                                               程序临时目录（java.io.tmpdir）\n├── data\n├────── script.json =>                                存储机器脚本相关数据\n├────── project.json =>                               存储机器项目相关数据\n├────── install.json =>                               安装记录【非常重要】\n├────── script =>                                     机器端脚本文件夹\n├──────────── a7edf3cff8d542d3bf5758f9ab9b9a32 =>     脚本对应相关文件夹\n├──────────────── script.sh =>                        需要执行的脚本\n├──────────────── log =>                              执行日志\n├──────────── xxxx =>                                 其他脚本信息\n├────── script_log.json =>                            临时记录脚本执行记录（服务端管控请勿手动修改）\n├────── whitelistdirectory.json =>                    授权（白名单）目录配置\n├────── workspace_env_var.json =>                     环境变量配置\n├────── nginx_conf.json =>                            nginx配置\n├────── temp =>                                       临时文件，上传文件缓存目录，运行中产生\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n说明\n\n由于插件端数据较少，我们期望您在备份时候尽量全备份\n\n如果需要选择备份或者轻量备份，您可以选择不备份脚本文件夹 和 temp文件夹\n\n\n# 容器备份\n\n如果您的服务端是使用容器安装的，您需要判断您是否使用容器挂载或者卷方式来创建容器。\n\n\n# 挂载方式\n\n根据我们提供的文档我们推荐您挂载了\n\n * /usr/local/jpom-server/logs\n * /usr/local/jpom-server/data\n * /usr/local/jpom-server/conf\n\n备份时我们建议您备份：/usr/local/jpom-server/data、/usr/local/jpom-server/conf 两个目录挂载的宿主机目录\n\n\n# 卷方式\n\n请参考 docker 官方对卷进行备份的操作\n\ndocker volume inspect xxxxx",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"H2 迁移到 MYSQL",frontmatter:{title:"H2 迁移到 MYSQL",date:"2023-01-10T14:21:11.000Z",permalink:"/pages/db/4cfb46/",categories:["docs","文档","如何升级"],author:{name:"loyal",link:"https://gitee.com/Mr_loyal"},tags:["mysql"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/020.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/0990.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E5%88%B0%20mysql.html",relativePath:"文档/012.备份&升级/020.数据库管理/0990.数据库迁移到 mysql.md",key:"v-2f93f016",path:"/pages/db/4cfb46/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"系统升级",slug:"系统升级",normalizedTitle:"系统升级",charIndex:114},{level:3,title:"如何创建 h2 数据备份",slug:"如何创建-h2-数据备份",normalizedTitle:"如何创建 h2 数据备份",charIndex:226},{level:4,title:"页面操作创建",slug:"页面操作创建",normalizedTitle:"页面操作创建",charIndex:242},{level:4,title:"命令行创建",slug:"命令行创建",normalizedTitle:"命令行创建",charIndex:258},{level:2,title:"修改配置",slug:"修改配置",normalizedTitle:"修改配置",charIndex:319},{level:2,title:"执行命令",slug:"执行命令",normalizedTitle:"执行命令",charIndex:1211},{level:2,title:"查看结果",slug:"查看结果",normalizedTitle:"查看结果",charIndex:1462},{level:2,title:"如果失败了，不要慌！！！",slug:"如果失败了-不要慌",normalizedTitle:"如果失败了，不要慌！！！",charIndex:11810},{level:3,title:"you might want to use the less safe logbintrustfunctioncreators variable",slug:"you-might-want-to-use-the-less-safe-log-bin-trust-function-creators-variable",normalizedTitle:"you might want to use the less safe logbintrustfunctioncreators variable",charIndex:null},{level:3,title:"Encountered illegal format of dynamic column string",slug:"encountered-illegal-format-of-dynamic-column-string",normalizedTitle:"encountered illegal format of dynamic column string",charIndex:21699},{level:2,title:"数据备份",slug:"数据备份",normalizedTitle:"数据备份",charIndex:234}],headersStr:"前言 系统升级 如何创建 h2 数据备份 页面操作创建 命令行创建 修改配置 执行命令 查看结果 如果失败了，不要慌！！！ you might want to use the less safe logbintrustfunctioncreators variable Encountered illegal format of dynamic column string 数据备份",content:'# 前言\n\nJpom 服务端的数据默认存储到 H2 database 中\n\n部分用户有需求期望数据存储到 mysql 中\n\n提醒\n\n使用 mysql 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.10.11\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/Server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 MYSQL\n * 修改 jpom.db.url 为您 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1: 3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false)\n * 修改 jpom.db.user-name 为对应 mysql 账户 -修改 jpom.db.user-pwd 为对应 mysql 密码\n\n  db: \n    mode: MYSQL\n    url:  jdbc:mysql://xx.xx.xx.xx:3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: root\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: 123456\n    # h2 数据库缓存大小  kilobyte 1KB 1,024 megabyte 1MB 1,048,576\n    cache-size: 50MB\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/Server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2023-01-10 10:53:50.947 [main] INFO  i.j.s.d.InitDb [InitDb.java:310] - 开始等待数据迁移\n2023-01-10 10:53:50.950 [main] INFO  i.j.s.d.InitDb [InitDb.java:109] - start load MYSQL db\n2023-01-10 10:53:51.543 [main] INFO  i.j.s.d.InitDb [InitDb.java:239] - exec init SQL file: table.all.v1.0.csv complete, and affected rows is: 0\n2023-01-10 10:53:51.605 [main] INFO  i.j.s.d.InitDb [InitDb.java:239] - exec init SQL file: execute.mysql.v1.0.sql complete, and affected rows is: 0\n2023-01-10 10:53:51.625 [main] INFO  i.j.s.d.InitDb [InitDb.java:239] - exec init SQL file: alter.all.v1.0.csv complete, and affected rows is: 0\n2023-01-10 10:53:51.703 [main] INFO  i.j.s.d.InitDb [InitDb.java:239] - exec init SQL file: index.all.v1.0.csv complete, and affected rows is: 0\n2023-01-10 10:53:51.706 [main] INFO  i.j.s.d.InitDb [InitDb.java:155] - 开始执行数据库事件：迁移数据\n2023-01-10 10:53:51.706 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:85] - 开始迁移 h2 数据到 MYSQL\n2023-01-10 10:53:52.097 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:95] - 成功连接 H2 ,开始尝试自动备份\n2023-01-10 10:53:52.495 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:106] - H2 数据库备份成功：/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n2023-01-10 10:53:52.527 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:111] - 成功连接 MYSQL jdbc:mysql://192.168.1.174:3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false\n2023-01-10 10:53:52.537 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:124] - 准备迁移数据\n2023-01-10 10:53:52.537 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 构建历史 BUILDHISTORYLOG\n2023-01-10 10:53:55.069 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 构建历史 迁移成功 428 条数据\n2023-01-10 10:53:55.069 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 构建信息 BUILD_INFO\n2023-01-10 10:53:55.170 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 构建信息 迁移成功 16 条数据\n2023-01-10 10:53:55.170 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 命令执行记录 COMMAND_EXEC_LOG\n2023-01-10 10:53:55.171 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 命令执行记录 迁移成功 0 条数据\n2023-01-10 10:53:55.172 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 命令管理 COMMAND_INFO\n2023-01-10 10:53:55.173 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 命令管理 迁移成功 0 条数据\n2023-01-10 10:53:55.173 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 docker 信息 DOCKER_INFO\n2023-01-10 10:53:55.223 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - docker 信息 迁移成功 9 条数据\n2023-01-10 10:53:55.224 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 docker 集群信息 DOCKER_SWARM_INFO\n2023-01-10 10:53:55.226 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - docker 集群信息 迁移成功 0 条数据\n2023-01-10 10:53:55.226 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 日志阅读 LOG_READ\n2023-01-10 10:53:55.228 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 日志阅读 迁移成功 0 条数据\n2023-01-10 10:53:55.228 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 监控信息 MONITOR_INFO\n2023-01-10 10:53:55.383 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 监控信息 迁移成功 2 条数据\n2023-01-10 10:53:55.383 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 监控通知 MONITORNOTIFYLOG\n2023-01-10 10:53:55.399 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 监控通知 迁移成功 2 条数据\n2023-01-10 10:53:55.400 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 监控用户操作 MONITOR_USER_OPT\n2023-01-10 10:53:55.401 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 监控用户操作 迁移成功 0 条数据\n2023-01-10 10:53:55.401 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 节点信息 NODE_INFO\n2023-01-10 10:53:55.451 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 节点信息 迁移成功 8 条数据\n2023-01-10 10:53:55.451 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 节点统计 NODE_STAT\n2023-01-10 10:53:55.496 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 节点统计 迁移成功 8 条数据\n2023-01-10 10:53:55.496 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 分发日志 OUTGIVINGLOG\n2023-01-10 10:53:55.498 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 分发日志 迁移成功 0 条数据\n2023-01-10 10:53:55.498 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 节点分发 OUT_GIVING\n2023-01-10 10:53:55.499 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 节点分发 迁移成功 0 条数据\n2023-01-10 10:53:55.499 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 项目信息 PROJECT_INFO\n2023-01-10 10:53:55.516 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 项目信息 迁移成功 2 条数据\n2023-01-10 10:53:55.516 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 仓库信息 REPOSITORY\n2023-01-10 10:53:55.600 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 仓库信息 迁移成功 15 条数据\n2023-01-10 10:53:55.601 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 节点脚本模版 SCRIPT_INFO\n2023-01-10 10:53:55.694 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 节点脚本模版 迁移成功 17 条数据\n2023-01-10 10:53:55.694 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 节点脚本模版执行记录 SCRIPT_EXECUTE_LOG\n2023-01-10 10:54:47.038 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 节点脚本模版执行记录 迁移成功 9760 条数据\n2023-01-10 10:54:47.038 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 脚本模版执行记录 SERVER_SCRIPT_EXECUTE_LOG\n2023-01-10 10:54:47.046 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 脚本模版执行记录 迁移成功 1 条数据\n2023-01-10 10:54:47.046 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 脚本模版 SERVER_SCRIPT_INFO\n2023-01-10 10:54:47.061 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 脚本模版 迁移成功 2 条数据\n2023-01-10 10:54:47.061 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 SSH 信息 SSH_INFO\n2023-01-10 10:54:47.103 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - SSH 信息 迁移成功 7 条数据\n2023-01-10 10:54:47.103 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 ssh 终端执行日志 SSHTERMINALEXECUTELOG\n2023-01-10 10:54:47.634 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - ssh 终端执行日志 迁移成功 102 条数据\n2023-01-10 10:54:47.635 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 节点监控记录 SYSTEMMONITORLOG\n2023-01-10 10:55:40.990 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 节点监控记录 迁移成功 10000 条数据\n2023-01-10 10:55:40.990 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 系统参数 SYSTEM_PARAMETERS\n2023-01-10 10:55:41.017 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 系统参数 迁移成功 5 条数据\n2023-01-10 10:55:41.017 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 触发器 token TRIGGER_TOKEN_LOG\n2023-01-10 10:55:41.288 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 触发器 token 迁移成功 52 条数据\n2023-01-10 10:55:41.288 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 用户(权限组)工作空间关系表 USER_BIND_WORKSPACE\n2023-01-10 10:55:41.347 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 用户(权限组)工作空间关系表 迁移成功 11 条数据\n2023-01-10 10:55:41.348 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 用户账号 USER_INFO\n2023-01-10 10:55:41.376 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 用户账号 迁移成功 5 条数据\n2023-01-10 10:55:41.377 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 用户操作日志 USEROPERATELOGV1\n2023-01-10 10:55:59.010 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 用户操作日志 迁移成功 3127 条数据\n2023-01-10 10:55:59.010 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 用户权限组 USER_PERMISSION_GROUP\n2023-01-10 10:55:59.018 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 用户权限组 迁移成功 1 条数据\n2023-01-10 10:55:59.018 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 工作空间环境变量 WORKSPACE_ENV_VAR\n2023-01-10 10:55:59.019 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 工作空间环境变量 迁移成功 0 条数据\n2023-01-10 10:55:59.019 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:143] - 开始迁移 工作空间 WORKSPACE\n2023-01-10 10:55:59.030 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:179] - 工作空间 迁移成功 2 条数据\n2023-01-10 10:55:59.032 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:130] - 迁移完成,累计迁移 23582 条数据,耗时：2分7秒305毫秒\n2023-01-10 10:55:59.091 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:133] - 准备删除当前数据库文件\n2023-01-10 10:55:59.095 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:135] - 自动备份 h2 数据库文件,备份文件位于：/opt/jpom_server/server-2-2/db/recover_backup/20230110105559\n2023-01-10 10:55:59.096 [main] INFO  i.j.s.d.InitDb [InitDb.java:158] - 数据库 迁移数据 事件执行结束,结果：false\n2023-01-10 10:55:59.096 [main] INFO  i.j.s.d.InitDb [InitDb.java:172] - MYSQL db Successfully loaded, url is 【jdbc:mysql://192.168.1.174:3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false】\n2023-01-10 10:55:59.222 [main] INFO  i.j.c.JpomApplicationEvent [JpomApplicationEvent.java:222] - Server Successfully started,Can use happily => http://172.17.0.1:2122 【The current address is for reference only】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 mysql 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2023-01-10 10:53:52.097 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:95] - 成功连接 H2 ,开始尝试自动备份\n2023-01-10 10:53:52.495 [main] INFO  t.j.d.StorageServiceFactory [StorageServiceFactory.java:106] - H2 数据库备份成功：/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n2\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/Server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# you might want to use the less safe log_bin_trust_function_creators variable\n\n报错You do not have the SUPER privilege and binary logging is enabled (you might want to use the less safe log_bin_trust_function_creators variable\n\n2023-03-08 11:08:21.977 [main] INFO  i.j.JpomServerApplication [StartupInfoLogger.java:55] - Starting JpomServerApplication v2.10.26 using Java 1.8.0_121 on xxxxx with PID 12073 (/usr/local/jpom-server/lib/Server-2.10.26.jar started by root in /usr/local/jpom-server)\n2023-03-08 11:08:21.979 [main] INFO  i.j.JpomServerApplication [SpringApplication.java:631] - No active profile set, falling back to 1 default profile: "default"\n2023-03-08 11:08:24.160 [main] INFO  o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:108] - Tomcat initialized with port(s): 2122 (http)\n2023-03-08 11:08:24.174 [main] INFO  o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-2122"]\n2023-03-08 11:08:24.175 [main] INFO  o.a.c.c.StandardService [DirectJDKLog.java:173] - Starting service [Tomcat]\n2023-03-08 11:08:24.176 [main] INFO  o.a.c.c.StandardEngine [DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.70]\n2023-03-08 11:08:24.292 [main] INFO  o.a.c.c.C.[.[.[/] [DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext\n2023-03-08 11:08:24.293 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:292] - Root WebApplicationContext: initialization completed in 2219 ms\n2023-03-08 11:08:25.228 [main] INFO  i.j.c.JpomApplicationEvent [JpomApplicationEvent.java:124] - Jpom[2.10.26] Current data path：/usr/local/jpom-server External configuration file path：file:/usr/local/jpom-server/conf/application.yml\n2023-03-08 11:08:25.358 [main] INFO  i.j.c.JpomApplicationEvent [JpomApplicationEvent.java:139] - 本机安装 ID 为：8bef720e928b46c5942exxxxxxxxxxx99\n2023-03-08 11:08:25.364 [main] INFO  i.j.s.d.InitDb [InitDb.java:297] - 开始等待数据迁移\n2023-03-08 11:08:25.369 [main] INFO  i.j.s.d.InitDb [InitDb.java:106] - start load MYSQL db\n2023-03-08 11:08:32.999 [main] INFO  i.j.s.d.InitDb [InitDb.java:226] - exec init SQL file: table.all.v1.0.csv complete, and affected rows is: 0\n2023-03-08 11:08:33.712 [main] INFO  i.j.s.d.InitDb [InitDb.java:226] - exec init SQL file: table.all.v1.1.csv complete, and affected rows is: 0\n2023-03-08 11:08:33.776 [main] ERROR i.j.s.d.InitDb [InitDb.java:165] - 初始化数据库失败 execute.mysql.v1.0.sql\njava.sql.SQLException: You do not have the SUPER privilege and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)\n        at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)\n        at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)\n        at cn.hutool.db.sql.SqlExecutor.execute(SqlExecutor.java:58)\n        at cn.hutool.db.AbstractDb.execute(AbstractDb.java:233)\n        at io.jpom.system.db.InitDb.lambda$null$10(InitDb.java:221)\n        at java.util.stream.ReferencePipeline$4$1.accept(ReferencePipeline.java:210)\n        at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)\n        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n        at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n        at java.util.stream.IntPipeline.reduce(IntPipeline.java:456)\n        at java.util.stream.IntPipeline.sum(IntPipeline.java:414)\n        at io.jpom.system.db.InitDb.lambda$executeSql$9eed2c2c$1(InitDb.java:225)\n        at cn.hutool.db.Db.tx(Db.java:191)\n        at cn.hutool.db.Db.tx(Db.java:155)\n        at io.jpom.system.db.InitDb.executeSql(InitDb.java:215)\n        at io.jpom.system.db.InitDb.lambda$tryInitSql$7(InitDb.java:185)\n        at java.util.Optional.ifPresent(Optional.java:159)\n        at io.jpom.system.db.InitDb.tryInitSql(InitDb.java:181)\n        at io.jpom.system.db.InitDb.afterPropertiesSet(InitDb.java:144)\n        at org.dromara.jpom.common.JpomApplicationEvent.lambda$setApplicationContext$10(JpomApplicationEvent.java:348)\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n        at java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:352)\n        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n        at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\n        at org.dromara.jpom.common.JpomApplicationEvent.setApplicationContext(JpomApplicationEvent.java:346)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:128)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.postProcessBeforeInitialization(ApplicationContextAwareProcessor.java:102)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)\n        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)\n        at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164)\n        at org.dromara.jpom.JpomServerApplication.main(JpomServerApplication.java:82)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:108)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:58)\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:65)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n\n\n解决办法\n\nmysql -u root -p mysql>set global log_bin_trust_function_creators = 1;\n\n永久解决方案如下:\n\n改配置文件，在[mysqld]部分加上： log_bin_trust_function_creators=1 注：linux系统配置文件/etc/my.cnf windows系统配置文件my.ini\n\n\n# Encountered illegal format of dynamic column string\n\n报错java.sql.SQLException: Encountered illegal format of dynamic column string\n\n2023-03-21 16:37:00.604 [main] INFO  i.j.JpomServerApplication [StartupInfoLogger.java:55] - Starting JpomServerApplication v2.10.36 using Java 1.8.0_301 on manage with PID 2016 (/usr/local/jpom-server/lib/Server-2.10.36.jar started by root in /)\n2023-03-21 16:37:00.605 [main] INFO  i.j.JpomServerApplication [SpringApplication.java:631] - No active profile set, falling back to 1 default profile: "default"\n2023-03-21 16:37:02.831 [main] INFO  o.s.b.w.e.t.TomcatWebServer [TomcatWebServer.java:108] - Tomcat initialized with port(s): 2122 (http)\n2023-03-21 16:37:02.846 [main] INFO  o.a.c.h.Http11NioProtocol [DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-2122"]\n2023-03-21 16:37:02.847 [main] INFO  o.a.c.c.StandardService [DirectJDKLog.java:173] - Starting service [Tomcat]\n2023-03-21 16:37:02.847 [main] INFO  o.a.c.c.StandardEngine [DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]\n2023-03-21 16:37:02.988 [main] INFO  o.a.c.c.C.[.[.[/] [DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext\n2023-03-21 16:37:02.988 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [ServletWebServerApplicationContext.java:292] - Root WebApplicationContext: initialization completed in 2301 ms\n2023-03-21 16:37:04.134 [main] INFO  i.j.c.JpomApplicationEvent [JpomApplicationEvent.java:124] - Jpom[2.10.36] Current data path：/usr/local/jpom-server External configuration file path：file:/usr/local/jpom-server/conf/application.yml\n2023-03-21 16:37:04.310 [main] INFO  i.j.c.JpomApplicationEvent [JpomApplicationEvent.java:139] - 本机安装 ID 为：07a9dd79cba9410d98879f50dc968c99\n2023-03-21 16:37:04.321 [main] INFO  i.j.s.d.InitDb [InitDb.java:107] - start load MYSQL db\n2023-03-21 16:37:06.448 [main] INFO  i.j.s.d.InitDb [InitDb.java:227] - exec init SQL file: table.all.v1.0.csv complete, and affected rows is: 0\n2023-03-21 16:37:06.754 [main] INFO  i.j.s.d.InitDb [InitDb.java:227] - exec init SQL file: table.all.v1.1.csv complete, and affected rows is: 0\n2023-03-21 16:37:06.770 [main] INFO  i.j.s.d.InitDb [InitDb.java:227] - exec init SQL file: execute.mysql.v1.0.sql complete, and affected rows is: 0\n2023-03-21 16:37:06.805 [main] ERROR i.j.s.d.InitDb [InitDb.java:166] - 初始化数据库失败 alter.all.v1.0.csv\njava.sql.SQLException: Encountered illegal format of dynamic column string\n        at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)\n        at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)\n        at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)\n        at cn.hutool.db.sql.SqlExecutor.execute(SqlExecutor.java:58)\n        at cn.hutool.db.AbstractDb.execute(AbstractDb.java:233)\n        at io.jpom.system.db.InitDb.lambda$null$10(InitDb.java:222)\n        at java.util.stream.ReferencePipeline$4$1.accept(ReferencePipeline.java:210)\n        at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)\n        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n        at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n        at java.util.stream.IntPipeline.reduce(IntPipeline.java:457)\n        at java.util.stream.IntPipeline.sum(IntPipeline.java:415)\n        at io.jpom.system.db.InitDb.lambda$executeSql$9eed2c2c$1(InitDb.java:226)\n        at cn.hutool.db.Db.tx(Db.java:191)\n        at cn.hutool.db.Db.tx(Db.java:155)\n        at io.jpom.system.db.InitDb.executeSql(InitDb.java:216)\n        at io.jpom.system.db.InitDb.lambda$tryInitSql$8(InitDb.java:196)\n        at java.util.Optional.ifPresent(Optional.java:159)\n        at io.jpom.system.db.InitDb.tryInitSql(InitDb.java:193)\n        at io.jpom.system.db.InitDb.afterPropertiesSet(InitDb.java:145)\n        at org.dromara.jpom.common.JpomApplicationEvent.lambda$setApplicationContext$10(JpomApplicationEvent.java:348)\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n        at java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:352)\n        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)\n        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n        at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\n        at org.dromara.jpom.common.JpomApplicationEvent.setApplicationContext(JpomApplicationEvent.java:346)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:128)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.postProcessBeforeInitialization(ApplicationContextAwareProcessor.java:102)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n问题原因\n\n环境：出现问题的数据库为mariadb，版本为5.5.65\n\n原因：mariadb 版本过低，存储过程函数报错\n\n解决办法\n\n升级为mysql5.7\n\n\n# 数据备份\n\n如果您使用 mysql 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\nmysql 有非常成熟并且简单的备份方案请自行实现',normalizedContent:'# 前言\n\njpom 服务端的数据默认存储到 h2 database 中\n\n部分用户有需求期望数据存储到 mysql 中\n\n提醒\n\n使用 mysql 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.10.11\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 mysql\n * 修改 jpom.db.url 为您 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1: 3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false)\n * 修改 jpom.db.user-name 为对应 mysql 账户 -修改 jpom.db.user-pwd 为对应 mysql 密码\n\n  db: \n    mode: mysql\n    url:  jdbc:mysql://xx.xx.xx.xx:3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: root\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: 123456\n    # h2 数据库缓存大小  kilobyte 1kb 1,024 megabyte 1mb 1,048,576\n    cache-size: 50mb\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2023-01-10 10:53:50.947 [main] info  i.j.s.d.initdb [initdb.java:310] - 开始等待数据迁移\n2023-01-10 10:53:50.950 [main] info  i.j.s.d.initdb [initdb.java:109] - start load mysql db\n2023-01-10 10:53:51.543 [main] info  i.j.s.d.initdb [initdb.java:239] - exec init sql file: table.all.v1.0.csv complete, and affected rows is: 0\n2023-01-10 10:53:51.605 [main] info  i.j.s.d.initdb [initdb.java:239] - exec init sql file: execute.mysql.v1.0.sql complete, and affected rows is: 0\n2023-01-10 10:53:51.625 [main] info  i.j.s.d.initdb [initdb.java:239] - exec init sql file: alter.all.v1.0.csv complete, and affected rows is: 0\n2023-01-10 10:53:51.703 [main] info  i.j.s.d.initdb [initdb.java:239] - exec init sql file: index.all.v1.0.csv complete, and affected rows is: 0\n2023-01-10 10:53:51.706 [main] info  i.j.s.d.initdb [initdb.java:155] - 开始执行数据库事件：迁移数据\n2023-01-10 10:53:51.706 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:85] - 开始迁移 h2 数据到 mysql\n2023-01-10 10:53:52.097 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:95] - 成功连接 h2 ,开始尝试自动备份\n2023-01-10 10:53:52.495 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:106] - h2 数据库备份成功：/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n2023-01-10 10:53:52.527 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:111] - 成功连接 mysql jdbc:mysql://192.168.1.174:3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false\n2023-01-10 10:53:52.537 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:124] - 准备迁移数据\n2023-01-10 10:53:52.537 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 构建历史 buildhistorylog\n2023-01-10 10:53:55.069 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 构建历史 迁移成功 428 条数据\n2023-01-10 10:53:55.069 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 构建信息 build_info\n2023-01-10 10:53:55.170 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 构建信息 迁移成功 16 条数据\n2023-01-10 10:53:55.170 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 命令执行记录 command_exec_log\n2023-01-10 10:53:55.171 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 命令执行记录 迁移成功 0 条数据\n2023-01-10 10:53:55.172 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 命令管理 command_info\n2023-01-10 10:53:55.173 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 命令管理 迁移成功 0 条数据\n2023-01-10 10:53:55.173 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 docker 信息 docker_info\n2023-01-10 10:53:55.223 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - docker 信息 迁移成功 9 条数据\n2023-01-10 10:53:55.224 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 docker 集群信息 docker_swarm_info\n2023-01-10 10:53:55.226 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - docker 集群信息 迁移成功 0 条数据\n2023-01-10 10:53:55.226 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 日志阅读 log_read\n2023-01-10 10:53:55.228 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 日志阅读 迁移成功 0 条数据\n2023-01-10 10:53:55.228 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 监控信息 monitor_info\n2023-01-10 10:53:55.383 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 监控信息 迁移成功 2 条数据\n2023-01-10 10:53:55.383 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 监控通知 monitornotifylog\n2023-01-10 10:53:55.399 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 监控通知 迁移成功 2 条数据\n2023-01-10 10:53:55.400 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 监控用户操作 monitor_user_opt\n2023-01-10 10:53:55.401 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 监控用户操作 迁移成功 0 条数据\n2023-01-10 10:53:55.401 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 节点信息 node_info\n2023-01-10 10:53:55.451 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 节点信息 迁移成功 8 条数据\n2023-01-10 10:53:55.451 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 节点统计 node_stat\n2023-01-10 10:53:55.496 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 节点统计 迁移成功 8 条数据\n2023-01-10 10:53:55.496 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 分发日志 outgivinglog\n2023-01-10 10:53:55.498 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 分发日志 迁移成功 0 条数据\n2023-01-10 10:53:55.498 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 节点分发 out_giving\n2023-01-10 10:53:55.499 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 节点分发 迁移成功 0 条数据\n2023-01-10 10:53:55.499 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 项目信息 project_info\n2023-01-10 10:53:55.516 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 项目信息 迁移成功 2 条数据\n2023-01-10 10:53:55.516 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 仓库信息 repository\n2023-01-10 10:53:55.600 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 仓库信息 迁移成功 15 条数据\n2023-01-10 10:53:55.601 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 节点脚本模版 script_info\n2023-01-10 10:53:55.694 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 节点脚本模版 迁移成功 17 条数据\n2023-01-10 10:53:55.694 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 节点脚本模版执行记录 script_execute_log\n2023-01-10 10:54:47.038 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 节点脚本模版执行记录 迁移成功 9760 条数据\n2023-01-10 10:54:47.038 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 脚本模版执行记录 server_script_execute_log\n2023-01-10 10:54:47.046 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 脚本模版执行记录 迁移成功 1 条数据\n2023-01-10 10:54:47.046 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 脚本模版 server_script_info\n2023-01-10 10:54:47.061 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 脚本模版 迁移成功 2 条数据\n2023-01-10 10:54:47.061 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 ssh 信息 ssh_info\n2023-01-10 10:54:47.103 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - ssh 信息 迁移成功 7 条数据\n2023-01-10 10:54:47.103 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 ssh 终端执行日志 sshterminalexecutelog\n2023-01-10 10:54:47.634 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - ssh 终端执行日志 迁移成功 102 条数据\n2023-01-10 10:54:47.635 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 节点监控记录 systemmonitorlog\n2023-01-10 10:55:40.990 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 节点监控记录 迁移成功 10000 条数据\n2023-01-10 10:55:40.990 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 系统参数 system_parameters\n2023-01-10 10:55:41.017 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 系统参数 迁移成功 5 条数据\n2023-01-10 10:55:41.017 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 触发器 token trigger_token_log\n2023-01-10 10:55:41.288 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 触发器 token 迁移成功 52 条数据\n2023-01-10 10:55:41.288 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 用户(权限组)工作空间关系表 user_bind_workspace\n2023-01-10 10:55:41.347 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 用户(权限组)工作空间关系表 迁移成功 11 条数据\n2023-01-10 10:55:41.348 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 用户账号 user_info\n2023-01-10 10:55:41.376 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 用户账号 迁移成功 5 条数据\n2023-01-10 10:55:41.377 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 用户操作日志 useroperatelogv1\n2023-01-10 10:55:59.010 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 用户操作日志 迁移成功 3127 条数据\n2023-01-10 10:55:59.010 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 用户权限组 user_permission_group\n2023-01-10 10:55:59.018 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 用户权限组 迁移成功 1 条数据\n2023-01-10 10:55:59.018 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 工作空间环境变量 workspace_env_var\n2023-01-10 10:55:59.019 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 工作空间环境变量 迁移成功 0 条数据\n2023-01-10 10:55:59.019 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:143] - 开始迁移 工作空间 workspace\n2023-01-10 10:55:59.030 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:179] - 工作空间 迁移成功 2 条数据\n2023-01-10 10:55:59.032 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:130] - 迁移完成,累计迁移 23582 条数据,耗时：2分7秒305毫秒\n2023-01-10 10:55:59.091 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:133] - 准备删除当前数据库文件\n2023-01-10 10:55:59.095 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:135] - 自动备份 h2 数据库文件,备份文件位于：/opt/jpom_server/server-2-2/db/recover_backup/20230110105559\n2023-01-10 10:55:59.096 [main] info  i.j.s.d.initdb [initdb.java:158] - 数据库 迁移数据 事件执行结束,结果：false\n2023-01-10 10:55:59.096 [main] info  i.j.s.d.initdb [initdb.java:172] - mysql db successfully loaded, url is 【jdbc:mysql://192.168.1.174:3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false】\n2023-01-10 10:55:59.222 [main] info  i.j.c.jpomapplicationevent [jpomapplicationevent.java:222] - server successfully started,can use happily => http://172.17.0.1:2122 【the current address is for reference only】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 mysql 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2023-01-10 10:53:52.097 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:95] - 成功连接 h2 ,开始尝试自动备份\n2023-01-10 10:53:52.495 [main] info  t.j.d.storageservicefactory [storageservicefactory.java:106] - h2 数据库备份成功：/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n2\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# you might want to use the less safe log_bin_trust_function_creators variable\n\n报错you do not have the super privilege and binary logging is enabled (you might want to use the less safe log_bin_trust_function_creators variable\n\n2023-03-08 11:08:21.977 [main] info  i.j.jpomserverapplication [startupinfologger.java:55] - starting jpomserverapplication v2.10.26 using java 1.8.0_121 on xxxxx with pid 12073 (/usr/local/jpom-server/lib/server-2.10.26.jar started by root in /usr/local/jpom-server)\n2023-03-08 11:08:21.979 [main] info  i.j.jpomserverapplication [springapplication.java:631] - no active profile set, falling back to 1 default profile: "default"\n2023-03-08 11:08:24.160 [main] info  o.s.b.w.e.t.tomcatwebserver [tomcatwebserver.java:108] - tomcat initialized with port(s): 2122 (http)\n2023-03-08 11:08:24.174 [main] info  o.a.c.h.http11nioprotocol [directjdklog.java:173] - initializing protocolhandler ["http-nio-2122"]\n2023-03-08 11:08:24.175 [main] info  o.a.c.c.standardservice [directjdklog.java:173] - starting service [tomcat]\n2023-03-08 11:08:24.176 [main] info  o.a.c.c.standardengine [directjdklog.java:173] - starting servlet engine: [apache tomcat/9.0.70]\n2023-03-08 11:08:24.292 [main] info  o.a.c.c.c.[.[.[/] [directjdklog.java:173] - initializing spring embedded webapplicationcontext\n2023-03-08 11:08:24.293 [main] info  o.s.b.w.s.c.servletwebserverapplicationcontext [servletwebserverapplicationcontext.java:292] - root webapplicationcontext: initialization completed in 2219 ms\n2023-03-08 11:08:25.228 [main] info  i.j.c.jpomapplicationevent [jpomapplicationevent.java:124] - jpom[2.10.26] current data path：/usr/local/jpom-server external configuration file path：file:/usr/local/jpom-server/conf/application.yml\n2023-03-08 11:08:25.358 [main] info  i.j.c.jpomapplicationevent [jpomapplicationevent.java:139] - 本机安装 id 为：8bef720e928b46c5942exxxxxxxxxxx99\n2023-03-08 11:08:25.364 [main] info  i.j.s.d.initdb [initdb.java:297] - 开始等待数据迁移\n2023-03-08 11:08:25.369 [main] info  i.j.s.d.initdb [initdb.java:106] - start load mysql db\n2023-03-08 11:08:32.999 [main] info  i.j.s.d.initdb [initdb.java:226] - exec init sql file: table.all.v1.0.csv complete, and affected rows is: 0\n2023-03-08 11:08:33.712 [main] info  i.j.s.d.initdb [initdb.java:226] - exec init sql file: table.all.v1.1.csv complete, and affected rows is: 0\n2023-03-08 11:08:33.776 [main] error i.j.s.d.initdb [initdb.java:165] - 初始化数据库失败 execute.mysql.v1.0.sql\njava.sql.sqlexception: you do not have the super privilege and binary logging is enabled (you *might* want to use the less safe log_bin_trust_function_creators variable)\n        at com.mysql.cj.jdbc.exceptions.sqlerror.createsqlexception(sqlerror.java:129)\n        at com.mysql.cj.jdbc.exceptions.sqlexceptionsmapping.translateexception(sqlexceptionsmapping.java:122)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeinternal(clientpreparedstatement.java:916)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeupdateinternal(clientpreparedstatement.java:1061)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeupdateinternal(clientpreparedstatement.java:1009)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executelargeupdate(clientpreparedstatement.java:1320)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeupdate(clientpreparedstatement.java:994)\n        at cn.hutool.db.sql.sqlexecutor.execute(sqlexecutor.java:58)\n        at cn.hutool.db.abstractdb.execute(abstractdb.java:233)\n        at io.jpom.system.db.initdb.lambda$null$10(initdb.java:221)\n        at java.util.stream.referencepipeline$4$1.accept(referencepipeline.java:210)\n        at java.util.arraylist$arraylistspliterator.foreachremaining(arraylist.java:1374)\n        at java.util.stream.abstractpipeline.copyinto(abstractpipeline.java:481)\n        at java.util.stream.abstractpipeline.wrapandcopyinto(abstractpipeline.java:471)\n        at java.util.stream.reduceops$reduceop.evaluatesequential(reduceops.java:708)\n        at java.util.stream.abstractpipeline.evaluate(abstractpipeline.java:234)\n        at java.util.stream.intpipeline.reduce(intpipeline.java:456)\n        at java.util.stream.intpipeline.sum(intpipeline.java:414)\n        at io.jpom.system.db.initdb.lambda$executesql$9eed2c2c$1(initdb.java:225)\n        at cn.hutool.db.db.tx(db.java:191)\n        at cn.hutool.db.db.tx(db.java:155)\n        at io.jpom.system.db.initdb.executesql(initdb.java:215)\n        at io.jpom.system.db.initdb.lambda$tryinitsql$7(initdb.java:185)\n        at java.util.optional.ifpresent(optional.java:159)\n        at io.jpom.system.db.initdb.tryinitsql(initdb.java:181)\n        at io.jpom.system.db.initdb.afterpropertiesset(initdb.java:144)\n        at org.dromara.jpom.common.jpomapplicationevent.lambda$setapplicationcontext$10(jpomapplicationevent.java:348)\n        at java.util.stream.foreachops$foreachop$ofref.accept(foreachops.java:184)\n        at java.util.stream.sortedops$sizedrefsortingsink.end(sortedops.java:352)\n        at java.util.stream.abstractpipeline.copyinto(abstractpipeline.java:482)\n        at java.util.stream.abstractpipeline.wrapandcopyinto(abstractpipeline.java:471)\n        at java.util.stream.foreachops$foreachop.evaluatesequential(foreachops.java:151)\n        at java.util.stream.foreachops$foreachop$ofref.evaluatesequential(foreachops.java:174)\n        at java.util.stream.abstractpipeline.evaluate(abstractpipeline.java:234)\n        at java.util.stream.referencepipeline.foreach(referencepipeline.java:418)\n        at org.dromara.jpom.common.jpomapplicationevent.setapplicationcontext(jpomapplicationevent.java:346)\n        at org.springframework.context.support.applicationcontextawareprocessor.invokeawareinterfaces(applicationcontextawareprocessor.java:128)\n        at org.springframework.context.support.applicationcontextawareprocessor.postprocessbeforeinitialization(applicationcontextawareprocessor.java:102)\n        at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.applybeanpostprocessorsbeforeinitialization(abstractautowirecapablebeanfactory.java:440)\n        at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.initializebean(abstractautowirecapablebeanfactory.java:1796)\n        at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.docreatebean(abstractautowirecapablebeanfactory.java:620)\n        at org.springframework.beans.factory.support.abstractautowirecapablebeanfactory.createbean(abstractautowirecapablebeanfactory.java:542)\n        at org.springframework.beans.factory.support.abstractbeanfactory.lambda$dogetbean$0(abstractbeanfactory.java:335)\n        at org.springframework.beans.factory.support.defaultsingletonbeanregistry.getsingleton(defaultsingletonbeanregistry.java:234)\n        at org.springframework.beans.factory.support.abstractbeanfactory.dogetbean(abstractbeanfactory.java:333)\n        at org.springframework.beans.factory.support.abstractbeanfactory.getbean(abstractbeanfactory.java:208)\n        at org.springframework.beans.factory.support.defaultlistablebeanfactory.preinstantiatesingletons(defaultlistablebeanfactory.java:955)\n        at org.springframework.context.support.abstractapplicationcontext.finishbeanfactoryinitialization(abstractapplicationcontext.java:918)\n        at org.springframework.context.support.abstractapplicationcontext.refresh(abstractapplicationcontext.java:583)\n        at org.springframework.boot.web.servlet.context.servletwebserverapplicationcontext.refresh(servletwebserverapplicationcontext.java:147)\n        at org.springframework.boot.springapplication.refresh(springapplication.java:731)\n        at org.springframework.boot.springapplication.refreshcontext(springapplication.java:408)\n        at org.springframework.boot.springapplication.run(springapplication.java:307)\n        at org.springframework.boot.builder.springapplicationbuilder.run(springapplicationbuilder.java:164)\n        at org.dromara.jpom.jpomserverapplication.main(jpomserverapplication.java:82)\n        at sun.reflect.nativemethodaccessorimpl.invoke0(native method)\n        at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:62)\n        at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:43)\n        at java.lang.reflect.method.invoke(method.java:498)\n        at org.springframework.boot.loader.mainmethodrunner.run(mainmethodrunner.java:49)\n        at org.springframework.boot.loader.launcher.launch(launcher.java:108)\n        at org.springframework.boot.loader.launcher.launch(launcher.java:58)\n        at org.springframework.boot.loader.jarlauncher.main(jarlauncher.java:65)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n\n\n解决办法\n\nmysql -u root -p mysql>set global log_bin_trust_function_creators = 1;\n\n永久解决方案如下:\n\n改配置文件，在[mysqld]部分加上： log_bin_trust_function_creators=1 注：linux系统配置文件/etc/my.cnf windows系统配置文件my.ini\n\n\n# encountered illegal format of dynamic column string\n\n报错java.sql.sqlexception: encountered illegal format of dynamic column string\n\n2023-03-21 16:37:00.604 [main] info  i.j.jpomserverapplication [startupinfologger.java:55] - starting jpomserverapplication v2.10.36 using java 1.8.0_301 on manage with pid 2016 (/usr/local/jpom-server/lib/server-2.10.36.jar started by root in /)\n2023-03-21 16:37:00.605 [main] info  i.j.jpomserverapplication [springapplication.java:631] - no active profile set, falling back to 1 default profile: "default"\n2023-03-21 16:37:02.831 [main] info  o.s.b.w.e.t.tomcatwebserver [tomcatwebserver.java:108] - tomcat initialized with port(s): 2122 (http)\n2023-03-21 16:37:02.846 [main] info  o.a.c.h.http11nioprotocol [directjdklog.java:173] - initializing protocolhandler ["http-nio-2122"]\n2023-03-21 16:37:02.847 [main] info  o.a.c.c.standardservice [directjdklog.java:173] - starting service [tomcat]\n2023-03-21 16:37:02.847 [main] info  o.a.c.c.standardengine [directjdklog.java:173] - starting servlet engine: [apache tomcat/9.0.71]\n2023-03-21 16:37:02.988 [main] info  o.a.c.c.c.[.[.[/] [directjdklog.java:173] - initializing spring embedded webapplicationcontext\n2023-03-21 16:37:02.988 [main] info  o.s.b.w.s.c.servletwebserverapplicationcontext [servletwebserverapplicationcontext.java:292] - root webapplicationcontext: initialization completed in 2301 ms\n2023-03-21 16:37:04.134 [main] info  i.j.c.jpomapplicationevent [jpomapplicationevent.java:124] - jpom[2.10.36] current data path：/usr/local/jpom-server external configuration file path：file:/usr/local/jpom-server/conf/application.yml\n2023-03-21 16:37:04.310 [main] info  i.j.c.jpomapplicationevent [jpomapplicationevent.java:139] - 本机安装 id 为：07a9dd79cba9410d98879f50dc968c99\n2023-03-21 16:37:04.321 [main] info  i.j.s.d.initdb [initdb.java:107] - start load mysql db\n2023-03-21 16:37:06.448 [main] info  i.j.s.d.initdb [initdb.java:227] - exec init sql file: table.all.v1.0.csv complete, and affected rows is: 0\n2023-03-21 16:37:06.754 [main] info  i.j.s.d.initdb [initdb.java:227] - exec init sql file: table.all.v1.1.csv complete, and affected rows is: 0\n2023-03-21 16:37:06.770 [main] info  i.j.s.d.initdb [initdb.java:227] - exec init sql file: execute.mysql.v1.0.sql complete, and affected rows is: 0\n2023-03-21 16:37:06.805 [main] error i.j.s.d.initdb [initdb.java:166] - 初始化数据库失败 alter.all.v1.0.csv\njava.sql.sqlexception: encountered illegal format of dynamic column string\n        at com.mysql.cj.jdbc.exceptions.sqlerror.createsqlexception(sqlerror.java:129)\n        at com.mysql.cj.jdbc.exceptions.sqlexceptionsmapping.translateexception(sqlexceptionsmapping.java:122)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeinternal(clientpreparedstatement.java:916)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeupdateinternal(clientpreparedstatement.java:1061)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeupdateinternal(clientpreparedstatement.java:1009)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executelargeupdate(clientpreparedstatement.java:1320)\n        at com.mysql.cj.jdbc.clientpreparedstatement.executeupdate(clientpreparedstatement.java:994)\n        at cn.hutool.db.sql.sqlexecutor.execute(sqlexecutor.java:58)\n        at cn.hutool.db.abstractdb.execute(abstractdb.java:233)\n        at io.jpom.system.db.initdb.lambda$null$10(initdb.java:222)\n        at java.util.stream.referencepipeline$4$1.accept(referencepipeline.java:210)\n        at java.util.arraylist$arraylistspliterator.foreachremaining(arraylist.java:1384)\n        at java.util.stream.abstractpipeline.copyinto(abstractpipeline.java:482)\n        at java.util.stream.abstractpipeline.wrapandcopyinto(abstractpipeline.java:472)\n        at java.util.stream.reduceops$reduceop.evaluatesequential(reduceops.java:708)\n        at java.util.stream.abstractpipeline.evaluate(abstractpipeline.java:234)\n        at java.util.stream.intpipeline.reduce(intpipeline.java:457)\n        at java.util.stream.intpipeline.sum(intpipeline.java:415)\n        at io.jpom.system.db.initdb.lambda$executesql$9eed2c2c$1(initdb.java:226)\n        at cn.hutool.db.db.tx(db.java:191)\n        at cn.hutool.db.db.tx(db.java:155)\n        at io.jpom.system.db.initdb.executesql(initdb.java:216)\n        at io.jpom.system.db.initdb.lambda$tryinitsql$8(initdb.java:196)\n        at java.util.optional.ifpresent(optional.java:159)\n        at io.jpom.system.db.initdb.tryinitsql(initdb.java:193)\n        at io.jpom.system.db.initdb.afterpropertiesset(initdb.java:145)\n        at org.dromara.jpom.common.jpomapplicationevent.lambda$setapplicationcontext$10(jpomapplicationevent.java:348)\n        at java.util.stream.foreachops$foreachop$ofref.accept(foreachops.java:184)\n        at java.util.stream.sortedops$sizedrefsortingsink.end(sortedops.java:352)\n        at java.util.stream.abstractpipeline.copyinto(abstractpipeline.java:483)\n        at java.util.stream.abstractpipeline.wrapandcopyinto(abstractpipeline.java:472)\n        at java.util.stream.foreachops$foreachop.evaluatesequential(foreachops.java:151)\n        at java.util.stream.foreachops$foreachop$ofref.evaluatesequential(foreachops.java:174)\n        at java.util.stream.abstractpipeline.evaluate(abstractpipeline.java:234)\n        at java.util.stream.referencepipeline.foreach(referencepipeline.java:418)\n        at org.dromara.jpom.common.jpomapplicationevent.setapplicationcontext(jpomapplicationevent.java:346)\n        at org.springframework.context.support.applicationcontextawareprocessor.invokeawareinterfaces(applicationcontextawareprocessor.java:128)\n        at org.springframework.context.support.applicationcontextawareprocessor.postprocessbeforeinitialization(applicationcontextawareprocessor.java:102)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n问题原因\n\n环境：出现问题的数据库为mariadb，版本为5.5.65\n\n原因：mariadb 版本过低，存储过程函数报错\n\n解决办法\n\n升级为mysql5.7\n\n\n# 数据备份\n\n如果您使用 mysql 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\nmysql 有非常成熟并且简单的备份方案请自行实现',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"数据库管理",frontmatter:{title:"数据库管理",date:"2023-12-23T20:33:03.000Z",permalink:"/pages/db/672ad5/",categories:["docs","文档","开始使用"],tags:["数据库"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/020.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/020.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86.html",relativePath:"文档/012.备份&升级/020.数据库管理/020.数据库管理.md",key:"v-65449efa",path:"/pages/db/672ad5/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"服务端",slug:"服务端",normalizedTitle:"服务端",charIndex:9},{level:3,title:"插件端",slug:"插件端",normalizedTitle:"插件端",charIndex:155},{level:2,title:"数据库异常",slug:"数据库异常",normalizedTitle:"数据库异常",charIndex:203},{level:3,title:"字段未找到（H2/MYSQL/POSTGRESQL/MARIADB）",slug:"字段未找到-h2-mysql-postgresql-mariadb",normalizedTitle:"字段未找到（h2/mysql/postgresql/mariadb）",charIndex:213},{level:3,title:"表未找到（H2/MYSQL/POSTGRESQL/MARIADB）",slug:"表未找到-h2-mysql-postgresql-mariadb",normalizedTitle:"表未找到（h2/mysql/postgresql/mariadb）",charIndex:489},{level:3,title:"函数未找到",slug:"函数未找到",normalizedTitle:"函数未找到",charIndex:654},{level:4,title:"MYSQL",slug:"mysql",normalizedTitle:"mysql",charIndex:222},{level:4,title:"MARIADB",slug:"mariadb",normalizedTitle:"mariadb",charIndex:239},{level:4,title:"POSTGRESQL",slug:"postgresql",normalizedTitle:"postgresql",charIndex:228},{level:2,title:"无法正常启动，数据无法链接（H2）",slug:"无法正常启动-数据无法链接-h2",normalizedTitle:"无法正常启动，数据无法链接（h2）",charIndex:1659},{level:2,title:"升级数据库？",slug:"升级数据库",normalizedTitle:"升级数据库？",charIndex:2161},{level:2,title:"手动备份数据",slug:"手动备份数据",normalizedTitle:"手动备份数据",charIndex:2316},{level:3,title:"H2",slug:"h2",normalizedTitle:"h2",charIndex:23},{level:4,title:"管理数据库备份",slug:"管理数据库备份",normalizedTitle:"管理数据库备份",charIndex:62},{level:4,title:"部分备份",slug:"部分备份",normalizedTitle:"部分备份",charIndex:2680},{level:4,title:"导入备份",slug:"导入备份",normalizedTitle:"导入备份",charIndex:2601},{level:4,title:"还原备份",slug:"还原备份",normalizedTitle:"还原备份",charIndex:2611},{level:3,title:"MYSQL、MARIADB、POSTGRESQL",slug:"mysql、mariadb、postgresql",normalizedTitle:"mysql、mariadb、postgresql",charIndex:2969}],headersStr:"前言 服务端 插件端 数据库异常 字段未找到（H2/MYSQL/POSTGRESQL/MARIADB） 表未找到（H2/MYSQL/POSTGRESQL/MARIADB） 函数未找到 MYSQL MARIADB POSTGRESQL 无法正常启动，数据无法链接（H2） 升级数据库？ 手动备份数据 H2 管理数据库备份 部分备份 导入备份 还原备份 MYSQL、MARIADB、POSTGRESQL",content:'# 前言\n\n\n# 服务端\n\n服务端中默认使用 H2 数据库来存储数据，使用 H2 数据库系统默认提供数据库自动备份功能。\n\n管理数据库备份功能路径：【系统管理】->【服务端配置】->【数据库备份】\n\n温馨提示\n\n如果您使用的是 mysql、postgresql、mariadb 数据库那么没有该菜单奥\n\n\n# 插件端\n\n插件端是没有数据库概念的，因为插件端的所有数据均是采用 JSON 文件存储。\n\n\n# 数据库异常\n\n\n# 字段未找到（H2/MYSQL/POSTGRESQL/MARIADB）\n\nCaused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: NULL not allowed for column "xxxx"; SQL statement:\n\n\n1\n\n\n出现原因可能是版本会退，还原低版本数据。造成新版程序需要的字段在数据库中不存在。\n\n> 注意上述错误仅是一个很简单的示例，实际中的错误可能是不同的（h2 、mysql、postgresql、mariadb 异常均不同）\n\n\n# 表未找到（H2/MYSQL/POSTGRESQL/MARIADB）\n\n此情况通常在 mysql、postgresql、mariadb 数据库下发生，因为使用 mysql、postgresql、mariadb 时数据表是可能被其他人员手动维护或者勿操作。\n\nh2 数据库默认为开启数据库在线管理的功能，如果您需要请手动开启\n\n\n# 函数未找到\n\n# MYSQL\n\n服务端在实现 mysql 数据库的情况下为来能自动升级（管理）表结构系统将自动在数据库中创建函数、存储过程\n\n * column_exists 【函数】\n * drop_column_if_exists 【存储过程】\n * add_column_if_not_exists 【存储过程】\n * drop_index_if_exists 【存储过程】\n\n# MARIADB\n\n服务端在实现 mariadb 数据库的情况下为来能自动升级（管理）表结构系统将自动在数据库中创建函数、存储过程\n\n * column_exists1 【函数】\n * drop_column_if_exists 【存储过程】\n * add_column_if_not_exists 【存储过程】\n * drop_index_if_exists 【存储过程】\n\n# POSTGRESQL\n\n服务端在实现 postgresql 数据库的情况下为来能自动升级（管理）表结构系统将自动在数据库中创建函数、存储过程\n\n * column_exists【函数】\n * exec_if_column_exists【存储过程】\n * drop_column_if_exists 【存储过程】\n * add_column_if_not_exists 【存储过程】\n * drop_index_if_exists 【存储过程】\n * instr 【函数】\n\n您在自己备份时还需要将函数和存储过程一起备份奥，同时您在后续使用过程中也不能删除上述函数和存储过程。\n\n当您删除上次函数或者存储过程后程序不会立马出问题，会在需要变更变结构时候触发而保持，出现类似错误不要慌请看文档后续描述\n\n----------------------------------------\n\n通用解决办法：\n\n 1. 在执行启动命令后填参数 --rest:load_init_db\n\nbash /xxxx/Server.sh restart -15 --rest:load_init_db\n\n\n1\n\n\n./Server.bat restart --rest:load_init_db\n\n\n1\n\n 2. 手动删除数据目录里面的数据库初始化记录文件 路径为：${Jpom数据目录}/db/execute.init.sql.log 文件后重新启动\n\n\n# 无法正常启动，数据无法链接（H2）\n\n出现原因大部分为非正确停止程序造成 h2 数据库文件损坏\n\n特别提醒：建议在重启服务器前先关闭服务端，尽量不使用 kill -9 xxx 来关闭服务端\n\n解决办法：\n\n 1. 【推荐】从备份恢复（系统默认每天备份一次）\n    1. 找到数据库备份文件 路径为：${Jpom数据目录}/db/backup/xxx.sql 文件名为时间建议使用最后一次备份文件\n    2. 将 ${Jpom数据目录}/db/ 整个目录备份后删除\n    3. 重启服务端\n    4. 到系统管理->数据库备份 中去上传 sql 文件恢复\n 2. 尝试自动恢复（能恢复到最后状态的数据）\n    1. 在执行启动命令后填参数 --recover:h2db\n    2. linux:bash /xxxx/Server.sh restart -15 --recover:h2db\n    3. windows:./Server.bat restart --recover:h2db\n    4. 此方法不一定成功，或者可能出现恢复后的数据不完整（恢复后需要检查数据是否完整）\n\n\n# 升级数据库？\n\n在 Jpom 中您不需要考虑升级版本时需要升级数据库的操作，因为系统会自动执行新版本中需要修改的表结构，完全不需要您手动控制。\n\n警告\n\n我们非常不建议您手动修改数据库表结构或者删除数据，因为在您不熟悉表结构和数据关联性时修改数据极其容易产生错误数据而造成系统无法正常使用或者未知异常\n\n\n# 手动备份数据\n\n\n# H2\n\n系统默认提供来数据库备份功能\n\n默认自动触发机制为：\n\n * 隔一天备份一份\n * 升级前备份一份\n\n保留机制：\n\n * 自动触发的备份保留 5 份\n * 手动触发备份长期保留\n\n如何修改备份机制：【系统管理】->【服务端管理】->【系统配置】\n\n * jpom.db.auto-backup-interval-day\n * jpom.db.auto-backup-reserve-day\n\n\n\n数据备份文件保持路径：服务端数据目录/db/backup/xxxxxxx.sql\n\n# 管理数据库备份\n\n针对 h2 数据库备份管理我们提供来，导入备份、导出备份、还原备份等相关功能\n\n路径：【系统管理】->【服务端管理】->【数据库备份】\n\n\n\n#####全量备份\n\n是指将这个数据库进行备份\n\n# 部分备份\n\n指定数据库表进行备份\n\n\n\n注意：一般情况下无须使用此功能，都建议使用全量备份。此功能可以用于少部分没有关联性的数据单表迁移（比如：用户表、环境变量、资产数据）\n\n# 导入备份\n\n将您将之前导出的数据库备份文件重新上传到当前系统中\n\n注意\n\n请您一定上传正确的 sql 文件，上传不会检查文件中的数据合法性，如果上传错误的 sql 文件再对齐进行还原可能会影响到整个数据库\n\n# 还原备份\n\n还原备份是将数据库还原到指定备份中的数据，还原数据有一定风险请谨慎操作。\n\n\n\n数据安全提醒\n\n在还原期间不建议使用其他功能，请一定选择合法的 sql 文件进行还原\n\n\n# MYSQL、MARIADB、POSTGRESQL\n\n系统默认未提供相关功能请自行实现',normalizedContent:'# 前言\n\n\n# 服务端\n\n服务端中默认使用 h2 数据库来存储数据，使用 h2 数据库系统默认提供数据库自动备份功能。\n\n管理数据库备份功能路径：【系统管理】->【服务端配置】->【数据库备份】\n\n温馨提示\n\n如果您使用的是 mysql、postgresql、mariadb 数据库那么没有该菜单奥\n\n\n# 插件端\n\n插件端是没有数据库概念的，因为插件端的所有数据均是采用 json 文件存储。\n\n\n# 数据库异常\n\n\n# 字段未找到（h2/mysql/postgresql/mariadb）\n\ncaused by: org.h2.jdbc.jdbcsqlintegrityconstraintviolationexception: null not allowed for column "xxxx"; sql statement:\n\n\n1\n\n\n出现原因可能是版本会退，还原低版本数据。造成新版程序需要的字段在数据库中不存在。\n\n> 注意上述错误仅是一个很简单的示例，实际中的错误可能是不同的（h2 、mysql、postgresql、mariadb 异常均不同）\n\n\n# 表未找到（h2/mysql/postgresql/mariadb）\n\n此情况通常在 mysql、postgresql、mariadb 数据库下发生，因为使用 mysql、postgresql、mariadb 时数据表是可能被其他人员手动维护或者勿操作。\n\nh2 数据库默认为开启数据库在线管理的功能，如果您需要请手动开启\n\n\n# 函数未找到\n\n# mysql\n\n服务端在实现 mysql 数据库的情况下为来能自动升级（管理）表结构系统将自动在数据库中创建函数、存储过程\n\n * column_exists 【函数】\n * drop_column_if_exists 【存储过程】\n * add_column_if_not_exists 【存储过程】\n * drop_index_if_exists 【存储过程】\n\n# mariadb\n\n服务端在实现 mariadb 数据库的情况下为来能自动升级（管理）表结构系统将自动在数据库中创建函数、存储过程\n\n * column_exists1 【函数】\n * drop_column_if_exists 【存储过程】\n * add_column_if_not_exists 【存储过程】\n * drop_index_if_exists 【存储过程】\n\n# postgresql\n\n服务端在实现 postgresql 数据库的情况下为来能自动升级（管理）表结构系统将自动在数据库中创建函数、存储过程\n\n * column_exists【函数】\n * exec_if_column_exists【存储过程】\n * drop_column_if_exists 【存储过程】\n * add_column_if_not_exists 【存储过程】\n * drop_index_if_exists 【存储过程】\n * instr 【函数】\n\n您在自己备份时还需要将函数和存储过程一起备份奥，同时您在后续使用过程中也不能删除上述函数和存储过程。\n\n当您删除上次函数或者存储过程后程序不会立马出问题，会在需要变更变结构时候触发而保持，出现类似错误不要慌请看文档后续描述\n\n----------------------------------------\n\n通用解决办法：\n\n 1. 在执行启动命令后填参数 --rest:load_init_db\n\nbash /xxxx/server.sh restart -15 --rest:load_init_db\n\n\n1\n\n\n./server.bat restart --rest:load_init_db\n\n\n1\n\n 2. 手动删除数据目录里面的数据库初始化记录文件 路径为：${jpom数据目录}/db/execute.init.sql.log 文件后重新启动\n\n\n# 无法正常启动，数据无法链接（h2）\n\n出现原因大部分为非正确停止程序造成 h2 数据库文件损坏\n\n特别提醒：建议在重启服务器前先关闭服务端，尽量不使用 kill -9 xxx 来关闭服务端\n\n解决办法：\n\n 1. 【推荐】从备份恢复（系统默认每天备份一次）\n    1. 找到数据库备份文件 路径为：${jpom数据目录}/db/backup/xxx.sql 文件名为时间建议使用最后一次备份文件\n    2. 将 ${jpom数据目录}/db/ 整个目录备份后删除\n    3. 重启服务端\n    4. 到系统管理->数据库备份 中去上传 sql 文件恢复\n 2. 尝试自动恢复（能恢复到最后状态的数据）\n    1. 在执行启动命令后填参数 --recover:h2db\n    2. linux:bash /xxxx/server.sh restart -15 --recover:h2db\n    3. windows:./server.bat restart --recover:h2db\n    4. 此方法不一定成功，或者可能出现恢复后的数据不完整（恢复后需要检查数据是否完整）\n\n\n# 升级数据库？\n\n在 jpom 中您不需要考虑升级版本时需要升级数据库的操作，因为系统会自动执行新版本中需要修改的表结构，完全不需要您手动控制。\n\n警告\n\n我们非常不建议您手动修改数据库表结构或者删除数据，因为在您不熟悉表结构和数据关联性时修改数据极其容易产生错误数据而造成系统无法正常使用或者未知异常\n\n\n# 手动备份数据\n\n\n# h2\n\n系统默认提供来数据库备份功能\n\n默认自动触发机制为：\n\n * 隔一天备份一份\n * 升级前备份一份\n\n保留机制：\n\n * 自动触发的备份保留 5 份\n * 手动触发备份长期保留\n\n如何修改备份机制：【系统管理】->【服务端管理】->【系统配置】\n\n * jpom.db.auto-backup-interval-day\n * jpom.db.auto-backup-reserve-day\n\n\n\n数据备份文件保持路径：服务端数据目录/db/backup/xxxxxxx.sql\n\n# 管理数据库备份\n\n针对 h2 数据库备份管理我们提供来，导入备份、导出备份、还原备份等相关功能\n\n路径：【系统管理】->【服务端管理】->【数据库备份】\n\n\n\n#####全量备份\n\n是指将这个数据库进行备份\n\n# 部分备份\n\n指定数据库表进行备份\n\n\n\n注意：一般情况下无须使用此功能，都建议使用全量备份。此功能可以用于少部分没有关联性的数据单表迁移（比如：用户表、环境变量、资产数据）\n\n# 导入备份\n\n将您将之前导出的数据库备份文件重新上传到当前系统中\n\n注意\n\n请您一定上传正确的 sql 文件，上传不会检查文件中的数据合法性，如果上传错误的 sql 文件再对齐进行还原可能会影响到整个数据库\n\n# 还原备份\n\n还原备份是将数据库还原到指定备份中的数据，还原数据有一定风险请谨慎操作。\n\n\n\n数据安全提醒\n\n在还原期间不建议使用其他功能，请一定选择合法的 sql 文件进行还原\n\n\n# mysql、mariadb、postgresql\n\n系统默认未提供相关功能请自行实现',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"H2 迁移到 POSTGRESQL",frontmatter:{title:"H2 迁移到 POSTGRESQL",date:"2024-04-01T14:21:11.000Z",permalink:"/pages/db/e59f84/",categories:["docs","文档","如何升级"],tags:["postgresql"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/020.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/0992.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E5%88%B0%20postgresql.html",relativePath:"文档/012.备份&升级/020.数据库管理/0992.数据库迁移到 postgresql.md",key:"v-408de39c",path:"/pages/db/e59f84/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"系统升级",slug:"系统升级",normalizedTitle:"系统升级",charIndex:124},{level:3,title:"如何创建 h2 数据备份",slug:"如何创建-h2-数据备份",normalizedTitle:"如何创建 h2 数据备份",charIndex:235},{level:4,title:"页面操作创建",slug:"页面操作创建",normalizedTitle:"页面操作创建",charIndex:251},{level:4,title:"命令行创建",slug:"命令行创建",normalizedTitle:"命令行创建",charIndex:267},{level:2,title:"修改配置",slug:"修改配置",normalizedTitle:"修改配置",charIndex:328},{level:2,title:"执行命令",slug:"执行命令",normalizedTitle:"执行命令",charIndex:1151},{level:2,title:"查看结果",slug:"查看结果",normalizedTitle:"查看结果",charIndex:1407},{level:2,title:"如果失败了，不要慌！！！",slug:"如果失败了-不要慌",normalizedTitle:"如果失败了，不要慌！！！",charIndex:13743},{level:2,title:"数据备份",slug:"数据备份",normalizedTitle:"数据备份",charIndex:243}],headersStr:"前言 系统升级 如何创建 h2 数据备份 页面操作创建 命令行创建 修改配置 执行命令 查看结果 如果失败了，不要慌！！！ 数据备份",content:"# 前言\n\nJpom 服务端的数据默认存储到 H2 database 中\n\n部分用户有需求期望数据存储到 postgresql 中\n\n提醒\n\n使用 postgresql 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.11.4\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/Server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 POSTGRESQL\n * 修改 jpom.db.url 为您 postgresql 的 jdbc 地址( jdbc:postgresql://127.0.0.1:5432/jpom)\n * 修改 jpom.db.user-name 为对应 postgresql 账户 -修改 jpom.db.user-pwd 为对应 postgresql 密码\n\n  db: \n    mode: POSTGRESQL\n    url:  jdbc:postgresql://127.0.0.1:5432/jpom\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: jpom\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: jpom123456\n    # h2 数据库缓存大小  kilobyte 1KB 1,024 megabyte 1MB 1,048,576\n    #cache-size: 50MB\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/Server.sh restart -15 --h2-migrate-postgresql --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2024-04-01 20:16:02.829 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:150] - 开始执行数据库事件：迁移数据\n2024-04-01 20:16:02.830 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:74] - 开始迁移 h2 数据到 POSTGRESQL\n2024-04-01 20:16:02.857 [main] DEBUG c.h.d.DbUtil [DbUtil.java:201] - Show sql: [false], format sql: [false], show params: [false], level: [DEBUG]\n2024-04-01 20:16:02.858 [main] DEBUG c.h.d.d.DSFactory [DSFactory.java:141] - Use [Hutool-Pooled-DataSource] DataSource As Default\n2024-04-01 20:16:03.720 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:85] - 成功连接 H2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] DEBUG o.d.j.p.DefaultDbH2PluginImpl [DefaultDbH2PluginImpl.java:167] - backup SQL is: SCRIPT DROP to '/Users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:96] - H2 数据库备份成功：/Users/user/jpom/server/db/backup/20240401201603.sql\n2024-04-01 20:16:04.617 [main] DEBUG c.h.d.DbUtil [DbUtil.java:201] - Show sql: [false], format sql: [false], show params: [false], level: [DEBUG]\n2024-04-01 20:16:04.618 [main] DEBUG c.h.d.d.DSFactory [DSFactory.java:141] - Use [Hutool-Pooled-DataSource] DataSource As Default\n2024-04-01 20:16:04.867 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:101] - 成功连接 POSTGRESQL jdbc:postgresql://127.0.0.1:5432/jpom\n2024-04-01 20:16:04.882 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:114] - 准备迁移数据\n2024-04-01 20:16:04.883 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 构建历史 BUILDHISTORYLOG\n2024-04-01 20:16:05.275 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 构建历史 迁移成功 111 条数据\n2024-04-01 20:16:05.276 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 构建信息 BUILD_INFO\n2024-04-01 20:16:05.320 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 构建信息 迁移成功 13 条数据\n2024-04-01 20:16:05.321 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 证书信息表 CERTIFICATE_INFO\n2024-04-01 20:16:05.331 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 证书信息表 迁移成功 1 条数据\n2024-04-01 20:16:05.331 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 集群信息 CLUSTER_INFO\n2024-04-01 20:16:05.338 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 集群信息 迁移成功 1 条数据\n2024-04-01 20:16:05.339 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 命令执行记录 COMMAND_EXEC_LOG\n2024-04-01 20:16:05.356 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 命令执行记录 迁移成功 8 条数据\n2024-04-01 20:16:05.357 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 命令管理 COMMAND_INFO\n2024-04-01 20:16:05.365 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 命令管理 迁移成功 2 条数据\n2024-04-01 20:16:05.366 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 docker 信息 DOCKER_INFO\n2024-04-01 20:16:05.378 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - docker 信息 迁移成功 4 条数据\n2024-04-01 20:16:05.379 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 docker 集群信息 DOCKER_SWARM_INFO\n2024-04-01 20:16:05.388 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - docker 集群信息 迁移成功 2 条数据\n2024-04-01 20:16:05.388 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 文件发布任务记录 FILE_RELEASE_TASK_LOG\n2024-04-01 20:16:05.390 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 文件发布任务记录 迁移成功 0 条数据\n2024-04-01 20:16:05.390 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 文件管理中心 FILE_STORAGE\n2024-04-01 20:16:05.397 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 文件管理中心 迁移成功 1 条数据\n2024-04-01 20:16:05.397 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 日志阅读 LOG_READ\n2024-04-01 20:16:05.398 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 日志阅读 迁移成功 0 条数据\n2024-04-01 20:16:05.399 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器DOCKER信息 MACHINE_DOCKER_INFO\n2024-04-01 20:16:05.412 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器DOCKER信息 迁移成功 4 条数据\n2024-04-01 20:16:05.413 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器节点信息 MACHINE_NODE_INFO\n2024-04-01 20:16:05.433 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器节点信息 迁移成功 5 条数据\n2024-04-01 20:16:05.433 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 资产机器节点统计 MACHINE_NODE_STAT_LOG\n2024-04-01 20:16:05.434 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 资产机器节点统计 迁移成功 0 条数据\n2024-04-01 20:16:05.435 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器SSH信息 MACHINE_SSH_INFO\n2024-04-01 20:16:05.443 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器SSH信息 迁移成功 1 条数据\n2024-04-01 20:16:05.443 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控信息 MONITOR_INFO\n2024-04-01 20:16:05.445 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控信息 迁移成功 0 条数据\n2024-04-01 20:16:05.445 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控通知 MONITORNOTIFYLOG\n2024-04-01 20:16:05.446 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控通知 迁移成功 0 条数据\n2024-04-01 20:16:05.447 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控用户操作 MONITOR_USER_OPT\n2024-04-01 20:16:05.448 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控用户操作 迁移成功 0 条数据\n2024-04-01 20:16:05.448 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点信息 NODE_INFO\n2024-04-01 20:16:05.466 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点信息 迁移成功 7 条数据\n2024-04-01 20:16:05.467 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点脚本模版 SCRIPT_INFO\n2024-04-01 20:16:05.499 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点脚本模版 迁移成功 6 条数据\n2024-04-01 20:16:05.499 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点脚本模版执行记录 SCRIPT_EXECUTE_LOG\n2024-04-01 20:16:05.546 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点脚本模版执行记录 迁移成功 18 条数据\n2024-04-01 20:16:05.548 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 分发日志 OUTGIVINGLOG\n2024-04-01 20:16:05.643 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 分发日志 迁移成功 61 条数据\n2024-04-01 20:16:05.644 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点分发 OUT_GIVING\n2024-04-01 20:16:05.656 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点分发 迁移成功 3 条数据\n2024-04-01 20:16:05.657 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 项目信息 PROJECT_INFO\n2024-04-01 20:16:05.674 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 项目信息 迁移成功 7 条数据\n2024-04-01 20:16:05.675 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 仓库信息 REPOSITORY\n2024-04-01 20:16:05.684 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 仓库信息 迁移成功 3 条数据\n2024-04-01 20:16:05.685 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 脚本模版执行记录 SERVER_SCRIPT_EXECUTE_LOG\n2024-04-01 20:16:06.032 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 脚本模版执行记录 迁移成功 283 条数据\n2024-04-01 20:16:06.033 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 脚本模版 SERVER_SCRIPT_INFO\n2024-04-01 20:16:06.043 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 脚本模版 迁移成功 2 条数据\n2024-04-01 20:16:06.044 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 SSH 信息 SSH_INFO\n2024-04-01 20:16:06.050 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - SSH 信息 迁移成功 1 条数据\n2024-04-01 20:16:06.051 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 ssh 终端执行日志 SSHTERMINALEXECUTELOG\n2024-04-01 20:16:06.052 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - ssh 终端执行日志 迁移成功 0 条数据\n2024-04-01 20:16:06.052 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 静态文件管理 STATIC_FILE_STORAGE\n2024-04-01 20:16:06.053 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 静态文件管理 迁移成功 0 条数据\n2024-04-01 20:16:06.053 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 系统参数 SYSTEM_PARAMETERS\n2024-04-01 20:16:06.067 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 系统参数 迁移成功 9 条数据\n2024-04-01 20:16:06.068 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 触发器 token TRIGGER_TOKEN_LOG\n2024-04-01 20:16:06.085 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 触发器 token 迁移成功 12 条数据\n2024-04-01 20:16:06.086 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户(权限组)工作空间关系表 USER_BIND_WORKSPACE\n2024-04-01 20:16:06.113 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户(权限组)工作空间关系表 迁移成功 26 条数据\n2024-04-01 20:16:06.113 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户登录日志 USER_LOGIN_LOG\n2024-04-01 20:16:06.160 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户登录日志 迁移成功 54 条数据\n2024-04-01 20:16:06.160 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户账号 USER_INFO\n2024-04-01 20:16:06.168 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户账号 迁移成功 3 条数据\n2024-04-01 20:16:06.168 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户操作日志 USEROPERATELOGV1\n2024-04-01 20:16:10.650 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户操作日志 迁移成功 4403 条数据\n2024-04-01 20:16:10.651 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户权限组 USER_PERMISSION_GROUP\n2024-04-01 20:16:10.656 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户权限组 迁移成功 2 条数据\n2024-04-01 20:16:10.656 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 工作空间环境变量 WORKSPACE_ENV_VAR\n2024-04-01 20:16:10.667 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 工作空间环境变量 迁移成功 9 条数据\n2024-04-01 20:16:10.667 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 工作空间 WORKSPACE\n2024-04-01 20:16:10.672 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 工作空间 迁移成功 3 条数据\n2024-04-01 20:16:10.677 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:120] - 迁移完成,累计迁移 5065 条数据,耗时：7秒819毫秒\n2024-04-01 20:16:10.792 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:123] - 准备删除当前数据库文件\nNo database files have been found in directory /Users/user/jpom/server/db for the database Server\n2024-04-01 20:16:10.868 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:125] - 自动备份 h2 数据库文件,备份文件位于：/Users/user/jpom/server/db/recover_backup/20240401201610\n2024-04-01 20:16:10.868 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:154] - 数据库 迁移数据 事件执行结束,：0\n2024-04-01 20:16:10.869 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:168] - POSTGRESQL db Successfully loaded, url is 【jdbc:postgresql://127.0.0.1:5432/jpom】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 postgresql 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2024-04-01 20:16:03.720 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:85] - 成功连接 H2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] DEBUG o.d.j.p.DefaultDbH2PluginImpl [DefaultDbH2PluginImpl.java:167] - backup SQL is: SCRIPT DROP to '/Users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:96] - H2 数据库备份成功：/Users/user/jpom/server/db/backup/20240401201603.sql\n\n\n1\n2\n3\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/Server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# 数据备份\n\n如果您使用 postgresql 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\npostgresql 有非常成熟并且简单的备份方案请自行实现",normalizedContent:"# 前言\n\njpom 服务端的数据默认存储到 h2 database 中\n\n部分用户有需求期望数据存储到 postgresql 中\n\n提醒\n\n使用 postgresql 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.11.4\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 postgresql\n * 修改 jpom.db.url 为您 postgresql 的 jdbc 地址( jdbc:postgresql://127.0.0.1:5432/jpom)\n * 修改 jpom.db.user-name 为对应 postgresql 账户 -修改 jpom.db.user-pwd 为对应 postgresql 密码\n\n  db: \n    mode: postgresql\n    url:  jdbc:postgresql://127.0.0.1:5432/jpom\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: jpom\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: jpom123456\n    # h2 数据库缓存大小  kilobyte 1kb 1,024 megabyte 1mb 1,048,576\n    #cache-size: 50mb\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/server.sh restart -15 --h2-migrate-postgresql --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2024-04-01 20:16:02.829 [main] info  o.d.j.s.d.initdb [initdb.java:150] - 开始执行数据库事件：迁移数据\n2024-04-01 20:16:02.830 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:74] - 开始迁移 h2 数据到 postgresql\n2024-04-01 20:16:02.857 [main] debug c.h.d.dbutil [dbutil.java:201] - show sql: [false], format sql: [false], show params: [false], level: [debug]\n2024-04-01 20:16:02.858 [main] debug c.h.d.d.dsfactory [dsfactory.java:141] - use [hutool-pooled-datasource] datasource as default\n2024-04-01 20:16:03.720 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:85] - 成功连接 h2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] debug o.d.j.p.defaultdbh2pluginimpl [defaultdbh2pluginimpl.java:167] - backup sql is: script drop to '/users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:96] - h2 数据库备份成功：/users/user/jpom/server/db/backup/20240401201603.sql\n2024-04-01 20:16:04.617 [main] debug c.h.d.dbutil [dbutil.java:201] - show sql: [false], format sql: [false], show params: [false], level: [debug]\n2024-04-01 20:16:04.618 [main] debug c.h.d.d.dsfactory [dsfactory.java:141] - use [hutool-pooled-datasource] datasource as default\n2024-04-01 20:16:04.867 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:101] - 成功连接 postgresql jdbc:postgresql://127.0.0.1:5432/jpom\n2024-04-01 20:16:04.882 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:114] - 准备迁移数据\n2024-04-01 20:16:04.883 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 构建历史 buildhistorylog\n2024-04-01 20:16:05.275 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 构建历史 迁移成功 111 条数据\n2024-04-01 20:16:05.276 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 构建信息 build_info\n2024-04-01 20:16:05.320 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 构建信息 迁移成功 13 条数据\n2024-04-01 20:16:05.321 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 证书信息表 certificate_info\n2024-04-01 20:16:05.331 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 证书信息表 迁移成功 1 条数据\n2024-04-01 20:16:05.331 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 集群信息 cluster_info\n2024-04-01 20:16:05.338 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 集群信息 迁移成功 1 条数据\n2024-04-01 20:16:05.339 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 命令执行记录 command_exec_log\n2024-04-01 20:16:05.356 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 命令执行记录 迁移成功 8 条数据\n2024-04-01 20:16:05.357 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 命令管理 command_info\n2024-04-01 20:16:05.365 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 命令管理 迁移成功 2 条数据\n2024-04-01 20:16:05.366 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 docker 信息 docker_info\n2024-04-01 20:16:05.378 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - docker 信息 迁移成功 4 条数据\n2024-04-01 20:16:05.379 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 docker 集群信息 docker_swarm_info\n2024-04-01 20:16:05.388 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - docker 集群信息 迁移成功 2 条数据\n2024-04-01 20:16:05.388 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 文件发布任务记录 file_release_task_log\n2024-04-01 20:16:05.390 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 文件发布任务记录 迁移成功 0 条数据\n2024-04-01 20:16:05.390 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 文件管理中心 file_storage\n2024-04-01 20:16:05.397 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 文件管理中心 迁移成功 1 条数据\n2024-04-01 20:16:05.397 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 日志阅读 log_read\n2024-04-01 20:16:05.398 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 日志阅读 迁移成功 0 条数据\n2024-04-01 20:16:05.399 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器docker信息 machine_docker_info\n2024-04-01 20:16:05.412 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器docker信息 迁移成功 4 条数据\n2024-04-01 20:16:05.413 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器节点信息 machine_node_info\n2024-04-01 20:16:05.433 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器节点信息 迁移成功 5 条数据\n2024-04-01 20:16:05.433 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 资产机器节点统计 machine_node_stat_log\n2024-04-01 20:16:05.434 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 资产机器节点统计 迁移成功 0 条数据\n2024-04-01 20:16:05.435 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器ssh信息 machine_ssh_info\n2024-04-01 20:16:05.443 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器ssh信息 迁移成功 1 条数据\n2024-04-01 20:16:05.443 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控信息 monitor_info\n2024-04-01 20:16:05.445 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控信息 迁移成功 0 条数据\n2024-04-01 20:16:05.445 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控通知 monitornotifylog\n2024-04-01 20:16:05.446 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控通知 迁移成功 0 条数据\n2024-04-01 20:16:05.447 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控用户操作 monitor_user_opt\n2024-04-01 20:16:05.448 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控用户操作 迁移成功 0 条数据\n2024-04-01 20:16:05.448 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点信息 node_info\n2024-04-01 20:16:05.466 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点信息 迁移成功 7 条数据\n2024-04-01 20:16:05.467 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点脚本模版 script_info\n2024-04-01 20:16:05.499 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点脚本模版 迁移成功 6 条数据\n2024-04-01 20:16:05.499 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点脚本模版执行记录 script_execute_log\n2024-04-01 20:16:05.546 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点脚本模版执行记录 迁移成功 18 条数据\n2024-04-01 20:16:05.548 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 分发日志 outgivinglog\n2024-04-01 20:16:05.643 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 分发日志 迁移成功 61 条数据\n2024-04-01 20:16:05.644 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点分发 out_giving\n2024-04-01 20:16:05.656 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点分发 迁移成功 3 条数据\n2024-04-01 20:16:05.657 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 项目信息 project_info\n2024-04-01 20:16:05.674 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 项目信息 迁移成功 7 条数据\n2024-04-01 20:16:05.675 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 仓库信息 repository\n2024-04-01 20:16:05.684 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 仓库信息 迁移成功 3 条数据\n2024-04-01 20:16:05.685 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 脚本模版执行记录 server_script_execute_log\n2024-04-01 20:16:06.032 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 脚本模版执行记录 迁移成功 283 条数据\n2024-04-01 20:16:06.033 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 脚本模版 server_script_info\n2024-04-01 20:16:06.043 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 脚本模版 迁移成功 2 条数据\n2024-04-01 20:16:06.044 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 ssh 信息 ssh_info\n2024-04-01 20:16:06.050 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - ssh 信息 迁移成功 1 条数据\n2024-04-01 20:16:06.051 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 ssh 终端执行日志 sshterminalexecutelog\n2024-04-01 20:16:06.052 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - ssh 终端执行日志 迁移成功 0 条数据\n2024-04-01 20:16:06.052 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 静态文件管理 static_file_storage\n2024-04-01 20:16:06.053 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 静态文件管理 迁移成功 0 条数据\n2024-04-01 20:16:06.053 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 系统参数 system_parameters\n2024-04-01 20:16:06.067 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 系统参数 迁移成功 9 条数据\n2024-04-01 20:16:06.068 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 触发器 token trigger_token_log\n2024-04-01 20:16:06.085 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 触发器 token 迁移成功 12 条数据\n2024-04-01 20:16:06.086 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户(权限组)工作空间关系表 user_bind_workspace\n2024-04-01 20:16:06.113 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户(权限组)工作空间关系表 迁移成功 26 条数据\n2024-04-01 20:16:06.113 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户登录日志 user_login_log\n2024-04-01 20:16:06.160 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户登录日志 迁移成功 54 条数据\n2024-04-01 20:16:06.160 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户账号 user_info\n2024-04-01 20:16:06.168 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户账号 迁移成功 3 条数据\n2024-04-01 20:16:06.168 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户操作日志 useroperatelogv1\n2024-04-01 20:16:10.650 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户操作日志 迁移成功 4403 条数据\n2024-04-01 20:16:10.651 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户权限组 user_permission_group\n2024-04-01 20:16:10.656 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户权限组 迁移成功 2 条数据\n2024-04-01 20:16:10.656 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 工作空间环境变量 workspace_env_var\n2024-04-01 20:16:10.667 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 工作空间环境变量 迁移成功 9 条数据\n2024-04-01 20:16:10.667 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 工作空间 workspace\n2024-04-01 20:16:10.672 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 工作空间 迁移成功 3 条数据\n2024-04-01 20:16:10.677 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:120] - 迁移完成,累计迁移 5065 条数据,耗时：7秒819毫秒\n2024-04-01 20:16:10.792 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:123] - 准备删除当前数据库文件\nno database files have been found in directory /users/user/jpom/server/db for the database server\n2024-04-01 20:16:10.868 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:125] - 自动备份 h2 数据库文件,备份文件位于：/users/user/jpom/server/db/recover_backup/20240401201610\n2024-04-01 20:16:10.868 [main] info  o.d.j.s.d.initdb [initdb.java:154] - 数据库 迁移数据 事件执行结束,：0\n2024-04-01 20:16:10.869 [main] info  o.d.j.s.d.initdb [initdb.java:168] - postgresql db successfully loaded, url is 【jdbc:postgresql://127.0.0.1:5432/jpom】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 postgresql 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2024-04-01 20:16:03.720 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:85] - 成功连接 h2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] debug o.d.j.p.defaultdbh2pluginimpl [defaultdbh2pluginimpl.java:167] - backup sql is: script drop to '/users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:96] - h2 数据库备份成功：/users/user/jpom/server/db/backup/20240401201603.sql\n\n\n1\n2\n3\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# 数据备份\n\n如果您使用 postgresql 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\npostgresql 有非常成熟并且简单的备份方案请自行实现",charsets:{cjk:!0},lastUpdated:"2025/05/12, 05:34:28",lastUpdatedTimestamp:1747028068e3},{title:"H2 迁移到 DAMENG",frontmatter:{title:"H2 迁移到 DAMENG",date:"2025-05-12T14:21:11.000Z",permalink:"/pages/db/e59f85/",categories:["docs","文档","如何升级"],tags:["dameng"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/020.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/0993.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E5%88%B0%20dameng.html",relativePath:"文档/012.备份&升级/020.数据库管理/0993.数据库迁移到 dameng.md",key:"v-36117e5c",path:"/pages/db/e59f85/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"系统升级",slug:"系统升级",normalizedTitle:"系统升级",charIndex:116},{level:3,title:"如何创建 h2 数据备份",slug:"如何创建-h2-数据备份",normalizedTitle:"如何创建 h2 数据备份",charIndex:235},{level:4,title:"页面操作创建",slug:"页面操作创建",normalizedTitle:"页面操作创建",charIndex:251},{level:4,title:"命令行创建",slug:"命令行创建",normalizedTitle:"命令行创建",charIndex:267},{level:2,title:"修改配置",slug:"修改配置",normalizedTitle:"修改配置",charIndex:328},{level:2,title:"执行命令",slug:"执行命令",normalizedTitle:"执行命令",charIndex:1138},{level:2,title:"查看结果",slug:"查看结果",normalizedTitle:"查看结果",charIndex:1390},{level:2,title:"如果失败了，不要慌！！！",slug:"如果失败了-不要慌",normalizedTitle:"如果失败了，不要慌！！！",charIndex:13725},{level:2,title:"数据备份",slug:"数据备份",normalizedTitle:"数据备份",charIndex:243}],headersStr:"前言 系统升级 如何创建 h2 数据备份 页面操作创建 命令行创建 修改配置 执行命令 查看结果 如果失败了，不要慌！！！ 数据备份",content:"# 前言\n\nJpom 服务端的数据默认存储到 H2 database 中\n\n部分用户有需求期望数据存储到 dameng 中\n\n提醒\n\n使用 dameng 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.11.12.1-beta\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/Server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 DAMENG\n * 修改 jpom.db.url 为您 dameng 的 jdbc 地址( jdbc:dm://192.168.30.29:5236?schema=JPOM)\n * 修改 jpom.db.user-name 为对应 dameng 账户 -修改 jpom.db.user-pwd 为对应 dameng 密码\n\n  db: \n    mode: DAMENG\n    url:  jdbc:dm://192.168.30.29:5236?schema=JPOM\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: SYSDBA\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: SYSDBA001\n    # h2 数据库缓存大小  kilobyte 1KB 1,024 megabyte 1MB 1,048,576\n    #cache-size: 50MB\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/Server.sh restart -15 --h2-migrate-dameng --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2024-04-01 20:16:02.829 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:150] - 开始执行数据库事件：迁移数据\n2024-04-01 20:16:02.830 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:74] - 开始迁移 h2 数据到 DAMENG\n2024-04-01 20:16:02.857 [main] DEBUG c.h.d.DbUtil [DbUtil.java:201] - Show sql: [false], format sql: [false], show params: [false], level: [DEBUG]\n2024-04-01 20:16:02.858 [main] DEBUG c.h.d.d.DSFactory [DSFactory.java:141] - Use [Hutool-Pooled-DataSource] DataSource As Default\n2024-04-01 20:16:03.720 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:85] - 成功连接 H2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] DEBUG o.d.j.p.DefaultDbH2PluginImpl [DefaultDbH2PluginImpl.java:167] - backup SQL is: SCRIPT DROP to '/Users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:96] - H2 数据库备份成功：/Users/user/jpom/server/db/backup/20240401201603.sql\n2024-04-01 20:16:04.617 [main] DEBUG c.h.d.DbUtil [DbUtil.java:201] - Show sql: [false], format sql: [false], show params: [false], level: [DEBUG]\n2024-04-01 20:16:04.618 [main] DEBUG c.h.d.d.DSFactory [DSFactory.java:141] - Use [Hutool-Pooled-DataSource] DataSource As Default\n2024-04-01 20:16:04.867 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:101] - 成功连接 POSTGRESQL jdbc:postgresql://127.0.0.1:5432/jpom\n2024-04-01 20:16:04.882 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:114] - 准备迁移数据\n2024-04-01 20:16:04.883 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 构建历史 BUILDHISTORYLOG\n2024-04-01 20:16:05.275 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 构建历史 迁移成功 111 条数据\n2024-04-01 20:16:05.276 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 构建信息 BUILD_INFO\n2024-04-01 20:16:05.320 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 构建信息 迁移成功 13 条数据\n2024-04-01 20:16:05.321 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 证书信息表 CERTIFICATE_INFO\n2024-04-01 20:16:05.331 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 证书信息表 迁移成功 1 条数据\n2024-04-01 20:16:05.331 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 集群信息 CLUSTER_INFO\n2024-04-01 20:16:05.338 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 集群信息 迁移成功 1 条数据\n2024-04-01 20:16:05.339 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 命令执行记录 COMMAND_EXEC_LOG\n2024-04-01 20:16:05.356 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 命令执行记录 迁移成功 8 条数据\n2024-04-01 20:16:05.357 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 命令管理 COMMAND_INFO\n2024-04-01 20:16:05.365 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 命令管理 迁移成功 2 条数据\n2024-04-01 20:16:05.366 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 docker 信息 DOCKER_INFO\n2024-04-01 20:16:05.378 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - docker 信息 迁移成功 4 条数据\n2024-04-01 20:16:05.379 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 docker 集群信息 DOCKER_SWARM_INFO\n2024-04-01 20:16:05.388 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - docker 集群信息 迁移成功 2 条数据\n2024-04-01 20:16:05.388 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 文件发布任务记录 FILE_RELEASE_TASK_LOG\n2024-04-01 20:16:05.390 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 文件发布任务记录 迁移成功 0 条数据\n2024-04-01 20:16:05.390 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 文件管理中心 FILE_STORAGE\n2024-04-01 20:16:05.397 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 文件管理中心 迁移成功 1 条数据\n2024-04-01 20:16:05.397 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 日志阅读 LOG_READ\n2024-04-01 20:16:05.398 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 日志阅读 迁移成功 0 条数据\n2024-04-01 20:16:05.399 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器DOCKER信息 MACHINE_DOCKER_INFO\n2024-04-01 20:16:05.412 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器DOCKER信息 迁移成功 4 条数据\n2024-04-01 20:16:05.413 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器节点信息 MACHINE_NODE_INFO\n2024-04-01 20:16:05.433 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器节点信息 迁移成功 5 条数据\n2024-04-01 20:16:05.433 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 资产机器节点统计 MACHINE_NODE_STAT_LOG\n2024-04-01 20:16:05.434 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 资产机器节点统计 迁移成功 0 条数据\n2024-04-01 20:16:05.435 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器SSH信息 MACHINE_SSH_INFO\n2024-04-01 20:16:05.443 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器SSH信息 迁移成功 1 条数据\n2024-04-01 20:16:05.443 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控信息 MONITOR_INFO\n2024-04-01 20:16:05.445 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控信息 迁移成功 0 条数据\n2024-04-01 20:16:05.445 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控通知 MONITORNOTIFYLOG\n2024-04-01 20:16:05.446 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控通知 迁移成功 0 条数据\n2024-04-01 20:16:05.447 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控用户操作 MONITOR_USER_OPT\n2024-04-01 20:16:05.448 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控用户操作 迁移成功 0 条数据\n2024-04-01 20:16:05.448 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点信息 NODE_INFO\n2024-04-01 20:16:05.466 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点信息 迁移成功 7 条数据\n2024-04-01 20:16:05.467 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点脚本模版 SCRIPT_INFO\n2024-04-01 20:16:05.499 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点脚本模版 迁移成功 6 条数据\n2024-04-01 20:16:05.499 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点脚本模版执行记录 SCRIPT_EXECUTE_LOG\n2024-04-01 20:16:05.546 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点脚本模版执行记录 迁移成功 18 条数据\n2024-04-01 20:16:05.548 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 分发日志 OUTGIVINGLOG\n2024-04-01 20:16:05.643 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 分发日志 迁移成功 61 条数据\n2024-04-01 20:16:05.644 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点分发 OUT_GIVING\n2024-04-01 20:16:05.656 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点分发 迁移成功 3 条数据\n2024-04-01 20:16:05.657 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 项目信息 PROJECT_INFO\n2024-04-01 20:16:05.674 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 项目信息 迁移成功 7 条数据\n2024-04-01 20:16:05.675 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 仓库信息 REPOSITORY\n2024-04-01 20:16:05.684 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 仓库信息 迁移成功 3 条数据\n2024-04-01 20:16:05.685 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 脚本模版执行记录 SERVER_SCRIPT_EXECUTE_LOG\n2024-04-01 20:16:06.032 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 脚本模版执行记录 迁移成功 283 条数据\n2024-04-01 20:16:06.033 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 脚本模版 SERVER_SCRIPT_INFO\n2024-04-01 20:16:06.043 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 脚本模版 迁移成功 2 条数据\n2024-04-01 20:16:06.044 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 SSH 信息 SSH_INFO\n2024-04-01 20:16:06.050 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - SSH 信息 迁移成功 1 条数据\n2024-04-01 20:16:06.051 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 ssh 终端执行日志 SSHTERMINALEXECUTELOG\n2024-04-01 20:16:06.052 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - ssh 终端执行日志 迁移成功 0 条数据\n2024-04-01 20:16:06.052 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 静态文件管理 STATIC_FILE_STORAGE\n2024-04-01 20:16:06.053 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 静态文件管理 迁移成功 0 条数据\n2024-04-01 20:16:06.053 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 系统参数 SYSTEM_PARAMETERS\n2024-04-01 20:16:06.067 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 系统参数 迁移成功 9 条数据\n2024-04-01 20:16:06.068 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 触发器 token TRIGGER_TOKEN_LOG\n2024-04-01 20:16:06.085 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 触发器 token 迁移成功 12 条数据\n2024-04-01 20:16:06.086 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户(权限组)工作空间关系表 USER_BIND_WORKSPACE\n2024-04-01 20:16:06.113 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户(权限组)工作空间关系表 迁移成功 26 条数据\n2024-04-01 20:16:06.113 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户登录日志 USER_LOGIN_LOG\n2024-04-01 20:16:06.160 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户登录日志 迁移成功 54 条数据\n2024-04-01 20:16:06.160 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户账号 USER_INFO\n2024-04-01 20:16:06.168 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户账号 迁移成功 3 条数据\n2024-04-01 20:16:06.168 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户操作日志 USEROPERATELOGV1\n2024-04-01 20:16:10.650 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户操作日志 迁移成功 4403 条数据\n2024-04-01 20:16:10.651 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户权限组 USER_PERMISSION_GROUP\n2024-04-01 20:16:10.656 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户权限组 迁移成功 2 条数据\n2024-04-01 20:16:10.656 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 工作空间环境变量 WORKSPACE_ENV_VAR\n2024-04-01 20:16:10.667 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 工作空间环境变量 迁移成功 9 条数据\n2024-04-01 20:16:10.667 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 工作空间 WORKSPACE\n2024-04-01 20:16:10.672 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 工作空间 迁移成功 3 条数据\n2024-04-01 20:16:10.677 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:120] - 迁移完成,累计迁移 5065 条数据,耗时：7秒819毫秒\n2024-04-01 20:16:10.792 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:123] - 准备删除当前数据库文件\nNo database files have been found in directory /Users/user/jpom/server/db for the database Server\n2024-04-01 20:16:10.868 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:125] - 自动备份 h2 数据库文件,备份文件位于：/Users/user/jpom/server/db/recover_backup/20240401201610\n2024-04-01 20:16:10.868 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:154] - 数据库 迁移数据 事件执行结束,：0\n2024-04-01 20:16:10.869 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:168] - POSTGRESQL db Successfully loaded, url is 【jdbc:dm://192.168.30.29:5236?schema=JPOM】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 dameng 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2024-04-01 20:16:03.720 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:85] - 成功连接 H2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] DEBUG o.d.j.p.DefaultDbH2PluginImpl [DefaultDbH2PluginImpl.java:167] - backup SQL is: SCRIPT DROP to '/Users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:96] - H2 数据库备份成功：/Users/user/jpom/server/db/backup/20240401201603.sql\n\n\n1\n2\n3\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/Server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# 数据备份\n\n如果您使用 dameng 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\ndameng 有非常成熟并且简单的备份方案请自行实现",normalizedContent:"# 前言\n\njpom 服务端的数据默认存储到 h2 database 中\n\n部分用户有需求期望数据存储到 dameng 中\n\n提醒\n\n使用 dameng 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.11.12.1-beta\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 dameng\n * 修改 jpom.db.url 为您 dameng 的 jdbc 地址( jdbc:dm://192.168.30.29:5236?schema=jpom)\n * 修改 jpom.db.user-name 为对应 dameng 账户 -修改 jpom.db.user-pwd 为对应 dameng 密码\n\n  db: \n    mode: dameng\n    url:  jdbc:dm://192.168.30.29:5236?schema=jpom\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: sysdba\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: sysdba001\n    # h2 数据库缓存大小  kilobyte 1kb 1,024 megabyte 1mb 1,048,576\n    #cache-size: 50mb\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/server.sh restart -15 --h2-migrate-dameng --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2024-04-01 20:16:02.829 [main] info  o.d.j.s.d.initdb [initdb.java:150] - 开始执行数据库事件：迁移数据\n2024-04-01 20:16:02.830 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:74] - 开始迁移 h2 数据到 dameng\n2024-04-01 20:16:02.857 [main] debug c.h.d.dbutil [dbutil.java:201] - show sql: [false], format sql: [false], show params: [false], level: [debug]\n2024-04-01 20:16:02.858 [main] debug c.h.d.d.dsfactory [dsfactory.java:141] - use [hutool-pooled-datasource] datasource as default\n2024-04-01 20:16:03.720 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:85] - 成功连接 h2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] debug o.d.j.p.defaultdbh2pluginimpl [defaultdbh2pluginimpl.java:167] - backup sql is: script drop to '/users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:96] - h2 数据库备份成功：/users/user/jpom/server/db/backup/20240401201603.sql\n2024-04-01 20:16:04.617 [main] debug c.h.d.dbutil [dbutil.java:201] - show sql: [false], format sql: [false], show params: [false], level: [debug]\n2024-04-01 20:16:04.618 [main] debug c.h.d.d.dsfactory [dsfactory.java:141] - use [hutool-pooled-datasource] datasource as default\n2024-04-01 20:16:04.867 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:101] - 成功连接 postgresql jdbc:postgresql://127.0.0.1:5432/jpom\n2024-04-01 20:16:04.882 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:114] - 准备迁移数据\n2024-04-01 20:16:04.883 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 构建历史 buildhistorylog\n2024-04-01 20:16:05.275 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 构建历史 迁移成功 111 条数据\n2024-04-01 20:16:05.276 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 构建信息 build_info\n2024-04-01 20:16:05.320 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 构建信息 迁移成功 13 条数据\n2024-04-01 20:16:05.321 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 证书信息表 certificate_info\n2024-04-01 20:16:05.331 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 证书信息表 迁移成功 1 条数据\n2024-04-01 20:16:05.331 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 集群信息 cluster_info\n2024-04-01 20:16:05.338 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 集群信息 迁移成功 1 条数据\n2024-04-01 20:16:05.339 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 命令执行记录 command_exec_log\n2024-04-01 20:16:05.356 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 命令执行记录 迁移成功 8 条数据\n2024-04-01 20:16:05.357 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 命令管理 command_info\n2024-04-01 20:16:05.365 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 命令管理 迁移成功 2 条数据\n2024-04-01 20:16:05.366 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 docker 信息 docker_info\n2024-04-01 20:16:05.378 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - docker 信息 迁移成功 4 条数据\n2024-04-01 20:16:05.379 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 docker 集群信息 docker_swarm_info\n2024-04-01 20:16:05.388 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - docker 集群信息 迁移成功 2 条数据\n2024-04-01 20:16:05.388 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 文件发布任务记录 file_release_task_log\n2024-04-01 20:16:05.390 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 文件发布任务记录 迁移成功 0 条数据\n2024-04-01 20:16:05.390 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 文件管理中心 file_storage\n2024-04-01 20:16:05.397 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 文件管理中心 迁移成功 1 条数据\n2024-04-01 20:16:05.397 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 日志阅读 log_read\n2024-04-01 20:16:05.398 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 日志阅读 迁移成功 0 条数据\n2024-04-01 20:16:05.399 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器docker信息 machine_docker_info\n2024-04-01 20:16:05.412 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器docker信息 迁移成功 4 条数据\n2024-04-01 20:16:05.413 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器节点信息 machine_node_info\n2024-04-01 20:16:05.433 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器节点信息 迁移成功 5 条数据\n2024-04-01 20:16:05.433 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 资产机器节点统计 machine_node_stat_log\n2024-04-01 20:16:05.434 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 资产机器节点统计 迁移成功 0 条数据\n2024-04-01 20:16:05.435 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器ssh信息 machine_ssh_info\n2024-04-01 20:16:05.443 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器ssh信息 迁移成功 1 条数据\n2024-04-01 20:16:05.443 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控信息 monitor_info\n2024-04-01 20:16:05.445 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控信息 迁移成功 0 条数据\n2024-04-01 20:16:05.445 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控通知 monitornotifylog\n2024-04-01 20:16:05.446 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控通知 迁移成功 0 条数据\n2024-04-01 20:16:05.447 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控用户操作 monitor_user_opt\n2024-04-01 20:16:05.448 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控用户操作 迁移成功 0 条数据\n2024-04-01 20:16:05.448 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点信息 node_info\n2024-04-01 20:16:05.466 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点信息 迁移成功 7 条数据\n2024-04-01 20:16:05.467 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点脚本模版 script_info\n2024-04-01 20:16:05.499 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点脚本模版 迁移成功 6 条数据\n2024-04-01 20:16:05.499 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点脚本模版执行记录 script_execute_log\n2024-04-01 20:16:05.546 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点脚本模版执行记录 迁移成功 18 条数据\n2024-04-01 20:16:05.548 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 分发日志 outgivinglog\n2024-04-01 20:16:05.643 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 分发日志 迁移成功 61 条数据\n2024-04-01 20:16:05.644 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点分发 out_giving\n2024-04-01 20:16:05.656 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点分发 迁移成功 3 条数据\n2024-04-01 20:16:05.657 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 项目信息 project_info\n2024-04-01 20:16:05.674 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 项目信息 迁移成功 7 条数据\n2024-04-01 20:16:05.675 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 仓库信息 repository\n2024-04-01 20:16:05.684 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 仓库信息 迁移成功 3 条数据\n2024-04-01 20:16:05.685 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 脚本模版执行记录 server_script_execute_log\n2024-04-01 20:16:06.032 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 脚本模版执行记录 迁移成功 283 条数据\n2024-04-01 20:16:06.033 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 脚本模版 server_script_info\n2024-04-01 20:16:06.043 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 脚本模版 迁移成功 2 条数据\n2024-04-01 20:16:06.044 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 ssh 信息 ssh_info\n2024-04-01 20:16:06.050 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - ssh 信息 迁移成功 1 条数据\n2024-04-01 20:16:06.051 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 ssh 终端执行日志 sshterminalexecutelog\n2024-04-01 20:16:06.052 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - ssh 终端执行日志 迁移成功 0 条数据\n2024-04-01 20:16:06.052 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 静态文件管理 static_file_storage\n2024-04-01 20:16:06.053 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 静态文件管理 迁移成功 0 条数据\n2024-04-01 20:16:06.053 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 系统参数 system_parameters\n2024-04-01 20:16:06.067 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 系统参数 迁移成功 9 条数据\n2024-04-01 20:16:06.068 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 触发器 token trigger_token_log\n2024-04-01 20:16:06.085 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 触发器 token 迁移成功 12 条数据\n2024-04-01 20:16:06.086 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户(权限组)工作空间关系表 user_bind_workspace\n2024-04-01 20:16:06.113 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户(权限组)工作空间关系表 迁移成功 26 条数据\n2024-04-01 20:16:06.113 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户登录日志 user_login_log\n2024-04-01 20:16:06.160 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户登录日志 迁移成功 54 条数据\n2024-04-01 20:16:06.160 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户账号 user_info\n2024-04-01 20:16:06.168 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户账号 迁移成功 3 条数据\n2024-04-01 20:16:06.168 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户操作日志 useroperatelogv1\n2024-04-01 20:16:10.650 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户操作日志 迁移成功 4403 条数据\n2024-04-01 20:16:10.651 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户权限组 user_permission_group\n2024-04-01 20:16:10.656 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户权限组 迁移成功 2 条数据\n2024-04-01 20:16:10.656 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 工作空间环境变量 workspace_env_var\n2024-04-01 20:16:10.667 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 工作空间环境变量 迁移成功 9 条数据\n2024-04-01 20:16:10.667 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 工作空间 workspace\n2024-04-01 20:16:10.672 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 工作空间 迁移成功 3 条数据\n2024-04-01 20:16:10.677 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:120] - 迁移完成,累计迁移 5065 条数据,耗时：7秒819毫秒\n2024-04-01 20:16:10.792 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:123] - 准备删除当前数据库文件\nno database files have been found in directory /users/user/jpom/server/db for the database server\n2024-04-01 20:16:10.868 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:125] - 自动备份 h2 数据库文件,备份文件位于：/users/user/jpom/server/db/recover_backup/20240401201610\n2024-04-01 20:16:10.868 [main] info  o.d.j.s.d.initdb [initdb.java:154] - 数据库 迁移数据 事件执行结束,：0\n2024-04-01 20:16:10.869 [main] info  o.d.j.s.d.initdb [initdb.java:168] - postgresql db successfully loaded, url is 【jdbc:dm://192.168.30.29:5236?schema=jpom】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 dameng 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2024-04-01 20:16:03.720 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:85] - 成功连接 h2 ,开始尝试自动备份\n2024-04-01 20:16:03.727 [main] debug o.d.j.p.defaultdbh2pluginimpl [defaultdbh2pluginimpl.java:167] - backup sql is: script drop to '/users/user/jpom/server/db/backup/20240401201603.sql'\n2024-04-01 20:16:04.612 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:96] - h2 数据库备份成功：/users/user/jpom/server/db/backup/20240401201603.sql\n\n\n1\n2\n3\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# 数据备份\n\n如果您使用 dameng 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\ndameng 有非常成熟并且简单的备份方案请自行实现",charsets:{cjk:!0},lastUpdated:"2025/05/12, 05:34:28",lastUpdatedTimestamp:1747028068e3},{title:"2.10.x 升级到 2.11.x",frontmatter:{title:"2.10.x 升级到 2.11.x",date:"2024-01-13T15:13:15.000Z",permalink:"/pages/upgrade/2.10.x-to-2.11.x/",categories:["docs","文档","备份&升级"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/0996.2.10.x-2.11.x.html",relativePath:"文档/012.备份&升级/0996.2.10.x-2.11.x.md",key:"v-d3793bb4",path:"/pages/upgrade/2.10.x-to-2.11.x/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"下架的功能",slug:"下架的功能",normalizedTitle:"下架的功能",charIndex:83},{level:2,title:"较大的变化",slug:"较大的变化",normalizedTitle:"较大的变化",charIndex:382},{level:2,title:"可能需要手动处理",slug:"可能需要手动处理",normalizedTitle:"可能需要手动处理",charIndex:695},{level:2,title:"名称调整",slug:"名称调整",normalizedTitle:"名称调整",charIndex:832},{level:2,title:"前端页面",slug:"前端页面",normalizedTitle:"前端页面",charIndex:54}],headersStr:"前言 下架的功能 较大的变化 可能需要手动处理 名称调整 前端页面",content:"# 前言\n\n2.11.x 是兼容升级，此大版本主要对一些过时、不好用、有代替方案功能进行下架处理，同步也是对前端页面大版本升级（vue2 升级到 vue3）\n\n\n# 下架的功能\n\n 1. 全面下架项目副本功能（请使用 DSL 模式或者软链项目代替）如果您当前使用到此功能请先手动备份相关数据\n 2. 升级后项目副本数据会被人工或者系统更新项目数据自动删除（请一定提前做好备份操作）\n 3. 全面下架节点证书管理功能（请使用工作空间证书代替）如果您当前使用到此功能请先手动备份相关数据\n 4. 全面下架全下架节点 NGINX 管理功能（请使用 DSL 模式代替）如果您当前使用到此功能请先手动备份相关数据\n\n> ❓ 为什么要下架上述功能：由于版本迭代已经有更好的新功能可以代替之前旧功能，并且新功能从另一种角度更方便。下架也是为了我们后续版本维护迭代更高效\n\n\n# 较大的变化\n\n 1. 如果您配置了授权目录但是保存项目报错您可以尝试重新报错一下授权目录来自动修复授权目录配置数据\n 2. 项目控制台日志默认路径调整为插件端数据目录下project-log/${projectId}/${projectId}.log\n 3. 项目控制台日志备份默认路径调整为插件端数据目录下project-log/${projectId}/back/${projectId}-xxxxxxx.log\n\n> 默认项目控制台这个问题一直是之前很多人吐槽的诟病，我们在新版本做了如上的调整\n\n注意\n\n如果您的升级后您未对您的项目进行重启操作，您的项目日志仍然用的之前版本的奥，新版本控制台中无法查看到日志\n\n\n# 可能需要手动处理\n\n如果您自定义过 SSH 脚本默认那么您需要重新同步一下脚本模板/exec/template.sh -> /ssh/template.sh\n\n新版本 /exec/template.sh 中仅在服务端中生效（本地构建脚本、服务端脚本、本地发布脚本）\n\n\n# 名称调整\n\n * 【白名单】关键词统一调整为【授权】\n * 【黑名单】关键词统一调整为【禁止】\n * 部分【添加】关键词统一调整为【新增】\n\n\n# 前端页面\n\n * 升级页面 UI 组件（Ant Design Vue 4x）\n * VUE 版本升级到最新（Vue3）\n * 支持配置浅色、深色主题、左边菜单主题（Ant Design Vue默认配色）",normalizedContent:"# 前言\n\n2.11.x 是兼容升级，此大版本主要对一些过时、不好用、有代替方案功能进行下架处理，同步也是对前端页面大版本升级（vue2 升级到 vue3）\n\n\n# 下架的功能\n\n 1. 全面下架项目副本功能（请使用 dsl 模式或者软链项目代替）如果您当前使用到此功能请先手动备份相关数据\n 2. 升级后项目副本数据会被人工或者系统更新项目数据自动删除（请一定提前做好备份操作）\n 3. 全面下架节点证书管理功能（请使用工作空间证书代替）如果您当前使用到此功能请先手动备份相关数据\n 4. 全面下架全下架节点 nginx 管理功能（请使用 dsl 模式代替）如果您当前使用到此功能请先手动备份相关数据\n\n> ❓ 为什么要下架上述功能：由于版本迭代已经有更好的新功能可以代替之前旧功能，并且新功能从另一种角度更方便。下架也是为了我们后续版本维护迭代更高效\n\n\n# 较大的变化\n\n 1. 如果您配置了授权目录但是保存项目报错您可以尝试重新报错一下授权目录来自动修复授权目录配置数据\n 2. 项目控制台日志默认路径调整为插件端数据目录下project-log/${projectid}/${projectid}.log\n 3. 项目控制台日志备份默认路径调整为插件端数据目录下project-log/${projectid}/back/${projectid}-xxxxxxx.log\n\n> 默认项目控制台这个问题一直是之前很多人吐槽的诟病，我们在新版本做了如上的调整\n\n注意\n\n如果您的升级后您未对您的项目进行重启操作，您的项目日志仍然用的之前版本的奥，新版本控制台中无法查看到日志\n\n\n# 可能需要手动处理\n\n如果您自定义过 ssh 脚本默认那么您需要重新同步一下脚本模板/exec/template.sh -> /ssh/template.sh\n\n新版本 /exec/template.sh 中仅在服务端中生效（本地构建脚本、服务端脚本、本地发布脚本）\n\n\n# 名称调整\n\n * 【白名单】关键词统一调整为【授权】\n * 【黑名单】关键词统一调整为【禁止】\n * 部分【添加】关键词统一调整为【新增】\n\n\n# 前端页面\n\n * 升级页面 ui 组件（ant design vue 4x）\n * vue 版本升级到最新（vue3）\n * 支持配置浅色、深色主题、左边菜单主题（ant design vue默认配色）",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"H2 迁移到 MARIADB",frontmatter:{title:"H2 迁移到 MARIADB",date:"2024-04-01T14:21:11.000Z",permalink:"/pages/db/5622b5/",categories:["docs","文档","如何升级"],tags:["mariadb"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/020.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/0991.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E5%88%B0%20mariadb.html",relativePath:"文档/012.备份&升级/020.数据库管理/0991.数据库迁移到 mariadb.md",key:"v-e8b5de98",path:"/pages/db/5622b5/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"系统升级",slug:"系统升级",normalizedTitle:"系统升级",charIndex:118},{level:3,title:"如何创建 h2 数据备份",slug:"如何创建-h2-数据备份",normalizedTitle:"如何创建 h2 数据备份",charIndex:229},{level:4,title:"页面操作创建",slug:"页面操作创建",normalizedTitle:"页面操作创建",charIndex:245},{level:4,title:"命令行创建",slug:"命令行创建",normalizedTitle:"命令行创建",charIndex:261},{level:2,title:"修改配置",slug:"修改配置",normalizedTitle:"修改配置",charIndex:322},{level:2,title:"执行命令",slug:"执行命令",normalizedTitle:"执行命令",charIndex:1229},{level:2,title:"查看结果",slug:"查看结果",normalizedTitle:"查看结果",charIndex:1482},{level:2,title:"如果失败了，不要慌！！！",slug:"如果失败了-不要慌",normalizedTitle:"如果失败了，不要慌！！！",charIndex:16117},{level:2,title:"数据备份",slug:"数据备份",normalizedTitle:"数据备份",charIndex:237}],headersStr:"前言 系统升级 如何创建 h2 数据备份 页面操作创建 命令行创建 修改配置 执行命令 查看结果 如果失败了，不要慌！！！ 数据备份",content:"# 前言\n\nJpom 服务端的数据默认存储到 H2 database 中\n\n部分用户有需求期望数据存储到 mariadb 中\n\n提醒\n\n使用 mariadb 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.11.4\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/Server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 MARIADB\n * 修改 jpom.db.url 为您 mariadb 的 jdbc 地址( jdbc:mariadb://127.0.0.1: 3309/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false)\n * 修改 jpom.db.user-name 为对应 mariadb 账户 -修改 jpom.db.user-pwd 为对应 mariadb 密码\n\n  db: \n    mode: MARIADB\n    url:  jdbc:mariadb://xx.xx.xx.xx:3309/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: root\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: 123456\n    # h2 数据库缓存大小  kilobyte 1KB 1,024 megabyte 1MB 1,048,576\n    #cache-size: 50MB\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/Server.sh restart -15 --h2-migrate-mariadb --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2024-04-01 19:00:55.045 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:301] - 开始等待数据迁移\n2024-04-01 19:00:55.045 [main] DEBUG o.d.j.s.d.InitDb [InitDb.java:94] - 需要执行 0 个前置事件\n2024-04-01 19:00:55.050 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:97] - start load MARIADB db\n2024-04-01 19:00:55.065 [main] DEBUG c.h.d.DbUtil [DbUtil.java:201] - Show sql: [false], format sql: [false], show params: [false], level: [DEBUG]\n2024-04-01 19:00:55.066 [main] DEBUG c.h.d.d.DSFactory [DSFactory.java:141] - Use [Hutool-Pooled-DataSource] DataSource As Default\n2024-04-01 19:00:55.456 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: table.all.v1.0.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.473 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: table.all.v1.1.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.479 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: table.all.v1.2.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.499 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: execute.mariadb.v1.0.sql complete, and affected rows is: 0\n2024-04-01 19:00:55.531 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: alter.all.v1.0.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.565 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: alter.all.v1.1.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.569 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: alter.all.v1.2.1.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.594 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: alter.all.v1.2.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.662 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: alter.all.v1.3.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.691 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: alter.all.v1.4.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.750 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:221] - exec init SQL file: index.all.v1.0.csv complete, and affected rows is: 6\n2024-04-01 19:00:55.752 [main] DEBUG o.d.j.s.d.InitDb [InitDb.java:139] - 需要执行 1 个回调\n2024-04-01 19:00:55.753 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:143] - 开始执行数据库事件：迁移数据\n2024-04-01 19:00:55.753 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:74] - 开始迁移 h2 数据到 MARIADB\n2024-04-01 19:00:55.776 [main] DEBUG c.h.d.DbUtil [DbUtil.java:201] - Show sql: [false], format sql: [false], show params: [false], level: [DEBUG]\n2024-04-01 19:00:55.776 [main] DEBUG c.h.d.d.DSFactory [DSFactory.java:141] - Use [Hutool-Pooled-DataSource] DataSource As Default\n2024-04-01 19:00:56.468 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:85] - 成功连接 H2 ,开始尝试自动备份\n2024-04-01 19:00:56.475 [main] DEBUG o.d.j.p.DefaultDbH2PluginImpl [DefaultDbH2PluginImpl.java:167] - backup SQL is: SCRIPT DROP to '/Users/user/jpom/server/db/backup/20240401190056.sql'\n2024-04-01 19:00:57.057 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:96] - H2 数据库备份成功：/Users/user/jpom/server/db/backup/20240401190056.sql\n2024-04-01 19:00:57.061 [main] DEBUG c.h.d.DbUtil [DbUtil.java:201] - Show sql: [false], format sql: [false], show params: [false], level: [DEBUG]\n2024-04-01 19:00:57.061 [main] DEBUG c.h.d.d.DSFactory [DSFactory.java:141] - Use [Hutool-Pooled-DataSource] DataSource As Default\n2024-04-01 19:00:57.105 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:101] - 成功连接 MARIADB jdbc:mysql://127.0.0.1:3309/jpom\n2024-04-01 19:00:57.122 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:114] - 准备迁移数据\n2024-04-01 19:00:57.123 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 构建历史 BUILDHISTORYLOG\n2024-04-01 19:00:57.547 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 构建历史 迁移成功 111 条数据\n2024-04-01 19:00:57.547 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 构建信息 BUILD_INFO\n2024-04-01 19:00:57.579 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 构建信息 迁移成功 13 条数据\n2024-04-01 19:00:57.579 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 证书信息表 CERTIFICATE_INFO\n2024-04-01 19:00:57.586 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 证书信息表 迁移成功 1 条数据\n2024-04-01 19:00:57.586 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 集群信息 CLUSTER_INFO\n2024-04-01 19:00:57.590 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 集群信息 迁移成功 1 条数据\n2024-04-01 19:00:57.591 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 命令执行记录 COMMAND_EXEC_LOG\n2024-04-01 19:00:57.602 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 命令执行记录 迁移成功 8 条数据\n2024-04-01 19:00:57.603 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 命令管理 COMMAND_INFO\n2024-04-01 19:00:57.608 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 命令管理 迁移成功 2 条数据\n2024-04-01 19:00:57.609 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 docker 信息 DOCKER_INFO\n2024-04-01 19:00:57.620 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - docker 信息 迁移成功 4 条数据\n2024-04-01 19:00:57.620 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 docker 集群信息 DOCKER_SWARM_INFO\n2024-04-01 19:00:57.626 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - docker 集群信息 迁移成功 2 条数据\n2024-04-01 19:00:57.626 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 文件发布任务记录 FILE_RELEASE_TASK_LOG\n2024-04-01 19:00:57.627 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 文件发布任务记录 迁移成功 0 条数据\n2024-04-01 19:00:57.627 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 文件管理中心 FILE_STORAGE\n2024-04-01 19:00:57.632 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 文件管理中心 迁移成功 1 条数据\n2024-04-01 19:00:57.632 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 日志阅读 LOG_READ\n2024-04-01 19:00:57.634 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 日志阅读 迁移成功 0 条数据\n2024-04-01 19:00:57.634 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器DOCKER信息 MACHINE_DOCKER_INFO\n2024-04-01 19:00:57.657 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器DOCKER信息 迁移成功 4 条数据\n2024-04-01 19:00:57.657 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器节点信息 MACHINE_NODE_INFO\n2024-04-01 19:00:57.671 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器节点信息 迁移成功 5 条数据\n2024-04-01 19:00:57.671 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 资产机器节点统计 MACHINE_NODE_STAT_LOG\n2024-04-01 19:00:57.672 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 资产机器节点统计 迁移成功 0 条数据\n2024-04-01 19:00:57.672 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 机器SSH信息 MACHINE_SSH_INFO\n2024-04-01 19:00:57.677 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 机器SSH信息 迁移成功 1 条数据\n2024-04-01 19:00:57.677 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控信息 MONITOR_INFO\n2024-04-01 19:00:57.678 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控信息 迁移成功 0 条数据\n2024-04-01 19:00:57.678 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控通知 MONITORNOTIFYLOG\n2024-04-01 19:00:57.679 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控通知 迁移成功 0 条数据\n2024-04-01 19:00:57.679 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 监控用户操作 MONITOR_USER_OPT\n2024-04-01 19:00:57.680 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 监控用户操作 迁移成功 0 条数据\n2024-04-01 19:00:57.680 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点信息 NODE_INFO\n2024-04-01 19:00:57.692 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点信息 迁移成功 7 条数据\n2024-04-01 19:00:57.692 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点脚本模版 SCRIPT_INFO\n2024-04-01 19:00:57.712 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点脚本模版 迁移成功 6 条数据\n2024-04-01 19:00:57.713 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点脚本模版执行记录 SCRIPT_EXECUTE_LOG\n2024-04-01 19:00:57.732 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点脚本模版执行记录 迁移成功 18 条数据\n2024-04-01 19:00:57.733 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 分发日志 OUTGIVINGLOG\n2024-04-01 19:00:57.792 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 分发日志 迁移成功 61 条数据\n2024-04-01 19:00:57.793 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 节点分发 OUT_GIVING\n2024-04-01 19:00:57.802 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 节点分发 迁移成功 3 条数据\n2024-04-01 19:00:57.802 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 项目信息 PROJECT_INFO\n2024-04-01 19:00:57.817 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 项目信息 迁移成功 7 条数据\n2024-04-01 19:00:57.818 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 仓库信息 REPOSITORY\n2024-04-01 19:00:57.827 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 仓库信息 迁移成功 3 条数据\n2024-04-01 19:00:57.828 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 脚本模版执行记录 SERVER_SCRIPT_EXECUTE_LOG\n2024-04-01 19:00:58.082 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 脚本模版执行记录 迁移成功 283 条数据\n2024-04-01 19:00:58.083 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 脚本模版 SERVER_SCRIPT_INFO\n2024-04-01 19:00:58.088 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 脚本模版 迁移成功 2 条数据\n2024-04-01 19:00:58.089 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 SSH 信息 SSH_INFO\n2024-04-01 19:00:58.093 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - SSH 信息 迁移成功 1 条数据\n2024-04-01 19:00:58.094 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 ssh 终端执行日志 SSHTERMINALEXECUTELOG\n2024-04-01 19:00:58.095 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - ssh 终端执行日志 迁移成功 0 条数据\n2024-04-01 19:00:58.095 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 静态文件管理 STATIC_FILE_STORAGE\n2024-04-01 19:00:58.097 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 静态文件管理 迁移成功 0 条数据\n2024-04-01 19:00:58.098 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 系统参数 SYSTEM_PARAMETERS\n2024-04-01 19:00:58.108 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 系统参数 迁移成功 9 条数据\n2024-04-01 19:00:58.108 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 触发器 token TRIGGER_TOKEN_LOG\n2024-04-01 19:00:58.120 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 触发器 token 迁移成功 12 条数据\n2024-04-01 19:00:58.120 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户(权限组)工作空间关系表 USER_BIND_WORKSPACE\n2024-04-01 19:00:58.140 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户(权限组)工作空间关系表 迁移成功 26 条数据\n2024-04-01 19:00:58.141 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户登录日志 USER_LOGIN_LOG\n2024-04-01 19:00:58.180 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户登录日志 迁移成功 53 条数据\n2024-04-01 19:00:58.180 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户账号 USER_INFO\n2024-04-01 19:00:58.185 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户账号 迁移成功 3 条数据\n2024-04-01 19:00:58.186 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户操作日志 USEROPERATELOGV1\n2024-04-01 19:01:02.869 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户操作日志 迁移成功 4402 条数据\n2024-04-01 19:01:02.870 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 用户权限组 USER_PERMISSION_GROUP\n2024-04-01 19:01:02.873 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 用户权限组 迁移成功 2 条数据\n2024-04-01 19:01:02.873 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 工作空间环境变量 WORKSPACE_ENV_VAR\n2024-04-01 19:01:02.879 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 工作空间环境变量 迁移成功 9 条数据\n2024-04-01 19:01:02.880 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:138] - 开始迁移 工作空间 WORKSPACE\n2024-04-01 19:01:02.883 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:197] - 工作空间 迁移成功 3 条数据\n2024-04-01 19:01:02.889 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:120] - 迁移完成,累计迁移 5063 条数据,耗时：7秒112毫秒\n2024-04-01 19:01:03.036 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:123] - 准备删除当前数据库文件\nNo database files have been found in directory /Users/user/jpom/server/db for the database Server\n2024-04-01 19:01:03.084 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:125] - 自动备份 h2 数据库文件,备份文件位于：/Users/user/jpom/server/db/recover_backup/20240401190103\n2024-04-01 19:01:03.084 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:147] - 数据库 迁移数据 事件执行结束,：0\n2024-04-01 19:01:03.085 [main] INFO  o.d.j.s.d.InitDb [InitDb.java:161] - MARIADB db Successfully loaded, url is 【jdbc:mariadb://127.0.0.1:3309/jpom】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 mariadb 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2024-04-01 19:00:56.468 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:85] - 成功连接 H2 ,开始尝试自动备份\n2024-04-01 19:00:56.475 [main] DEBUG o.d.j.p.DefaultDbH2PluginImpl [DefaultDbH2PluginImpl.java:167] - backup SQL is: SCRIPT DROP to '/Users/user/jpom/server/db/backup/20240401190056.sql'\n2024-04-01 19:00:57.057 [main] INFO  o.d.j.d.StorageServiceFactory [StorageServiceFactory.java:96] - H2 数据库备份成功：/Users/user/jpom/server/db/backup/20240401190056.sql\n\n\n1\n2\n3\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/Server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# 数据备份\n\n如果您使用 mariadb 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\nmariadb 有非常成熟并且简单的备份方案请自行实现",normalizedContent:"# 前言\n\njpom 服务端的数据默认存储到 h2 database 中\n\n部分用户有需求期望数据存储到 mariadb 中\n\n提醒\n\n使用 mariadb 模式，系统管理中的数据库备份功能将不可用，数据的备份管理需要自行维护\n\n\n# 系统升级\n\n使用jpom的在线升级功能将将服务端和插件端版本升级至 2.11.4\n\n注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 如何创建 h2 数据备份\n\n# 页面操作创建\n\n\n\n\n\n\n\n# 命令行创建\n\nbash ./bin/server.sh restart -15 --backup-h2\n\n\n1\n\n\n\n# 修改配置\n\n配置文件:conf/application.yml\n\n * 修改 jpom.db.mode 为 mariadb\n * 修改 jpom.db.url 为您 mariadb 的 jdbc 地址( jdbc:mariadb://127.0.0.1: 3309/jpom?useunicode=true&characterencoding=utf-8&usessl=false)\n * 修改 jpom.db.user-name 为对应 mariadb 账户 -修改 jpom.db.user-pwd 为对应 mariadb 密码\n\n  db: \n    mode: mariadb\n    url:  jdbc:mariadb://xx.xx.xx.xx:3309/jpom?useunicode=true&characterencoding=utf-8&usessl=false\n    # 日志存储条数，将自动清理旧数据,配置小于等于零则不清理\n    log-storage-count: 10000\n    # 数据库账号 默认 jpom\n    user-name: root\n    # 数据库密码 默认 jpom 如果自行配置请保证密码强度\n    user-pwd: 123456\n    # h2 数据库缓存大小  kilobyte 1kb 1,024 megabyte 1mb 1,048,576\n    #cache-size: 50mb\n    # 自动备份间隔天数 小于等于 0 不自动备份\n    auto-backup-interval-day: 1\n    # 自动备份保留天数 小于等于 0，不自动删除自动备份数据\n    auto-backup-reserve-day: 5\n    # 数据库连接池相关配置\n    max-active: 100\n    initial-size: 10\n    max-wait: 10\n    min-idle: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 执行命令\n\nbash ./bin/server.sh restart -15 --h2-migrate-mariadb --h2-user=jpom --h2-pass=jpom\n\n\n1\n\n\n如果您修改过 h2 数据库的账号或者密码，请在命令行参数里面填写您修改过的\n\n提醒\n\n 1. 为了保证数据安全，在迁移前程序会自动创建一个数据库备份，注意查看日志输出相关信息\n 2. 在所以数据都迁移成功后程序会自动删除 h2 中的数据，并且将 h2 数据相关文件移动到备份路径，注意查看日志输出相关信息\n\n\n# 查看结果\n\n2024-04-01 19:00:55.045 [main] info  o.d.j.s.d.initdb [initdb.java:301] - 开始等待数据迁移\n2024-04-01 19:00:55.045 [main] debug o.d.j.s.d.initdb [initdb.java:94] - 需要执行 0 个前置事件\n2024-04-01 19:00:55.050 [main] info  o.d.j.s.d.initdb [initdb.java:97] - start load mariadb db\n2024-04-01 19:00:55.065 [main] debug c.h.d.dbutil [dbutil.java:201] - show sql: [false], format sql: [false], show params: [false], level: [debug]\n2024-04-01 19:00:55.066 [main] debug c.h.d.d.dsfactory [dsfactory.java:141] - use [hutool-pooled-datasource] datasource as default\n2024-04-01 19:00:55.456 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: table.all.v1.0.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.473 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: table.all.v1.1.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.479 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: table.all.v1.2.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.499 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: execute.mariadb.v1.0.sql complete, and affected rows is: 0\n2024-04-01 19:00:55.531 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: alter.all.v1.0.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.565 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: alter.all.v1.1.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.569 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: alter.all.v1.2.1.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.594 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: alter.all.v1.2.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.662 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: alter.all.v1.3.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.691 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: alter.all.v1.4.csv complete, and affected rows is: 0\n2024-04-01 19:00:55.750 [main] info  o.d.j.s.d.initdb [initdb.java:221] - exec init sql file: index.all.v1.0.csv complete, and affected rows is: 6\n2024-04-01 19:00:55.752 [main] debug o.d.j.s.d.initdb [initdb.java:139] - 需要执行 1 个回调\n2024-04-01 19:00:55.753 [main] info  o.d.j.s.d.initdb [initdb.java:143] - 开始执行数据库事件：迁移数据\n2024-04-01 19:00:55.753 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:74] - 开始迁移 h2 数据到 mariadb\n2024-04-01 19:00:55.776 [main] debug c.h.d.dbutil [dbutil.java:201] - show sql: [false], format sql: [false], show params: [false], level: [debug]\n2024-04-01 19:00:55.776 [main] debug c.h.d.d.dsfactory [dsfactory.java:141] - use [hutool-pooled-datasource] datasource as default\n2024-04-01 19:00:56.468 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:85] - 成功连接 h2 ,开始尝试自动备份\n2024-04-01 19:00:56.475 [main] debug o.d.j.p.defaultdbh2pluginimpl [defaultdbh2pluginimpl.java:167] - backup sql is: script drop to '/users/user/jpom/server/db/backup/20240401190056.sql'\n2024-04-01 19:00:57.057 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:96] - h2 数据库备份成功：/users/user/jpom/server/db/backup/20240401190056.sql\n2024-04-01 19:00:57.061 [main] debug c.h.d.dbutil [dbutil.java:201] - show sql: [false], format sql: [false], show params: [false], level: [debug]\n2024-04-01 19:00:57.061 [main] debug c.h.d.d.dsfactory [dsfactory.java:141] - use [hutool-pooled-datasource] datasource as default\n2024-04-01 19:00:57.105 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:101] - 成功连接 mariadb jdbc:mysql://127.0.0.1:3309/jpom\n2024-04-01 19:00:57.122 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:114] - 准备迁移数据\n2024-04-01 19:00:57.123 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 构建历史 buildhistorylog\n2024-04-01 19:00:57.547 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 构建历史 迁移成功 111 条数据\n2024-04-01 19:00:57.547 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 构建信息 build_info\n2024-04-01 19:00:57.579 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 构建信息 迁移成功 13 条数据\n2024-04-01 19:00:57.579 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 证书信息表 certificate_info\n2024-04-01 19:00:57.586 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 证书信息表 迁移成功 1 条数据\n2024-04-01 19:00:57.586 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 集群信息 cluster_info\n2024-04-01 19:00:57.590 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 集群信息 迁移成功 1 条数据\n2024-04-01 19:00:57.591 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 命令执行记录 command_exec_log\n2024-04-01 19:00:57.602 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 命令执行记录 迁移成功 8 条数据\n2024-04-01 19:00:57.603 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 命令管理 command_info\n2024-04-01 19:00:57.608 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 命令管理 迁移成功 2 条数据\n2024-04-01 19:00:57.609 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 docker 信息 docker_info\n2024-04-01 19:00:57.620 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - docker 信息 迁移成功 4 条数据\n2024-04-01 19:00:57.620 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 docker 集群信息 docker_swarm_info\n2024-04-01 19:00:57.626 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - docker 集群信息 迁移成功 2 条数据\n2024-04-01 19:00:57.626 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 文件发布任务记录 file_release_task_log\n2024-04-01 19:00:57.627 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 文件发布任务记录 迁移成功 0 条数据\n2024-04-01 19:00:57.627 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 文件管理中心 file_storage\n2024-04-01 19:00:57.632 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 文件管理中心 迁移成功 1 条数据\n2024-04-01 19:00:57.632 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 日志阅读 log_read\n2024-04-01 19:00:57.634 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 日志阅读 迁移成功 0 条数据\n2024-04-01 19:00:57.634 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器docker信息 machine_docker_info\n2024-04-01 19:00:57.657 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器docker信息 迁移成功 4 条数据\n2024-04-01 19:00:57.657 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器节点信息 machine_node_info\n2024-04-01 19:00:57.671 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器节点信息 迁移成功 5 条数据\n2024-04-01 19:00:57.671 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 资产机器节点统计 machine_node_stat_log\n2024-04-01 19:00:57.672 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 资产机器节点统计 迁移成功 0 条数据\n2024-04-01 19:00:57.672 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 机器ssh信息 machine_ssh_info\n2024-04-01 19:00:57.677 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 机器ssh信息 迁移成功 1 条数据\n2024-04-01 19:00:57.677 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控信息 monitor_info\n2024-04-01 19:00:57.678 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控信息 迁移成功 0 条数据\n2024-04-01 19:00:57.678 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控通知 monitornotifylog\n2024-04-01 19:00:57.679 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控通知 迁移成功 0 条数据\n2024-04-01 19:00:57.679 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 监控用户操作 monitor_user_opt\n2024-04-01 19:00:57.680 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 监控用户操作 迁移成功 0 条数据\n2024-04-01 19:00:57.680 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点信息 node_info\n2024-04-01 19:00:57.692 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点信息 迁移成功 7 条数据\n2024-04-01 19:00:57.692 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点脚本模版 script_info\n2024-04-01 19:00:57.712 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点脚本模版 迁移成功 6 条数据\n2024-04-01 19:00:57.713 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点脚本模版执行记录 script_execute_log\n2024-04-01 19:00:57.732 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点脚本模版执行记录 迁移成功 18 条数据\n2024-04-01 19:00:57.733 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 分发日志 outgivinglog\n2024-04-01 19:00:57.792 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 分发日志 迁移成功 61 条数据\n2024-04-01 19:00:57.793 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 节点分发 out_giving\n2024-04-01 19:00:57.802 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 节点分发 迁移成功 3 条数据\n2024-04-01 19:00:57.802 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 项目信息 project_info\n2024-04-01 19:00:57.817 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 项目信息 迁移成功 7 条数据\n2024-04-01 19:00:57.818 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 仓库信息 repository\n2024-04-01 19:00:57.827 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 仓库信息 迁移成功 3 条数据\n2024-04-01 19:00:57.828 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 脚本模版执行记录 server_script_execute_log\n2024-04-01 19:00:58.082 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 脚本模版执行记录 迁移成功 283 条数据\n2024-04-01 19:00:58.083 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 脚本模版 server_script_info\n2024-04-01 19:00:58.088 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 脚本模版 迁移成功 2 条数据\n2024-04-01 19:00:58.089 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 ssh 信息 ssh_info\n2024-04-01 19:00:58.093 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - ssh 信息 迁移成功 1 条数据\n2024-04-01 19:00:58.094 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 ssh 终端执行日志 sshterminalexecutelog\n2024-04-01 19:00:58.095 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - ssh 终端执行日志 迁移成功 0 条数据\n2024-04-01 19:00:58.095 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 静态文件管理 static_file_storage\n2024-04-01 19:00:58.097 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 静态文件管理 迁移成功 0 条数据\n2024-04-01 19:00:58.098 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 系统参数 system_parameters\n2024-04-01 19:00:58.108 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 系统参数 迁移成功 9 条数据\n2024-04-01 19:00:58.108 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 触发器 token trigger_token_log\n2024-04-01 19:00:58.120 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 触发器 token 迁移成功 12 条数据\n2024-04-01 19:00:58.120 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户(权限组)工作空间关系表 user_bind_workspace\n2024-04-01 19:00:58.140 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户(权限组)工作空间关系表 迁移成功 26 条数据\n2024-04-01 19:00:58.141 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户登录日志 user_login_log\n2024-04-01 19:00:58.180 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户登录日志 迁移成功 53 条数据\n2024-04-01 19:00:58.180 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户账号 user_info\n2024-04-01 19:00:58.185 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户账号 迁移成功 3 条数据\n2024-04-01 19:00:58.186 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户操作日志 useroperatelogv1\n2024-04-01 19:01:02.869 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户操作日志 迁移成功 4402 条数据\n2024-04-01 19:01:02.870 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 用户权限组 user_permission_group\n2024-04-01 19:01:02.873 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 用户权限组 迁移成功 2 条数据\n2024-04-01 19:01:02.873 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 工作空间环境变量 workspace_env_var\n2024-04-01 19:01:02.879 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 工作空间环境变量 迁移成功 9 条数据\n2024-04-01 19:01:02.880 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:138] - 开始迁移 工作空间 workspace\n2024-04-01 19:01:02.883 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:197] - 工作空间 迁移成功 3 条数据\n2024-04-01 19:01:02.889 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:120] - 迁移完成,累计迁移 5063 条数据,耗时：7秒112毫秒\n2024-04-01 19:01:03.036 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:123] - 准备删除当前数据库文件\nno database files have been found in directory /users/user/jpom/server/db for the database server\n2024-04-01 19:01:03.084 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:125] - 自动备份 h2 数据库文件,备份文件位于：/users/user/jpom/server/db/recover_backup/20240401190103\n2024-04-01 19:01:03.084 [main] info  o.d.j.s.d.initdb [initdb.java:147] - 数据库 迁移数据 事件执行结束,：0\n2024-04-01 19:01:03.085 [main] info  o.d.j.s.d.initdb [initdb.java:161] - mariadb db successfully loaded, url is 【jdbc:mariadb://127.0.0.1:3309/jpom】\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n\n\n\n# 如果失败了，不要慌！！！\n\n如果失败了，我们建议按照如下操作处理\n\n 1. 删除 mariadb 中的所有数据\n 2. 删除服务端中的 db 目录下 h2 数据库相关的文件\n\n\n\n 3. 查看上一次迁移失败操作时程序自动备份数据的 sql 文件\n\n2024-04-01 19:00:56.468 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:85] - 成功连接 h2 ,开始尝试自动备份\n2024-04-01 19:00:56.475 [main] debug o.d.j.p.defaultdbh2pluginimpl [defaultdbh2pluginimpl.java:167] - backup sql is: script drop to '/users/user/jpom/server/db/backup/20240401190056.sql'\n2024-04-01 19:00:57.057 [main] info  o.d.j.d.storageservicefactory [storageservicefactory.java:96] - h2 数据库备份成功：/users/user/jpom/server/db/backup/20240401190056.sql\n\n\n1\n2\n3\n\n 4.  将对应的 sql 文件下载到您的本地电脑\n 5.  确认上传 db 目录下 h2 数据库相关的文件\n 6.  重新启动服务端\n 7.  这时您进入服务端需要您重新初始化系统，不要慌正常操作即可\n 8.  进入到 系统管理中的数据库备份管理\n 9.  导入您之前下载的 sql 数据文件\n 10. 还原数据\n\n将上述步骤操作完您就还原到迁移数据之前的状态了，接下来您可以先解决错误（一般修改 mysql 配置参数）再次尝试迁移数据\n\n如果多次操作仍然失败您可以联系官方协助您排查解决问题\n\n还原数据您还可以通过命令行的方式操作\n\nbash ./bin/server.sh restart -15 --replace-import-h2-sql=/opt/jpom_server/server-2-2/db/backup/20230110105352.sql\n\n\n1\n\n\n\n# 数据备份\n\n如果您使用 mariadb 数据库等情况下 jpom 默认没有提供数据备份功能，还需您自己对数据进行备份管理\n\nmariadb 有非常成熟并且简单的备份方案请自行实现",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"2.8.x 升级到 2.9.x",frontmatter:{title:"2.8.x 升级到 2.9.x",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/upgrade/2.8.x-to-2.9.x/",tags:["升级"],categories:["docs","文档"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/0999.2.8.x-2.9.x.html",relativePath:"文档/012.备份&升级/0999.2.8.x-2.9.x.md",key:"v-62e067f4",path:"/pages/upgrade/2.8.x-to-2.9.x/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:3},{level:3,title:"问：升级到 2.9.x 为什么要特殊处理？",slug:"问-升级到-2-9-x-为什么要特殊处理",normalizedTitle:"问：升级到 2.9.x 为什么要特殊处理？",charIndex:11},{level:3,title:"问：该漏洞出现了一段时间，为什么现在才发修复版？",slug:"问-该漏洞出现了一段时间-为什么现在才发修复版",normalizedTitle:"问：该漏洞出现了一段时间，为什么现在才发修复版？",charIndex:38},{level:2,title:"升级流程总览",slug:"升级流程总览",normalizedTitle:"升级流程总览",charIndex:66},{level:2,title:"相关问题说明",slug:"相关问题说明",normalizedTitle:"相关问题说明",charIndex:76},{level:3,title:"问：必须先升级到 2.8.24+？",slug:"问-必须先升级到-2-8-24",normalizedTitle:"问：必须先升级到 2.8.24+？",charIndex:88},{level:3,title:"问：如何查看备份记录中的备份文件路径？",slug:"问-如何查看备份记录中的备份文件路径",normalizedTitle:"问：如何查看备份记录中的备份文件路径？",charIndex:111},{level:3,title:"问：执行 bash /xxxx/Server.sh restart -15 --backup-h2 不生效该怎么办？",slug:"问-执行-bash-xxxx-server-sh-restart-15-backup-h2-不生效该怎么办",normalizedTitle:"问：执行 bash /xxxx/server.sh restart -15 --backup-h2 不生效该怎么办？",charIndex:136},{level:3,title:"问：官方是不是忘记还用 windows 用户啦？",slug:"问-官方是不是忘记还用-windows-用户啦",normalizedTitle:"问：官方是不是忘记还用 windows 用户啦？",charIndex:200},{level:3,title:"问：不想通过管理脚本来操作，还有其他方法吗？",slug:"问-不想通过管理脚本来操作-还有其他方法吗",normalizedTitle:"问：不想通过管理脚本来操作，还有其他方法吗？",charIndex:230},{level:3,title:"问：容器安装的应该如何升级？",slug:"问-容器安装的应该如何升级",normalizedTitle:"问：容器安装的应该如何升级？",charIndex:258},{level:3,title:"问：升级服务端后需要将插件端也升级到 2.9.0+ 吗？",slug:"问-升级服务端后需要将插件端也升级到-2-9-0-吗",normalizedTitle:"问：升级服务端后需要将插件端也升级到 2.9.0+ 吗？",charIndex:278},{level:3,title:"问：哪里下载 2.8.24+ 安装包？",slug:"问-哪里下载-2-8-24-安装包",normalizedTitle:"问：哪里下载 2.8.24+ 安装包？",charIndex:312},{level:3,title:"问：插件端该如何升级到 2.9.0+ ?",slug:"问-插件端该如何升级到-2-9-0",normalizedTitle:"问：插件端该如何升级到 2.9.0+ ?",charIndex:337},{level:3,title:"问：新版本导入 sql 报错，怎么办呀！！！！",slug:"问-新版本导入-sql-报错-怎么办呀",normalizedTitle:"问：新版本导入 sql 报错，怎么办呀！！！！",charIndex:363}],headersStr:"前言 问：升级到 2.9.x 为什么要特殊处理？ 问：该漏洞出现了一段时间，为什么现在才发修复版？ 升级流程总览 相关问题说明 问：必须先升级到 2.8.24+？ 问：如何查看备份记录中的备份文件路径？ 问：执行 bash /xxxx/Server.sh restart -15 --backup-h2 不生效该怎么办？ 问：官方是不是忘记还用 windows 用户啦？ 问：不想通过管理脚本来操作，还有其他方法吗？ 问：容器安装的应该如何升级？ 问：升级服务端后需要将插件端也升级到 2.9.0+ 吗？ 问：哪里下载 2.8.24+ 安装包？ 问：插件端该如何升级到 2.9.0+ ? 问：新版本导入 sql 报错，怎么办呀！！！！",content:' * 前言\n   * 问：升级到 2.9.x 为什么要特殊处理？\n   * 问：该漏洞出现了一段时间，为什么现在才发修复版？\n * 升级流程总览\n * 相关问题说明\n   * 问：必须先升级到 2.8.24+？\n   * 问：如何查看备份记录中的备份文件路径？\n   * 问：执行 bash /xxxx/Server.sh restart -15 --backup-h2 不生效该怎么办？\n   * 问：官方是不是忘记还用 windows 用户啦？\n   * 问：不想通过管理脚本来操作，还有其他方法吗？\n   * 问：容器安装的应该如何升级？\n   * 问：升级服务端后需要将插件端也升级到 2.9.0+ 吗？\n   * 问：哪里下载 2.8.24+ 安装包？\n   * 问：插件端该如何升级到 2.9.0+ ?\n   * 问：新版本导入 sql 报错，怎么办呀！！！！\n\n\n\n\n# 前言\n\n\n# 问：升级到 2.9.x 为什么要特殊处理？\n\n答 ：因为 H2 在 1.4.198, 2.0.202 版本间存在漏洞，漏洞编号为：CVE-2021-23463，所以需要尽快升级到最新版本来避免该漏洞。 但是 H2 的 1.4.x 升级到 2.0.x 是不兼容版本升级，不能直接无感升级。必须迁移旧数据到新版本中\n\n----------------------------------------\n\n\n# 问：该漏洞出现了一段时间，为什么现在才发修复版？\n\n答：当我们看到漏洞相关消息就开始准备方案，我们刚开始想的方案是如何避免过多的人为操作，尽量自动化完成。 结果我们尝试发现没有办法很好的避免（准备出一个界面化的操作），最后采用命令行方式操作。（此处自动🐶）\n\n\n# 升级流程总览\n\n 1. 需要先升级到 2.8.24+ 安装包下载地址\n    1. 升级方法有：在线升级、手动上传 jar 包等方式升级\n 2. 检查 Server.sh 脚本中 ARGS 变量最后是否存在 $@ 字符\n    1. 如果不存在则需要手动添加\n    2. ARGS 变量完整示例：ARGS="--jpom.applicationTag=${Tag} --spring.profiles.active=pro --server.port=2122 --jpom.log=${Path}log $@"\n 3. 为了数据安全避免升级出现异常造成数据丢失，请手动备份一下 db 目录\n    1. 备份前一定要先关闭服务器程序，否则会出现数据库异常情况或者数据丢失等异常\n    2. 关闭方式：bash /xxxx/Server.sh stop\n    3. 备份 db 目录方式：cp -r /xxxx/jpom-server/db /xxxx/jpom-server/db_backup\n 4. 通过命令行的方式创建数据备份\n    1. 启动程序参数里面添加 --backup-h2\n    2. linux 环境举例：bash /xxxx/Server.sh restart -15 --backup-h2\n    3. 当控制台输出 Complete the backup database, save the path as /xxx/xxx/db/backup/xxxx.sql 字样表示备份成功\n 5. 手动替换 jar\n    1. 将 lib 目录下面的 Server-2.8.x.jar 替换为最新的 Server-2.9.x.jar\n    2. 注意可能需要修改 Server.sh 脚本里面的 RUNJAR 变量值为您上传新 jar 的文件名，如：Server-2.9.x.jar\n 6. 通过指定 sql 文件方式启动\n    1. 启动程序参数里面添加 --replace-import-h2-sql=/xxxx.sql --transform-sql (路径需要替换为第二步控制台输出的 sql 文件保存路径)\n    2. linux 环境举例：bash /xxxx/Server.sh restart -15 --replace-import-h2-sql=/xxxx.sql --transform-sql\n 7. 观察控制输出内容\n    1. 当控制台输出 Import successfully according to sql,/xxx/xxx/db/backup/xxxx.sql 字样表示升级成功并自动启动程序\n    2. 如果出现异常信息可以先尝试在搜索引擎搜索看看是否有解决办法\n    3. 联系官方协助排查\n 8. 补充步骤： 2.9.0 版本操作完成后基本功能使用正常，但是 SSH 相关功能会出现数据库异常（缺少字段）\n    1. 需要重新初始化数据：bash /xxxx/Server.sh restart -15 --rest:load_init_db\n    2. 执行这个操作需要使用 2.9.1+ 版本（2.9.0 存在问题，此处自动🐶）\n 9. 愉快的使用 Jpom 2.9.x\n\n\n# 相关问题说明\n\n\n# 问：必须先升级到 2.8.24+？\n\n答：非必须，因为 2.8.24+ 新增了命令行方式备份数据，这样在程序未启动前就将所有数据备份导出为 sql 保证导出的数据是最新并且完整的。 如果您不想升级到 2.8.24+ 再升级到 2.9.x 那么可以先用管理身份登录进入系统进入：【系统管理 -> 数据库备份】页面里面去创建一个全量备份记住备份文件完成路径\n\n注意：不通过命令行备份不能保证导出的备份数据一定是最新的奥，因为程序在运行中随时会产生新数据或者数据更新情况\n\n----------------------------------------\n\n\n# 问：如何查看备份记录中的备份文件路径？\n\n答：备份列表中状态列后面有一个复制按钮，点击一下就复制到粘贴板啦\n\n----------------------------------------\n\n\n# 问：执行 bash /xxxx/Server.sh restart -15 --backup-h2 不生效该怎么办？\n\n答：如果您是从很早就使用了 Jpom 那么您现在管理服务端当脚本不是最新当，最新的管理脚本里面将执行命令的其他参数也传入了启动程序里面\n\n解决办法有：\n\n 1. 替换为最新的管理脚本文件 Server.sh\n 2. 手动修改管理脚本，在脚本中 ARGS 变量最后添加一个 $@ 即可\n    1. 完整示例：ARGS="--jpom.applicationTag=${Tag} --spring.profiles.active=pro --server.port=2122 --jpom.log=${Path}log $@"\n\n----------------------------------------\n\n\n# 问：官方是不是忘记还用 windows 用户啦？\n\n答：没有的，因为 linux 用户偏多，所以拿 linux 举例。windows 处理办法类似\n\n可以按照 Server.bat 中 if 判断继续扩展\n\nset /p ID=\nIF "!ID!"=="1" call:start\nIF "!ID!"=="2" call:stop\nIF "!ID!"=="3" call:status\nIF "!ID!"=="4" call:restart\nIF "!ID!"=="5" call:use\nIF "!ID!"=="6" call:restart --rest:ip_config\nIF "!ID!"=="7" call:restart --rest:load_init_db\nIF "!ID!"=="8" call:restart --rest:super_user_pwd\nIF "!ID!"=="0" EXIT\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n思路添加 IF,比如：\n\nset /p ID=\nIF "!ID!"=="1" call:start\nIF "!ID!"=="2" call:stop\nIF "!ID!"=="3" call:status\nIF "!ID!"=="4" call:restart\nIF "!ID!"=="5" call:use\nIF "!ID!"=="6" call:restart --rest:ip_config\nIF "!ID!"=="7" call:restart --rest:load_init_db\nIF "!ID!"=="8" call:restart --rest:super_user_pwd\nIF "!ID!"=="9" call:restart --backup-h2\nIF "!ID!"=="10" call:restart --replace-import-h2-sql=/xxxx.sql --transform-sql\nIF "!ID!"=="0" EXIT\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意要修改 sql 路径\n\n----------------------------------------\n\n\n# 问：不想通过管理脚本来操作，还有其他方法吗？\n\n答：有\n\n 1. 备份数据\n\njava -jar server-2.8.24.jar --spring.profiles.active=pro --backup-h2\n\n\n1\n\n 2. 导入数据\n\njava -jar server-2.9.0.jar --spring.profiles.active=pro --replace-import-h2-sql=/xxxx.sql --transform-sql\n\n\n1\n\n 3. 更新管理脚本中的：RUNJAR 变量值为：server-2.9.0.jar\n\n注意：\n\n 1. 通过次方式一定要在原目录操作\n 2. 操作顺序一定是要先使用旧包备份数据，再通过新包导入数据\n\n----------------------------------------\n\n\n# 问：容器安装的应该如何升级？\n\n答：升级流程和 Linux 流程基本一致，需要注意的就是上传文件的方式需要先上传到宿主机，再通过 docker cp 方式将文件复制到容器中。\n\n下面以从 2.8.24 升级到 2.9.0 为例：\n\n# 注意：从 2.8.24 版本开始新增数据库备份的参数命令，建议先升级到 2.8.24\n# 备份低版本数据库\ndocker exec -it jpom-server /bin/bash /usr/local/jpom-server/Server.sh restart -15 --backup-h2\n# 执行完后看到【Need to log out manually: Ctrl+C/Control+C】用 Ctrl + C 手动退出\n\n# 替换脚本命令中为新版 Jar 包\ndocker exec -it jpom-server sed -r -e \'/^RUNJAR="/s@.*@RUNJAR="Server-2.9.0.jar"@g\' /usr/local/jpom-server/Server.sh -i\n\n# docker cp 本地文件路径 容器ID/容器NAME:容器内路径\ndocker cp /root/Server-2.9.0.jar jpom-server:/usr/local/jpom-server/lib/Server-2.9.0.jar\n\n# 进入容器内部\ndocker exec -it jpom-server /bin/bash\n# 将低版本的数据库导入到新版本中\nbackupFile=`ls -t /usr/local/jpom-server/data/db/backup/ | head -1`\n/bin/bash /usr/local/jpom-server/Server.sh restart -15 --replace-import-h2-sql=/usr/local/jpom-server/data/db/backup/$backupFile --transform-sql\n# 启动完成后，输入 Ctrl + C 退出。\n# 退出容器，回到宿主机\nexit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 问：升级服务端后需要将插件端也升级到 2.9.0+ 吗？\n\n答：我们建议服务端和插件端的版本一致，可以同步升级到 2.9.0。\n\n只要您在使用过程中没有发现部分功能异常，无法使用，接口 404 等情况下，插件端不及时更新也是没有太多问题的。\n\n插件端和服务端版本差异请尽量一致或者缩小，避免出现部分功能调整后关联影响。\n\n\n# 问：哪里下载 2.8.24+ 安装包？\n\n答：下载中心\n\n\n# 问：插件端该如何升级到 2.9.0+ ?\n\n答：插件端还是可以使用以前的方式：手动上传 jar，在线升级等。推荐使用在线升级，可以在服务端页面批量升级插件端版本\n\n\n# 问：新版本导入 sql 报错，怎么办呀！！！！\n\n答： 如果出现如下错误\n\n可以检查执行的命令测试是否包含了：--transform-sql 或者 --transform-sql=true\n\n如果包含了还是不能解决，您可以手动修改对应的 sql 文件\n\n将\n\nCREATE PRIMARY KEY SYSTEM_LOB_STREAM_PRIMARY_KEY ON SYSTEM_LOB_STREAM(ID, PART);\n\n\n1\n\n\n这一行删除即可',normalizedContent:' * 前言\n   * 问：升级到 2.9.x 为什么要特殊处理？\n   * 问：该漏洞出现了一段时间，为什么现在才发修复版？\n * 升级流程总览\n * 相关问题说明\n   * 问：必须先升级到 2.8.24+？\n   * 问：如何查看备份记录中的备份文件路径？\n   * 问：执行 bash /xxxx/server.sh restart -15 --backup-h2 不生效该怎么办？\n   * 问：官方是不是忘记还用 windows 用户啦？\n   * 问：不想通过管理脚本来操作，还有其他方法吗？\n   * 问：容器安装的应该如何升级？\n   * 问：升级服务端后需要将插件端也升级到 2.9.0+ 吗？\n   * 问：哪里下载 2.8.24+ 安装包？\n   * 问：插件端该如何升级到 2.9.0+ ?\n   * 问：新版本导入 sql 报错，怎么办呀！！！！\n\n\n\n\n# 前言\n\n\n# 问：升级到 2.9.x 为什么要特殊处理？\n\n答 ：因为 h2 在 1.4.198, 2.0.202 版本间存在漏洞，漏洞编号为：cve-2021-23463，所以需要尽快升级到最新版本来避免该漏洞。 但是 h2 的 1.4.x 升级到 2.0.x 是不兼容版本升级，不能直接无感升级。必须迁移旧数据到新版本中\n\n----------------------------------------\n\n\n# 问：该漏洞出现了一段时间，为什么现在才发修复版？\n\n答：当我们看到漏洞相关消息就开始准备方案，我们刚开始想的方案是如何避免过多的人为操作，尽量自动化完成。 结果我们尝试发现没有办法很好的避免（准备出一个界面化的操作），最后采用命令行方式操作。（此处自动🐶）\n\n\n# 升级流程总览\n\n 1. 需要先升级到 2.8.24+ 安装包下载地址\n    1. 升级方法有：在线升级、手动上传 jar 包等方式升级\n 2. 检查 server.sh 脚本中 args 变量最后是否存在 $@ 字符\n    1. 如果不存在则需要手动添加\n    2. args 变量完整示例：args="--jpom.applicationtag=${tag} --spring.profiles.active=pro --server.port=2122 --jpom.log=${path}log $@"\n 3. 为了数据安全避免升级出现异常造成数据丢失，请手动备份一下 db 目录\n    1. 备份前一定要先关闭服务器程序，否则会出现数据库异常情况或者数据丢失等异常\n    2. 关闭方式：bash /xxxx/server.sh stop\n    3. 备份 db 目录方式：cp -r /xxxx/jpom-server/db /xxxx/jpom-server/db_backup\n 4. 通过命令行的方式创建数据备份\n    1. 启动程序参数里面添加 --backup-h2\n    2. linux 环境举例：bash /xxxx/server.sh restart -15 --backup-h2\n    3. 当控制台输出 complete the backup database, save the path as /xxx/xxx/db/backup/xxxx.sql 字样表示备份成功\n 5. 手动替换 jar\n    1. 将 lib 目录下面的 server-2.8.x.jar 替换为最新的 server-2.9.x.jar\n    2. 注意可能需要修改 server.sh 脚本里面的 runjar 变量值为您上传新 jar 的文件名，如：server-2.9.x.jar\n 6. 通过指定 sql 文件方式启动\n    1. 启动程序参数里面添加 --replace-import-h2-sql=/xxxx.sql --transform-sql (路径需要替换为第二步控制台输出的 sql 文件保存路径)\n    2. linux 环境举例：bash /xxxx/server.sh restart -15 --replace-import-h2-sql=/xxxx.sql --transform-sql\n 7. 观察控制输出内容\n    1. 当控制台输出 import successfully according to sql,/xxx/xxx/db/backup/xxxx.sql 字样表示升级成功并自动启动程序\n    2. 如果出现异常信息可以先尝试在搜索引擎搜索看看是否有解决办法\n    3. 联系官方协助排查\n 8. 补充步骤： 2.9.0 版本操作完成后基本功能使用正常，但是 ssh 相关功能会出现数据库异常（缺少字段）\n    1. 需要重新初始化数据：bash /xxxx/server.sh restart -15 --rest:load_init_db\n    2. 执行这个操作需要使用 2.9.1+ 版本（2.9.0 存在问题，此处自动🐶）\n 9. 愉快的使用 jpom 2.9.x\n\n\n# 相关问题说明\n\n\n# 问：必须先升级到 2.8.24+？\n\n答：非必须，因为 2.8.24+ 新增了命令行方式备份数据，这样在程序未启动前就将所有数据备份导出为 sql 保证导出的数据是最新并且完整的。 如果您不想升级到 2.8.24+ 再升级到 2.9.x 那么可以先用管理身份登录进入系统进入：【系统管理 -> 数据库备份】页面里面去创建一个全量备份记住备份文件完成路径\n\n注意：不通过命令行备份不能保证导出的备份数据一定是最新的奥，因为程序在运行中随时会产生新数据或者数据更新情况\n\n----------------------------------------\n\n\n# 问：如何查看备份记录中的备份文件路径？\n\n答：备份列表中状态列后面有一个复制按钮，点击一下就复制到粘贴板啦\n\n----------------------------------------\n\n\n# 问：执行 bash /xxxx/server.sh restart -15 --backup-h2 不生效该怎么办？\n\n答：如果您是从很早就使用了 jpom 那么您现在管理服务端当脚本不是最新当，最新的管理脚本里面将执行命令的其他参数也传入了启动程序里面\n\n解决办法有：\n\n 1. 替换为最新的管理脚本文件 server.sh\n 2. 手动修改管理脚本，在脚本中 args 变量最后添加一个 $@ 即可\n    1. 完整示例：args="--jpom.applicationtag=${tag} --spring.profiles.active=pro --server.port=2122 --jpom.log=${path}log $@"\n\n----------------------------------------\n\n\n# 问：官方是不是忘记还用 windows 用户啦？\n\n答：没有的，因为 linux 用户偏多，所以拿 linux 举例。windows 处理办法类似\n\n可以按照 server.bat 中 if 判断继续扩展\n\nset /p id=\nif "!id!"=="1" call:start\nif "!id!"=="2" call:stop\nif "!id!"=="3" call:status\nif "!id!"=="4" call:restart\nif "!id!"=="5" call:use\nif "!id!"=="6" call:restart --rest:ip_config\nif "!id!"=="7" call:restart --rest:load_init_db\nif "!id!"=="8" call:restart --rest:super_user_pwd\nif "!id!"=="0" exit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n思路添加 if,比如：\n\nset /p id=\nif "!id!"=="1" call:start\nif "!id!"=="2" call:stop\nif "!id!"=="3" call:status\nif "!id!"=="4" call:restart\nif "!id!"=="5" call:use\nif "!id!"=="6" call:restart --rest:ip_config\nif "!id!"=="7" call:restart --rest:load_init_db\nif "!id!"=="8" call:restart --rest:super_user_pwd\nif "!id!"=="9" call:restart --backup-h2\nif "!id!"=="10" call:restart --replace-import-h2-sql=/xxxx.sql --transform-sql\nif "!id!"=="0" exit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n注意要修改 sql 路径\n\n----------------------------------------\n\n\n# 问：不想通过管理脚本来操作，还有其他方法吗？\n\n答：有\n\n 1. 备份数据\n\njava -jar server-2.8.24.jar --spring.profiles.active=pro --backup-h2\n\n\n1\n\n 2. 导入数据\n\njava -jar server-2.9.0.jar --spring.profiles.active=pro --replace-import-h2-sql=/xxxx.sql --transform-sql\n\n\n1\n\n 3. 更新管理脚本中的：runjar 变量值为：server-2.9.0.jar\n\n注意：\n\n 1. 通过次方式一定要在原目录操作\n 2. 操作顺序一定是要先使用旧包备份数据，再通过新包导入数据\n\n----------------------------------------\n\n\n# 问：容器安装的应该如何升级？\n\n答：升级流程和 linux 流程基本一致，需要注意的就是上传文件的方式需要先上传到宿主机，再通过 docker cp 方式将文件复制到容器中。\n\n下面以从 2.8.24 升级到 2.9.0 为例：\n\n# 注意：从 2.8.24 版本开始新增数据库备份的参数命令，建议先升级到 2.8.24\n# 备份低版本数据库\ndocker exec -it jpom-server /bin/bash /usr/local/jpom-server/server.sh restart -15 --backup-h2\n# 执行完后看到【need to log out manually: ctrl+c/control+c】用 ctrl + c 手动退出\n\n# 替换脚本命令中为新版 jar 包\ndocker exec -it jpom-server sed -r -e \'/^runjar="/s@.*@runjar="server-2.9.0.jar"@g\' /usr/local/jpom-server/server.sh -i\n\n# docker cp 本地文件路径 容器id/容器name:容器内路径\ndocker cp /root/server-2.9.0.jar jpom-server:/usr/local/jpom-server/lib/server-2.9.0.jar\n\n# 进入容器内部\ndocker exec -it jpom-server /bin/bash\n# 将低版本的数据库导入到新版本中\nbackupfile=`ls -t /usr/local/jpom-server/data/db/backup/ | head -1`\n/bin/bash /usr/local/jpom-server/server.sh restart -15 --replace-import-h2-sql=/usr/local/jpom-server/data/db/backup/$backupfile --transform-sql\n# 启动完成后，输入 ctrl + c 退出。\n# 退出容器，回到宿主机\nexit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 问：升级服务端后需要将插件端也升级到 2.9.0+ 吗？\n\n答：我们建议服务端和插件端的版本一致，可以同步升级到 2.9.0。\n\n只要您在使用过程中没有发现部分功能异常，无法使用，接口 404 等情况下，插件端不及时更新也是没有太多问题的。\n\n插件端和服务端版本差异请尽量一致或者缩小，避免出现部分功能调整后关联影响。\n\n\n# 问：哪里下载 2.8.24+ 安装包？\n\n答：下载中心\n\n\n# 问：插件端该如何升级到 2.9.0+ ?\n\n答：插件端还是可以使用以前的方式：手动上传 jar，在线升级等。推荐使用在线升级，可以在服务端页面批量升级插件端版本\n\n\n# 问：新版本导入 sql 报错，怎么办呀！！！！\n\n答： 如果出现如下错误\n\n可以检查执行的命令测试是否包含了：--transform-sql 或者 --transform-sql=true\n\n如果包含了还是不能解决，您可以手动修改对应的 sql 文件\n\n将\n\ncreate primary key system_lob_stream_primary_key on system_lob_stream(id, part);\n\n\n1\n\n\n这一行删除即可',charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"2.9.x 升级到 2.10.x",frontmatter:{title:"2.9.x 升级到 2.10.x",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/upgrade/2.9.x-to-2.10.x/",tags:["升级"],categories:["docs","文档"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/0998.2.9.x-2.10.x.html",relativePath:"文档/012.备份&升级/0998.2.9.x-2.10.x.md",key:"v-0ee5d8f8",path:"/pages/upgrade/2.9.x-to-2.10.x/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:3},{level:3,title:"问：升级到 2.10.x 为什么又是不兼容升级？",slug:"问-升级到-2-10-x-为什么又是不兼容升级",normalizedTitle:"问：升级到 2.10.x 为什么又是不兼容升级？",charIndex:11},{level:3,title:"问：2.10.x 升级有哪些重点变化呢？",slug:"问-2-10-x-升级有哪些重点变化呢",normalizedTitle:"问：2.10.x 升级有哪些重点变化呢？",charIndex:41},{level:3,title:"问：2.10.x 目录结构变化有哪些呢？",slug:"问-2-10-x-目录结构变化有哪些呢",normalizedTitle:"问：2.10.x 目录结构变化有哪些呢？",charIndex:67},{level:4,title:"插件端",slug:"插件端",normalizedTitle:"插件端",charIndex:194},{level:4,title:"服务端",slug:"服务端",normalizedTitle:"服务端",charIndex:205},{level:3,title:"问：2.10.x 配置文件合并变化有哪些呢？",slug:"问-2-10-x-配置文件合并变化有哪些呢",normalizedTitle:"问：2.10.x 配置文件合并变化有哪些呢？",charIndex:93},{level:3,title:"问： 当前使用的 2.9.0 版本以下的改如何升级？",slug:"问-当前使用的-2-9-0-版本以下的改如何升级",normalizedTitle:"问： 当前使用的 2.9.0 版本以下的改如何升级？",charIndex:121},{level:2,title:"升级方式总览",slug:"升级方式总览",normalizedTitle:"升级方式总览",charIndex:151},{level:2,title:"推荐升级方式一（手动档 windows/linux ）",slug:"推荐升级方式一-手动档-windows-linux",normalizedTitle:"推荐升级方式一（手动档 windows/linux ）",charIndex:161},{level:3,title:"插件端-1",slug:"插件端-1",normalizedTitle:"插件端-1",charIndex:194},{level:4,title:"1. 停止正在运行的插件端",slug:"_1-停止正在运行的插件端",normalizedTitle:"1. 停止正在运行的插件端",charIndex:3700},{level:4,title:"2. 备份插件端重要数据",slug:"_2-备份插件端重要数据",normalizedTitle:"2. 备份插件端重要数据",charIndex:3789},{level:4,title:"3. 删除插件端目录下面的所有文件",slug:"_3-删除插件端目录下面的所有文件",normalizedTitle:"3. 删除插件端目录下面的所有文件",charIndex:3892},{level:4,title:"4. 安装新的插件端",slug:"_4-安装新的插件端",normalizedTitle:"4. 安装新的插件端",charIndex:3945},{level:4,title:"5. 停止已经在运行的插件端",slug:"_5-停止已经在运行的插件端",normalizedTitle:"5. 停止已经在运行的插件端",charIndex:4054},{level:4,title:"6. 覆盖插件端数据目录",slug:"_6-覆盖插件端数据目录",normalizedTitle:"6. 覆盖插件端数据目录",charIndex:4190},{level:4,title:"7. 手动合并配置内容",slug:"_7-手动合并配置内容",normalizedTitle:"7. 手动合并配置内容",charIndex:4289},{level:4,title:"8. 重启插件端",slug:"_8-重启插件端",normalizedTitle:"8. 重启插件端",charIndex:4449},{level:3,title:"服务端-1",slug:"服务端-1",normalizedTitle:"服务端-1",charIndex:205},{level:4,title:"1. 停止正在运行的服务端",slug:"_1-停止正在运行的服务端",normalizedTitle:"1. 停止正在运行的服务端",charIndex:4613},{level:4,title:"2. 备份服务端重要数据",slug:"_2-备份服务端重要数据",normalizedTitle:"2. 备份服务端重要数据",charIndex:4704},{level:4,title:"3. 删除服务端目录下面的所有文件",slug:"_3-删除服务端目录下面的所有文件",normalizedTitle:"3. 删除服务端目录下面的所有文件",charIndex:4864},{level:4,title:"4. 安装新的服务端",slug:"_4-安装新的服务端",normalizedTitle:"4. 安装新的服务端",charIndex:4917},{level:4,title:"5. 停止已经在运行的服务端",slug:"_5-停止已经在运行的服务端",normalizedTitle:"5. 停止已经在运行的服务端",charIndex:5028},{level:4,title:"6. 覆盖服务端数据目录",slug:"_6-覆盖服务端数据目录",normalizedTitle:"6. 覆盖服务端数据目录",charIndex:5166},{level:4,title:"7. 覆盖服务端 db 数据目录",slug:"_7-覆盖服务端-db-数据目录",normalizedTitle:"7. 覆盖服务端 db 数据目录",charIndex:5265},{level:4,title:"8. 手动合并配置内容",slug:"_8-手动合并配置内容",normalizedTitle:"8. 手动合并配置内容",charIndex:5370},{level:4,title:"9. 重启服务端",slug:"_9-重启服务端",normalizedTitle:"9. 重启服务端",charIndex:5530},{level:2,title:"推荐升级方式二（linux-半自动）",slug:"推荐升级方式二-linux-半自动",normalizedTitle:"推荐升级方式二（linux-半自动）",charIndex:214},{level:3,title:"插件端-2",slug:"插件端-2",normalizedTitle:"插件端-2",charIndex:238},{level:4,title:"1. 脚本自动升级",slug:"_1-脚本自动升级",normalizedTitle:"1. 脚本自动升级",charIndex:5761},{level:4,title:"2. 手动合并配置文件",slug:"_2-手动合并配置文件",normalizedTitle:"2. 手动合并配置文件",charIndex:5871},{level:4,title:"3. 清理旧文件数据",slug:"_3-清理旧文件数据",normalizedTitle:"3. 清理旧文件数据",charIndex:5984},{level:3,title:"服务端-2",slug:"服务端-2",normalizedTitle:"服务端-2",charIndex:249},{level:4,title:"1. 脚本自动升级",slug:"_1-脚本自动升级-2",normalizedTitle:"1. 脚本自动升级",charIndex:5761},{level:4,title:"2. 手动合并配置文件",slug:"_2-手动合并配置文件-2",normalizedTitle:"2. 手动合并配置文件",charIndex:5871},{level:4,title:"3. 清理旧文件数据",slug:"_3-清理旧文件数据-2",normalizedTitle:"3. 清理旧文件数据",charIndex:5984},{level:2,title:"推荐升级方式三（linux-离线升级）",slug:"推荐升级方式三-linux-离线升级",normalizedTitle:"推荐升级方式三（linux-离线升级）",charIndex:258},{level:3,title:"插件端-3",slug:"插件端-3",normalizedTitle:"插件端-3",charIndex:283},{level:4,title:"1. 下载离线包",slug:"_1-下载离线包",normalizedTitle:"1. 下载离线包",charIndex:6569},{level:4,title:"2. 上传升级到服务器",slug:"_2-上传升级到服务器",normalizedTitle:"2. 上传升级到服务器",charIndex:6623},{level:4,title:"3. 执行升级脚本",slug:"_3-执行升级脚本",normalizedTitle:"3. 执行升级脚本",charIndex:6771},{level:4,title:"4. 手动合并配置文件",slug:"_4-手动合并配置文件",normalizedTitle:"4. 手动合并配置文件",charIndex:6819},{level:4,title:"5. 清理旧文件数据",slug:"_5-清理旧文件数据",normalizedTitle:"5. 清理旧文件数据",charIndex:6932},{level:3,title:"服务端-3",slug:"服务端-3",normalizedTitle:"服务端-3",charIndex:294},{level:4,title:"1. 下载离线包",slug:"_1-下载离线包-2",normalizedTitle:"1. 下载离线包",charIndex:6569},{level:4,title:"2. 上传升级到服务器",slug:"_2-上传升级到服务器-2",normalizedTitle:"2. 上传升级到服务器",charIndex:6623},{level:4,title:"3. 执行升级脚本",slug:"_3-执行升级脚本-2",normalizedTitle:"3. 执行升级脚本",charIndex:6771},{level:4,title:"4. 手动合并配置文件",slug:"_4-手动合并配置文件-2",normalizedTitle:"4. 手动合并配置文件",charIndex:6819},{level:4,title:"5. 清理旧文件数据",slug:"_5-清理旧文件数据-2",normalizedTitle:"5. 清理旧文件数据",charIndex:6932}],headersStr:"前言 问：升级到 2.10.x 为什么又是不兼容升级？ 问：2.10.x 升级有哪些重点变化呢？ 问：2.10.x 目录结构变化有哪些呢？ 插件端 服务端 问：2.10.x 配置文件合并变化有哪些呢？ 问： 当前使用的 2.9.0 版本以下的改如何升级？ 升级方式总览 推荐升级方式一（手动档 windows/linux ） 插件端-1 1. 停止正在运行的插件端 2. 备份插件端重要数据 3. 删除插件端目录下面的所有文件 4. 安装新的插件端 5. 停止已经在运行的插件端 6. 覆盖插件端数据目录 7. 手动合并配置内容 8. 重启插件端 服务端-1 1. 停止正在运行的服务端 2. 备份服务端重要数据 3. 删除服务端目录下面的所有文件 4. 安装新的服务端 5. 停止已经在运行的服务端 6. 覆盖服务端数据目录 7. 覆盖服务端 db 数据目录 8. 手动合并配置内容 9. 重启服务端 推荐升级方式二（linux-半自动） 插件端-2 1. 脚本自动升级 2. 手动合并配置文件 3. 清理旧文件数据 服务端-2 1. 脚本自动升级 2. 手动合并配置文件 3. 清理旧文件数据 推荐升级方式三（linux-离线升级） 插件端-3 1. 下载离线包 2. 上传升级到服务器 3. 执行升级脚本 4. 手动合并配置文件 5. 清理旧文件数据 服务端-3 1. 下载离线包 2. 上传升级到服务器 3. 执行升级脚本 4. 手动合并配置文件 5. 清理旧文件数据",content:" * 前言\n   * 问：升级到 2.10.x 为什么又是不兼容升级？\n   * 问：2.10.x 升级有哪些重点变化呢？\n   * 问：2.10.x 目录结构变化有哪些呢？\n   * 问：2.10.x 配置文件合并变化有哪些呢？\n   * 问： 当前使用的 2.9.0 版本以下的改如何升级？\n * 升级方式总览\n * 推荐升级方式一（手动档 windows/linux ）\n   * 插件端-1\n   * 服务端-1\n * 推荐升级方式二（linux-半自动）\n   * 插件端-2\n   * 服务端-2\n * 推荐升级方式三（linux-离线升级）\n   * 插件端-3\n   * 服务端-3\n\n\n\n\n# 前言\n\n\n# 问：升级到 2.10.x 为什么又是不兼容升级？\n\n答 ： 在 2.8.x 升级到 2.9.x 是不兼容升级需要大家手动操作是因为 h2 数据库不兼容问题。现在 2.10.x 不兼容的问题是因为 Jpom 在前期由于作者考虑不周全和经验的缺乏留下了部分问题。 经过多次思想斗争后还是决定做一次不兼容升级来把遗留问题（代码屎山）去逐一优化点。\n\n> 此次升级是为了后面更好的功能扩展和代码维护性\n\n感谢大家的理解和支持🤝 ！\n\n\n# 问：2.10.x 升级有哪些重点变化呢？\n\n答\n\n 1. 项目的目录结构变化\n 2. 项目日志配置文件独立配置\n 3. 项目的所有配置文件合并到一个文件\n 4. 下架已经计划不维护的功能\n\n\n# 问：2.10.x 目录结构变化有哪些呢？\n\n# 插件端\n\n2.10.x 之前的目录结构\n\n.\n├── agent-x.x.x-release\n├────── lib\n├────────── agent-x.x.x.jar\n├────── log\n├────────── info.log\n├────────── warn.log\n├────────── error\n├────────────── systemError.log\n├────── data\n├────── Agent.bat\n├────── Agent.sh\n├────── agent.log\n├────── extConfig.yml\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n2.10.x 的目录结构\n\n.\n├── agent-x.x.x-release\n├────── lib\n├────────── agent-x.x.x.jar\n├────── bin\n├────────── Agent.bat\n├────────── Agent.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n├────── logs\n├────────── agent.log\n├────────── stdout.log\n├────── data\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 服务端\n\n2.10.x 之前的目录结构\n\n.\n├── server-x.x.x-release\n├────── lib\n├────────── server-x.x.x.jar\n├────── log\n├────────── info.log\n├────────── warn.log\n├────────── error\n├────────────── systemError.log\n├────── data\n├────── db\n├────── Server.bat\n├────── Server.sh\n├────── server.log\n├────── extConfig.yml\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n2.10.x 的目录结构\n\n.\n├── server-x.x.x-release\n├────── lib\n├────────── server-x.x.x.jar\n├────── bin\n├────────── Server.bat\n├────────── Server.sh\n├────────── BlockListener.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n├────── logs\n├────────── server.log\n├────────── stdout.log\n├────── data\n├────── db\n└────── LICENSE\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 问：2.10.x 配置文件合并变化有哪些呢？\n\n新版本我们将 Jpom 相关的配置均归属于到 jpom.* 下，并且读取配置属性均采用 bean 模式属性配置支持驼峰和下划线，让我们的配置更加灵活方便辨识度高\n\n 1.  【agent】whitelistDirectory.checkStartsWith -> jpom.whitelist-directory.check-starts-with\n 2.  【agent】project.stopWaitTime -> jpom.project.statusWaitTime\n 3.  【agent】project.* -> jpom.project.*\n 4.  【agent】修正拼写错误 log.*back -> jpom.project.log.*backup\n 5.  【agent】log.* -> jpom.project.log.*\n 6.  【agent】log.intiReadLine -> jpom.init-read-line\n 7.  【agent】 log.autoBackConsoleCron 不支持配置 none (none 使用 jpom.project.log.autoBackupToFile 代替)\n 8.  【all】删除 consoleLog.reqXss 、consoleLog.reqResponse\n 9.  【all】consoleLog.charset -> jpom.system.console-charset\n 10. 【server】node.uploadFileTimeOut -> jpom.node.uploadFileTimeout\n 11. 【server】system.nodeHeartSecond -> jpom.node.heartSecond\n 12. 【server】user.* -> jpom.user.*\n 13. 【server】jpom.authorize.expired -> jpom.user.tokenExpired\n 14. 【server】jpom.authorize.renewal -> jpom.user.tokenRenewal\n 15. 【server】jpom.authorize.key -> jpom.user.tokenJwtKey\n 16. 【server】jpom.webApiTimeout -> jpom.web.api-timeout\n 17. 【server】删除 ssh.initEnv\n 18. 【server】批量修正前端相关配置属性均修改到 jpom.web.*\n 19. 【server】db.* -> jpom.db.*\n 20. 【server】build.* -> jpom.build.*\n\n\n# 问： 当前使用的 2.9.0 版本以下的改如何升级？\n\n如果您现在使用的版本是 2.8.x 或者 2.7.x 以下的请先将版本手动升级到 2.9.x 再升级到 2.10.x 因为之前版本存在数据库不兼容和新版本不兼容低版本 json 数据相关功能\n\n升级到 2.9.x 的文档：2.8.x-to-2.9.x\n\n\n# 升级方式总览\n\n 1. 停止正在运行的程序插件端或者服务端\n 2. 备份已经存在的插件端或者服务端的数据目录\n 3. 手动安装新版本 2.10.0+\n    * 一键安装\n    * 下载安装包\n 4. 还原数据：将备份的数据目录迁移到新安装的数据目录（需要再未运行的状态下操作）\n 5. 还原配置属性：将您之前为 Jpom 配置（extConfig.yml）过的属性再次手动配置到新的配置文件（conf/application.yml）中\n 6. 重启程序对应的程序插件端或者服务端\n\n\n# 推荐升级方式一（手动档 windows/linux ）\n\n\n# 插件端-1\n\n# 1. 停止正在运行的插件端\n\nlinux :\n\nbash ./Agent.sh stop\n\n\n1\n\n\nwindows : 双击 Agent.bat 根据提示输入对应的数字\n\n# 2. 备份插件端重要数据\n\n 1. 数据目录：如果您安装的插件端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n 2. 配置文件：在插件端安装目录下面的 extConfig.yml\n\n# 3. 删除插件端目录下面的所有文件\n\n这里删除需要您确认已经根据上述步骤（步骤2）已经备份相关文件\n\n# 4. 安装新的插件端\n\n 1. 一键安装: 文档\n 2. 下载安装包：下载中心\n\n小提示\n\n如果您修改过插件端的 jvm 参数，这里需要您再次在新版本的 Agent.sh 或者 Agent.bat 配置相关内容\n\n# 5. 停止已经在运行的插件端\n\n> 这里需要您启动已经安装成功\n\n一键安装后成功后会自动启动插件端，所以这里需要先停止插件端\n\nlinux :\n\nbash ./Agent.sh stop\n\n\n1\n\n\nwindows :\n\n./Agent.bat stop\n\n\n1\n\n\n# 6. 覆盖插件端数据目录\n\n数据目录：如果您安装的插件端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n\n将您之前备份（步骤2）的数据目录里面的所有文件复制到新的数据目录中\n\n# 7. 手动合并配置内容\n\n小提示\n\n如果您安装 Jpom 插件端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n新版本的配置文件由原来的：extConfig.yml 变更为 conf/application.yml\n\n所有配置均由中文说明，您可以参考新旧配置的中文说明来将您之前的配置属性还原到新的配置文件中\n\n# 8. 重启插件端\n\n到这里我们已经成功的将插件端的版本升级到 2.10.x 了,我们就可以愉快的使用新版本拉\n\nlinux :\n\nbash ./bin/Agent.sh start\n\n\n1\n\n\nwindows :\n\n../bin/Agent.bat start\n\n\n1\n\n\n感谢您的理解和支持🤝 ！\n\n\n# 服务端-1\n\n# 1. 停止正在运行的服务端\n\nlinux :\n\nbash ./Server.sh stop\n\n\n1\n\n\nwindows : 双击 Server.bat 根据提示输入对应的数字\n\n# 2. 备份服务端重要数据\n\n 1. 数据目录：如果您安装的服务端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n 2. db 数据目录：如果您安装的服务端未修改数据目录配置，db 数据目录默认默认在安装路径下的 db 文件夹\n 3. 配置文件：在服务端安装目录下面的 extConfig.yml\n\n# 3. 删除服务端目录下面的所有文件\n\n这里删除需要您确认已经根据上述步骤（步骤2）已经备份相关文件\n\n# 4. 安装新的服务端\n\n 1. 一键安装: 文档\n 2. 下载安装包：下载中心\n\n小提示\n\n如果您修改过插件端的 jvm 参数，这里需要您再次在新版本的 Server.sh 或者 Server.bat 配置相关内容\n\n# 5. 停止已经在运行的服务端\n\n> 这里需要您启动已经安装成功\n\n一键安装后成功后会自动启动服务端，所以这里需要先停止服务端\n\nlinux :\n\nbash ./Server.sh stop\n\n\n1\n\n\nwindows :\n\n./Server.bat stop\n\n\n1\n\n\n# 6. 覆盖服务端数据目录\n\n数据目录：如果您安装的服务端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n\n将您之前备份（步骤2）的数据目录里面的所有文件复制到新的数据目录中\n\n# 7. 覆盖服务端 db 数据目录\n\n数据目录：如果您安装的服务端未修改数据目录配置，数据默认默认在安装路径下的 db 文件夹\n\n将您之前备份（步骤2）的数据目录里面的所有文件复制到新的 db 数据目录中\n\n# 8. 手动合并配置内容\n\n小提示\n\n如果您安装 Jpom 服务端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n新版本的配置文件由原来的：extConfig.yml 变更为 conf/application.yml\n\n所有配置均由中文说明，您可以参考新旧配置的中文说明来将您之前的配置属性还原到新的配置文件中\n\n# 9. 重启服务端\n\n到这里我们已经成功的将服务端的版本升级到 2.10.x 了,我们就可以愉快地使用新版本拉\n\nlinux :\n\nbash ./bin/Server.sh start\n\n\n1\n\n\nwindows :\n\n../bin/Server.bat start\n\n\n1\n\n\n感谢您的理解和支持🤝 ！\n\n\n# 推荐升级方式二（linux-半自动）\n\n\n# 插件端-2\n\n> 此方式仅限于使用 linux 环境下使用并且所在服务器能下载远程文件（公网）\n\n# 1. 脚本自动升级\n\n使用提醒\n\n需要到插件端的安装目录里执行下面命令\n\ncurl -fsSL https://jpom.top/docs/upgrade2.9.x.sh | bash -s agent\n\n\n1\n\n\n# 2. 手动合并配置文件\n\n使用该方式脚本自动将 extConfig.yml 移动到 conf/extConfig.yml 目录下\n\n小提示\n\n如果您安装 Jpom 插件端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 3. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、agent.log、Agent.bat、Agent.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除\n\n\n# 服务端-2\n\n> 此方式仅限于使用 linux 环境下使用并且所在服务器能下载远程文件（公网）\n\n# 1. 脚本自动升级\n\n使用提醒\n\n需要到服务端的安装目录里执行下面命令\n\ncurl -fsSL https://jpom.top/docs/upgrade2.9.x.sh | bash -s server\n\n\n1\n\n\n# 2. 手动合并配置文件\n\n使用该方式脚本自动将 extConfig.yml 移动到 conf/extConfig.yml 目录下\n\n小提示\n\n如果您安装 Jpom 服务端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 3. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、server.log、Server.bat、Server.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除\n\n\n# 推荐升级方式三（linux-离线升级）\n\n\n# 插件端-3\n\n> 此方式仅限于使用 linux 环境下使用\n\n# 1. 下载离线包\n\n 1. 升级脚本：upgrade2.9.x.sh\n 2. 插件端安装包：下载中心\n\n# 2. 上传升级到服务器\n\n 1. 将 upgrade2.9.x.sh 上传到插件端安装路径下\n 2. 将 agent-2.10.x-release.tar.gz 上传到插件端安装路径下\n 3. 将 agent-2.10.x-release.tar.gz 从命名为：agent.tar.gz\n\n# 3. 执行升级脚本\n\nbash ./upgrade2.9.x.sh agent\n\n\n1\n\n\n# 4. 手动合并配置文件\n\n使用该方式脚本自动将 extConfig.yml 移动到 conf/extConfig.yml 目录下\n\n小提示\n\n如果您安装 Jpom 插件端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 5. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、agent.log、Agent.bat、Agent.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除\n\n\n# 服务端-3\n\n> 此方式仅限于使用 linux 环境下使用\n\n# 1. 下载离线包\n\n 1. 升级脚本：upgrade2.9.x.sh\n 2. 插件端安装包：下载中心\n\n# 2. 上传升级到服务器\n\n 1. 将 upgrade2.9.x.sh 上传到服务端安装路径下\n 2. 将 server-2.10.x-release.tar.gz 上传到服务端安装路径下\n 3. 将 server-2.10.x-release.tar.gz 从命名为：server.tar.gz\n\n# 3. 执行升级脚本\n\nbash ./upgrade2.9.x.sh server\n\n\n1\n\n\n# 4. 手动合并配置文件\n\n使用该方式脚本自动将 extConfig.yml 移动到 conf/extConfig.yml 目录下\n\n小提示\n\n如果您安装 Jpom 服务端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 5. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、server.log、Server.bat、Server.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除",normalizedContent:" * 前言\n   * 问：升级到 2.10.x 为什么又是不兼容升级？\n   * 问：2.10.x 升级有哪些重点变化呢？\n   * 问：2.10.x 目录结构变化有哪些呢？\n   * 问：2.10.x 配置文件合并变化有哪些呢？\n   * 问： 当前使用的 2.9.0 版本以下的改如何升级？\n * 升级方式总览\n * 推荐升级方式一（手动档 windows/linux ）\n   * 插件端-1\n   * 服务端-1\n * 推荐升级方式二（linux-半自动）\n   * 插件端-2\n   * 服务端-2\n * 推荐升级方式三（linux-离线升级）\n   * 插件端-3\n   * 服务端-3\n\n\n\n\n# 前言\n\n\n# 问：升级到 2.10.x 为什么又是不兼容升级？\n\n答 ： 在 2.8.x 升级到 2.9.x 是不兼容升级需要大家手动操作是因为 h2 数据库不兼容问题。现在 2.10.x 不兼容的问题是因为 jpom 在前期由于作者考虑不周全和经验的缺乏留下了部分问题。 经过多次思想斗争后还是决定做一次不兼容升级来把遗留问题（代码屎山）去逐一优化点。\n\n> 此次升级是为了后面更好的功能扩展和代码维护性\n\n感谢大家的理解和支持🤝 ！\n\n\n# 问：2.10.x 升级有哪些重点变化呢？\n\n答\n\n 1. 项目的目录结构变化\n 2. 项目日志配置文件独立配置\n 3. 项目的所有配置文件合并到一个文件\n 4. 下架已经计划不维护的功能\n\n\n# 问：2.10.x 目录结构变化有哪些呢？\n\n# 插件端\n\n2.10.x 之前的目录结构\n\n.\n├── agent-x.x.x-release\n├────── lib\n├────────── agent-x.x.x.jar\n├────── log\n├────────── info.log\n├────────── warn.log\n├────────── error\n├────────────── systemerror.log\n├────── data\n├────── agent.bat\n├────── agent.sh\n├────── agent.log\n├────── extconfig.yml\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n2.10.x 的目录结构\n\n.\n├── agent-x.x.x-release\n├────── lib\n├────────── agent-x.x.x.jar\n├────── bin\n├────────── agent.bat\n├────────── agent.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n├────── logs\n├────────── agent.log\n├────────── stdout.log\n├────── data\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n# 服务端\n\n2.10.x 之前的目录结构\n\n.\n├── server-x.x.x-release\n├────── lib\n├────────── server-x.x.x.jar\n├────── log\n├────────── info.log\n├────────── warn.log\n├────────── error\n├────────────── systemerror.log\n├────── data\n├────── db\n├────── server.bat\n├────── server.sh\n├────── server.log\n├────── extconfig.yml\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n2.10.x 的目录结构\n\n.\n├── server-x.x.x-release\n├────── lib\n├────────── server-x.x.x.jar\n├────── bin\n├────────── server.bat\n├────────── server.sh\n├────────── blocklistener.sh\n├────── conf\n├────────── application.yml\n├────────── logback.xml\n├────── logs\n├────────── server.log\n├────────── stdout.log\n├────── data\n├────── db\n└────── license\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 问：2.10.x 配置文件合并变化有哪些呢？\n\n新版本我们将 jpom 相关的配置均归属于到 jpom.* 下，并且读取配置属性均采用 bean 模式属性配置支持驼峰和下划线，让我们的配置更加灵活方便辨识度高\n\n 1.  【agent】whitelistdirectory.checkstartswith -> jpom.whitelist-directory.check-starts-with\n 2.  【agent】project.stopwaittime -> jpom.project.statuswaittime\n 3.  【agent】project.* -> jpom.project.*\n 4.  【agent】修正拼写错误 log.*back -> jpom.project.log.*backup\n 5.  【agent】log.* -> jpom.project.log.*\n 6.  【agent】log.intireadline -> jpom.init-read-line\n 7.  【agent】 log.autobackconsolecron 不支持配置 none (none 使用 jpom.project.log.autobackuptofile 代替)\n 8.  【all】删除 consolelog.reqxss 、consolelog.reqresponse\n 9.  【all】consolelog.charset -> jpom.system.console-charset\n 10. 【server】node.uploadfiletimeout -> jpom.node.uploadfiletimeout\n 11. 【server】system.nodeheartsecond -> jpom.node.heartsecond\n 12. 【server】user.* -> jpom.user.*\n 13. 【server】jpom.authorize.expired -> jpom.user.tokenexpired\n 14. 【server】jpom.authorize.renewal -> jpom.user.tokenrenewal\n 15. 【server】jpom.authorize.key -> jpom.user.tokenjwtkey\n 16. 【server】jpom.webapitimeout -> jpom.web.api-timeout\n 17. 【server】删除 ssh.initenv\n 18. 【server】批量修正前端相关配置属性均修改到 jpom.web.*\n 19. 【server】db.* -> jpom.db.*\n 20. 【server】build.* -> jpom.build.*\n\n\n# 问： 当前使用的 2.9.0 版本以下的改如何升级？\n\n如果您现在使用的版本是 2.8.x 或者 2.7.x 以下的请先将版本手动升级到 2.9.x 再升级到 2.10.x 因为之前版本存在数据库不兼容和新版本不兼容低版本 json 数据相关功能\n\n升级到 2.9.x 的文档：2.8.x-to-2.9.x\n\n\n# 升级方式总览\n\n 1. 停止正在运行的程序插件端或者服务端\n 2. 备份已经存在的插件端或者服务端的数据目录\n 3. 手动安装新版本 2.10.0+\n    * 一键安装\n    * 下载安装包\n 4. 还原数据：将备份的数据目录迁移到新安装的数据目录（需要再未运行的状态下操作）\n 5. 还原配置属性：将您之前为 jpom 配置（extconfig.yml）过的属性再次手动配置到新的配置文件（conf/application.yml）中\n 6. 重启程序对应的程序插件端或者服务端\n\n\n# 推荐升级方式一（手动档 windows/linux ）\n\n\n# 插件端-1\n\n# 1. 停止正在运行的插件端\n\nlinux :\n\nbash ./agent.sh stop\n\n\n1\n\n\nwindows : 双击 agent.bat 根据提示输入对应的数字\n\n# 2. 备份插件端重要数据\n\n 1. 数据目录：如果您安装的插件端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n 2. 配置文件：在插件端安装目录下面的 extconfig.yml\n\n# 3. 删除插件端目录下面的所有文件\n\n这里删除需要您确认已经根据上述步骤（步骤2）已经备份相关文件\n\n# 4. 安装新的插件端\n\n 1. 一键安装: 文档\n 2. 下载安装包：下载中心\n\n小提示\n\n如果您修改过插件端的 jvm 参数，这里需要您再次在新版本的 agent.sh 或者 agent.bat 配置相关内容\n\n# 5. 停止已经在运行的插件端\n\n> 这里需要您启动已经安装成功\n\n一键安装后成功后会自动启动插件端，所以这里需要先停止插件端\n\nlinux :\n\nbash ./agent.sh stop\n\n\n1\n\n\nwindows :\n\n./agent.bat stop\n\n\n1\n\n\n# 6. 覆盖插件端数据目录\n\n数据目录：如果您安装的插件端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n\n将您之前备份（步骤2）的数据目录里面的所有文件复制到新的数据目录中\n\n# 7. 手动合并配置内容\n\n小提示\n\n如果您安装 jpom 插件端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n新版本的配置文件由原来的：extconfig.yml 变更为 conf/application.yml\n\n所有配置均由中文说明，您可以参考新旧配置的中文说明来将您之前的配置属性还原到新的配置文件中\n\n# 8. 重启插件端\n\n到这里我们已经成功的将插件端的版本升级到 2.10.x 了,我们就可以愉快的使用新版本拉\n\nlinux :\n\nbash ./bin/agent.sh start\n\n\n1\n\n\nwindows :\n\n../bin/agent.bat start\n\n\n1\n\n\n感谢您的理解和支持🤝 ！\n\n\n# 服务端-1\n\n# 1. 停止正在运行的服务端\n\nlinux :\n\nbash ./server.sh stop\n\n\n1\n\n\nwindows : 双击 server.bat 根据提示输入对应的数字\n\n# 2. 备份服务端重要数据\n\n 1. 数据目录：如果您安装的服务端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n 2. db 数据目录：如果您安装的服务端未修改数据目录配置，db 数据目录默认默认在安装路径下的 db 文件夹\n 3. 配置文件：在服务端安装目录下面的 extconfig.yml\n\n# 3. 删除服务端目录下面的所有文件\n\n这里删除需要您确认已经根据上述步骤（步骤2）已经备份相关文件\n\n# 4. 安装新的服务端\n\n 1. 一键安装: 文档\n 2. 下载安装包：下载中心\n\n小提示\n\n如果您修改过插件端的 jvm 参数，这里需要您再次在新版本的 server.sh 或者 server.bat 配置相关内容\n\n# 5. 停止已经在运行的服务端\n\n> 这里需要您启动已经安装成功\n\n一键安装后成功后会自动启动服务端，所以这里需要先停止服务端\n\nlinux :\n\nbash ./server.sh stop\n\n\n1\n\n\nwindows :\n\n./server.bat stop\n\n\n1\n\n\n# 6. 覆盖服务端数据目录\n\n数据目录：如果您安装的服务端未修改数据目录配置，数据默认默认在安装路径下的 data 文件夹\n\n将您之前备份（步骤2）的数据目录里面的所有文件复制到新的数据目录中\n\n# 7. 覆盖服务端 db 数据目录\n\n数据目录：如果您安装的服务端未修改数据目录配置，数据默认默认在安装路径下的 db 文件夹\n\n将您之前备份（步骤2）的数据目录里面的所有文件复制到新的 db 数据目录中\n\n# 8. 手动合并配置内容\n\n小提示\n\n如果您安装 jpom 服务端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n新版本的配置文件由原来的：extconfig.yml 变更为 conf/application.yml\n\n所有配置均由中文说明，您可以参考新旧配置的中文说明来将您之前的配置属性还原到新的配置文件中\n\n# 9. 重启服务端\n\n到这里我们已经成功的将服务端的版本升级到 2.10.x 了,我们就可以愉快地使用新版本拉\n\nlinux :\n\nbash ./bin/server.sh start\n\n\n1\n\n\nwindows :\n\n../bin/server.bat start\n\n\n1\n\n\n感谢您的理解和支持🤝 ！\n\n\n# 推荐升级方式二（linux-半自动）\n\n\n# 插件端-2\n\n> 此方式仅限于使用 linux 环境下使用并且所在服务器能下载远程文件（公网）\n\n# 1. 脚本自动升级\n\n使用提醒\n\n需要到插件端的安装目录里执行下面命令\n\ncurl -fssl https://jpom.top/docs/upgrade2.9.x.sh | bash -s agent\n\n\n1\n\n\n# 2. 手动合并配置文件\n\n使用该方式脚本自动将 extconfig.yml 移动到 conf/extconfig.yml 目录下\n\n小提示\n\n如果您安装 jpom 插件端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 3. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、agent.log、agent.bat、agent.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除\n\n\n# 服务端-2\n\n> 此方式仅限于使用 linux 环境下使用并且所在服务器能下载远程文件（公网）\n\n# 1. 脚本自动升级\n\n使用提醒\n\n需要到服务端的安装目录里执行下面命令\n\ncurl -fssl https://jpom.top/docs/upgrade2.9.x.sh | bash -s server\n\n\n1\n\n\n# 2. 手动合并配置文件\n\n使用该方式脚本自动将 extconfig.yml 移动到 conf/extconfig.yml 目录下\n\n小提示\n\n如果您安装 jpom 服务端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 3. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、server.log、server.bat、server.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除\n\n\n# 推荐升级方式三（linux-离线升级）\n\n\n# 插件端-3\n\n> 此方式仅限于使用 linux 环境下使用\n\n# 1. 下载离线包\n\n 1. 升级脚本：upgrade2.9.x.sh\n 2. 插件端安装包：下载中心\n\n# 2. 上传升级到服务器\n\n 1. 将 upgrade2.9.x.sh 上传到插件端安装路径下\n 2. 将 agent-2.10.x-release.tar.gz 上传到插件端安装路径下\n 3. 将 agent-2.10.x-release.tar.gz 从命名为：agent.tar.gz\n\n# 3. 执行升级脚本\n\nbash ./upgrade2.9.x.sh agent\n\n\n1\n\n\n# 4. 手动合并配置文件\n\n使用该方式脚本自动将 extconfig.yml 移动到 conf/extconfig.yml 目录下\n\n小提示\n\n如果您安装 jpom 插件端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 5. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、agent.log、agent.bat、agent.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除\n\n\n# 服务端-3\n\n> 此方式仅限于使用 linux 环境下使用\n\n# 1. 下载离线包\n\n 1. 升级脚本：upgrade2.9.x.sh\n 2. 插件端安装包：下载中心\n\n# 2. 上传升级到服务器\n\n 1. 将 upgrade2.9.x.sh 上传到服务端安装路径下\n 2. 将 server-2.10.x-release.tar.gz 上传到服务端安装路径下\n 3. 将 server-2.10.x-release.tar.gz 从命名为：server.tar.gz\n\n# 3. 执行升级脚本\n\nbash ./upgrade2.9.x.sh server\n\n\n1\n\n\n# 4. 手动合并配置文件\n\n使用该方式脚本自动将 extconfig.yml 移动到 conf/extconfig.yml 目录下\n\n小提示\n\n如果您安装 jpom 服务端未修改任何配置属性，均使用默认配置可以忽略此步骤\n\n# 5. 清理旧文件数据\n\n使用该方式脚本自动将 log、lib、server.log、server.bat、server.sh、 移动到 upgrade_backup 目录下\n\n您可以跟进自己的情况来判断升级是否成功，升级成功后可以将该目录手动删除",charsets:{cjk:!0},lastUpdated:"2024/11/30, 02:56:22",lastUpdatedTimestamp:1732935382e3},{title:"升级版本",frontmatter:{title:"升级版本",date:"2022-06-11T14:53:07.000Z",permalink:"/pages/FQA/upgrade/",tags:["升级"],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/012.%E5%A4%87%E4%BB%BD&%E5%8D%87%E7%BA%A7/08.%E5%8D%87%E7%BA%A7%E7%89%88%E6%9C%AC.html",relativePath:"文档/012.备份&升级/08.升级版本.md",key:"v-65bed54c",path:"/pages/FQA/upgrade/",headers:[{level:2,title:"目前支持的升级方式",slug:"目前支持的升级方式",normalizedTitle:"目前支持的升级方式",charIndex:69},{level:2,title:"在线升级（推荐）",slug:"在线升级-推荐",normalizedTitle:"在线升级（推荐）",charIndex:168},{level:3,title:"有新版本提示",slug:"有新版本提示",normalizedTitle:"有新版本提示",charIndex:504},{level:2,title:"beta 计划",slug:"beta-计划",normalizedTitle:"beta 计划",charIndex:539},{level:2,title:"批量升级插件端",slug:"批量升级插件端",normalizedTitle:"批量升级插件端",charIndex:130},{level:3,title:"手动上传插件端包",slug:"手动上传插件端包",normalizedTitle:"手动上传插件端包",charIndex:730},{level:3,title:"远程下载插件端包",slug:"远程下载插件端包",normalizedTitle:"远程下载插件端包",charIndex:745},{level:2,title:"上传更新",slug:"上传更新",normalizedTitle:"上传更新",charIndex:760},{level:2,title:"手动替换（不推荐）",slug:"手动替换-不推荐",normalizedTitle:"手动替换（不推荐）",charIndex:771},{level:2,title:"容器升级（Docker 容器）",slug:"容器升级-docker-容器",normalizedTitle:"容器升级（docker 容器）",charIndex:953},{level:2,title:"升级数据库？",slug:"升级数据库",normalizedTitle:"升级数据库？",charIndex:1241},{level:2,title:"高效看更新日志",slug:"高效看更新日志",normalizedTitle:"高效看更新日志",charIndex:1348}],headersStr:"目前支持的升级方式 在线升级（推荐） 有新版本提示 beta 计划 批量升级插件端 手动上传插件端包 远程下载插件端包 上传更新 手动替换（不推荐） 容器升级（Docker 容器） 升级数据库？ 高效看更新日志",content:"注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 目前支持的升级方式\n\n 1. 远程检查版本并更新【推荐】\n 2. 在线上传 jar 包\n 3. 手动替换 jar\n 4. 批量升级插件端\n\n升级可能出现启动失败的情况，失败请检查控制台日志\n\n\n# 在线升级（推荐）\n\nJpom 中提供在线升级功能，方便用户及时知道有新版本并快速更新。\n\n使用在线升级需要服务器能服务公网的条件才能正常使用\n\n目前更新策略是每天定时更新和手动触发更新\n\n使用该功能可能出现对问题有如下：\n\n 1. 无法获取到最新版本\n 2. 控制台有错误信息（获取远程版本信息失败: xxxx）\n 3. 控制台有错误信息（获取远程版本信息失败: Received fatal alert: internal_error）\n    1. 通常为 JDK 版本问题，建议升级：JDK 1.8.0_311+\n    2. 参考文章：https://blog.csdn.net/qq_36218267/article/details/121741914\n\n\n# 有新版本提示\n\n\n\n点击下载按钮即可更新\n\n\n\n等待更新完成\n\n\n# beta 计划\n\nJpom beta 计划是指能及时使用到 Jpom 最新版本，但是可能存在一些问题，但请不要慌，Jpom 团队会及时修复这些 bug。\n\n欢迎大家参与 beta 计划为 Jpom 提出建议，帮助 Jpom 不断改进，帮忙开源项目更好发展。\n\n\n\n\n# 批量升级插件端\n\n批量升级插件端是指批量升级插件端，在升级前需要下载最新版本然后选择需要升级的节点\n\n\n\n\n# 手动上传插件端包\n\n\n\n\n# 远程下载插件端包\n\n\n\n\n# 上传更新\n\n\n\n\n# 手动替换（不推荐）\n\n先在 Jpom 官方下载最新版本，然后到对应的安装目录移除旧的 jar 包，上传新地安装包\n\n重启：\n\nbash /xxx/Server.sh restart\n\n\n1\n\n\nbash /xxx/Agent.sh restart\n\n\n1\n\n\nServer.bat restart\n\n\n1\n\n\nAgent.bat restart\n\n\n1\n\n\n\n# 容器升级（Docker 容器）\n\n如果您使用 Docker 容器部署 Jpom 服务端，那么其实您绝大多数情况可以使用：\n\n * 在线升级\n * 上传升级\n\n操作流程如上述流程，因为 Jpom 服务端很极少情况会更新镜像的基础结构，通常仅是更新项目的 jar，如果有容器的镜像、管理脚本变动那么您需要更新镜像重新创建容器来升级。\n\n数据安全提醒\n\n这里重新创建容器请您一定确认服务端的数据目录是否挂载，如果未挂载请提前将容器里面的数据目录 cp 到宿主机后重新创建并挂载对应的目录， 否则可能会导致数据丢失\n\n容器创建Jpom 服务端：说明文档 【推荐挂载方式安装】\n\n\n# 升级数据库？\n\n您有这样的疑问是正常的，但是在 Jpom 中您不需要考虑升级版本时需要升级数据库的操作。\n\n我们为了简化您的升级流程，系统会在升级时自动执行新版本中需要修改的表结构，完全不需要您手动控制。\n\n\n# 高效看更新日志\n\n更新日志（changelog）我们会在每次发版时候写明对应版本中有哪些功能变动、新增、修复、优化等相关说明。\n\n我们更新日志一般包含：\n\n * 🐣 新增功能\n * 🐞 解决BUG、优化功能\n * ⚠️ 注意\n\n上述三项，当您看到新版本时候建议先将您还未更新的版本所有的更新日志都阅读一次以便了解变更避免出现找不到功能 您遇到的 BUG 是否修复等小尴尬事件\n\n如果更新日志有注意项时请您一定阅读，说明对应版本有比较大的变动或者需要您手动操作、数据兼容等说明\n\n每条更新日志我们一般开始还表明变动的模块\n\n * 【server】 服务端有变动\n * 【agent】 插件端有变动\n * 【all】 服务端和插件端均有变动\n\n其实我们建议您服务端和插件端版本保持一致，避免出现一些未知问题（数据字段、接口）\n\n> 我们还会在更新日志中致谢是谁反馈或者提出对应问题，我们衷心感谢您的反馈，您的支持是我们前进的动力",normalizedContent:"注意\n\n升级前请仔细阅读版本更新日志，如果有特殊说明或者注意事项请仔细确认。升级前建议提前做好相关备份,避免出现意外造成数据丢失\n\n\n# 目前支持的升级方式\n\n 1. 远程检查版本并更新【推荐】\n 2. 在线上传 jar 包\n 3. 手动替换 jar\n 4. 批量升级插件端\n\n升级可能出现启动失败的情况，失败请检查控制台日志\n\n\n# 在线升级（推荐）\n\njpom 中提供在线升级功能，方便用户及时知道有新版本并快速更新。\n\n使用在线升级需要服务器能服务公网的条件才能正常使用\n\n目前更新策略是每天定时更新和手动触发更新\n\n使用该功能可能出现对问题有如下：\n\n 1. 无法获取到最新版本\n 2. 控制台有错误信息（获取远程版本信息失败: xxxx）\n 3. 控制台有错误信息（获取远程版本信息失败: received fatal alert: internal_error）\n    1. 通常为 jdk 版本问题，建议升级：jdk 1.8.0_311+\n    2. 参考文章：https://blog.csdn.net/qq_36218267/article/details/121741914\n\n\n# 有新版本提示\n\n\n\n点击下载按钮即可更新\n\n\n\n等待更新完成\n\n\n# beta 计划\n\njpom beta 计划是指能及时使用到 jpom 最新版本，但是可能存在一些问题，但请不要慌，jpom 团队会及时修复这些 bug。\n\n欢迎大家参与 beta 计划为 jpom 提出建议，帮助 jpom 不断改进，帮忙开源项目更好发展。\n\n\n\n\n# 批量升级插件端\n\n批量升级插件端是指批量升级插件端，在升级前需要下载最新版本然后选择需要升级的节点\n\n\n\n\n# 手动上传插件端包\n\n\n\n\n# 远程下载插件端包\n\n\n\n\n# 上传更新\n\n\n\n\n# 手动替换（不推荐）\n\n先在 jpom 官方下载最新版本，然后到对应的安装目录移除旧的 jar 包，上传新地安装包\n\n重启：\n\nbash /xxx/server.sh restart\n\n\n1\n\n\nbash /xxx/agent.sh restart\n\n\n1\n\n\nserver.bat restart\n\n\n1\n\n\nagent.bat restart\n\n\n1\n\n\n\n# 容器升级（docker 容器）\n\n如果您使用 docker 容器部署 jpom 服务端，那么其实您绝大多数情况可以使用：\n\n * 在线升级\n * 上传升级\n\n操作流程如上述流程，因为 jpom 服务端很极少情况会更新镜像的基础结构，通常仅是更新项目的 jar，如果有容器的镜像、管理脚本变动那么您需要更新镜像重新创建容器来升级。\n\n数据安全提醒\n\n这里重新创建容器请您一定确认服务端的数据目录是否挂载，如果未挂载请提前将容器里面的数据目录 cp 到宿主机后重新创建并挂载对应的目录， 否则可能会导致数据丢失\n\n容器创建jpom 服务端：说明文档 【推荐挂载方式安装】\n\n\n# 升级数据库？\n\n您有这样的疑问是正常的，但是在 jpom 中您不需要考虑升级版本时需要升级数据库的操作。\n\n我们为了简化您的升级流程，系统会在升级时自动执行新版本中需要修改的表结构，完全不需要您手动控制。\n\n\n# 高效看更新日志\n\n更新日志（changelog）我们会在每次发版时候写明对应版本中有哪些功能变动、新增、修复、优化等相关说明。\n\n我们更新日志一般包含：\n\n * 🐣 新增功能\n * 🐞 解决bug、优化功能\n * ⚠️ 注意\n\n上述三项，当您看到新版本时候建议先将您还未更新的版本所有的更新日志都阅读一次以便了解变更避免出现找不到功能 您遇到的 bug 是否修复等小尴尬事件\n\n如果更新日志有注意项时请您一定阅读，说明对应版本有比较大的变动或者需要您手动操作、数据兼容等说明\n\n每条更新日志我们一般开始还表明变动的模块\n\n * 【server】 服务端有变动\n * 【agent】 插件端有变动\n * 【all】 服务端和插件端均有变动\n\n其实我们建议您服务端和插件端版本保持一致，避免出现一些未知问题（数据字段、接口）\n\n> 我们还会在更新日志中致谢是谁反馈或者提出对应问题，我们衷心感谢您的反馈，您的支持是我们前进的动力",charsets:{cjk:!0},lastUpdated:"2024/03/03, 06:23:12",lastUpdatedTimestamp:1709446992e3},{title:"初始化服务端",frontmatter:{title:"初始化服务端",date:"2023-12-20T13:03:56.000Z",permalink:"/pages/269bdc/",categories:["docs","文档","开始使用"],tags:["使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/01.%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/30.%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8/002.%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%8D%E5%8A%A1%E7%AB%AF.html",relativePath:"文档/01.安装使用/30.开始使用/002.初始化服务端.md",key:"v-746a30c8",path:"/pages/269bdc/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"添加超级管理账号",slug:"添加超级管理账号",normalizedTitle:"添加超级管理账号",charIndex:82},{level:2,title:"开启账号 MFA",slug:"开启账号-mfa",normalizedTitle:"开启账号 mfa",charIndex:252}],headersStr:"前言 添加超级管理账号 开启账号 MFA",content:"# 前言\n\n当您初次安装 Jpom 服务端并访问页面，系统会跳转至添加超级管理员账号页面\n\n如果您系统中没有超级管理员账号也会跳转至添加超级管理员账号页面\n\n\n# 添加超级管理账号\n\n添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n建议\n\n超级管理员账号名请勿使用常用名称如admin、root、manager等，避免被其他用户有意或者无意操作造成登录失败次数过多从而超级管理员账号被异常锁定\n\n\n\n如果超级管理员被异常锁定请走超级管理员忘记密码流程：具体操作可以查阅文档\n\n\n# 开启账号 MFA\n\n为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证\n\n",normalizedContent:"# 前言\n\n当您初次安装 jpom 服务端并访问页面，系统会跳转至添加超级管理员账号页面\n\n如果您系统中没有超级管理员账号也会跳转至添加超级管理员账号页面\n\n\n# 添加超级管理账号\n\n添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码\n\n建议\n\n超级管理员账号名请勿使用常用名称如admin、root、manager等，避免被其他用户有意或者无意操作造成登录失败次数过多从而超级管理员账号被异常锁定\n\n\n\n如果超级管理员被异常锁定请走超级管理员忘记密码流程：具体操作可以查阅文档\n\n\n# 开启账号 mfa\n\n为了系统安全，强烈建议超级管理员账号开启 mfa 两步验证\n\n",charsets:{cjk:!0},lastUpdated:"2023/12/23, 17:01:57",lastUpdatedTimestamp:1703350917e3},{title:"迁移数据",frontmatter:{title:"迁移数据",date:"2023-12-23T17:15:45.000Z",permalink:"/pages/dec2a1/",categories:["docs","文档","如何升级&迁移"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/013.%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE/020.%E5%AE%8C%E6%95%B4&%E9%83%A8%E5%88%86%E8%BF%81%E7%A7%BB.html",relativePath:"文档/013.迁移数据/020.完整&部分迁移.md",key:"v-ffcc14aa",path:"/pages/dec2a1/",headers:[{level:2,title:"完整迁移",slug:"完整迁移",normalizedTitle:"完整迁移",charIndex:2},{level:3,title:"服务端（原生本地安装）",slug:"服务端-原生本地安装",normalizedTitle:"服务端（原生本地安装）",charIndex:100},{level:4,title:"开始迁移流程",slug:"开始迁移流程",normalizedTitle:"开始迁移流程",charIndex:390},{level:4,title:"关闭旧环境服务端",slug:"关闭旧环境服务端",normalizedTitle:"关闭旧环境服务端",charIndex:442},{level:4,title:"决定需要迁移的目录",slug:"决定需要迁移的目录",normalizedTitle:"决定需要迁移的目录",charIndex:597},{level:4,title:"打包整个目录并下载",slug:"打包整个目录并下载",normalizedTitle:"打包整个目录并下载",charIndex:1088},{level:4,title:"上传备份文件到新环境",slug:"上传备份文件到新环境",normalizedTitle:"上传备份文件到新环境",charIndex:1281},{level:4,title:"确认新环境准备完毕",slug:"确认新环境准备完毕",normalizedTitle:"确认新环境准备完毕",charIndex:1391},{level:4,title:"启动服务端",slug:"启动服务端",normalizedTitle:"启动服务端",charIndex:1542},{level:4,title:"检查是否需要安装服务",slug:"检查是否需要安装服务",normalizedTitle:"检查是否需要安装服务",charIndex:1720},{level:4,title:"确认访问",slug:"确认访问",normalizedTitle:"确认访问",charIndex:1905},{level:4,title:"检查系统是否正常",slug:"检查系统是否正常",normalizedTitle:"检查系统是否正常",charIndex:2014},{level:4,title:"正常使用",slug:"正常使用",normalizedTitle:"正常使用",charIndex:21},{level:3,title:"插件端",slug:"插件端",normalizedTitle:"插件端",charIndex:2172},{level:4,title:"开始迁移流程",slug:"开始迁移流程-2",normalizedTitle:"开始迁移流程",charIndex:390},{level:4,title:"关闭旧环境服务端",slug:"关闭旧环境服务端-2",normalizedTitle:"关闭旧环境服务端",charIndex:442},{level:4,title:"决定需要迁移的目录",slug:"决定需要迁移的目录-2",normalizedTitle:"决定需要迁移的目录",charIndex:597},{level:4,title:"打包整个目录并下载",slug:"打包整个目录并下载-2",normalizedTitle:"打包整个目录并下载",charIndex:1088},{level:4,title:"上传备份文件到新环境",slug:"上传备份文件到新环境-2",normalizedTitle:"上传备份文件到新环境",charIndex:1281},{level:4,title:"确认新环境准备完毕",slug:"确认新环境准备完毕-2",normalizedTitle:"确认新环境准备完毕",charIndex:1391},{level:4,title:"启动插件端",slug:"启动插件端",normalizedTitle:"启动插件端",charIndex:3587},{level:4,title:"检查是否需要安装服务",slug:"检查是否需要安装服务-2",normalizedTitle:"检查是否需要安装服务",charIndex:1720},{level:4,title:"修改机器节点地址",slug:"修改机器节点地址",normalizedTitle:"修改机器节点地址",charIndex:3948},{level:4,title:"检查节点是否正常",slug:"检查节点是否正常",normalizedTitle:"检查节点是否正常",charIndex:4073},{level:2,title:"部分迁移",slug:"部分迁移",normalizedTitle:"部分迁移",charIndex:4282},{level:3,title:"服务端（原生本地安装）",slug:"服务端-原生本地安装-2",normalizedTitle:"服务端（原生本地安装）",charIndex:100},{level:4,title:"开始迁移流程",slug:"开始迁移流程-3",normalizedTitle:"开始迁移流程",charIndex:390},{level:4,title:"关闭旧环境服务端",slug:"关闭旧环境服务端-3",normalizedTitle:"关闭旧环境服务端",charIndex:442},{level:4,title:"决定需要迁移的目录",slug:"决定需要迁移的目录-3",normalizedTitle:"决定需要迁移的目录",charIndex:597},{level:4,title:"后续流程和上面完整迁移一致",slug:"后续流程和上面完整迁移一致",normalizedTitle:"后续流程和上面完整迁移一致",charIndex:4926},{level:3,title:"插件端",slug:"插件端-2",normalizedTitle:"插件端",charIndex:2172}],headersStr:"完整迁移 服务端（原生本地安装） 开始迁移流程 关闭旧环境服务端 决定需要迁移的目录 打包整个目录并下载 上传备份文件到新环境 确认新环境准备完毕 启动服务端 检查是否需要安装服务 确认访问 检查系统是否正常 正常使用 插件端 开始迁移流程 关闭旧环境服务端 决定需要迁移的目录 打包整个目录并下载 上传备份文件到新环境 确认新环境准备完毕 启动插件端 检查是否需要安装服务 修改机器节点地址 检查节点是否正常 部分迁移 服务端（原生本地安装） 开始迁移流程 关闭旧环境服务端 决定需要迁移的目录 后续流程和上面完整迁移一致 插件端",content:"# 完整迁移\n\n完整迁移是指当您旧环境还能正常使用新环境已经准备 OK 就只需要迁移程序和数据\n\n> 注意：因为您使用文件迁移的方式并也迁移了配置文件，理论上无论您使用什么数据库均适用此流程\n\n\n# 服务端（原生本地安装）\n\n当前说明是指您使用原生本地安装的方式，并非使用容器安装的情况\n\n当您当新环境（机器/服务器）已经准备好了，请您先根据旧环境中的依赖和插件提前安装和进行环境变量配置（此步骤本文档默认您已经会了并且配置 OK）\n\n一般情况下依赖如下：\n\n * jdk 必须\n * maven 可选\n * node 可选\n * 服务器字体 可选（验证码相关）\n * 网络 （新环境和所有节点机器、SSH 机器、Docker 机器）\n * 数据库网络 （如果使用了 mysql 数据库）\n\n----------------------------------------\n\n# 开始迁移流程\n\n----------------------------------------\n\n# 关闭旧环境服务端\n\n先关闭旧环境服务端来保证已经没有新的操作和请求造成迁移过程中产生数据影响数据完整性\n\nsh ./bin/Server.sh stop\n\n\n1\n\n\n./bin/Server.bat stop\n\n\n1\n\n\n----------------------------------------\n\n# 决定需要迁移的目录\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n比如如下目录您可以选择不迁移：\n\n * logs\n * tmp\n * data/temp\n * data/script_run_cache\n\n慎重选择：如果您迁移时候发现 data/build 目录非常大严重影响您的备份效率，此时您需要评估在线构建中缓存的仓库数据、构建日志、构建产物是否可以容忍丢失。\n\n如果能容忍丢失那么您可以选择删除 data/build 目录。\n\n如果您想保留部分构建仓库数据、构建日志、构建产物数据，那么您需要先知道想保留的构建的数据 ID。\n\n怎么获取构建数据 ID,我相信您一定知道浏览器的调试控制台->网络选项卡（说到这里了懂的都懂，不懂的问度娘）\n\n获取到您需要保留的数据 ID 后，您将不需要保留的构建数据删除即可 data/build/数据 ID\n\n----------------------------------------\n\n# 打包整个目录并下载\n\n打包目录这个不用说了吧\n\nlinux 推荐用：tar\n\nwindows 您喜好\n\n为什么需要打包呢？不能直接下载目录吗？\n\n当您有这个疑问时说明您不知道在网络中，上传/下载多个小文件和上传/下载一个大文件的效率问题,反正推荐压缩打包后进行传输，极其不推荐直接传输整个目录。\n\n----------------------------------------\n\n# 上传备份文件到新环境\n\n当您打包后到文件下载到本地或者直接传输到新环境。\n\n如果您是下载到本地那么您还需要将文件上传到新环境中。\n\n----------------------------------------\n\n# 确认新环境准备完毕\n\n上面已经说明了，需要您提前在新环境中安装旧环境中相关的依赖插件。\n\n这里我们建议您新环境中使用插件版本和旧环境中的版本号和安装方式一直，来减少新环境中遇到各种奇奇乖乖的依赖环境不正确的问题\n\n----------------------------------------\n\n# 启动服务端\n\n但您环境确认完毕后，即可启动服务端\n\nsh ./bin/Server.sh start\n\n\n1\n\n\n./bin/Server.bat start\n\n\n1\n\n\n期待您顺利启动。\n\n如果启动失败请根据错误日志来排查定位相关问题（您也可以联系我们协助排查）\n\n----------------------------------------\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nLinux：\n\nbash /xxxx/bin/Service.sh install\n\n\n1\n\n\nWindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n# 确认访问\n\n当新环境启动成功后，您需要使用新 IP 访问系统，如果使用到了反向代理您还需要修改反向代理的配置来达到可以正常访问\n\n----------------------------------------\n\n# 检查系统是否正常\n\n使用账户密码登陆到新系统中来检查数据是否完成，资产数据连接是否正常\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n----------------------------------------\n\n\n# 插件端\n\n说明\n\n * 本文中仅说明如果迁移 jpom 插件端，如果您对呀服务端里面包含项目数据还您您自行迁移。迁移服务器中其他数据不在本文说明范畴.\n * 机器关联的项目数据迁移是一个极其麻烦的事情您自己想要了解并知道该如何迁移。\n * 如果仅迁移插件端未迁移机器中的项目数据那么可能造成在 Jpom 系统中看到项目状态是未运行和无法看到项目的任何文件。\n\n当您当新环境（机器/服务器）已经准备好了，请您先根据旧环境中的依赖和插件提前安装和进行环境变量配置（此步骤本文档默认您已经会了并且配置 OK）\n\n一般情况下依赖如下：\n\n * jdk 必须\n * 项目数据 【自行判断】\n * 网络 （服务端能否访问到新环境）\n\n# 开始迁移流程\n\n# 关闭旧环境服务端\n\n先关闭旧环境服务端来保证已经没有新的操作和请求造成迁移过程中产生数据影响数据完整性\n\nsh ./bin/Agent.sh stop\n\n\n1\n\n\n./bin/Agent.bat stop\n\n\n1\n\n\n----------------------------------------\n\n# 决定需要迁移的目录\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n比如如下目录您可以选择不迁移：\n\n * logs\n * tmp\n * data/temp\n * data/script_run_cache\n * data/script\n\n慎重选择：如果您迁移时候发现 data/script 目录非常大严重影响您的备份效率，此时您需要评估节点脚本日志是否可以容忍丢失。\n\n如果能容忍丢失那么您可以选择删除 data/script 目录。\n\n如果您想保留部分节点脚本日志数据，那么您需要先知道想保留的脚本的数据 ID。\n\n怎么获取脚本数据 ID,我相信您一定知道浏览器的调试控制台->网络选项卡（说到这里了懂的都懂，不懂的问度娘）\n\n获取到您需要保留的数据 ID 后，您将不需要保留的脚本日志数据删除即可 data/script/数据 ID\n\n----------------------------------------\n\n# 打包整个目录并下载\n\n打包目录这个不用说了吧\n\nlinux 推荐用：tar\n\nwindows 您喜好\n\n为什么需要打包呢？不能直接下载目录吗？\n\n当您有这个疑问时说明您不知道在网络中，上传/下载多个小文件和上传/下载一个大文件的效率问题,反正推荐压缩打包后进行传输，极其不推荐直接传输整个目录。\n\n----------------------------------------\n\n# 上传备份文件到新环境\n\n当您打包后到文件下载到本地或者直接传输到新环境。\n\n如果您是下载到本地那么您还需要将文件上传到新环境中。\n\n----------------------------------------\n\n# 确认新环境准备完毕\n\n上面已经说明了，需要您提前在新环境中安装旧环境中相关的依赖插件。\n\n这里我们建议您新环境中使用插件版本和旧环境中的版本号和安装方式一直，来减少新环境中遇到各种奇奇乖乖的依赖环境不正确的问题\n\n----------------------------------------\n\n# 启动插件端\n\n但您环境确认完毕后，即可启动插件端\n\nsh ./bin/Agent.sh start\n\n\n1\n\n\n./bin/Agent.bat start\n\n\n1\n\n\n期待您顺利启动。\n\n如果启动失败请根据错误日志来排查定位相关问题（您也可以联系我们协助排查）\n\n----------------------------------------\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nLinux：\n\nbash /xxxx/bin/Service.sh install\n\n\n1\n\n\nWindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n# 修改机器节点地址\n\n使用管理员账户登陆到服务端中，【系统管理】->【资产管理】->【机器管理】 中找到对应机器节点的数据编辑节点，修改其地址为新的 IP 地址\n\n----------------------------------------\n\n# 检查节点是否正常\n\n当您上述操作均成功后，您需要在 Jpom 系统中来检查您的节点是否可以正常连接，如果不能正常连接请检查网络限制相关问题\n\n您还需要建议此插件端机器中的项目数据是否正常（此流程不可控需要您清楚您项目是否迁移完成）\n\n----------------------------------------\n\n> 注意：因为您使用文件迁移的方式并也迁移了配置文件，理论上无论您使用什么数据库均是此流程\n\n\n# 部分迁移\n\n部分迁移是指您您想将旧环境数据导入或者迁移到新环境，旧环境中的历史记录日志和缓存均可以丢弃。\n\n\n# 服务端（原生本地安装）\n\n关于服务端数据的总结：\n\n * db 核心数据\n * conf 配置文件夹\n * data/INSTALL.json 安装ID/集群ID\n\n关于 db ：Server.mv.db、Server.trace.db 是最新的完整数据\n\n其他目录的数据均是使用过程中的数据：文件中心、证书文件、构建数据 想要您看是否使用到对应功能和是否重要以及有备份。\n\n自行选择选择使用过程中的数据是否迁移。\n\n# 开始迁移流程\n\n----------------------------------------\n\n# 关闭旧环境服务端\n\n先关闭旧环境服务端来保证已经没有新的操作和请求造成迁移过程中产生数据影响数据完整性\n\nsh ./bin/Server.sh stop\n\n\n1\n\n\n./bin/Server.bat stop\n\n\n1\n\n\n----------------------------------------\n\n# 决定需要迁移的目录\n\n根据上述描述选择您需要迁移的文件及文件夹\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n----------------------------------------\n\n# 后续流程和上面完整迁移一致\n\n后续流程和上面完整迁移一致，请先仔细阅读完整迁移的流程\n\n部分迁移和完整迁移的区别主要是选择的迁移数据的范围不同\n\n----------------------------------------\n\n\n# 插件端\n\n提示\n\n * 由于插件端数据较少，部分迁移和完整迁移流程和选择方式一致，请参考完整迁移流程\n * 绝大多数情况下我们建议插件端均采用完整迁移，但是需要考虑对应服务器中的项目数据迁移情况",normalizedContent:"# 完整迁移\n\n完整迁移是指当您旧环境还能正常使用新环境已经准备 ok 就只需要迁移程序和数据\n\n> 注意：因为您使用文件迁移的方式并也迁移了配置文件，理论上无论您使用什么数据库均适用此流程\n\n\n# 服务端（原生本地安装）\n\n当前说明是指您使用原生本地安装的方式，并非使用容器安装的情况\n\n当您当新环境（机器/服务器）已经准备好了，请您先根据旧环境中的依赖和插件提前安装和进行环境变量配置（此步骤本文档默认您已经会了并且配置 ok）\n\n一般情况下依赖如下：\n\n * jdk 必须\n * maven 可选\n * node 可选\n * 服务器字体 可选（验证码相关）\n * 网络 （新环境和所有节点机器、ssh 机器、docker 机器）\n * 数据库网络 （如果使用了 mysql 数据库）\n\n----------------------------------------\n\n# 开始迁移流程\n\n----------------------------------------\n\n# 关闭旧环境服务端\n\n先关闭旧环境服务端来保证已经没有新的操作和请求造成迁移过程中产生数据影响数据完整性\n\nsh ./bin/server.sh stop\n\n\n1\n\n\n./bin/server.bat stop\n\n\n1\n\n\n----------------------------------------\n\n# 决定需要迁移的目录\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n比如如下目录您可以选择不迁移：\n\n * logs\n * tmp\n * data/temp\n * data/script_run_cache\n\n慎重选择：如果您迁移时候发现 data/build 目录非常大严重影响您的备份效率，此时您需要评估在线构建中缓存的仓库数据、构建日志、构建产物是否可以容忍丢失。\n\n如果能容忍丢失那么您可以选择删除 data/build 目录。\n\n如果您想保留部分构建仓库数据、构建日志、构建产物数据，那么您需要先知道想保留的构建的数据 id。\n\n怎么获取构建数据 id,我相信您一定知道浏览器的调试控制台->网络选项卡（说到这里了懂的都懂，不懂的问度娘）\n\n获取到您需要保留的数据 id 后，您将不需要保留的构建数据删除即可 data/build/数据 id\n\n----------------------------------------\n\n# 打包整个目录并下载\n\n打包目录这个不用说了吧\n\nlinux 推荐用：tar\n\nwindows 您喜好\n\n为什么需要打包呢？不能直接下载目录吗？\n\n当您有这个疑问时说明您不知道在网络中，上传/下载多个小文件和上传/下载一个大文件的效率问题,反正推荐压缩打包后进行传输，极其不推荐直接传输整个目录。\n\n----------------------------------------\n\n# 上传备份文件到新环境\n\n当您打包后到文件下载到本地或者直接传输到新环境。\n\n如果您是下载到本地那么您还需要将文件上传到新环境中。\n\n----------------------------------------\n\n# 确认新环境准备完毕\n\n上面已经说明了，需要您提前在新环境中安装旧环境中相关的依赖插件。\n\n这里我们建议您新环境中使用插件版本和旧环境中的版本号和安装方式一直，来减少新环境中遇到各种奇奇乖乖的依赖环境不正确的问题\n\n----------------------------------------\n\n# 启动服务端\n\n但您环境确认完毕后，即可启动服务端\n\nsh ./bin/server.sh start\n\n\n1\n\n\n./bin/server.bat start\n\n\n1\n\n\n期待您顺利启动。\n\n如果启动失败请根据错误日志来排查定位相关问题（您也可以联系我们协助排查）\n\n----------------------------------------\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nlinux：\n\nbash /xxxx/bin/service.sh install\n\n\n1\n\n\nwindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n# 确认访问\n\n当新环境启动成功后，您需要使用新 ip 访问系统，如果使用到了反向代理您还需要修改反向代理的配置来达到可以正常访问\n\n----------------------------------------\n\n# 检查系统是否正常\n\n使用账户密码登陆到新系统中来检查数据是否完成，资产数据连接是否正常\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n----------------------------------------\n\n\n# 插件端\n\n说明\n\n * 本文中仅说明如果迁移 jpom 插件端，如果您对呀服务端里面包含项目数据还您您自行迁移。迁移服务器中其他数据不在本文说明范畴.\n * 机器关联的项目数据迁移是一个极其麻烦的事情您自己想要了解并知道该如何迁移。\n * 如果仅迁移插件端未迁移机器中的项目数据那么可能造成在 jpom 系统中看到项目状态是未运行和无法看到项目的任何文件。\n\n当您当新环境（机器/服务器）已经准备好了，请您先根据旧环境中的依赖和插件提前安装和进行环境变量配置（此步骤本文档默认您已经会了并且配置 ok）\n\n一般情况下依赖如下：\n\n * jdk 必须\n * 项目数据 【自行判断】\n * 网络 （服务端能否访问到新环境）\n\n# 开始迁移流程\n\n# 关闭旧环境服务端\n\n先关闭旧环境服务端来保证已经没有新的操作和请求造成迁移过程中产生数据影响数据完整性\n\nsh ./bin/agent.sh stop\n\n\n1\n\n\n./bin/agent.bat stop\n\n\n1\n\n\n----------------------------------------\n\n# 决定需要迁移的目录\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n比如如下目录您可以选择不迁移：\n\n * logs\n * tmp\n * data/temp\n * data/script_run_cache\n * data/script\n\n慎重选择：如果您迁移时候发现 data/script 目录非常大严重影响您的备份效率，此时您需要评估节点脚本日志是否可以容忍丢失。\n\n如果能容忍丢失那么您可以选择删除 data/script 目录。\n\n如果您想保留部分节点脚本日志数据，那么您需要先知道想保留的脚本的数据 id。\n\n怎么获取脚本数据 id,我相信您一定知道浏览器的调试控制台->网络选项卡（说到这里了懂的都懂，不懂的问度娘）\n\n获取到您需要保留的数据 id 后，您将不需要保留的脚本日志数据删除即可 data/script/数据 id\n\n----------------------------------------\n\n# 打包整个目录并下载\n\n打包目录这个不用说了吧\n\nlinux 推荐用：tar\n\nwindows 您喜好\n\n为什么需要打包呢？不能直接下载目录吗？\n\n当您有这个疑问时说明您不知道在网络中，上传/下载多个小文件和上传/下载一个大文件的效率问题,反正推荐压缩打包后进行传输，极其不推荐直接传输整个目录。\n\n----------------------------------------\n\n# 上传备份文件到新环境\n\n当您打包后到文件下载到本地或者直接传输到新环境。\n\n如果您是下载到本地那么您还需要将文件上传到新环境中。\n\n----------------------------------------\n\n# 确认新环境准备完毕\n\n上面已经说明了，需要您提前在新环境中安装旧环境中相关的依赖插件。\n\n这里我们建议您新环境中使用插件版本和旧环境中的版本号和安装方式一直，来减少新环境中遇到各种奇奇乖乖的依赖环境不正确的问题\n\n----------------------------------------\n\n# 启动插件端\n\n但您环境确认完毕后，即可启动插件端\n\nsh ./bin/agent.sh start\n\n\n1\n\n\n./bin/agent.bat start\n\n\n1\n\n\n期待您顺利启动。\n\n如果启动失败请根据错误日志来排查定位相关问题（您也可以联系我们协助排查）\n\n----------------------------------------\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nlinux：\n\nbash /xxxx/bin/service.sh install\n\n\n1\n\n\nwindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n# 修改机器节点地址\n\n使用管理员账户登陆到服务端中，【系统管理】->【资产管理】->【机器管理】 中找到对应机器节点的数据编辑节点，修改其地址为新的 ip 地址\n\n----------------------------------------\n\n# 检查节点是否正常\n\n当您上述操作均成功后，您需要在 jpom 系统中来检查您的节点是否可以正常连接，如果不能正常连接请检查网络限制相关问题\n\n您还需要建议此插件端机器中的项目数据是否正常（此流程不可控需要您清楚您项目是否迁移完成）\n\n----------------------------------------\n\n> 注意：因为您使用文件迁移的方式并也迁移了配置文件，理论上无论您使用什么数据库均是此流程\n\n\n# 部分迁移\n\n部分迁移是指您您想将旧环境数据导入或者迁移到新环境，旧环境中的历史记录日志和缓存均可以丢弃。\n\n\n# 服务端（原生本地安装）\n\n关于服务端数据的总结：\n\n * db 核心数据\n * conf 配置文件夹\n * data/install.json 安装id/集群id\n\n关于 db ：server.mv.db、server.trace.db 是最新的完整数据\n\n其他目录的数据均是使用过程中的数据：文件中心、证书文件、构建数据 想要您看是否使用到对应功能和是否重要以及有备份。\n\n自行选择选择使用过程中的数据是否迁移。\n\n# 开始迁移流程\n\n----------------------------------------\n\n# 关闭旧环境服务端\n\n先关闭旧环境服务端来保证已经没有新的操作和请求造成迁移过程中产生数据影响数据完整性\n\nsh ./bin/server.sh stop\n\n\n1\n\n\n./bin/server.bat stop\n\n\n1\n\n\n----------------------------------------\n\n# 决定需要迁移的目录\n\n根据上述描述选择您需要迁移的文件及文件夹\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n----------------------------------------\n\n# 后续流程和上面完整迁移一致\n\n后续流程和上面完整迁移一致，请先仔细阅读完整迁移的流程\n\n部分迁移和完整迁移的区别主要是选择的迁移数据的范围不同\n\n----------------------------------------\n\n\n# 插件端\n\n提示\n\n * 由于插件端数据较少，部分迁移和完整迁移流程和选择方式一致，请参考完整迁移流程\n * 绝大多数情况下我们建议插件端均采用完整迁移，但是需要考虑对应服务器中的项目数据迁移情况",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"迁移方式",frontmatter:{title:"迁移方式",date:"2023-12-24T11:34:27.000Z",permalink:"/pages/4d2ebc/",categories:["docs","文档","备份&升级&迁移","迁移数据"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/013.%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE/010.%E8%BF%81%E7%A7%BB%E6%96%B9%E5%BC%8F.html",relativePath:"文档/013.迁移数据/010.迁移方式.md",key:"v-0621d0e1",path:"/pages/4d2ebc/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"情况判断",slug:"情况判断",normalizedTitle:"情况判断",charIndex:123}],headersStr:"前言 情况判断",content:"# 前言\n\n由于各种因素我们时常需要对 Jpom 进行数据迁移，当您需要迁移时请先仔细阅读该文档帮助您避坑\n\n提醒\n\n * 本文涉及到流程和说明较多，为来您的数据安全建议您先全部阅读后再进行操作\n\n * 迁移数据有风险请提前做好数据备份\n\n\n# 情况判断\n\n迁移数据根据实际情况又分为几种\n\n * 完整迁移\n * 部分迁移\n * 数据还原/导入\n\n同时根据您的安装方式又分为原生本地安装、容器安装",normalizedContent:"# 前言\n\n由于各种因素我们时常需要对 jpom 进行数据迁移，当您需要迁移时请先仔细阅读该文档帮助您避坑\n\n提醒\n\n * 本文涉及到流程和说明较多，为来您的数据安全建议您先全部阅读后再进行操作\n\n * 迁移数据有风险请提前做好数据备份\n\n\n# 情况判断\n\n迁移数据根据实际情况又分为几种\n\n * 完整迁移\n * 部分迁移\n * 数据还原/导入\n\n同时根据您的安装方式又分为原生本地安装、容器安装",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"还原&导入",frontmatter:{title:"还原&导入",date:"2023-12-24T11:35:54.000Z",permalink:"/pages/643951/",categories:["docs","文档","备份&升级&迁移","迁移数据"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/013.%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE/030.%E6%95%B0%E6%8D%AE%E8%BF%98%E5%8E%9F&%E5%AF%BC%E5%85%A5.html",relativePath:"文档/013.迁移数据/030.数据还原&导入.md",key:"v-8863c864",path:"/pages/643951/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"服务端[H2数据库]（原生本地安装）",slug:"服务端-h2数据库-原生本地安装",normalizedTitle:"服务端[h2数据库]（原生本地安装）",charIndex:155},{level:3,title:"创建数据备份（旧环境）",slug:"创建数据备份-旧环境",normalizedTitle:"创建数据备份（旧环境）",charIndex:366},{level:4,title:"1. 创建最新的【全量备份】",slug:"_1-创建最新的【全量备份】",normalizedTitle:"1. 创建最新的【全量备份】",charIndex:412},{level:4,title:"2. 等待备份状态完成",slug:"_2-等待备份状态完成",normalizedTitle:"2. 等待备份状态完成",charIndex:432},{level:4,title:"3. 下载备份文件",slug:"_3-下载备份文件",normalizedTitle:"3. 下载备份文件",charIndex:499},{level:4,title:"4. 关闭旧环境",slug:"_4-关闭旧环境",normalizedTitle:"4. 关闭旧环境",charIndex:537},{level:3,title:"全新安装服务端（新环境）",slug:"全新安装服务端-新环境",normalizedTitle:"全新安装服务端（新环境）",charIndex:598},{level:3,title:"检查是否需要安装服务",slug:"检查是否需要安装服务",normalizedTitle:"检查是否需要安装服务",charIndex:755},{level:3,title:"确认是否迁移配置文件",slug:"确认是否迁移配置文件",normalizedTitle:"确认是否迁移配置文件",charIndex:941},{level:3,title:"初始化服务端",slug:"初始化服务端",normalizedTitle:"初始化服务端",charIndex:1115},{level:3,title:"将备份数据导入到新环境（导入备份）",slug:"将备份数据导入到新环境-导入备份",normalizedTitle:"将备份数据导入到新环境（导入备份）",charIndex:1180},{level:3,title:"选择对应记录进行还原（还原备份）",slug:"选择对应记录进行还原-还原备份",normalizedTitle:"选择对应记录进行还原（还原备份）",charIndex:1282},{level:3,title:"等待还原结果",slug:"等待还原结果",normalizedTitle:"等待还原结果",charIndex:1343},{level:3,title:"选择迁移关联文件",slug:"选择迁移关联文件",normalizedTitle:"选择迁移关联文件",charIndex:1467},{level:3,title:"同步集群安装 ID【重要】",slug:"同步集群安装-id【重要】",normalizedTitle:"同步集群安装 id【重要】",charIndex:1707},{level:4,title:"修正流程如下",slug:"修正流程如下",normalizedTitle:"修正流程如下",charIndex:2283},{level:4,title:"删除已经弃用的集群数据",slug:"删除已经弃用的集群数据",normalizedTitle:"删除已经弃用的集群数据",charIndex:2398},{level:3,title:"正常使用",slug:"正常使用",normalizedTitle:"正常使用",charIndex:2777},{level:2,title:"服务端[MYSQL数据库]（原生本地安装）",slug:"服务端-mysql数据库-原生本地安装",normalizedTitle:"服务端[mysql数据库]（原生本地安装）",charIndex:2917},{level:3,title:"迁移数据库",slug:"迁移数据库",normalizedTitle:"迁移数据库",charIndex:2970},{level:3,title:"迁移服务器",slug:"迁移服务器",normalizedTitle:"迁移服务器",charIndex:3241},{level:4,title:"全新安装服务端（新环境）",slug:"全新安装服务端-新环境-2",normalizedTitle:"全新安装服务端（新环境）",charIndex:598},{level:4,title:"检查是否需要安装服务",slug:"检查是否需要安装服务-2",normalizedTitle:"检查是否需要安装服务",charIndex:755},{level:4,title:"确认是否迁移配置文件",slug:"确认是否迁移配置文件-2",normalizedTitle:"确认是否迁移配置文件",charIndex:941},{level:4,title:"修改数据库配置（新环境）",slug:"修改数据库配置-新环境",normalizedTitle:"修改数据库配置（新环境）",charIndex:3808},{level:4,title:"选择迁移关联文件",slug:"选择迁移关联文件-2",normalizedTitle:"选择迁移关联文件",charIndex:1467},{level:4,title:"同步集群安装 ID【重要】",slug:"同步集群安装-id【重要】-2",normalizedTitle:"同步集群安装 id【重要】",charIndex:1707},{level:4,title:"正常使用",slug:"正常使用-2",normalizedTitle:"正常使用",charIndex:2777},{level:2,title:"插件端",slug:"插件端",normalizedTitle:"插件端",charIndex:2076}],headersStr:"前言 服务端[H2数据库]（原生本地安装） 创建数据备份（旧环境） 1. 创建最新的【全量备份】 2. 等待备份状态完成 3. 下载备份文件 4. 关闭旧环境 全新安装服务端（新环境） 检查是否需要安装服务 确认是否迁移配置文件 初始化服务端 将备份数据导入到新环境（导入备份） 选择对应记录进行还原（还原备份） 等待还原结果 选择迁移关联文件 同步集群安装 ID【重要】 修正流程如下 删除已经弃用的集群数据 正常使用 服务端[MYSQL数据库]（原生本地安装） 迁移数据库 迁移服务器 全新安装服务端（新环境） 检查是否需要安装服务 确认是否迁移配置文件 修改数据库配置（新环境） 选择迁移关联文件 同步集群安装 ID【重要】 正常使用 插件端",content:'# 前言\n\n数据还原/导入\n\n在一些情况下您已经在新环境中全新安装 Jpom 现在想把之前环境中的数据导入或者还原到新环境中.\n\n或者您想将 A 环境（非全新）中的数据导入到 B 环境中（不推荐此做法）\n\n注意\n\n使用 h2 数据库和使用 mysql 数据库的流程不一样奥。请根据您的情况选择不同流程\n\n\n# 服务端[H2数据库]（原生本地安装）\n\n风险提示\n\n如果您已经安装过服务端并且已经在使用或者已经添加资产数据、节点数据、项目数据，此情况非常不建议您操作数据还原/导入，因为还原/导入操作后两个环境中的数据可能冲出或者数据冗余产生很多未知问题和不可控的数据异常相关问题\n\n如果您是全新安装还未正式使用，仅是安装后初始化超级管理员账号（必须操作）。\n\n⚠️注意：不要对其他数据进行添加操作，请仔细阅读下文操作流程说明\n\n\n# 创建数据备份（旧环境）\n\n操作路径：【系统管理】->【服务端管理】->【数据库备份】\n\n# 1. 创建最新的【全量备份】\n\n\n\n# 2. 等待备份状态完成\n\n备份根据您数据量大小耗时不一样，请耐心等待。页面中的数据非自动刷新请定期手动刷新便于及时知道备份状态\n\n# 3. 下载备份文件\n\n当备份成功后我们将对应的数据文件下载到本地\n\n\n\n# 4. 关闭旧环境\n\n上述操作完成后我们建议您关闭此系统，避免再次使用过程中产生数据造成和新环境中期望的数据不一致\n\n\n# 全新安装服务端（新环境）\n\n在您期望导入/还原到的新服务器中安装好服务端所需要的所有依赖和您需要的插件\n\n一般情况下依赖如下：\n\n * jdk 必须\n * maven 可选\n * node 可选\n * 服务器字体 可选（验证码相关）\n * 网络 （新环境和所有节点机器、SSH 机器、Docker 机器）\n\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nLinux：\n\nbash /xxxx/bin/Service.sh install\n\n\n1\n\n\nWindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n\n# 确认是否迁移配置文件\n\n新环境安装完成后您要确认您是否对服务端进行过自定义配置（conf）：\n\n * application.yml\n * logback.xml\n * 自定义容器构建插件\n * 修改容器构建插件\n * 脚本执行模板\n\n如果您没有对齐进行修改过可以忽略此步骤用全新默认配置即可\n\n如果有修改请手动同步修改过的配置文件！！！\n\n\n# 初始化服务端\n\n访问服务端：先确认您能正常访问到新环境中的服务端\n\n先对服务端进行一个简单的初始化配置管理员账户密码\n\n\n\n\n# 将备份数据导入到新环境（导入备份）\n\n初始化完成后进入系统，请不要进行其他任何数据的添加或者配置。\n\n直接到数据库备份中导入备份\n\n操作路径：【系统管理】->【服务端管理】->【数据库备份】\n\n\n\n\n# 选择对应记录进行还原（还原备份）\n\n导入成功后，对指定记录进行还原\n\n> 截图不一定和上文一致（但流程一致）\n\n\n\n\n# 等待还原结果\n\n还原成功后会自动跳转到登录页面，因为之前数据库中的账户和您新配置的账户的 slat 有差异。\n\n使用旧环境中的原始账户登录，进入系统后检查数据的完整性\n\n注意\n\n此时您访问系统中仅能看到数据记录，没有程序需要使用的相关文件\n\n\n# 选择迁移关联文件\n\n根据您系统中的不同文件的重要性选择性的将旧环境中的文件迁移到新环境中\n\n> 注意：一定保留原始的相对目录层级和结构\n\n可选迁移的文件有如下：\n\n * data/build\n * data/script\n * data/command_log\n * data/file-storage\n * data/certificate\n * data/docker\n * 更多请自行选择\n\n需要同步迁移请手动从旧环境迁移到新环境中即可\n\n迁移完成后重启一下服务端\n\n\n# 同步集群安装 ID【重要】\n\n注意\n\n当前流程说明的是使用 H2 数据库，使用 H2 数据库是不支持集群的，但是我们仍需要对集群安装 id 进行修正同步\n\n服务器中会自动创建一个集群，一般情况下您无法使用到集群功能，但是您导入/还原前后后仍需要进行一次集群安装 id 确认修正，避免后续数据异常无法排查等未知错误\n\n集群安装 id 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：INSTALL.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installTime":"2021-03-16 17:05:32",\n        "installId":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installId 为当前集群安装 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n这样经过上述操作可能数据库中已经存在多条集群记录了（初次安装数据库已经存在新集群安装 id、导入数据存在旧集群安装 id），此时我们就需要进行手动修正。\n\n# 修正流程如下\n\n 1. 旧环境中找到 INSTALL.json 文件，查看 installId 值\n 2. 将新环境中的的 INSTALL.json 文件， installId 值修改为和旧环境一致的值\n 3. 重启服务端\n\n# 删除已经弃用的集群数据\n\n操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n找到对应已经弃用的集群安装 id 。\n\n这里注意选择弃用 id 规则如下：非当前INSTALL.json文件installId 值即为弃用\n\n\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您选错要删除集群了，说明此集群之前已经被工作空间绑定啦（因为我们系统会默认给未绑定集群的工作空间自动绑定最新集群，旧数据已经自动绑定啦，所以您在修正集群安装 id 时需要保留使用旧环境中的集群安装 id）\n\n正常情况下使用 H2 数据时非集群默认，此列表仅存在一条记录时是正常的\n\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n友情提醒\n\n上述操作流程时选用最复杂的流程来讲解，其实您可以在新环境中安装后服务端后不要启动，直接同步需要的文件到新环境中可以省去一些流程\n\n\n# 服务端[MYSQL数据库]（原生本地安装）\n\n如果您使用的是 mysql 数据库那么就涉及到两种情况，您是迁移数据库还是迁移服务端所在的服务器。\n\n\n# 迁移数据库\n\n迁移数据库其实算比较简单的，因为 mysql 非常成熟方案多种多样您选择您最擅长的即可（如果不会那搜索引擎是您最佳选择）。\n\n提醒\n\n * 迁移数据库前请先停止服务端避免在迁移过程中产生新数据（一般推荐使用停机迁移，非停机迁移请自行研究）\n * 迁移数据库注意不仅需要迁移表还要迁移数据库：函数和存储过程\n\n当您确认数据库迁移完成后，到服务端修改数据库连接新鲜配置。\n\n配置文件路径： 服务端安装路径/conf/application.yml\n\n修改配置后重启服务端即可\n\n\n# 迁移服务器\n\n# 全新安装服务端（新环境）\n\n在您期望导入/还原到的新服务器中安装好服务端所需要的所有依赖和您需要的插件\n\n一般情况下依赖如下：\n\n * jdk 必须\n * maven 可选\n * node 可选\n * 服务器字体 可选（验证码相关）\n * 网络 （新环境和所有节点机器、SSH 机器、Docker 机器）\n * 数据库网络\n\n提醒\n\n安装完成后我们建议您不要启动服务端、等后续流程操作后再启动\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nLinux：\n\nbash /xxxx/bin/Service.sh install\n\n\n1\n\n\nWindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n# 确认是否迁移配置文件\n\n新环境安装完成后您要确认您是否对服务端进行过自定义配置（conf）：\n\n * application.yml\n * logback.xml\n * 自定义容器构建插件\n * 修改容器构建插件\n * 脚本执行模板\n\n如果您没有对齐进行修改过可以忽略此步骤用全新默认配置即可\n\n如果有修改请手动同步修改过的配置文件！！！\n\n# 修改数据库配置（新环境）\n\n当您在新环境已经安装好后，如果您没有同步 application.yml 文件，这里您还需要手动修改数据库配置信息为您 mysql 数据库信息\n\n配置文件路径： 服务端安装路径/conf/application.yml\n\n\n\n# 选择迁移关联文件\n\n根据您系统中的不同文件的重要性选择性的将旧环境中的文件迁移到新环境中\n\n> 注意：一定保留原始的相对目录层级和结构\n\n可选迁移的文件有如下：\n\n * data/build\n * data/script\n * data/command_log\n * data/file-storage\n * data/certificate\n * data/docker\n * 更多请自行选择\n\n需要同步迁移请手动从旧环境迁移到新环境中即可\n\n迁移完成后重启一下服务端\n\n# 同步集群安装 ID【重要】\n\n注意\n\n如果您在安装新环境后未启动，或者启动前手动同步过 INSTALL.json 可以忽略此步骤（建议还是检查一下）\n\n服务器中会自动创建一个集群，一般情况下您无法使用到集群功能，但是您导入/还原前后后仍需要进行一次集群安装 id 确认修正，避免后续数据异常无法排查等未知错误\n\n集群安装 id 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：INSTALL.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installTime":"2021-03-16 17:05:32",\n        "installId":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installId 为当前集群安装 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n这样经过上述操作可能数据库中已经存在多条集群记录了（初次安装数据库已经存在新集群安装 id、导入数据存在旧集群安装 id），此时我们就需要进行手动修正。\n\n# 修正流程如下\n\n 1. 旧环境中找到 INSTALL.json 文件，查看 installId 值\n 2. 将新环境中的的 INSTALL.json 文件， installId 值修改为和旧环境一致的值\n 3. 重启服务端\n\n# 删除已经弃用的集群数据\n\n操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n找到对应已经弃用的集群安装 id 。\n\n这里注意选择弃用 id 规则如下：非当前INSTALL.json文件installId 值即为弃用\n\n\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您选错要删除集群了，说明此集群之前已经被工作空间绑定啦（因为我们系统会默认给未绑定集群的工作空间自动绑定最新集群，旧数据已经自动绑定啦，所以您在修正集群安装 id 时需要保留使用旧环境中的集群安装 id）\n\n正常情况下使用 H2 数据时非集群默认，此列表仅存在一条记录时是正常的\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n友情提醒\n\n上述操作流程时选用最复杂的流程来讲解，其实您可以在新环境中安装后服务端后不要启动，直接同步需要的文件到新环境中可以省去一些流程\n\n\n# 插件端\n\n由于插件端本身数据较少并且机器中包含的项目关联文件较多，插件端不能给出一个完整的数据还原、导入的流程\n\n如果您仅是想把插件端的数据迁移到新环境，我们建议您使用完整迁移插件端的方式（完整迁移方式文档有说明）',normalizedContent:'# 前言\n\n数据还原/导入\n\n在一些情况下您已经在新环境中全新安装 jpom 现在想把之前环境中的数据导入或者还原到新环境中.\n\n或者您想将 a 环境（非全新）中的数据导入到 b 环境中（不推荐此做法）\n\n注意\n\n使用 h2 数据库和使用 mysql 数据库的流程不一样奥。请根据您的情况选择不同流程\n\n\n# 服务端[h2数据库]（原生本地安装）\n\n风险提示\n\n如果您已经安装过服务端并且已经在使用或者已经添加资产数据、节点数据、项目数据，此情况非常不建议您操作数据还原/导入，因为还原/导入操作后两个环境中的数据可能冲出或者数据冗余产生很多未知问题和不可控的数据异常相关问题\n\n如果您是全新安装还未正式使用，仅是安装后初始化超级管理员账号（必须操作）。\n\n⚠️注意：不要对其他数据进行添加操作，请仔细阅读下文操作流程说明\n\n\n# 创建数据备份（旧环境）\n\n操作路径：【系统管理】->【服务端管理】->【数据库备份】\n\n# 1. 创建最新的【全量备份】\n\n\n\n# 2. 等待备份状态完成\n\n备份根据您数据量大小耗时不一样，请耐心等待。页面中的数据非自动刷新请定期手动刷新便于及时知道备份状态\n\n# 3. 下载备份文件\n\n当备份成功后我们将对应的数据文件下载到本地\n\n\n\n# 4. 关闭旧环境\n\n上述操作完成后我们建议您关闭此系统，避免再次使用过程中产生数据造成和新环境中期望的数据不一致\n\n\n# 全新安装服务端（新环境）\n\n在您期望导入/还原到的新服务器中安装好服务端所需要的所有依赖和您需要的插件\n\n一般情况下依赖如下：\n\n * jdk 必须\n * maven 可选\n * node 可选\n * 服务器字体 可选（验证码相关）\n * 网络 （新环境和所有节点机器、ssh 机器、docker 机器）\n\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nlinux：\n\nbash /xxxx/bin/service.sh install\n\n\n1\n\n\nwindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n\n# 确认是否迁移配置文件\n\n新环境安装完成后您要确认您是否对服务端进行过自定义配置（conf）：\n\n * application.yml\n * logback.xml\n * 自定义容器构建插件\n * 修改容器构建插件\n * 脚本执行模板\n\n如果您没有对齐进行修改过可以忽略此步骤用全新默认配置即可\n\n如果有修改请手动同步修改过的配置文件！！！\n\n\n# 初始化服务端\n\n访问服务端：先确认您能正常访问到新环境中的服务端\n\n先对服务端进行一个简单的初始化配置管理员账户密码\n\n\n\n\n# 将备份数据导入到新环境（导入备份）\n\n初始化完成后进入系统，请不要进行其他任何数据的添加或者配置。\n\n直接到数据库备份中导入备份\n\n操作路径：【系统管理】->【服务端管理】->【数据库备份】\n\n\n\n\n# 选择对应记录进行还原（还原备份）\n\n导入成功后，对指定记录进行还原\n\n> 截图不一定和上文一致（但流程一致）\n\n\n\n\n# 等待还原结果\n\n还原成功后会自动跳转到登录页面，因为之前数据库中的账户和您新配置的账户的 slat 有差异。\n\n使用旧环境中的原始账户登录，进入系统后检查数据的完整性\n\n注意\n\n此时您访问系统中仅能看到数据记录，没有程序需要使用的相关文件\n\n\n# 选择迁移关联文件\n\n根据您系统中的不同文件的重要性选择性的将旧环境中的文件迁移到新环境中\n\n> 注意：一定保留原始的相对目录层级和结构\n\n可选迁移的文件有如下：\n\n * data/build\n * data/script\n * data/command_log\n * data/file-storage\n * data/certificate\n * data/docker\n * 更多请自行选择\n\n需要同步迁移请手动从旧环境迁移到新环境中即可\n\n迁移完成后重启一下服务端\n\n\n# 同步集群安装 id【重要】\n\n注意\n\n当前流程说明的是使用 h2 数据库，使用 h2 数据库是不支持集群的，但是我们仍需要对集群安装 id 进行修正同步\n\n服务器中会自动创建一个集群，一般情况下您无法使用到集群功能，但是您导入/还原前后后仍需要进行一次集群安装 id 确认修正，避免后续数据异常无法排查等未知错误\n\n集群安装 id 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：install.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installtime":"2021-03-16 17:05:32",\n        "installid":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installid 为当前集群安装 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n这样经过上述操作可能数据库中已经存在多条集群记录了（初次安装数据库已经存在新集群安装 id、导入数据存在旧集群安装 id），此时我们就需要进行手动修正。\n\n# 修正流程如下\n\n 1. 旧环境中找到 install.json 文件，查看 installid 值\n 2. 将新环境中的的 install.json 文件， installid 值修改为和旧环境一致的值\n 3. 重启服务端\n\n# 删除已经弃用的集群数据\n\n操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n找到对应已经弃用的集群安装 id 。\n\n这里注意选择弃用 id 规则如下：非当前install.json文件installid 值即为弃用\n\n\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您选错要删除集群了，说明此集群之前已经被工作空间绑定啦（因为我们系统会默认给未绑定集群的工作空间自动绑定最新集群，旧数据已经自动绑定啦，所以您在修正集群安装 id 时需要保留使用旧环境中的集群安装 id）\n\n正常情况下使用 h2 数据时非集群默认，此列表仅存在一条记录时是正常的\n\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n友情提醒\n\n上述操作流程时选用最复杂的流程来讲解，其实您可以在新环境中安装后服务端后不要启动，直接同步需要的文件到新环境中可以省去一些流程\n\n\n# 服务端[mysql数据库]（原生本地安装）\n\n如果您使用的是 mysql 数据库那么就涉及到两种情况，您是迁移数据库还是迁移服务端所在的服务器。\n\n\n# 迁移数据库\n\n迁移数据库其实算比较简单的，因为 mysql 非常成熟方案多种多样您选择您最擅长的即可（如果不会那搜索引擎是您最佳选择）。\n\n提醒\n\n * 迁移数据库前请先停止服务端避免在迁移过程中产生新数据（一般推荐使用停机迁移，非停机迁移请自行研究）\n * 迁移数据库注意不仅需要迁移表还要迁移数据库：函数和存储过程\n\n当您确认数据库迁移完成后，到服务端修改数据库连接新鲜配置。\n\n配置文件路径： 服务端安装路径/conf/application.yml\n\n修改配置后重启服务端即可\n\n\n# 迁移服务器\n\n# 全新安装服务端（新环境）\n\n在您期望导入/还原到的新服务器中安装好服务端所需要的所有依赖和您需要的插件\n\n一般情况下依赖如下：\n\n * jdk 必须\n * maven 可选\n * node 可选\n * 服务器字体 可选（验证码相关）\n * 网络 （新环境和所有节点机器、ssh 机器、docker 机器）\n * 数据库网络\n\n提醒\n\n安装完成后我们建议您不要启动服务端、等后续流程操作后再启动\n\n# 检查是否需要安装服务\n\n如果您之前注册过开机启动服务，您还需要使用之前相同方式来在新机器中注册服务并开启开机自启\n\nlinux：\n\nbash /xxxx/bin/service.sh install\n\n\n1\n\n\nwindows:\n\n自行实现\n\n安装服务后不要忘记设置开机自启奥！\n\n----------------------------------------\n\n# 确认是否迁移配置文件\n\n新环境安装完成后您要确认您是否对服务端进行过自定义配置（conf）：\n\n * application.yml\n * logback.xml\n * 自定义容器构建插件\n * 修改容器构建插件\n * 脚本执行模板\n\n如果您没有对齐进行修改过可以忽略此步骤用全新默认配置即可\n\n如果有修改请手动同步修改过的配置文件！！！\n\n# 修改数据库配置（新环境）\n\n当您在新环境已经安装好后，如果您没有同步 application.yml 文件，这里您还需要手动修改数据库配置信息为您 mysql 数据库信息\n\n配置文件路径： 服务端安装路径/conf/application.yml\n\n\n\n# 选择迁移关联文件\n\n根据您系统中的不同文件的重要性选择性的将旧环境中的文件迁移到新环境中\n\n> 注意：一定保留原始的相对目录层级和结构\n\n可选迁移的文件有如下：\n\n * data/build\n * data/script\n * data/command_log\n * data/file-storage\n * data/certificate\n * data/docker\n * 更多请自行选择\n\n需要同步迁移请手动从旧环境迁移到新环境中即可\n\n迁移完成后重启一下服务端\n\n# 同步集群安装 id【重要】\n\n注意\n\n如果您在安装新环境后未启动，或者启动前手动同步过 install.json 可以忽略此步骤（建议还是检查一下）\n\n服务器中会自动创建一个集群，一般情况下您无法使用到集群功能，但是您导入/还原前后后仍需要进行一次集群安装 id 确认修正，避免后续数据异常无法排查等未知错误\n\n集群安装 id 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：install.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installtime":"2021-03-16 17:05:32",\n        "installid":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installid 为当前集群安装 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n这样经过上述操作可能数据库中已经存在多条集群记录了（初次安装数据库已经存在新集群安装 id、导入数据存在旧集群安装 id），此时我们就需要进行手动修正。\n\n# 修正流程如下\n\n 1. 旧环境中找到 install.json 文件，查看 installid 值\n 2. 将新环境中的的 install.json 文件， installid 值修改为和旧环境一致的值\n 3. 重启服务端\n\n# 删除已经弃用的集群数据\n\n操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n找到对应已经弃用的集群安装 id 。\n\n这里注意选择弃用 id 规则如下：非当前install.json文件installid 值即为弃用\n\n\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您选错要删除集群了，说明此集群之前已经被工作空间绑定啦（因为我们系统会默认给未绑定集群的工作空间自动绑定最新集群，旧数据已经自动绑定啦，所以您在修正集群安装 id 时需要保留使用旧环境中的集群安装 id）\n\n正常情况下使用 h2 数据时非集群默认，此列表仅存在一条记录时是正常的\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n友情提醒\n\n上述操作流程时选用最复杂的流程来讲解，其实您可以在新环境中安装后服务端后不要启动，直接同步需要的文件到新环境中可以省去一些流程\n\n\n# 插件端\n\n由于插件端本身数据较少并且机器中包含的项目关联文件较多，插件端不能给出一个完整的数据还原、导入的流程\n\n如果您仅是想把插件端的数据迁移到新环境，我们建议您使用完整迁移插件端的方式（完整迁移方式文档有说明）',charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"容器迁移",frontmatter:{title:"容器迁移",date:"2023-12-24T12:21:09.000Z",permalink:"/pages/1ec490/",categories:["docs","文档","备份&升级&迁移","迁移数据"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/013.%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE/040.%E5%AE%B9%E5%99%A8%E8%BF%81%E7%A7%BB.html",relativePath:"文档/013.迁移数据/040.容器迁移.md",key:"v-5a423170",path:"/pages/1ec490/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"确认数据（挂载/卷）",slug:"确认数据-挂载-卷",normalizedTitle:"确认数据（挂载/卷）",charIndex:213},{level:3,title:"挂载方式",slug:"挂载方式",normalizedTitle:"挂载方式",charIndex:267},{level:3,title:"卷",slug:"卷",normalizedTitle:"卷",charIndex:221},{level:3,title:"未配置",slug:"未配置",normalizedTitle:"未配置",charIndex:252},{level:2,title:"停止容器",slug:"停止容器",normalizedTitle:"停止容器",charIndex:652},{level:2,title:"决定需要迁移的目录",slug:"决定需要迁移的目录",normalizedTitle:"决定需要迁移的目录",charIndex:692},{level:2,title:"打包整个目录并下载",slug:"打包整个目录并下载",normalizedTitle:"打包整个目录并下载",charIndex:1480},{level:2,title:"上传备份文件到新环境",slug:"上传备份文件到新环境",normalizedTitle:"上传备份文件到新环境",charIndex:1674},{level:2,title:"创建容器（新环境）",slug:"创建容器-新环境",normalizedTitle:"创建容器（新环境）",charIndex:1785},{level:2,title:"同步集群安装 ID【重要】",slug:"同步集群安装-id【重要】",normalizedTitle:"同步集群安装 id【重要】",charIndex:2693},{level:3,title:"修正流程如下",slug:"修正流程如下",normalizedTitle:"修正流程如下",charIndex:3268},{level:3,title:"删除已经弃用的集群数据",slug:"删除已经弃用的集群数据",normalizedTitle:"删除已经弃用的集群数据",charIndex:3384},{level:2,title:"正常使用",slug:"正常使用",normalizedTitle:"正常使用",charIndex:3763}],headersStr:"前言 确认数据（挂载/卷） 挂载方式 卷 未配置 停止容器 决定需要迁移的目录 打包整个目录并下载 上传备份文件到新环境 创建容器（新环境） 同步集群安装 ID【重要】 修正流程如下 删除已经弃用的集群数据 正常使用",content:'# 前言\n\n只有服务端支持容器安装，那么插件端就不存在容器迁移奥。\n\n因为容器安装服务端的程序文件和依赖均在容器中，此方式的迁移流程会精简很多。\n\n当您当新环境（机器/服务器）已经准备好了，请您提前安装 docker（此步骤本文档默认您已经会了并且配置 OK）\n\n一般情况下需要检查如下：\n\n * 网络 （新环境和所有节点机器、SSH 机器、Docker 机器）\n * 数据库网络 （如果使用了 mysql 数据库）\n\n\n# 确认数据（挂载/卷）\n\n您在需要迁移前需要知道您安装服务端时候使用的挂载、卷、未配置方式创建的容器\n\n\n# 挂载方式\n\n在宿主机中找到对应的挂载目录，一般挂载了容器的如下目录：\n\n * /usr/local/jpom-server/logs\n * /usr/local/jpom-server/data\n * /usr/local/jpom-server/conf\n\n您需要替换为您宿主机中的实际目录奥\n\n\n# 卷\n\n请参考 docker 官方对卷进行备份的操作\n\ndocker volume inspect xxxxx\n\n\n# 未配置\n\n如果您在创建容器时忘记使用挂载或者卷了，您可以使用 docker cp 命令来建议容器里面的文件 copy 到宿主机中\n\n * docker cp xxxx:/usr/local/jpom-server/data /xxxx\n * docker cp xxxx:/usr/local/jpom-server/conf /xxxx\n\n\n# 停止容器\n\n为了在迁移过程中不会产生新数据造成迁移前后数据不一致的问题\n\n\n# 决定需要迁移的目录\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n比如如下目录您可以选择不迁移：\n\n * [挂载/卷]/logs\n * [挂载/卷]/data/temp\n * [挂载/卷]/data/script_run_cache\n\n慎重选择：如果您迁移时候发现 data/build 目录非常大严重影响您的备份效率，此时您需要评估在线构建中缓存的仓库数据、构建日志、构建产物是否可以容忍丢失。\n\n如果能容忍丢失那么您可以选择删除 data/build 目录。\n\n如果您想保留部分构建仓库数据、构建日志、构建产物数据，那么您需要先知道想保留的构建的数据 ID。\n\n怎么获取构建数据 ID,我相信您一定知道浏览器的调试控制台->网络选项卡（说到这里了懂的都懂，不懂的问度娘）\n\n获取到您需要保留的数据 ID 后，您将不需要保留的构建数据删除即可 data/build/数据 ID\n\n----------------------------------------\n\n关于服务端数据的总结：\n\n * [挂载/卷]/data/db h2 核心数据\n * [挂载/卷]conf 配置文件夹\n * [挂载/卷]/data/INSTALL.json 安装ID/集群ID\n\n关于 db ：Server.mv.db、Server.trace.db 是最新的完整数据（仅在使用 h2 数据库时需要）\n\n其他目录的数据均是使用过程中的数据：文件中心、证书文件、构建数据 想要您看是否使用到对应功能和是否重要以及有备份。\n\n自行选择选择使用过程中的数据是否迁移。\n\n----------------------------------------\n\n\n# 打包整个目录并下载\n\n打包目录这个不用说了吧\n\nlinux 推荐用：tar\n\nwindows 您喜好\n\n为什么需要打包呢？不能直接下载目录吗？\n\n当您有这个疑问时说明您不知道在网络中，上传/下载多个小文件和上传/下载一个大文件的效率问题,反正推荐压缩打包后进行传输，极其不推荐直接传输整个目录。\n\n----------------------------------------\n\n\n# 上传备份文件到新环境\n\n当您打包后到文件下载到本地或者直接传输到新环境。\n\n如果您是下载到本地那么您还需要将文件上传到新环境中。\n\n----------------------------------------\n\n\n# 创建容器（新环境）\n\n所有需要迁移的文件都准备好后即可使用命令创建容器\n\n推荐命令如下：\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n  --restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n  --restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 同步集群安装 ID【重要】\n\n注意\n\n如果您在安装新环境后未启动，或者启动前手动同步过 INSTALL.json 可以忽略此步骤（建议还是检查一下）\n\n服务器中会自动创建一个集群，一般情况下您无法使用到集群功能，但是您导入/还原前后后仍需要进行一次集群安装 id 确认修正，避免后续数据异常无法排查等未知错误\n\n集群安装 id 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：INSTALL.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installTime":"2021-03-16 17:05:32",\n        "installId":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installId 为当前集群安装 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n这样经过上述操作可能数据库中已经存在多条集群记录了（初次安装数据库已经存在新集群安装 id、导入数据存在旧集群安装 id），此时我们就需要进行手动修正。\n\n\n# 修正流程如下\n\n 1. 旧环境中找到 INSTALL.json 文件，查看 installId 值\n 2. 将新环境中的的 INSTALL.json 文件， installId 值修改为和旧环境一致的值\n 3. 重启服务端\n\n\n# 删除已经弃用的集群数据\n\n操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n找到对应已经弃用的集群安装 id 。\n\n这里注意选择弃用 id 规则如下：非当前INSTALL.json文件installId 值即为弃用\n\n\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您选错要删除集群了，说明此集群之前已经被工作空间绑定啦（因为我们系统会默认给未绑定集群的工作空间自动绑定最新集群，旧数据已经自动绑定啦，所以您在修正集群安装 id 时需要保留使用旧环境中的集群安装 id）\n\n正常情况下使用 H2 数据时非集群默认，此列表仅存在一条记录时是正常的\n\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n友情提醒\n\n上述操作流程时选用最复杂的流程来讲解，其实您可以在新环境中安装后服务端后不要启动，直接同步需要的文件到新环境中可以省去一些流程',normalizedContent:'# 前言\n\n只有服务端支持容器安装，那么插件端就不存在容器迁移奥。\n\n因为容器安装服务端的程序文件和依赖均在容器中，此方式的迁移流程会精简很多。\n\n当您当新环境（机器/服务器）已经准备好了，请您提前安装 docker（此步骤本文档默认您已经会了并且配置 ok）\n\n一般情况下需要检查如下：\n\n * 网络 （新环境和所有节点机器、ssh 机器、docker 机器）\n * 数据库网络 （如果使用了 mysql 数据库）\n\n\n# 确认数据（挂载/卷）\n\n您在需要迁移前需要知道您安装服务端时候使用的挂载、卷、未配置方式创建的容器\n\n\n# 挂载方式\n\n在宿主机中找到对应的挂载目录，一般挂载了容器的如下目录：\n\n * /usr/local/jpom-server/logs\n * /usr/local/jpom-server/data\n * /usr/local/jpom-server/conf\n\n您需要替换为您宿主机中的实际目录奥\n\n\n# 卷\n\n请参考 docker 官方对卷进行备份的操作\n\ndocker volume inspect xxxxx\n\n\n# 未配置\n\n如果您在创建容器时忘记使用挂载或者卷了，您可以使用 docker cp 命令来建议容器里面的文件 copy 到宿主机中\n\n * docker cp xxxx:/usr/local/jpom-server/data /xxxx\n * docker cp xxxx:/usr/local/jpom-server/conf /xxxx\n\n\n# 停止容器\n\n为了在迁移过程中不会产生新数据造成迁移前后数据不一致的问题\n\n\n# 决定需要迁移的目录\n\n为了数据安全和稳定我们建议您先 copy 服务端的整个目录进行操作，避免操作过程中的误操作造成数据丢失。\n\n当您 copy 出新目录后您可以开始选择把不需要的迁移的目录或者文件删除\n\n比如如下目录您可以选择不迁移：\n\n * [挂载/卷]/logs\n * [挂载/卷]/data/temp\n * [挂载/卷]/data/script_run_cache\n\n慎重选择：如果您迁移时候发现 data/build 目录非常大严重影响您的备份效率，此时您需要评估在线构建中缓存的仓库数据、构建日志、构建产物是否可以容忍丢失。\n\n如果能容忍丢失那么您可以选择删除 data/build 目录。\n\n如果您想保留部分构建仓库数据、构建日志、构建产物数据，那么您需要先知道想保留的构建的数据 id。\n\n怎么获取构建数据 id,我相信您一定知道浏览器的调试控制台->网络选项卡（说到这里了懂的都懂，不懂的问度娘）\n\n获取到您需要保留的数据 id 后，您将不需要保留的构建数据删除即可 data/build/数据 id\n\n----------------------------------------\n\n关于服务端数据的总结：\n\n * [挂载/卷]/data/db h2 核心数据\n * [挂载/卷]conf 配置文件夹\n * [挂载/卷]/data/install.json 安装id/集群id\n\n关于 db ：server.mv.db、server.trace.db 是最新的完整数据（仅在使用 h2 数据库时需要）\n\n其他目录的数据均是使用过程中的数据：文件中心、证书文件、构建数据 想要您看是否使用到对应功能和是否重要以及有备份。\n\n自行选择选择使用过程中的数据是否迁移。\n\n----------------------------------------\n\n\n# 打包整个目录并下载\n\n打包目录这个不用说了吧\n\nlinux 推荐用：tar\n\nwindows 您喜好\n\n为什么需要打包呢？不能直接下载目录吗？\n\n当您有这个疑问时说明您不知道在网络中，上传/下载多个小文件和上传/下载一个大文件的效率问题,反正推荐压缩打包后进行传输，极其不推荐直接传输整个目录。\n\n----------------------------------------\n\n\n# 上传备份文件到新环境\n\n当您打包后到文件下载到本地或者直接传输到新环境。\n\n如果您是下载到本地那么您还需要将文件上传到新环境中。\n\n----------------------------------------\n\n\n# 创建容器（新环境）\n\n所有需要迁移的文件都准备好后即可使用命令创建容器\n\n推荐命令如下：\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n  --restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tregistry.cn-chengdu.aliyuncs.com/jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n  --restart=always \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /usr/bin/docker:/usr/bin/docker \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\t-v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n\tjpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 同步集群安装 id【重要】\n\n注意\n\n如果您在安装新环境后未启动，或者启动前手动同步过 install.json 可以忽略此步骤（建议还是检查一下）\n\n服务器中会自动创建一个集群，一般情况下您无法使用到集群功能，但是您导入/还原前后后仍需要进行一次集群安装 id 确认修正，避免后续数据异常无法排查等未知错误\n\n集群安装 id 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：install.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installtime":"2021-03-16 17:05:32",\n        "installid":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installid 为当前集群安装 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n这样经过上述操作可能数据库中已经存在多条集群记录了（初次安装数据库已经存在新集群安装 id、导入数据存在旧集群安装 id），此时我们就需要进行手动修正。\n\n\n# 修正流程如下\n\n 1. 旧环境中找到 install.json 文件，查看 installid 值\n 2. 将新环境中的的 install.json 文件， installid 值修改为和旧环境一致的值\n 3. 重启服务端\n\n\n# 删除已经弃用的集群数据\n\n操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n找到对应已经弃用的集群安装 id 。\n\n这里注意选择弃用 id 规则如下：非当前install.json文件installid 值即为弃用\n\n\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您选错要删除集群了，说明此集群之前已经被工作空间绑定啦（因为我们系统会默认给未绑定集群的工作空间自动绑定最新集群，旧数据已经自动绑定啦，所以您在修正集群安装 id 时需要保留使用旧环境中的集群安装 id）\n\n正常情况下使用 h2 数据时非集群默认，此列表仅存在一条记录时是正常的\n\n\n# 正常使用\n\n当您一切都检查 ok 无问题后您就可以在新环境中使用 jpom 啦，不要忘记将新环境的地址告知给其他使用平台的用户奥\n\n友情提醒\n\n上述操作流程时选用最复杂的流程来讲解，其实您可以在新环境中安装后服务端后不要启动，直接同步需要的文件到新环境中可以省去一些流程',charsets:{cjk:!0},lastUpdated:"2024/12/02, 02:18:13",lastUpdatedTimestamp:1733105893e3},{title:"权限说明",frontmatter:{title:"权限说明",date:"2022-11-08T09:29:58.000Z",permalink:"/pages/permissions/ca90a5/",categories:["docs","FQA","常见问题"],tags:["用户"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/00.%E6%9D%83%E9%99%90%E8%AF%B4%E6%98%8E.html",relativePath:"文档/020.用户&权限/00.权限说明.md",key:"v-3b20f602",path:"/pages/permissions/ca90a5/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"权限说明",slug:"权限说明",normalizedTitle:"权限说明",charIndex:68},{level:2,title:"推荐用法",slug:"推荐用法",normalizedTitle:"推荐用法",charIndex:242},{level:2,title:"工作空间",slug:"工作空间",normalizedTitle:"工作空间",charIndex:17},{level:2,title:"用户分类如下",slug:"用户分类如下",normalizedTitle:"用户分类如下",charIndex:586},{level:2,title:"数据层级",slug:"数据层级",normalizedTitle:"数据层级",charIndex:722},{level:3,title:"权限类型",slug:"权限类型",normalizedTitle:"权限类型",charIndex:931},{level:2,title:"操作权限包含",slug:"操作权限包含",normalizedTitle:"操作权限包含",charIndex:1015},{level:2,title:"如何控制菜单权限？",slug:"如何控制菜单权限",normalizedTitle:"如何控制菜单权限？",charIndex:1098},{level:2,title:"权限组的禁用时段",slug:"权限组的禁用时段",normalizedTitle:"权限组的禁用时段",charIndex:1246},{level:2,title:"权限组的允许时段",slug:"权限组的允许时段",normalizedTitle:"权限组的允许时段",charIndex:1313},{level:2,title:"权限组页面截图",slug:"权限组页面截图",normalizedTitle:"权限组页面截图",charIndex:1388},{level:2,title:"数据权限",slug:"数据权限",normalizedTitle:"数据权限",charIndex:89}],headersStr:"前言 权限说明 推荐用法 工作空间 用户分类如下 数据层级 权限类型 操作权限包含 如何控制菜单权限？ 权限组的禁用时段 权限组的允许时段 权限组页面截图 数据权限",content:"# 前言\n\n在 Jpom 中使用了工作空间来代替权限控制的一些基础功能，在您想用到权限相关的请您先理解到本系统中的工作空间概念\n\n\n# 权限说明\n\n一句话概况\n\n用工作空间来划分数据权限，功能权限绑定在工作空间，给用户授权工作空间来实现权限管理\n\n * 2.8.0+ 使用工作空间取代角色来实现用户权限控制。\n * 2.9.7+ 新增权限组来实现批量管理用户权限（工作空间）。\n\nJpom 中权限数据均绑定到具体的工作空间，用户需要有工作空间的权限才能查看、管理对应的数据。\n\n\n# 推荐用法\n\n * Jpom 中使用工作空间代替角色来控制数据权限\n   * 一个账号可以绑定多个权限组\n   * 权限组可以授权多个工作空间\n   * 权限组并且可以设置单个工作空间的功能权限\n * Jpom 中主要使用工作空间隔离数据权限，建议在实际部署中使用工作空间来隔离权限。\n\n> 温馨提示：一个物理节点可以添加在多个工作空间\n\n如：\n\n 1. 测试环境\n 2. 线上环境\n 3. ...\n\n如：\n\n 1. 前端开发\n 2. 后端开发\n 3. ...\n\n\n# 工作空间\n\n系统中所有数据均绑定到具体的工作空间，用户需要有工作空间的权限才能查看、管理对应的数据。\n\n提醒\n\n系统没有针对单条数据授权的功能，如果授权指定工作空间那么对应用户既有对应工作空间所有数据的管理权限\n\n\n# 用户分类如下\n\n * 超级管理员\n   * 初始化系统创建的账号即为超级管理员\n * 服务端管理员\n   * 指定用户授权（用户编辑页面配置）\n * 节点管理员\n   * 指定工作空间中是否存在节点管理员权限\n * 普通用户\n   * 所有用户均包含普通用户权限\n\n\n# 数据层级\n\nJpom 服务端中的数据可以大概分为如下层级：用户数据、资产数据、其他（系统）数据、工作空间数据\n\n\n\n如图所示：\n\n可共享：是指可以跨工作空间使用的数据\n\n需分配：数据默认是在系统级别，可以将数据分配到需要使用的工作空间来供其他用户使用\n\n普通用户：仅能使用和管理授权工作空间下的数据\n\n超级管理员：可以使用系统中的所有数据\n\n服务端管理员：可以使用授权工作空间下的数据、资产数据、部分系统数据\n\n\n# 权限类型\n\n * 查看权限\n   * 只要有工作空间权限就有对应工作空间下数据的查看权限\n * 操作权限\n   * 根据权限组中配置的对应工作空间具体操作权限\n\n\n# 操作权限包含\n\n * 修改、添加数据\n * 删除数据\n * 下载\n * 上传\n * 执行\n * 下载远程文件\n * 节点管理员\n * SSH 终端命令无限制\n\n\n# 如何控制菜单权限？\n\nJpom 中严格说没有菜单权限，仅有工作空间的数据权限。只要有这个工作空间均有这个工作空间下面的所有菜单（功能）权限。\n\nQ: 但是有些场景需求是在不同工作空间有不同的功能权限改怎么实现呢？\n\n答： 隐藏对应工作空间的菜单，在：系统管理 > 系统配置 > 菜单配置\n\n\n# 权限组的禁用时段\n\n用于控制当前权限组在指定时间段不能使用对应的管理功能。\n\n比如：节假日禁止发布、特殊时间段禁止人员上线等\n\n\n# 权限组的允许时段\n\n用户控制当前权限组只能在指定时间段才能使用对应的功能\n\n比如： 周一~周五 早上 9:00 ~ 18:00 才发布上线等\n\n\n# 权限组页面截图\n\n\n\n\n# 数据权限\n\nJpom 目前不会考虑做数据权限，如果您想控制数据权限请合理的将数据分配到对应工作空间并使用权限组来控制即可",normalizedContent:"# 前言\n\n在 jpom 中使用了工作空间来代替权限控制的一些基础功能，在您想用到权限相关的请您先理解到本系统中的工作空间概念\n\n\n# 权限说明\n\n一句话概况\n\n用工作空间来划分数据权限，功能权限绑定在工作空间，给用户授权工作空间来实现权限管理\n\n * 2.8.0+ 使用工作空间取代角色来实现用户权限控制。\n * 2.9.7+ 新增权限组来实现批量管理用户权限（工作空间）。\n\njpom 中权限数据均绑定到具体的工作空间，用户需要有工作空间的权限才能查看、管理对应的数据。\n\n\n# 推荐用法\n\n * jpom 中使用工作空间代替角色来控制数据权限\n   * 一个账号可以绑定多个权限组\n   * 权限组可以授权多个工作空间\n   * 权限组并且可以设置单个工作空间的功能权限\n * jpom 中主要使用工作空间隔离数据权限，建议在实际部署中使用工作空间来隔离权限。\n\n> 温馨提示：一个物理节点可以添加在多个工作空间\n\n如：\n\n 1. 测试环境\n 2. 线上环境\n 3. ...\n\n如：\n\n 1. 前端开发\n 2. 后端开发\n 3. ...\n\n\n# 工作空间\n\n系统中所有数据均绑定到具体的工作空间，用户需要有工作空间的权限才能查看、管理对应的数据。\n\n提醒\n\n系统没有针对单条数据授权的功能，如果授权指定工作空间那么对应用户既有对应工作空间所有数据的管理权限\n\n\n# 用户分类如下\n\n * 超级管理员\n   * 初始化系统创建的账号即为超级管理员\n * 服务端管理员\n   * 指定用户授权（用户编辑页面配置）\n * 节点管理员\n   * 指定工作空间中是否存在节点管理员权限\n * 普通用户\n   * 所有用户均包含普通用户权限\n\n\n# 数据层级\n\njpom 服务端中的数据可以大概分为如下层级：用户数据、资产数据、其他（系统）数据、工作空间数据\n\n\n\n如图所示：\n\n可共享：是指可以跨工作空间使用的数据\n\n需分配：数据默认是在系统级别，可以将数据分配到需要使用的工作空间来供其他用户使用\n\n普通用户：仅能使用和管理授权工作空间下的数据\n\n超级管理员：可以使用系统中的所有数据\n\n服务端管理员：可以使用授权工作空间下的数据、资产数据、部分系统数据\n\n\n# 权限类型\n\n * 查看权限\n   * 只要有工作空间权限就有对应工作空间下数据的查看权限\n * 操作权限\n   * 根据权限组中配置的对应工作空间具体操作权限\n\n\n# 操作权限包含\n\n * 修改、添加数据\n * 删除数据\n * 下载\n * 上传\n * 执行\n * 下载远程文件\n * 节点管理员\n * ssh 终端命令无限制\n\n\n# 如何控制菜单权限？\n\njpom 中严格说没有菜单权限，仅有工作空间的数据权限。只要有这个工作空间均有这个工作空间下面的所有菜单（功能）权限。\n\nq: 但是有些场景需求是在不同工作空间有不同的功能权限改怎么实现呢？\n\n答： 隐藏对应工作空间的菜单，在：系统管理 > 系统配置 > 菜单配置\n\n\n# 权限组的禁用时段\n\n用于控制当前权限组在指定时间段不能使用对应的管理功能。\n\n比如：节假日禁止发布、特殊时间段禁止人员上线等\n\n\n# 权限组的允许时段\n\n用户控制当前权限组只能在指定时间段才能使用对应的功能\n\n比如： 周一~周五 早上 9:00 ~ 18:00 才发布上线等\n\n\n# 权限组页面截图\n\n\n\n\n# 数据权限\n\njpom 目前不会考虑做数据权限，如果您想控制数据权限请合理的将数据分配到对应工作空间并使用权限组来控制即可",charsets:{cjk:!0},lastUpdated:"2024/04/23, 03:02:44",lastUpdatedTimestamp:1713841364e3},{title:"登录说明",frontmatter:{title:"登录说明",date:"2023-12-20T17:52:28.000Z",permalink:"/pages/be7a7b/",categories:["docs","文档","用户&权限","assets"],tags:["用户"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/05.%E7%99%BB%E5%BD%95%E8%AF%B4%E6%98%8E.html",relativePath:"文档/020.用户&权限/05.登录说明.md",key:"v-6442d20e",path:"/pages/be7a7b/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"验证码",slug:"验证码",normalizedTitle:"验证码",charIndex:42},{level:3,title:"禁用/启用验证码登录",slug:"禁用-启用验证码登录",normalizedTitle:"禁用/启用验证码登录",charIndex:296},{level:2,title:"防暴力登录账号机制",slug:"防暴力登录账号机制",normalizedTitle:"防暴力登录账号机制",charIndex:401},{level:3,title:"单用户",slug:"单用户",normalizedTitle:"单用户",charIndex:448},{level:4,title:"如何提前解锁",slug:"如何提前解锁",normalizedTitle:"如何提前解锁",charIndex:606},{level:3,title:"单IP",slug:"单ip",normalizedTitle:"单ip",charIndex:839},{level:4,title:"如何提前解锁",slug:"如何提前解锁-2",normalizedTitle:"如何提前解锁",charIndex:606},{level:3,title:"修改配置",slug:"修改配置",normalizedTitle:"修改配置",charIndex:1024},{level:2,title:"IP 访问限制",slug:"ip-访问限制",normalizedTitle:"ip 访问限制",charIndex:1076},{level:3,title:"如何恢复",slug:"如何恢复",normalizedTitle:"如何恢复",charIndex:1190},{level:4,title:"linux",slug:"linux",normalizedTitle:"linux",charIndex:1253},{level:4,title:"windows",slug:"windows",normalizedTitle:"windows",charIndex:1318}],headersStr:"前言 验证码 禁用/启用验证码登录 防暴力登录账号机制 单用户 如何提前解锁 单IP 如何提前解锁 修改配置 IP 访问限制 如何恢复 linux windows",content:"# 前言\n\nJpom 目前支持的登录方式有：\n\n * 账号+密码\n * 账户+密码+验证码\n * Oauth2\n\n\n# 验证码\n\n系统在启动时候会自动检查当前系统中是否可以使用验证码登录，因为验证码登录需要服务器中有字体库，所以验证码登录需要服务器支持。\n\n当您确定服务端时候控制台看到存在：当前服务器生成验证码异常,自动禁用验证码 字样表示当前系统不支持验证码登录，系统会禁用验证码登录功能。\n\n如果您想启用验证码功能则需要您自行配置字体库后重启服务端。\n\ncentos 系统：\n\nyum install fontconfig\n\nfc-cache --force\n\n\n1\n2\n3\n\n\n\n# 禁用/启用验证码登录\n\n如果您想手动禁用验证码登录或者启动验证码登录可以到系统配置中修改\n\n【系统管理】-> 【服务端配置】->【系统配置】-> jpom.web.disabled-captcha\n\n\n\n\n# 防暴力登录账号机制\n\n系统支持限制单个用户登录失败的次数、单 IP 登录随便次数\n\n\n\n\n# 单用户\n\n系统默认单个用户登录失败的次数情况如下：\n\n * 超过 5 次则限制 30 分钟\n * 超过 2*5 次则限制 1 小时\n * 超过更多次则限制 10 小时\n\n其中这个 5 次 是可以配置的：jpom.user.always-login-error\n\n注意\n\n锁定用户是持久化的，系统重启后不会失效\n\n# 如何提前解锁\n\n# 非超级管理员（非管理员）\n\n联系管理员手动解锁\n\n路径：【系统管理】-> 【用户管理】->【用户列表】->【更多】->解锁\n\n\n\n注意：如果对应账号未锁定，此按钮是禁用状态\n\n# 超级管理员\n\n如果锁定的账号是超级管理员想提前解锁：请走忘记密码流程\n\n忘记密码流程请查阅文档\n\n注意\n\n不建议使用常用名称如 admin、root、manager等常用用户名，避免被其他用户有意或者无意操作造成登录失败次数过多从而超级管理员账号被异常锁定\n\n\n# 单IP\n\n系统默认单个 IP 登录失败次数大于 10 次时对应 IP 5H 内不能继续登录\n\n其中这个 10 次 是可以配置的：jpom.user.always-ip-login-error 锁定时长也是可以配置的：jpom.user.ip-error-lock-time\n\n注意\n\n锁定 IP 是非持久化的，系统重启后将失效\n\n# 如何提前解锁\n\n重启服务端\n\n\n# 修改配置\n\n路径：【系统管理】-> 【服务端配置】->【系统配置】-> [服务端系统配置]\n\n\n\n\n# IP 访问限制\n\n为了保证系统安全您可以开启 IP 访问限制来实现对指定 IP 限制访问或者仅开放指定 IP 才能访问\n\n路径：【系统管理】-> 【服务端配置】->【系统配置】-> [服务端IP授权（白名单）配置]\n\n\n\n\n# 如何恢复\n\n如果您配置错误造成您自己无法正常访问或者 IP 地址变动需要重新配置但是您无法访问则可以删除当前配置来解决\n\n# linux\n\nbash /xxxx/Server.sh restart -15 --rest:ip_config\n\n\n1\n\n\n# windows\n\nServer.bat restart --rest:ip_config\n\n\n1\n\n\n注意\n\n目前仅支持限制 IPV4",normalizedContent:"# 前言\n\njpom 目前支持的登录方式有：\n\n * 账号+密码\n * 账户+密码+验证码\n * oauth2\n\n\n# 验证码\n\n系统在启动时候会自动检查当前系统中是否可以使用验证码登录，因为验证码登录需要服务器中有字体库，所以验证码登录需要服务器支持。\n\n当您确定服务端时候控制台看到存在：当前服务器生成验证码异常,自动禁用验证码 字样表示当前系统不支持验证码登录，系统会禁用验证码登录功能。\n\n如果您想启用验证码功能则需要您自行配置字体库后重启服务端。\n\ncentos 系统：\n\nyum install fontconfig\n\nfc-cache --force\n\n\n1\n2\n3\n\n\n\n# 禁用/启用验证码登录\n\n如果您想手动禁用验证码登录或者启动验证码登录可以到系统配置中修改\n\n【系统管理】-> 【服务端配置】->【系统配置】-> jpom.web.disabled-captcha\n\n\n\n\n# 防暴力登录账号机制\n\n系统支持限制单个用户登录失败的次数、单 ip 登录随便次数\n\n\n\n\n# 单用户\n\n系统默认单个用户登录失败的次数情况如下：\n\n * 超过 5 次则限制 30 分钟\n * 超过 2*5 次则限制 1 小时\n * 超过更多次则限制 10 小时\n\n其中这个 5 次 是可以配置的：jpom.user.always-login-error\n\n注意\n\n锁定用户是持久化的，系统重启后不会失效\n\n# 如何提前解锁\n\n# 非超级管理员（非管理员）\n\n联系管理员手动解锁\n\n路径：【系统管理】-> 【用户管理】->【用户列表】->【更多】->解锁\n\n\n\n注意：如果对应账号未锁定，此按钮是禁用状态\n\n# 超级管理员\n\n如果锁定的账号是超级管理员想提前解锁：请走忘记密码流程\n\n忘记密码流程请查阅文档\n\n注意\n\n不建议使用常用名称如 admin、root、manager等常用用户名，避免被其他用户有意或者无意操作造成登录失败次数过多从而超级管理员账号被异常锁定\n\n\n# 单ip\n\n系统默认单个 ip 登录失败次数大于 10 次时对应 ip 5h 内不能继续登录\n\n其中这个 10 次 是可以配置的：jpom.user.always-ip-login-error 锁定时长也是可以配置的：jpom.user.ip-error-lock-time\n\n注意\n\n锁定 ip 是非持久化的，系统重启后将失效\n\n# 如何提前解锁\n\n重启服务端\n\n\n# 修改配置\n\n路径：【系统管理】-> 【服务端配置】->【系统配置】-> [服务端系统配置]\n\n\n\n\n# ip 访问限制\n\n为了保证系统安全您可以开启 ip 访问限制来实现对指定 ip 限制访问或者仅开放指定 ip 才能访问\n\n路径：【系统管理】-> 【服务端配置】->【系统配置】-> [服务端ip授权（白名单）配置]\n\n\n\n\n# 如何恢复\n\n如果您配置错误造成您自己无法正常访问或者 ip 地址变动需要重新配置但是您无法访问则可以删除当前配置来解决\n\n# linux\n\nbash /xxxx/server.sh restart -15 --rest:ip_config\n\n\n1\n\n\n# windows\n\nserver.bat restart --rest:ip_config\n\n\n1\n\n\n注意\n\n目前仅支持限制 ipv4",charsets:{cjk:!0},lastUpdated:"2024/01/12, 10:15:40",lastUpdatedTimestamp:170505454e4},{title:"管理用户",frontmatter:{title:"管理用户",date:"2023-12-20T16:04:24.000Z",permalink:"/pages/0f14d7/",categories:["docs","文档","用户&权限"],tags:["用户"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/10.%E7%AE%A1%E7%90%86%E7%94%A8%E6%88%B7.html",relativePath:"文档/020.用户&权限/10.管理用户.md",key:"v-0b819066",path:"/pages/0f14d7/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"添加、删除、编辑用户",slug:"添加、删除、编辑用户",normalizedTitle:"添加、删除、编辑用户",charIndex:103},{level:3,title:"添加用户/编辑用户",slug:"添加用户-编辑用户",normalizedTitle:"添加用户/编辑用户",charIndex:118},{level:3,title:"删除用户",slug:"删除用户",normalizedTitle:"删除用户",charIndex:244},{level:2,title:"忘记密码？",slug:"忘记密码",normalizedTitle:"忘记密码？",charIndex:323},{level:3,title:"非超级管理员",slug:"非超级管理员",normalizedTitle:"非超级管理员",charIndex:333},{level:3,title:"超级管理员",slug:"超级管理员",normalizedTitle:"超级管理员",charIndex:334},{level:4,title:"linux",slug:"linux",normalizedTitle:"linux",charIndex:469},{level:4,title:"windows",slug:"windows",normalizedTitle:"windows",charIndex:539},{level:2,title:"修改密码",slug:"修改密码",normalizedTitle:"修改密码",charIndex:598}],headersStr:"前言 添加、删除、编辑用户 添加用户/编辑用户 删除用户 忘记密码？ 非超级管理员 超级管理员 linux windows 修改密码",content:"# 前言\n\n在您使用 Jpom 中的用户功能前请您务必查阅并理解 Jpom 系统中权限说明相关问题。\n\n如果您看了对应文档还是不能准确理解到 Jpom 中的权限，可以联系我们看能否给到一定地帮助。\n\n\n# 添加、删除、编辑用户\n\n\n# 添加用户/编辑用户\n\n在初次添加用户您需要先创建权限组才能添加用户，权限组说明权限说明。\n\n\n\n添加用户成功后请注意弹窗提示的用户密码，请将密码复制并告知对应的用户\n\n\n\n警告\n\n密码仅会提示一次，关闭窗口后无法查看。如果忘记则走忘记密码流程\n\n\n# 删除用户\n\n【系统管理】->【用户管理】->【用户列表】->[更多]->[删除]\n\n注意\n\n删除用户用对应用户生成的所有触发器均将失效需要重新生成奥\n\n\n# 忘记密码？\n\n\n# 非超级管理员\n\n联系管理员操作\n\n【系统管理】->【用户管理】->【用户列表】->[更多]->[重置密码]\n\n操作成功后弹窗会提示用户新密码，请将密码复制并告知对应的用户\n\n警告\n\n密码仅会提示一次，关闭窗口后无法查看。如果忘记则走忘记密码流程\n\n\n# 超级管理员\n\n# linux\n\nbash /xxxx/Server.sh restart -15 --rest:super_user_pwd\n\n\n1\n\n\n# windows\n\nServer.bat restart --rest:super_user_pwd\n\n\n1\n\n\n\n# 修改密码\n\n用户正常可以后可以自己修改密码\n\n【点击昵称下拉处】->【安全管理】->【修改密码】\n\n",normalizedContent:"# 前言\n\n在您使用 jpom 中的用户功能前请您务必查阅并理解 jpom 系统中权限说明相关问题。\n\n如果您看了对应文档还是不能准确理解到 jpom 中的权限，可以联系我们看能否给到一定地帮助。\n\n\n# 添加、删除、编辑用户\n\n\n# 添加用户/编辑用户\n\n在初次添加用户您需要先创建权限组才能添加用户，权限组说明权限说明。\n\n\n\n添加用户成功后请注意弹窗提示的用户密码，请将密码复制并告知对应的用户\n\n\n\n警告\n\n密码仅会提示一次，关闭窗口后无法查看。如果忘记则走忘记密码流程\n\n\n# 删除用户\n\n【系统管理】->【用户管理】->【用户列表】->[更多]->[删除]\n\n注意\n\n删除用户用对应用户生成的所有触发器均将失效需要重新生成奥\n\n\n# 忘记密码？\n\n\n# 非超级管理员\n\n联系管理员操作\n\n【系统管理】->【用户管理】->【用户列表】->[更多]->[重置密码]\n\n操作成功后弹窗会提示用户新密码，请将密码复制并告知对应的用户\n\n警告\n\n密码仅会提示一次，关闭窗口后无法查看。如果忘记则走忘记密码流程\n\n\n# 超级管理员\n\n# linux\n\nbash /xxxx/server.sh restart -15 --rest:super_user_pwd\n\n\n1\n\n\n# windows\n\nserver.bat restart --rest:super_user_pwd\n\n\n1\n\n\n\n# 修改密码\n\n用户正常可以后可以自己修改密码\n\n【点击昵称下拉处】->【安全管理】->【修改密码】\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"Oauth2说明",frontmatter:{title:"Oauth2说明",date:"2023-12-20T19:05:12.000Z",permalink:"/pages/oauth/898d2e/",categories:["docs","文档","用户&权限"],tags:["用户"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/90.Oauth2%E7%99%BB%E5%BD%95/00.Oauth2%E8%AF%B4%E6%98%8E.html",relativePath:"文档/020.用户&权限/90.Oauth2登录/00.Oauth2说明.md",key:"v-8331f970",path:"/pages/oauth/898d2e/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"配置 Oauth2",slug:"配置-oauth2",normalizedTitle:"配置 oauth2",charIndex:171},{level:3,title:"开启自动创建用户",slug:"开启自动创建用户",normalizedTitle:"开启自动创建用户",charIndex:230},{level:2,title:"配置参考",slug:"配置参考",normalizedTitle:"配置参考",charIndex:379}],headersStr:"前言 配置 Oauth2 开启自动创建用户 配置参考",content:"# 前言\n\nJpom 支持 Oauth2 登录，使用 JustAuth 第三方库实现，感谢有了此工具库让我们轻松实现 Oauth2 登录\n\n目前支持 MaxKey、Github、Gitee、钉钉、飞书、企业微信、自建 Gitlab\n\n2.11.4 版本开始支持：钉钉\n\n2.11.5 版本开始支持：飞书、企业微信、自建 Gitlab\n\n\n# 配置 Oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n\n\n开启 Oauth2 后\n\n\n\n\n# 开启自动创建用户\n\n使用 Oauth2 方式登录如果当前系统中还未存在对应的账号系统将自动创建一个对应用户名的账户，初次登录仅能自动创建账号。\n\n自动创建账户后请联系管理员分配权限组才能正常进入系统\n\n\n\n注意\n\n使用 Oauth2 方式登录如果对应账号开启了 MFA 两步验证将忽略验证\n\n\n# 配置参考\n\n\n\n\n\n",normalizedContent:"# 前言\n\njpom 支持 oauth2 登录，使用 justauth 第三方库实现，感谢有了此工具库让我们轻松实现 oauth2 登录\n\n目前支持 maxkey、github、gitee、钉钉、飞书、企业微信、自建 gitlab\n\n2.11.4 版本开始支持：钉钉\n\n2.11.5 版本开始支持：飞书、企业微信、自建 gitlab\n\n\n# 配置 oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n\n\n开启 oauth2 后\n\n\n\n\n# 开启自动创建用户\n\n使用 oauth2 方式登录如果当前系统中还未存在对应的账号系统将自动创建一个对应用户名的账户，初次登录仅能自动创建账号。\n\n自动创建账户后请联系管理员分配权限组才能正常进入系统\n\n\n\n注意\n\n使用 oauth2 方式登录如果对应账号开启了 mfa 两步验证将忽略验证\n\n\n# 配置参考\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/04/23, 03:02:44",lastUpdatedTimestamp:1713841364e3},{title:"Gitee登录",frontmatter:{title:"Gitee登录",permalink:"/pages/oauth/gitee/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},tags:["OAuth","Gitee"],date:"2024-04-08T18:46:14.000Z",readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/90.Oauth2%E7%99%BB%E5%BD%95/01.gitee%E7%99%BB%E5%BD%95.html",relativePath:"文档/020.用户&权限/90.Oauth2登录/01.gitee登录.md",key:"v-9be6db9a",path:"/pages/oauth/gitee/",headers:[{level:2,title:"1. 注册账号",slug:"_1-注册账号",normalizedTitle:"1. 注册账号",charIndex:49},{level:2,title:"2. 创建第三方授权应用",slug:"_2-创建第三方授权应用",normalizedTitle:"2. 创建第三方授权应用",charIndex:110},{level:2,title:"3. 配置 Oauth2",slug:"_3-配置-oauth2",normalizedTitle:"3. 配置 oauth2",charIndex:485},{level:2,title:"4. 登录页面查看",slug:"_4-登录页面查看",normalizedTitle:"4. 登录页面查看",charIndex:571}],headersStr:"1. 注册账号 2. 创建第三方授权应用 3. 配置 Oauth2 4. 登录页面查看",content:"温馨提示\n\n此文档摘录于 JustAuth 官方 感谢 JustAuth 官方的编写制作\n\n\n# 1. 注册账号\n\n注册Gitee账号：https://gitee.com。如果已有则忽略该步骤，直接进入第二步。\n\n\n# 2. 创建第三方授权应用\n\n进入第三方应用页面（https://gitee.com/oauth/applications）\n\n\n\n创建应用\n\n\n\n * 应用名称 一般填写自己的网站名称即可\n * 应用描述 一般填写自己的应用描述即可\n * 应用主页 填写自己的网站首页地址\n * 应用回调地址 重点，该地址为用户授权后需要跳转到的自己网站的地址，默认携带一个code参数\n * 权限 根据页面提示操作，默认勾选第一个就行。\n\n以上信息输入完成后，点击确定按钮创建应用。创建完成后，点击进入应用详情页，可以看到应用的密钥等信息\n\n\n\n记录以下三个信息：Client ID、Client Secret和应用回调地址，后面我们会用到\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 3. 配置 Oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 Client ID、Client Secret 等信息在认证管理中进行配置\n\n\n# 4. 登录页面查看\n\n链接访问成功后会看到以下页面内容：\n\n点击同意授权即可完成gitee的oauth登录。",normalizedContent:"温馨提示\n\n此文档摘录于 justauth 官方 感谢 justauth 官方的编写制作\n\n\n# 1. 注册账号\n\n注册gitee账号：https://gitee.com。如果已有则忽略该步骤，直接进入第二步。\n\n\n# 2. 创建第三方授权应用\n\n进入第三方应用页面（https://gitee.com/oauth/applications）\n\n\n\n创建应用\n\n\n\n * 应用名称 一般填写自己的网站名称即可\n * 应用描述 一般填写自己的应用描述即可\n * 应用主页 填写自己的网站首页地址\n * 应用回调地址 重点，该地址为用户授权后需要跳转到的自己网站的地址，默认携带一个code参数\n * 权限 根据页面提示操作，默认勾选第一个就行。\n\n以上信息输入完成后，点击确定按钮创建应用。创建完成后，点击进入应用详情页，可以看到应用的密钥等信息\n\n\n\n记录以下三个信息：client id、client secret和应用回调地址，后面我们会用到\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 3. 配置 oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 client id、client secret 等信息在认证管理中进行配置\n\n\n# 4. 登录页面查看\n\n链接访问成功后会看到以下页面内容：\n\n点击同意授权即可完成gitee的oauth登录。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"钉钉登录",frontmatter:{title:"钉钉登录",permalink:"/pages/oauth/dingtalk/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","dingtalk","钉钉"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z",readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/90.Oauth2%E7%99%BB%E5%BD%95/02.%E9%92%89%E9%92%89%E7%99%BB%E5%BD%95.html",relativePath:"文档/020.用户&权限/90.Oauth2登录/02.钉钉登录.md",key:"v-2e15f469",path:"/pages/oauth/dingtalk/",headers:[{level:2,title:"1 登录钉钉开发者中心",slug:"_1-登录钉钉开发者中心",normalizedTitle:"1 登录钉钉开发者中心",charIndex:49},{level:2,title:"2. 创建第三方授权应用",slug:"_2-创建第三方授权应用",normalizedTitle:"2. 创建第三方授权应用",charIndex:275},{level:2,title:"3. 配置 Oauth2",slug:"_3-配置-oauth2",normalizedTitle:"3. 配置 oauth2",charIndex:503},{level:2,title:"4. 登录页面查看",slug:"_4-登录页面查看",normalizedTitle:"4. 登录页面查看",charIndex:648}],headersStr:"1 登录钉钉开发者中心 2. 创建第三方授权应用 3. 配置 Oauth2 4. 登录页面查看",content:"温馨提示\n\n此文档摘录于 JustAuth 官方 感谢 JustAuth 官方的编写制作\n\n\n# 1 登录钉钉开发者中心\n\n 1. 登录钉钉开发者中心：钉钉开发者中心\n 2. 使用有管理员权限的钉钉账号扫码登录\n    1. 如果仅做测试的话，可以点击右上角，选择“企业注册”，按照提示创建企业\n    2. 创建完成后打开钉钉APP\n    3. 选择工作台\n    4. 点击左上角下拉框，选择刚刚创建的企业\n    5. 点击右上角加号选择扫一扫，重新扫码登录\n    6. 注：初次进入会被邀请填写一个问卷，如果是测试，则随便填就可\n\n\n# 2. 创建第三方授权应用\n\n 1. 在开发者管理控制台，选择“应用开发”\n 2. 点击左侧菜单的【移动接入应用-登录】\n 3. 然后点击右上角的【创建扫码登录应用授权】\n 4. 填写基本信息\n 5. 创建后即可看到 appId 和 appSecret。\n\n记录以下三个信息：appId、appSecret和回调域名，后面我们会用到。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 3. 配置 Oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 appId、appSecret 等信息在认证管理中进行配置\n\n * appId 等同于 clientId 、客户端ID\n * appSecret 等同于 clientSecret 、客户端密钥\n\n\n# 4. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n点击“授权”即可完成 OAuth 登录。",normalizedContent:"温馨提示\n\n此文档摘录于 justauth 官方 感谢 justauth 官方的编写制作\n\n\n# 1 登录钉钉开发者中心\n\n 1. 登录钉钉开发者中心：钉钉开发者中心\n 2. 使用有管理员权限的钉钉账号扫码登录\n    1. 如果仅做测试的话，可以点击右上角，选择“企业注册”，按照提示创建企业\n    2. 创建完成后打开钉钉app\n    3. 选择工作台\n    4. 点击左上角下拉框，选择刚刚创建的企业\n    5. 点击右上角加号选择扫一扫，重新扫码登录\n    6. 注：初次进入会被邀请填写一个问卷，如果是测试，则随便填就可\n\n\n# 2. 创建第三方授权应用\n\n 1. 在开发者管理控制台，选择“应用开发”\n 2. 点击左侧菜单的【移动接入应用-登录】\n 3. 然后点击右上角的【创建扫码登录应用授权】\n 4. 填写基本信息\n 5. 创建后即可看到 appid 和 appsecret。\n\n记录以下三个信息：appid、appsecret和回调域名，后面我们会用到。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 3. 配置 oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 appid、appsecret 等信息在认证管理中进行配置\n\n * appid 等同于 clientid 、客户端id\n * appsecret 等同于 clientsecret 、客户端密钥\n\n\n# 4. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n点击“授权”即可完成 oauth 登录。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"企业微信扫码登录",frontmatter:{title:"企业微信扫码登录",permalink:"/pages/oauth/wechat_enterprise_qrcode/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","微信","企业微信","扫码"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z",readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/90.Oauth2%E7%99%BB%E5%BD%95/03.%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E4%BA%8C%E7%BB%B4%E7%A0%81%E7%99%BB%E5%BD%95.html",relativePath:"文档/020.用户&权限/90.Oauth2登录/03.企业微信二维码登录.md",key:"v-16a2894c",path:"/pages/oauth/wechat_enterprise_qrcode/",headers:[{level:2,title:"1. 申请应用",slug:"_1-申请应用",normalizedTitle:"1. 申请应用",charIndex:49},{level:2,title:"2. 配置 Oauth2",slug:"_2-配置-oauth2",normalizedTitle:"2. 配置 oauth2",charIndex:939},{level:2,title:"3. 登录页面查看",slug:"_3-登录页面查看",normalizedTitle:"3. 登录页面查看",charIndex:1034}],headersStr:"1. 申请应用 2. 配置 Oauth2 3. 登录页面查看",content:"温馨提示\n\n此文档摘录于 JustAuth 官方 感谢 JustAuth 官方的编写制作\n\n\n# 1. 申请应用\n\n 1. 登录微信企业版控制台：控制台\n    * 如果没有企业可以点击 “企业注册”注册企业后再登录控制台\n 2. 创建企业微信应用：导航栏 – 应用管理 – 自建 – 创建应用\n    \n 3. 设置企业微信授权登录\n    1. 创建完应用之后，拖到应用最下方，选择“设置企业微信授权登录”\n       \n    2. 设置“Web网页”应用的“授权回调域”\n       \n\n注意\n\n这里 “授权回调域” 不需要指定 “前缀、后缀” 等信息，示例如下图，直接输入域名即可（文档中是直接用的justauth.cn主域名，如果开发者实际环境中用的是二级域名，比如xxx.justauth.cn，则此处直接配置xxx.justauth.cn即可）：\n\n\n关于授权回调域存在疑问的童鞋请看这里：https://open.work.weixin.qq.com/api/doc#90000/90135/90988\n\n 4. 获取 OAuth 参数。 使用 JustAuth 进行企业微信登录需要 4 个参数信息：Client ID、Client Secret、Redirect Uri、Agent ID\n    * Client Secret、Agent ID 这两个信息均在 应用管理 里可以查看\n      \n    * Client ID 信息在 我的企业 中可以找到，该信息即 企业ID\n      \n    * Redirect Uri 就是我们上面配置的“授权回调域”，按照微信企业平台的规范，我们只要保证在我们项目中使用的“回调地址”是在我们配置的“授权回调域”下的即可， 比如本例中，在程序里直接配置“回调地址”为http://justauth.cn/oauth/callback/wechat_enterprise\n\n记录以下信息：Client ID、Client Secret、Agent ID和回调地址，后面我们会用到。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 2. 配置 Oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 Client ID、Client Secret、Agent ID 等信息在认证管理中进行配置\n\n\n# 3. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n\n\n点击“连接”即可完成 OAuth 登录。",normalizedContent:"温馨提示\n\n此文档摘录于 justauth 官方 感谢 justauth 官方的编写制作\n\n\n# 1. 申请应用\n\n 1. 登录微信企业版控制台：控制台\n    * 如果没有企业可以点击 “企业注册”注册企业后再登录控制台\n 2. 创建企业微信应用：导航栏 – 应用管理 – 自建 – 创建应用\n    \n 3. 设置企业微信授权登录\n    1. 创建完应用之后，拖到应用最下方，选择“设置企业微信授权登录”\n       \n    2. 设置“web网页”应用的“授权回调域”\n       \n\n注意\n\n这里 “授权回调域” 不需要指定 “前缀、后缀” 等信息，示例如下图，直接输入域名即可（文档中是直接用的justauth.cn主域名，如果开发者实际环境中用的是二级域名，比如xxx.justauth.cn，则此处直接配置xxx.justauth.cn即可）：\n\n\n关于授权回调域存在疑问的童鞋请看这里：https://open.work.weixin.qq.com/api/doc#90000/90135/90988\n\n 4. 获取 oauth 参数。 使用 justauth 进行企业微信登录需要 4 个参数信息：client id、client secret、redirect uri、agent id\n    * client secret、agent id 这两个信息均在 应用管理 里可以查看\n      \n    * client id 信息在 我的企业 中可以找到，该信息即 企业id\n      \n    * redirect uri 就是我们上面配置的“授权回调域”，按照微信企业平台的规范，我们只要保证在我们项目中使用的“回调地址”是在我们配置的“授权回调域”下的即可， 比如本例中，在程序里直接配置“回调地址”为http://justauth.cn/oauth/callback/wechat_enterprise\n\n记录以下信息：client id、client secret、agent id和回调地址，后面我们会用到。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 2. 配置 oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 client id、client secret、agent id 等信息在认证管理中进行配置\n\n\n# 3. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n\n\n点击“连接”即可完成 oauth 登录。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"飞书登录",frontmatter:{title:"飞书登录",permalink:"/pages/oauth/feishu/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","飞书"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z",readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/90.Oauth2%E7%99%BB%E5%BD%95/04.%E9%A3%9E%E4%B9%A6%E7%99%BB%E5%BD%95.html",relativePath:"文档/020.用户&权限/90.Oauth2登录/04.飞书登录.md",key:"v-14736bc6",path:"/pages/oauth/feishu/",headers:[{level:2,title:"1. 申请应用",slug:"_1-申请应用",normalizedTitle:"1. 申请应用",charIndex:49},{level:2,title:"2. 配置 Oauth2",slug:"_2-配置-oauth2",normalizedTitle:"2. 配置 oauth2",charIndex:442},{level:2,title:"3. 登录页面查看",slug:"_3-登录页面查看",normalizedTitle:"3. 登录页面查看",charIndex:591}],headersStr:"1. 申请应用 2. 配置 Oauth2 3. 登录页面查看",content:"温馨提示\n\n此文档摘录于 JustAuth 官方 感谢 JustAuth 官方的编写制作\n\n\n# 1. 申请应用\n\n访问飞书开放平台 https://open.feishu.cn/ 并登录\n\n进入“开发者后台”页面，选择“创建企业自建应用”\n\n创建完成后，进入应用详情页，可以在首页看到 App Id 和 App Secret\n\n\n\n从右侧菜单中，进入“安全设置”页面，配置回调地址\n\n从右侧菜单中，进入“权限管理”页面，配置应用权限\n\n注：\n\n * 如需获取用户邮箱，请添加“获取用户邮箱”权限\n * 如需获取用户手机号，请添加“获取用户手机号”权限\n * 其他必选如“获取用户 userid”、“获取用户统一ID”、“获取用户基本信息”\n * 其他权限，请开发者根据自身要求添加\n\ncopy以下三个信息：App ID、App Secret和重定向 URL。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 2. 配置 Oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 App ID、App Secret 等信息在认证管理中进行配置\n\n * App ID 等同于 clientId 、客户端ID\n * App Secret 等同于 clientSecret 、客户端密钥\n\n\n# 3. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n点击同意授权即可完成飞书的 oauth 登录。",normalizedContent:"温馨提示\n\n此文档摘录于 justauth 官方 感谢 justauth 官方的编写制作\n\n\n# 1. 申请应用\n\n访问飞书开放平台 https://open.feishu.cn/ 并登录\n\n进入“开发者后台”页面，选择“创建企业自建应用”\n\n创建完成后，进入应用详情页，可以在首页看到 app id 和 app secret\n\n\n\n从右侧菜单中，进入“安全设置”页面，配置回调地址\n\n从右侧菜单中，进入“权限管理”页面，配置应用权限\n\n注：\n\n * 如需获取用户邮箱，请添加“获取用户邮箱”权限\n * 如需获取用户手机号，请添加“获取用户手机号”权限\n * 其他必选如“获取用户 userid”、“获取用户统一id”、“获取用户基本信息”\n * 其他权限，请开发者根据自身要求添加\n\ncopy以下三个信息：app id、app secret和重定向 url。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 2. 配置 oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 app id、app secret 等信息在认证管理中进行配置\n\n * app id 等同于 clientid 、客户端id\n * app secret 等同于 clientsecret 、客户端密钥\n\n\n# 3. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n点击同意授权即可完成飞书的 oauth 登录。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"自建 Gitlab",frontmatter:{title:"自建 Gitlab",date:"2024-04-08T16:49:15.000Z",permalink:"/pages/oauth/my_gitlab/",categories:["高级特性"],tags:["oauth"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/90.Oauth2%E7%99%BB%E5%BD%95/06.%E8%87%AA%E5%BB%BA%20Gitlab.html",relativePath:"文档/020.用户&权限/90.Oauth2登录/06.自建 Gitlab.md",key:"v-5ed3ce0e",path:"/pages/oauth/my_gitlab/",headers:[{level:2,title:"1. 搭建Gitlab服务",slug:"_1-搭建gitlab服务",normalizedTitle:"1. 搭建gitlab服务",charIndex:49},{level:2,title:"2. 创建应用",slug:"_2-创建应用",normalizedTitle:"2. 创建应用",charIndex:102},{level:2,title:"3. 配置 Oauth2",slug:"_3-配置-oauth2",normalizedTitle:"3. 配置 oauth2",charIndex:116},{level:2,title:"4. 登录页面查看",slug:"_4-登录页面查看",normalizedTitle:"4. 登录页面查看",charIndex:200}],headersStr:"1. 搭建Gitlab服务 2. 创建应用 3. 配置 Oauth2 4. 登录页面查看",content:"温馨提示\n\n此文档摘录于 JustAuth 官方 感谢 JustAuth 官方的编写制作\n\n\n# 1. 搭建Gitlab服务\n\n请自行解决，如果已有搭建好的Gitlab私服，请直接进入下面的步骤\n\n\n# 2. 创建应用\n\n\n\n\n# 3. 配置 Oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 Application ID、Secret 等信息在认证管理中进行配置\n\n\n# 4. 登录页面查看\n\n登录后的效果为\n\n",normalizedContent:"温馨提示\n\n此文档摘录于 justauth 官方 感谢 justauth 官方的编写制作\n\n\n# 1. 搭建gitlab服务\n\n请自行解决，如果已有搭建好的gitlab私服，请直接进入下面的步骤\n\n\n# 2. 创建应用\n\n\n\n\n# 3. 配置 oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 application id、secret 等信息在认证管理中进行配置\n\n\n# 4. 登录页面查看\n\n登录后的效果为\n\n",charsets:{cjk:!0},lastUpdated:"2024/04/08, 05:14:32",lastUpdatedTimestamp:1712553272e3},{title:"Github登录",frontmatter:{title:"Github登录",permalink:"/pages/oauth/github/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","Github"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z",readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/90.Oauth2%E7%99%BB%E5%BD%95/05.github%E7%99%BB%E5%BD%95.html",relativePath:"文档/020.用户&权限/90.Oauth2登录/05.github登录.md",key:"v-27d7f9ae",path:"/pages/oauth/github/",headers:[{level:2,title:"1.注册Github账号",slug:"_1-注册github账号",normalizedTitle:"1.注册github账号",charIndex:49},{level:2,title:"2.创建第三方应用",slug:"_2-创建第三方应用",normalizedTitle:"2.创建第三方应用",charIndex:109},{level:2,title:"3. 配置 Oauth2",slug:"_3-配置-oauth2",normalizedTitle:"3. 配置 oauth2",charIndex:638},{level:2,title:"4. 登录页面查看",slug:"_4-登录页面查看",normalizedTitle:"4. 登录页面查看",charIndex:724}],headersStr:"1.注册Github账号 2.创建第三方应用 3. 配置 Oauth2 4. 登录页面查看",content:"温馨提示\n\n此文档摘录于 JustAuth 官方 感谢 JustAuth 官方的编写制作\n\n\n# 1.注册Github账号\n\nhttps://github.com/\n\n。如果已有则忽略该步骤，直接进入第二步。\n\n\n# 2.创建第三方应用\n\n进入通过右上角进入个人设置页：https://github.com/settings/profile 然后进入第三方应用页面：https://github.com/settings/developers\n\n在应用管理页面，选择OAuth App，然后点击右上方的New OAuth App按钮进入新建应用页面\n\n\n\nApplication name 一般填写自己的网站名称即可\nApplication description 一般填写自己的应用描述即可\nHomepage URL 填写自己的网站首页地址\nAuthorization callback URL 重点，该地址为用户授权后需要跳转到的自己网站的地址，默认携带一个code参数\n\n以上信息输入完成后，点击下方绿色的Register applaction按钮创建应用。创建完成后，点击进入应用详情页，可以看到应用的密钥等信息\n\n\n\ncopy以下三个信息：Client ID、Client Secret和Authorization callback URL。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 3. 配置 Oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 Client ID、Client Secret 等信息在认证管理中进行配置\n\n\n# 4. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n输入账号密码登录完成后将会进入授权页面\n\n\n\n点击同意授权即可完成github的oauth登录。",normalizedContent:"温馨提示\n\n此文档摘录于 justauth 官方 感谢 justauth 官方的编写制作\n\n\n# 1.注册github账号\n\nhttps://github.com/\n\n。如果已有则忽略该步骤，直接进入第二步。\n\n\n# 2.创建第三方应用\n\n进入通过右上角进入个人设置页：https://github.com/settings/profile 然后进入第三方应用页面：https://github.com/settings/developers\n\n在应用管理页面，选择oauth app，然后点击右上方的new oauth app按钮进入新建应用页面\n\n\n\napplication name 一般填写自己的网站名称即可\napplication description 一般填写自己的应用描述即可\nhomepage url 填写自己的网站首页地址\nauthorization callback url 重点，该地址为用户授权后需要跳转到的自己网站的地址，默认携带一个code参数\n\n以上信息输入完成后，点击下方绿色的register applaction按钮创建应用。创建完成后，点击进入应用详情页，可以看到应用的密钥等信息\n\n\n\ncopy以下三个信息：client id、client secret和authorization callback url。\n\n重要提示\n\n“应用密钥”可保护您应用程序的安全，因此请确保其不会泄露！也不要与任何人共享您的“应用密钥”！！！\n\n\n# 3. 配置 oauth2\n\n路径：【系统管理】-> 【配置管理】->【认证管理】\n\n将 client id、client secret 等信息在认证管理中进行配置\n\n\n# 4. 登录页面查看\n\n授权链接访问成功后会看到以下页面内容：\n\n输入账号密码登录完成后将会进入授权页面\n\n\n\n点击同意授权即可完成github的oauth登录。",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"用户日志",frontmatter:{title:"用户日志",date:"2023-12-20T15:51:40.000Z",permalink:"/pages/6e6103/",categories:["docs","文档","用户&权限"],tags:["用户"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/98.%E7%94%A8%E6%88%B7%E6%97%A5%E5%BF%97.html",relativePath:"文档/020.用户&权限/98.用户日志.md",key:"v-27ccae51",path:"/pages/6e6103/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:3,title:"登录日志",slug:"登录日志",normalizedTitle:"登录日志",charIndex:9},{level:3,title:"操作日志",slug:"操作日志",normalizedTitle:"操作日志",charIndex:54},{level:2,title:"操作日志",slug:"操作日志-2",normalizedTitle:"操作日志",charIndex:54},{level:3,title:"查看系统用户操作日志",slug:"查看系统用户操作日志",normalizedTitle:"查看系统用户操作日志",charIndex:106},{level:3,title:"查看自己操作日志",slug:"查看自己操作日志",normalizedTitle:"查看自己操作日志",charIndex:169},{level:2,title:"登录日志",slug:"登录日志-2",normalizedTitle:"登录日志",charIndex:9},{level:3,title:"查看系统用户登录日志",slug:"查看系统用户登录日志",normalizedTitle:"查看系统用户登录日志",charIndex:220},{level:3,title:"查看自己登录日志",slug:"查看自己登录日志",normalizedTitle:"查看自己登录日志",charIndex:283}],headersStr:"前言 登录日志 操作日志 操作日志 查看系统用户操作日志 查看自己操作日志 登录日志 查看系统用户登录日志 查看自己登录日志",content:"# 前言\n\n\n# 登录日志\n\n在用户每次登录均会记录日志，方便日后查看登录记录或者异常 IP 登录\n\n\n# 操作日志\n\n在用户每次操作均会记录日志，方便日后查看操作记录以及回溯操作流程\n\n\n# 操作日志\n\n\n# 查看系统用户操作日志\n\n如果账号拥有服务端管理权限，则可以到【系统管理】-> 【用户管理】->【操作日志】中查看\n\n\n\n\n# 查看自己操作日志\n\n【点击昵称下拉处】->【操作日志】->【操作日志】\n\n\n\n\n# 登录日志\n\n\n# 查看系统用户登录日志\n\n如果账号拥有服务端管理权限，则可以到【系统管理】-> 【用户管理】->【登录日志】中查看\n\n\n\n\n# 查看自己登录日志\n\n【点击昵称下拉处】->【操作日志】->【登录日志】\n\n",normalizedContent:"# 前言\n\n\n# 登录日志\n\n在用户每次登录均会记录日志，方便日后查看登录记录或者异常 ip 登录\n\n\n# 操作日志\n\n在用户每次操作均会记录日志，方便日后查看操作记录以及回溯操作流程\n\n\n# 操作日志\n\n\n# 查看系统用户操作日志\n\n如果账号拥有服务端管理权限，则可以到【系统管理】-> 【用户管理】->【操作日志】中查看\n\n\n\n\n# 查看自己操作日志\n\n【点击昵称下拉处】->【操作日志】->【操作日志】\n\n\n\n\n# 登录日志\n\n\n# 查看系统用户登录日志\n\n如果账号拥有服务端管理权限，则可以到【系统管理】-> 【用户管理】->【登录日志】中查看\n\n\n\n\n# 查看自己登录日志\n\n【点击昵称下拉处】->【操作日志】->【登录日志】\n\n",charsets:{cjk:!0},lastUpdated:"2023/12/20, 11:23:58",lastUpdatedTimestamp:1703071438e3},{title:"MFA两步验证",frontmatter:{title:"MFA两步验证",date:"2023-12-20T15:22:03.000Z",permalink:"/pages/885659/",categories:["docs","文档","用户&权限"],tags:["用户"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/020.%E7%94%A8%E6%88%B7&%E6%9D%83%E9%99%90/99.MFA%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%81.html",relativePath:"文档/020.用户&权限/99.MFA两步验证.md",key:"v-3e35976a",path:"/pages/885659/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"开启 MFA 两步验证",slug:"开启-mfa-两步验证",normalizedTitle:"开启 mfa 两步验证",charIndex:44},{level:2,title:"推荐两步验证的应用",slug:"推荐两步验证的应用",normalizedTitle:"推荐两步验证的应用",charIndex:181},{level:2,title:"关闭 MFA 两步验证",slug:"关闭-mfa-两步验证",normalizedTitle:"关闭 mfa 两步验证",charIndex:474},{level:2,title:"MFA、数字令牌、两步验证丢失",slug:"mfa、数字令牌、两步验证丢失",normalizedTitle:"mfa、数字令牌、两步验证丢失",charIndex:574},{level:3,title:"非超级管理员",slug:"非超级管理员",normalizedTitle:"非超级管理员",charIndex:691},{level:3,title:"超级管理员",slug:"超级管理员",normalizedTitle:"超级管理员",charIndex:692},{level:4,title:"linux",slug:"linux",normalizedTitle:"linux",charIndex:749},{level:4,title:"windows",slug:"windows",normalizedTitle:"windows",charIndex:820},{level:2,title:"提醒用户开启 MFA",slug:"提醒用户开启-mfa",normalizedTitle:"提醒用户开启 mfa",charIndex:880}],headersStr:"前言 开启 MFA 两步验证 推荐两步验证的应用 关闭 MFA 两步验证 MFA、数字令牌、两步验证丢失 非超级管理员 超级管理员 linux windows 提醒用户开启 MFA",content:"# 前言\n\nJpom 支持为用户开启两步验证（MFA、数字令牌）来保障用户安全\n\n\n# 开启 MFA 两步验证\n\n * 登录 Jpom，点击昵称下拉处，选择【安全管理】\n * 选择【两步验证】\n * 点击【开启 MFA】\n * 安装两步验证应用\n * 扫描二维码或者输入 KEY\n * 获取验证码\n * 将验证码填入 Jpom 系统\n * 确认绑定\n\n\n\n\n# 推荐两步验证的应用\n\n * 【推荐】微信小程序搜索 数盾OTP\n * 【推荐】腾讯身份验证码 简单好用 Android\n * Authy 功能丰富 专为两步验证码 iOS/Android/Windows/Mac/LinuxChrome 扩展\n * Google Authenticator 简单易用，但不支持密钥导出备份 iOS Android\n * Microsoft Authenticator 使用微软全家桶的推荐 iOS/Android\n * 1Password 强大安全的密码管理付费应用 iOS/Android/Windows/Mac/Linux/ChromeOS\n\n\n# 关闭 MFA 两步验证\n\n * 登录 Jpom，点击昵称下拉处，选择【安全管理】\n * 选择【两步验证】\n * 获取最新验证码\n * 将验证码填入 Jpom 系统\n * 点击【确认关闭】\n\n\n\n\n# MFA、数字令牌、两步验证丢失\n\n * 用户在登录时，如果开启 MFA 两步验证，那么用户需要输入 MFA 令牌才能登录\n * 如果用户忘记 MFA 令牌，那么需要用户关闭本次的 MFA 两步验证，重新开启 MFA 两步验证\n\n\n# 非超级管理员\n\n联系操作管理员手动关闭\n\n\n\n注意：如果未开启 MFA 此按钮是禁用状态\n\n\n# 超级管理员\n\n# linux\n\nbash /xxxx/Server.sh restart -15 --close:super_user_mfa\n\n\n1\n\n\n# windows\n\nServer.bat restart --close:super_user_mfa\n\n\n1\n\n\n\n# 提醒用户开启 MFA\n\n如果您对系统安全有一定要求，期望用户均开启 MFA 两步验证，那么您可以开启提醒功能，提醒用户开启 MFA 两步验证。\n\n开启方式：修改配置【jpom.user.force-mfa】为 true\n\n\n\n开启后用户打开系统，如果未开启 MFA 两步验证，那么系统会提醒用户开启 MFA 两步验证。\n\n",normalizedContent:"# 前言\n\njpom 支持为用户开启两步验证（mfa、数字令牌）来保障用户安全\n\n\n# 开启 mfa 两步验证\n\n * 登录 jpom，点击昵称下拉处，选择【安全管理】\n * 选择【两步验证】\n * 点击【开启 mfa】\n * 安装两步验证应用\n * 扫描二维码或者输入 key\n * 获取验证码\n * 将验证码填入 jpom 系统\n * 确认绑定\n\n\n\n\n# 推荐两步验证的应用\n\n * 【推荐】微信小程序搜索 数盾otp\n * 【推荐】腾讯身份验证码 简单好用 android\n * authy 功能丰富 专为两步验证码 ios/android/windows/mac/linuxchrome 扩展\n * google authenticator 简单易用，但不支持密钥导出备份 ios android\n * microsoft authenticator 使用微软全家桶的推荐 ios/android\n * 1password 强大安全的密码管理付费应用 ios/android/windows/mac/linux/chromeos\n\n\n# 关闭 mfa 两步验证\n\n * 登录 jpom，点击昵称下拉处，选择【安全管理】\n * 选择【两步验证】\n * 获取最新验证码\n * 将验证码填入 jpom 系统\n * 点击【确认关闭】\n\n\n\n\n# mfa、数字令牌、两步验证丢失\n\n * 用户在登录时，如果开启 mfa 两步验证，那么用户需要输入 mfa 令牌才能登录\n * 如果用户忘记 mfa 令牌，那么需要用户关闭本次的 mfa 两步验证，重新开启 mfa 两步验证\n\n\n# 非超级管理员\n\n联系操作管理员手动关闭\n\n\n\n注意：如果未开启 mfa 此按钮是禁用状态\n\n\n# 超级管理员\n\n# linux\n\nbash /xxxx/server.sh restart -15 --close:super_user_mfa\n\n\n1\n\n\n# windows\n\nserver.bat restart --close:super_user_mfa\n\n\n1\n\n\n\n# 提醒用户开启 mfa\n\n如果您对系统安全有一定要求，期望用户均开启 mfa 两步验证，那么您可以开启提醒功能，提醒用户开启 mfa 两步验证。\n\n开启方式：修改配置【jpom.user.force-mfa】为 true\n\n\n\n开启后用户打开系统，如果未开启 mfa 两步验证，那么系统会提醒用户开启 mfa 两步验证。\n\n",charsets:{cjk:!0},lastUpdated:"2023/12/25, 08:40:46",lastUpdatedTimestamp:1703493646e3},{title:"集群管理",frontmatter:{title:"集群管理",date:"2023-12-24T15:12:09.000Z",permalink:"/pages/workspace/cluster/",categories:["docs","文档","工作空间&集群"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/030.%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4&%E9%9B%86%E7%BE%A4/000.%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86.html",relativePath:"文档/030.工作空间&集群/000.集群管理.md",key:"v-14569a23",path:"/pages/workspace/cluster/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"为啥要集群？",slug:"为啥要集群",normalizedTitle:"为啥要集群？",charIndex:173},{level:3,title:"痛点",slug:"痛点",normalizedTitle:"痛点",charIndex:278},{level:3,title:"如何解决？",slug:"如何解决",normalizedTitle:"如何解决？",charIndex:543},{level:2,title:"前提条件",slug:"前提条件",normalizedTitle:"前提条件",charIndex:658},{level:3,title:"数据库",slug:"数据库",normalizedTitle:"数据库",charIndex:80},{level:3,title:"工作空间准备",slug:"工作空间准备",normalizedTitle:"工作空间准备",charIndex:746},{level:3,title:"集群网络互通",slug:"集群网络互通",normalizedTitle:"集群网络互通",charIndex:917},{level:2,title:"集群创建",slug:"集群创建",normalizedTitle:"集群创建",charIndex:1050},{level:3,title:"集群安装 ID",slug:"集群安装-id",normalizedTitle:"集群安装 id",charIndex:1256},{level:2,title:"配置集群",slug:"配置集群",normalizedTitle:"配置集群",charIndex:687},{level:3,title:"修改集群 ID",slug:"修改集群-id",normalizedTitle:"修改集群 id",charIndex:1636},{level:3,title:"资产分组",slug:"资产分组",normalizedTitle:"资产分组",charIndex:1886},{level:3,title:"未绑定集群的分组",slug:"未绑定集群的分组",normalizedTitle:"未绑定集群的分组",charIndex:2106},{level:3,title:"集群地址",slug:"集群地址",normalizedTitle:"集群地址",charIndex:2187},{level:3,title:"工作空间绑定集群",slug:"工作空间绑定集群",normalizedTitle:"工作空间绑定集群",charIndex:2309},{level:2,title:"切换集群",slug:"切换集群",normalizedTitle:"切换集群",charIndex:2378},{level:2,title:"删除集群",slug:"删除集群",normalizedTitle:"删除集群",charIndex:2526},{level:2,title:"修改集群心跳",slug:"修改集群心跳",normalizedTitle:"修改集群心跳",charIndex:2756}],headersStr:"前言 为啥要集群？ 痛点 如何解决？ 前提条件 数据库 工作空间准备 集群网络互通 集群创建 集群安装 ID 配置集群 修改集群 ID 资产分组 未绑定集群的分组 集群地址 工作空间绑定集群 切换集群 删除集群 修改集群心跳",content:'# 前言\n\nJpom 服务端执行集群化管理和部署，但是注意是是逻辑集群来实现的（可能和您认为的集群稍微有一点差异）\n\n一句话总结\n\n搭建多个服务端并且指向同一个数据库使用分组来实现逻辑区分和管控\n\n整个架构图如下：\n\n\n\n说明\n\n插件端自身没有必要做集群，请您不要问出如何对插件端集群化。如果您真需要那么您应该了解服务端中的节点分发功能\n\n\n# 为啥要集群？\n\n其实在我们日常使用绝大多数情况是无需集群化的，因为单体服务端基本够用，如果不够那么加钱？（扩容服务器）\n\n但是您的诉求就是需要对服务端进行集群化来实现资源隔离使用，那么也是可以实现的。\n\n\n# 痛点\n\n首先您要知道 Jpom 服务端本身消耗资源的痛点在哪里，因为您集群化无非就是需要对服务器资源消耗进行把控和隔离。\n\n服务端资源消耗的痛点在：在线构建 即项目打包部署，尤其是 node 项目在打包是资源消耗高。\n\n理论上服务端除去在线构建功能之外其他功能均不会消耗过多资源，当您理解到痛点后我们继续看如何解决痛点。\n\n补充说明\n\n * 在线构建消耗资源的原因不在于 jpom 服务端本身，而已调用相关插件而引起的资源消耗\n * 不同构建方式使用到到依赖插件不同消耗资源也不同，同时资源消耗和您项目本身大小有一定关系\n\n\n# 如何解决？\n\n既然在线构建消耗资源，那么我们应该想法扩容服务器或者分散服务器来执行构建。\n\n 1. 扩容最简单也是最有效的来。\n 2. 分散服务器，使用多个服务器来构建项目（复杂度高）\n\n本文主要从分散服务器的方式来说明\n\n\n# 前提条件\n\n需要使用集群您需要先满足如下条件才更快的帮助您配置集群\n\n\n# 数据库\n\n如果您需要集群化部署那么您服务端的数据库必须使用或者提前迁移到 mysql 中。\n\n\n# 工作空间准备\n\njpom 中的工作空间我相信您已经了解或者已经会使用了(如果不会请看文档)，如果需要集群的话则需要您提前将期望存放/归属不同集群的数据使用工作空间来划分。\n\n因为 Jpom 中的逻辑集群绑定到不同的工作空间来实现数据切换或者资源使用。\n\n并且您还需要对您的资产进行分组配置来指定对应的资产应该归属到哪个集群中来管理。\n\n\n# 集群网络互通\n\n这里是一个大前提奥。\n\n您需要保证您的服务端 A 能连接到您的数据同时服务端 B 也能连接到您的数据库。\n\n集群配置好后:\n\n * 服务端 A 也等同于集群 A\n * 服务端 B 也等同于集群 B\n\n单个集群中的资产信息也需要保证网络互通。\n\n\n# 集群创建\n\n您想在服务端中创建集群，那么当您服务端的数据库已经使用 mysql 后，您只需要在您新机器上安装一个全新的服务端，并且配置数据库信息为之前服务端相同的即可。\n\n成功后操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n\n\n可以看到已经有一条新的集群记录啦\n\n规则说明\n\n服务端中集群是使用安装 id来区分的，因为您全新安装时会自动生成一个新的安装 id\n\n\n# 集群安装 ID\n\n集群安装 ID 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：INSTALL.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installTime":"2021-03-16 17:05:32",\n        "installId":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installId 为当前集群 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n\n# 配置集群\n\n在您配置集群前您需要对您集群进行以下配置：\n\n * 修改集群 ID\n * 已经存在的资产信息进行分组\n\n\n# 修改集群 ID\n\n系统默认的集群 ID 值为：DEFAULT\n\n在同一个系统中不同的集群 ID 需要配置为不同的值才能正常使用，反之您在服务端控制台（系统日志）将看到如下错误信息：\n\nDEFAULT 集群ID冲突：7a175577b0d042c79c1a56b70de4996c 默认集群\n\n\n1\n\n\n修改集群 id 路径：【服务端管理】->【服务端配置】->【系统配置】->【服务端系统配置】\n\njpom.cluster.id\n\n\n\n\n# 资产分组\n\n在您配置集群前您需要对您已经存在的资产信息进行分组\n\n资产分组的目的是实现您不同集群下的资产监控和调度\n\n温馨提醒\n\n当您在使用集群功能时，发现资产状态监控不正确，但是您的资产的确在线那么您就需要检查一下对应资产分组绑定的集群是否正常\n\n需要分组的资产有：\n\n * 机器数据\n * SSH 数据\n * Docker 数据\n\n配置路径：【系统管理】->【资产管理】->(【机器管理】、【SSH管理】【Docker管理】)\n\n\n# 未绑定集群的分组\n\n如果您在集群页面里面发现存在未绑定集群的分组数据时，您需要检查对应分组中的资产数据应该绑定到哪个集群分组然后进行配置绑定\n\n\n\n\n\n\n\n\n# 集群地址\n\n因为在 jpom 中实际是安装来多个服务端，如果您需要使用到对应的集群下面的工作空间数据，您还需要访问对应集群的真实地址来达到管理控制对应服务端（集群）。\n\n所以集群地址，请填写对应集群的真实访问地址（可以是反向代理后的）\n\n\n# 工作空间绑定集群\n\n当您上次操作均完成后您还有最后一步就是给对应工作空间绑定一个集群来实现工作空间和集群关系能一一对应。\n\n\n\n\n\n\n# 切换集群\n\n当您为所有集群都配置来访问地址时您可以在【右上角昵称】->【下拉处】切换\n\n如果您未配置集群的访问地址可以看到集群名，但是切换按钮是禁用状态。\n\n\n\n您配置正确的地址后按钮即可用：\n\n\n\n点击您想要切换到的集群后即可跳转到对应集群，当然您也可以手动在浏览器输入集群地址访问。\n\n\n# 删除集群\n\n当您想删除某个集群流程比较简单\n\n 1. 停止对应集群服务端并卸载\n 2. 解绑工作空间和集群关系\n 3. 资产分组解绑\n    1. 将需要删除集群绑定的资产分组重新分配到新集群\n 4. 删除集群\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您未解绑集群和工作空间关系。\n\n\n# 修改集群心跳\n\n心跳默认 30 秒检查集群在线状态，前提是已经配置集群地址后。\n\n您可以自定义检查集群状态时间：\n\n修改集群心跳路径：【服务端管理】->【服务端配置】->【系统配置】->【服务端系统配置】\n\njpom.cluster.heart-second\n\n',normalizedContent:'# 前言\n\njpom 服务端执行集群化管理和部署，但是注意是是逻辑集群来实现的（可能和您认为的集群稍微有一点差异）\n\n一句话总结\n\n搭建多个服务端并且指向同一个数据库使用分组来实现逻辑区分和管控\n\n整个架构图如下：\n\n\n\n说明\n\n插件端自身没有必要做集群，请您不要问出如何对插件端集群化。如果您真需要那么您应该了解服务端中的节点分发功能\n\n\n# 为啥要集群？\n\n其实在我们日常使用绝大多数情况是无需集群化的，因为单体服务端基本够用，如果不够那么加钱？（扩容服务器）\n\n但是您的诉求就是需要对服务端进行集群化来实现资源隔离使用，那么也是可以实现的。\n\n\n# 痛点\n\n首先您要知道 jpom 服务端本身消耗资源的痛点在哪里，因为您集群化无非就是需要对服务器资源消耗进行把控和隔离。\n\n服务端资源消耗的痛点在：在线构建 即项目打包部署，尤其是 node 项目在打包是资源消耗高。\n\n理论上服务端除去在线构建功能之外其他功能均不会消耗过多资源，当您理解到痛点后我们继续看如何解决痛点。\n\n补充说明\n\n * 在线构建消耗资源的原因不在于 jpom 服务端本身，而已调用相关插件而引起的资源消耗\n * 不同构建方式使用到到依赖插件不同消耗资源也不同，同时资源消耗和您项目本身大小有一定关系\n\n\n# 如何解决？\n\n既然在线构建消耗资源，那么我们应该想法扩容服务器或者分散服务器来执行构建。\n\n 1. 扩容最简单也是最有效的来。\n 2. 分散服务器，使用多个服务器来构建项目（复杂度高）\n\n本文主要从分散服务器的方式来说明\n\n\n# 前提条件\n\n需要使用集群您需要先满足如下条件才更快的帮助您配置集群\n\n\n# 数据库\n\n如果您需要集群化部署那么您服务端的数据库必须使用或者提前迁移到 mysql 中。\n\n\n# 工作空间准备\n\njpom 中的工作空间我相信您已经了解或者已经会使用了(如果不会请看文档)，如果需要集群的话则需要您提前将期望存放/归属不同集群的数据使用工作空间来划分。\n\n因为 jpom 中的逻辑集群绑定到不同的工作空间来实现数据切换或者资源使用。\n\n并且您还需要对您的资产进行分组配置来指定对应的资产应该归属到哪个集群中来管理。\n\n\n# 集群网络互通\n\n这里是一个大前提奥。\n\n您需要保证您的服务端 a 能连接到您的数据同时服务端 b 也能连接到您的数据库。\n\n集群配置好后:\n\n * 服务端 a 也等同于集群 a\n * 服务端 b 也等同于集群 b\n\n单个集群中的资产信息也需要保证网络互通。\n\n\n# 集群创建\n\n您想在服务端中创建集群，那么当您服务端的数据库已经使用 mysql 后，您只需要在您新机器上安装一个全新的服务端，并且配置数据库信息为之前服务端相同的即可。\n\n成功后操作路径：【系统管理】->【服务端配置】->【工作空间&集群】-> [集群管理选项卡]\n\n\n\n可以看到已经有一条新的集群记录啦\n\n规则说明\n\n服务端中集群是使用安装 id来区分的，因为您全新安装时会自动生成一个新的安装 id\n\n\n# 集群安装 id\n\n集群安装 id 创建规则：当服务端在启动时候会自动检查数据目录中是否存在：install.json 文件，如果不存在则进行自动创建\n\n文件数据示例：\n\n{\n        "installtime":"2021-03-16 17:05:32",\n        "installid":"91c653b3e17c4021b486416e33d014c8",\n        "desc":"请勿删除此文件,服务端安装id和插件端互通关联"\n}\n\n\n1\n2\n3\n4\n5\n\n\n其中的 installid 为当前集群 id,并且集群数据会自动写入到数据库中，集群安装 id 生成规则是 uuid\n\n程序会检查到当前程序的集群安装 id 在数据库中未存在则自动创建一条新记录。\n\n\n# 配置集群\n\n在您配置集群前您需要对您集群进行以下配置：\n\n * 修改集群 id\n * 已经存在的资产信息进行分组\n\n\n# 修改集群 id\n\n系统默认的集群 id 值为：default\n\n在同一个系统中不同的集群 id 需要配置为不同的值才能正常使用，反之您在服务端控制台（系统日志）将看到如下错误信息：\n\ndefault 集群id冲突：7a175577b0d042c79c1a56b70de4996c 默认集群\n\n\n1\n\n\n修改集群 id 路径：【服务端管理】->【服务端配置】->【系统配置】->【服务端系统配置】\n\njpom.cluster.id\n\n\n\n\n# 资产分组\n\n在您配置集群前您需要对您已经存在的资产信息进行分组\n\n资产分组的目的是实现您不同集群下的资产监控和调度\n\n温馨提醒\n\n当您在使用集群功能时，发现资产状态监控不正确，但是您的资产的确在线那么您就需要检查一下对应资产分组绑定的集群是否正常\n\n需要分组的资产有：\n\n * 机器数据\n * ssh 数据\n * docker 数据\n\n配置路径：【系统管理】->【资产管理】->(【机器管理】、【ssh管理】【docker管理】)\n\n\n# 未绑定集群的分组\n\n如果您在集群页面里面发现存在未绑定集群的分组数据时，您需要检查对应分组中的资产数据应该绑定到哪个集群分组然后进行配置绑定\n\n\n\n\n\n\n\n\n# 集群地址\n\n因为在 jpom 中实际是安装来多个服务端，如果您需要使用到对应的集群下面的工作空间数据，您还需要访问对应集群的真实地址来达到管理控制对应服务端（集群）。\n\n所以集群地址，请填写对应集群的真实访问地址（可以是反向代理后的）\n\n\n# 工作空间绑定集群\n\n当您上次操作均完成后您还有最后一步就是给对应工作空间绑定一个集群来实现工作空间和集群关系能一一对应。\n\n\n\n\n\n\n# 切换集群\n\n当您为所有集群都配置来访问地址时您可以在【右上角昵称】->【下拉处】切换\n\n如果您未配置集群的访问地址可以看到集群名，但是切换按钮是禁用状态。\n\n\n\n您配置正确的地址后按钮即可用：\n\n\n\n点击您想要切换到的集群后即可跳转到对应集群，当然您也可以手动在浏览器输入集群地址访问。\n\n\n# 删除集群\n\n当您想删除某个集群流程比较简单\n\n 1. 停止对应集群服务端并卸载\n 2. 解绑工作空间和集群关系\n 3. 资产分组解绑\n    1. 将需要删除集群绑定的资产分组重新分配到新集群\n 4. 删除集群\n\n如果您在删除中提示：不能删除在线的集群 那么说明您选错要删除集群了\n\n系统中如果当前集群还在心跳（在线）是不能删除的，心跳机制是 30 秒一次\n\n如果您在删除中提示：当前集群还被工作空间绑定不能删除 那么说明您未解绑集群和工作空间关系。\n\n\n# 修改集群心跳\n\n心跳默认 30 秒检查集群在线状态，前提是已经配置集群地址后。\n\n您可以自定义检查集群状态时间：\n\n修改集群心跳路径：【服务端管理】->【服务端配置】->【系统配置】->【服务端系统配置】\n\njpom.cluster.heart-second\n\n',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"工作空间",frontmatter:{title:"工作空间",date:"2023-12-23T16:16:26.000Z",permalink:"/pages/workspace/d3f985/",categories:["docs","文档","工作空间&集群"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/030.%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4&%E9%9B%86%E7%BE%A4/010.%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4.html",relativePath:"文档/030.工作空间&集群/010.工作空间.md",key:"v-af31e4a4",path:"/pages/workspace/d3f985/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"数据层级",slug:"数据层级",normalizedTitle:"数据层级",charIndex:112}],headersStr:"前言 数据层级",content:"# 前言\n\n使用 Jpom 您必须知道的一个概念就是工作空间，因为系统中的数据使用了工作空间来代替权限限制的功能。所以您必须理解并能善用工作空间才能更轻松的使用 Jpom\n\n关于权限说明您可以看另一个文档：权限说明\n\n\n# 数据层级\n\nJpom 服务端中的数据可以大概分为如下层级：用户数据、资产数据、其他（系统）数据、工作空间数据\n\n\n\n如图所示：\n\n可共享：是指可以跨工作空间使用的数据\n\n需分配：数据默认是在系统级别，可以将数据分配到需要使用的工作空间来供其他用户使用\n\n普通用户：仅能使用和管理授权工作空间下的数据\n\n超级管理员：可以使用系统中的所有数据\n\n服务端管理员：可以使用授权工作空间下的数据、资产数据、部分系统数据\n\n----------------------------------------\n\n工作空间自身数据是属于系统层级的数据。\n\n但是比如下列数据属于工作空间层级下的：\n\n * 逻辑节点\n * SSH 数据（非资产管理）\n * 容器数据（非资产管理）\n * 项目数据\n * 构建数据\n * 仓库数据\n * 脚本数据\n * 监控数据\n * 文件中心数据\n * 证书数据\n * 等\n\n总结\n\n上述功能或者数据均表示需要绑定到指定工作空间\n\n文档正在努力加载中。。。",normalizedContent:"# 前言\n\n使用 jpom 您必须知道的一个概念就是工作空间，因为系统中的数据使用了工作空间来代替权限限制的功能。所以您必须理解并能善用工作空间才能更轻松的使用 jpom\n\n关于权限说明您可以看另一个文档：权限说明\n\n\n# 数据层级\n\njpom 服务端中的数据可以大概分为如下层级：用户数据、资产数据、其他（系统）数据、工作空间数据\n\n\n\n如图所示：\n\n可共享：是指可以跨工作空间使用的数据\n\n需分配：数据默认是在系统级别，可以将数据分配到需要使用的工作空间来供其他用户使用\n\n普通用户：仅能使用和管理授权工作空间下的数据\n\n超级管理员：可以使用系统中的所有数据\n\n服务端管理员：可以使用授权工作空间下的数据、资产数据、部分系统数据\n\n----------------------------------------\n\n工作空间自身数据是属于系统层级的数据。\n\n但是比如下列数据属于工作空间层级下的：\n\n * 逻辑节点\n * ssh 数据（非资产管理）\n * 容器数据（非资产管理）\n * 项目数据\n * 构建数据\n * 仓库数据\n * 脚本数据\n * 监控数据\n * 文件中心数据\n * 证书数据\n * 等\n\n总结\n\n上述功能或者数据均表示需要绑定到指定工作空间\n\n文档正在努力加载中。。。",charsets:{cjk:!0},lastUpdated:"2024/04/23, 03:02:44",lastUpdatedTimestamp:1713841364e3},{title:"资产说明",frontmatter:{title:"资产说明",date:"2023-12-24T19:10:07.000Z",permalink:"/pages/350118/",categories:["docs","文档","工作空间&集群","资产管理"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/00.%E8%B5%84%E4%BA%A7%E8%AF%B4%E6%98%8E.html",relativePath:"文档/035.资产管理/00.资产说明.md",key:"v-06020ef6",path:"/pages/350118/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"资产数据",slug:"资产数据",normalizedTitle:"资产数据",charIndex:73},{level:3,title:"机器节点",slug:"机器节点",normalizedTitle:"机器节点",charIndex:210},{level:3,title:"SSH",slug:"ssh",normalizedTitle:"ssh",charIndex:218},{level:3,title:"Docker",slug:"docker",normalizedTitle:"docker",charIndex:225},{level:3,title:"Docker swarm",slug:"docker-swarm",normalizedTitle:"docker swarm",charIndex:513}],headersStr:"前言 资产数据 机器节点 SSH Docker Docker swarm",content:"# 前言\n\n资产管理主要是解决您服务器资产添加到服务端后，在不同工作空间中使用如果修改资产信息仅修改一次即可，无须到使用到的所有工作空间去修改\n\n资产数据仅能在服务端管理中使用，不能直接在工作空间使用。\n\n相当于您想把资产授权/分配给普通用户使用您还需要将对应的资产分配到工作空间中才行。\n\n\n# 资产数据\n\n资产数据是指一个物理节点关联的数据，比如您有一台服务器这在 jpom 中属于资产\n\n资产数据又分为：\n\n * 机器节点\n * SSH\n * Docker\n\n\n# 机器节点\n\n机器节点指安装过 jpom 插件端的服务端，然后将对应信息添加到服务端后叫机器节点\n\n\n# SSH\n\nSSH 是指服务端中的 ssh 协议，在服务端中您可以使用 ssh 来登录服务器终端和 sftp\n\n注意\n\n目前未对 windows ssh 协议进行适配，您在使用 windows 的 ssh 协议中可能会有一些兼容性问题\n\n\n# Docker\n\nDocker 是指可以将您服务器中的 docker 添加到服务端来进行统一管理，实现一个轻量化的 docker 可视化工具\n\n同时服务端中还支持对 docker swarm 集群管理\n\n\n# Docker swarm\n\n需要先将 docker 配置到系统中才能使用 swarm 机器奥",normalizedContent:"# 前言\n\n资产管理主要是解决您服务器资产添加到服务端后，在不同工作空间中使用如果修改资产信息仅修改一次即可，无须到使用到的所有工作空间去修改\n\n资产数据仅能在服务端管理中使用，不能直接在工作空间使用。\n\n相当于您想把资产授权/分配给普通用户使用您还需要将对应的资产分配到工作空间中才行。\n\n\n# 资产数据\n\n资产数据是指一个物理节点关联的数据，比如您有一台服务器这在 jpom 中属于资产\n\n资产数据又分为：\n\n * 机器节点\n * ssh\n * docker\n\n\n# 机器节点\n\n机器节点指安装过 jpom 插件端的服务端，然后将对应信息添加到服务端后叫机器节点\n\n\n# ssh\n\nssh 是指服务端中的 ssh 协议，在服务端中您可以使用 ssh 来登录服务器终端和 sftp\n\n注意\n\n目前未对 windows ssh 协议进行适配，您在使用 windows 的 ssh 协议中可能会有一些兼容性问题\n\n\n# docker\n\ndocker 是指可以将您服务器中的 docker 添加到服务端来进行统一管理，实现一个轻量化的 docker 可视化工具\n\n同时服务端中还支持对 docker swarm 集群管理\n\n\n# docker swarm\n\n需要先将 docker 配置到系统中才能使用 swarm 机器奥",charsets:{cjk:!0},lastUpdated:"2024/01/12, 14:14:09",lastUpdatedTimestamp:1705068849e3},{title:"机器资产",frontmatter:{title:"机器资产",date:"2023-12-24T19:10:40.000Z",permalink:"/pages/3f268f/",categories:["docs","文档","工作空间&集群","资产管理"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/10.%E6%9C%BA%E5%99%A8%E8%B5%84%E4%BA%A7.html",relativePath:"文档/035.资产管理/10.机器资产.md",key:"v-faa6e8b0",path:"/pages/3f268f/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"添加机器",slug:"添加机器",normalizedTitle:"添加机器",charIndex:7},{level:3,title:"节点地址",slug:"节点地址",normalizedTitle:"节点地址",charIndex:185},{level:3,title:"节点账号&密码",slug:"节点账号-密码",normalizedTitle:"节点账号&amp;密码",charIndex:null},{level:3,title:"模板节点",slug:"模板节点",normalizedTitle:"模板节点",charIndex:712},{level:3,title:"编码方式",slug:"编码方式",normalizedTitle:"编码方式",charIndex:811},{level:3,title:"代理",slug:"代理",normalizedTitle:"代理",charIndex:231},{level:3,title:"常见问题",slug:"常见问题",normalizedTitle:"常见问题",charIndex:1141},{level:4,title:"节点网络连接异常或超时",slug:"节点网络连接异常或超时",normalizedTitle:"节点网络连接异常或超时",charIndex:1149},{level:4,title:"授权信息错误",slug:"授权信息错误",normalizedTitle:"授权信息错误",charIndex:1346},{level:4,title:"传输加密",slug:"传输加密",normalizedTitle:"传输加密",charIndex:1613},{level:2,title:"分配机器",slug:"分配机器",normalizedTitle:"分配机器",charIndex:1680},{level:2,title:"查看机器关联工作空间",slug:"查看机器关联工作空间",normalizedTitle:"查看机器关联工作空间",charIndex:1799},{level:2,title:"分发授权配置",slug:"分发授权配置",normalizedTitle:"分发授权配置",charIndex:1951},{level:3,title:"授权（白名单）配置",slug:"授权-白名单-配置",normalizedTitle:"授权（白名单）配置",charIndex:756},{level:3,title:"允许文件编辑后缀",slug:"允许文件编辑后缀",normalizedTitle:"允许文件编辑后缀",charIndex:2153},{level:2,title:"分发同步配置",slug:"分发同步配置",normalizedTitle:"分发同步配置",charIndex:2334},{level:2,title:"机器详情",slug:"机器详情",normalizedTitle:"机器详情",charIndex:2526},{level:3,title:"基本信息",slug:"基本信息",normalizedTitle:"基本信息",charIndex:2571},{level:3,title:"缓存监控",slug:"缓存监控",normalizedTitle:"缓存监控",charIndex:2605},{level:3,title:"系统配置",slug:"系统配置",normalizedTitle:"系统配置",charIndex:769},{level:3,title:"授权配置",slug:"授权配置",normalizedTitle:"授权配置",charIndex:1953},{level:3,title:"在线升级",slug:"在线升级",normalizedTitle:"在线升级",charIndex:2629},{level:3,title:"系统日志",slug:"系统日志",normalizedTitle:"系统日志",charIndex:2637},{level:2,title:"机器的孤独数据",slug:"机器的孤独数据",normalizedTitle:"机器的孤独数据",charIndex:2965},{level:2,title:"删除机器",slug:"删除机器",normalizedTitle:"删除机器",charIndex:3030},{level:2,title:"修改监控周期（采集周期）",slug:"修改监控周期-采集周期",normalizedTitle:"修改监控周期（采集周期）",charIndex:3219}],headersStr:"前言 添加机器 节点地址 节点账号&密码 模板节点 编码方式 代理 常见问题 节点网络连接异常或超时 授权信息错误 传输加密 分配机器 查看机器关联工作空间 分发授权配置 授权（白名单）配置 允许文件编辑后缀 分发同步配置 机器详情 基本信息 缓存监控 系统配置 授权配置 在线升级 系统日志 机器的孤独数据 删除机器 修改监控周期（采集周期）",content:"# 前言\n\n在添加机器前您需要在您期望被管控的服务器中安装 jpom 插件端奥，安装方式请参考其他文档。\n\n安装后并且需要保证服务端能访问到插件端对应的端口奥（默认是 2123）\n\n\n# 添加机器\n\n当您的服务器已经安装 jpom 插件端后还需要添加到资产管理后才能正常使用插件端相关的功能。\n\n操作路径：【服务端管理】->【资产管理】->【机器管理】\n\n\n\n\n\n\n# 节点地址\n\n节点地址为您对应服务器: IP 地址:端口号\n\n注意如果您使用来内网穿透或者端口代理等工具来实现网络互通的情况下您需要填写工具暴露出来的 ip 地址和端口\n\nnginx、frp、ngrok、neutrino-proxy 等\n\n端口号默认为；2123，如果您修改过端口号请填写实际的端口号\n\n\n# 节点账号&密码\n\n节点的默认账号：jpomAgent\n\n节点的默认密码：为随机生成\n\n启动时候会在控制台输出：Automatically generate authorized account:jpomAgent password:xxxxx Authorization information storage location：/home/jpom/agent/data/agent_authorize.json\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。\n\n如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 Agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 application.yml 自定义配置了账号密码不会出现此文件)\n\n\n# 模板节点\n\n是将对应的机器标记为模板节点，其他机器可以使用模板节点来快速同步：\n\n * 授权（白名单）配置\n * 系统配置\n\n此功能用于您多台机器的配置一致时可以快速统一修改多台机器的配置\n\n\n# 编码方式\n\n插件端支持配置发送请求消息编码方式（编码、混淆明文、规避防火墙）\n\n支持的方式有：\n\n * BASE4\n * AES\n\n一般情况使用 base64 即可避免 http 消息传输中关键词检测。\n\n如果您对消息想加密可以选择 AES,AES 的 key 默认为：Djnn3runZBzdv9Nv。\n\n如果您想修改其 key 则修改/添加插件端和服务端的环境变量：JPOM_ENCRYPT_AES_KEY 注意插件端和服务端 key 需要保持一致否则无法正常连接插件端\n\n\n# 代理\n\n节点网络代理是配置服务端和插件端通讯时使用那种代理方式来访问（此功能使用场景不多）\n\n支持的代理协议：\n\n * HTTP\n * SOCKS\n * DIRECT\n\n\n# 常见问题\n\n# 节点网络连接异常或超时\n\n添加时候可能出现：xxx节点网络连接异常或超时,请优先检查插件端运行状态再检查 IP 地址、端口号是否配置正确,防火墙规则,云服务器的安全组配置等网络相关问题排查定位。xxxx\n\n\n\n这里一般需要检查防火墙、安全组以及 IP 地址是否正常等相关问题。\n\n出现这种提升还有可能是当前插件端的服务未运行，需要检查一下插件端是否正常运行。\n\n防火墙、安全组 更多说明\n\n# 授权信息错误\n\n添加时候可能出现：xxxx节点异常：授权信息错误\n\n\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 Agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 application.yml 自定义配置了账号密码不会出现此文件)\n\n如果您修改过 application.yml 中的授权信息需要重启插件端才能生效奥\n\n# 传输加密\n\n如果您想对服务端和插件端的通讯过程中的消息进行加密，您可以为机器配置编码方式为 AES。\n\n具体操作上文已经描述\n\n\n# 分配机器\n\n当您服务器安装了插件端并也将信息添加到服务端后，可以直接在资产里面看到对应节点的信息。\n\n\n\n\n\n这样操作后您就可以将对应资产信息分配到相应的工作空间的【逻辑节点】使用啦。\n\n我们回到【功能管理】里面去看看效果。\n\n\n\n\n# 查看机器关联工作空间\n\n机器资产管理中存在两种视图：【卡片】、【表格】\n\n温馨提醒\n\n卡片视图和表格视图的功能按钮有细微差异。比如：删除按钮在表格视图里面没有，需要切换到卡片视图\n\n\n\n在卡片视图中可以看到节点按钮，我们点击节点按钮\n\n\n\n\n\n即可查看到当前机器已经被分配到哪些工作空间中使用啦\n\n\n# 分发授权配置\n\n> 使用此功能前提需要至少有一个模板节点\n\n当您已经将机器分配到工作空间后，已经可以对机器和逻辑节点进行基础管理了。\n\n但是如果您想使用到项目功能，您还需要做一个事情就是授权（白名单）配置或者允许远程下载host。\n\n关于授权（白名单）的说明：授权（白名单）\n\n\n# 授权（白名单）配置\n\n主要用于限制创建项目存储的路径，避免其他用户将项目随意存放或者将系统目录暴露到项目管理中\n\n\n# 允许文件编辑后缀\n\n在项目文件管理中我们可以对文件进行编辑，此时我们就需要配置指定文件后缀是可以编辑的奥（关于文件管理请看项目管理）\n\n----------------------------------------\n\n使用方式：在机器管理列表中的表格视图选择（可以多选）您要同步的机器节点，弹窗后选择模板节点，然后您可以直接保存或者修改后保存\n\n\n\n\n\n\n# 分发同步配置\n\n> 使用此功能前提需要至少有一个模板节点\n\n机器节点中的插件端的配置我们可以通过资产管理来实现统一管理和分发\n\n使用方式：在机器管理列表中的表格视图选择（可以多选）您要同步的机器节点，弹窗后选择模板节点，然后您可以直接保存或者修改后保存\n\n\n\n\n\n> 通常情况下我们大多数机器节点中的插件的配置均是一致的（需要注意辨别是否为指定机器配置插件端授权账户和密码）\n\n\n# 机器详情\n\n在资产管理中我们可以对单个机器进行查看详情管理，可以操作的功能如下：\n\n * 基本信息（趋势统计、系统进程、文件系统、硬件硬盘、网卡信息）\n * 缓存监控\n * 系统配置\n * 授权批准\n * 在线升级\n * 系统日志\n\n\n# 基本信息\n\n基本信息监控是采用 OSHI 实现\n\n\n\n趋势监控您可用看到对应集群的 CPU、内存、硬盘是历史趋势\n\n\n\n\n\n\n\n\n\n\n\n\n# 缓存监控\n\n缓存信息\n\n\n\n定时任务\n\n\n\n孤独数据\n\n\n\n\n# 系统配置\n\n这里可以为单个机器进行配置文件修改，但是我们建议您使用模板节点来进行统一分发管理\n\n\n\n\n# 授权配置\n\n这里可以为单个机器进行授权配置修改，但是我们建议您使用模板节点来进行统一分发管理\n\n\n\n\n# 在线升级\n\n这里可以为单管机器进行升级，其实您可以通过服务端的在线升级来统一管理所有机器节点，详情查看升级相关文档\n\n\n\n\n# 系统日志\n\n在系统日志中您可以查看到插件端运行的日志方便您遇到问题时进行排查\n\n\n\n\n# 机器的孤独数据\n\n在一些极端操作项目和脚本可能产生孤独数据（无法和服务端工作空间和逻辑节点绑定）此时您需要手动来修正\n\n\n\n\n# 删除机器\n\n> 在列表视图中没有删除按钮奥，需要切换到卡片视图\n\n\n\n注意\n\n删除机器前您需要保证此机器未被分配到任何工作空间下（逻辑节点）\n\n如果已经分配到工作空间下，需要您先去逻辑节点中删除，如果忘记机器分配到哪些工作空间您可以通过卡片视图中的关联来查看\n\n请注意：删除逻辑节点需要检查关联数据如果对应节点还存在关联数据是无法直接删除，需要您一一解除关联后才能删除\n\n\n# 修改监控周期（采集周期）\n\n目前服务端对插件端的机器监控采用服务端主动轮询模式，服务端会定时向所有插件端机器查询机器的监控信息，默认是 30 秒。\n\n如果您修改修改监控间隔频率可以通过服务端中的配置文件中的jpom.node.heart-second 属性",normalizedContent:"# 前言\n\n在添加机器前您需要在您期望被管控的服务器中安装 jpom 插件端奥，安装方式请参考其他文档。\n\n安装后并且需要保证服务端能访问到插件端对应的端口奥（默认是 2123）\n\n\n# 添加机器\n\n当您的服务器已经安装 jpom 插件端后还需要添加到资产管理后才能正常使用插件端相关的功能。\n\n操作路径：【服务端管理】->【资产管理】->【机器管理】\n\n\n\n\n\n\n# 节点地址\n\n节点地址为您对应服务器: ip 地址:端口号\n\n注意如果您使用来内网穿透或者端口代理等工具来实现网络互通的情况下您需要填写工具暴露出来的 ip 地址和端口\n\nnginx、frp、ngrok、neutrino-proxy 等\n\n端口号默认为；2123，如果您修改过端口号请填写实际的端口号\n\n\n# 节点账号&密码\n\n节点的默认账号：jpomagent\n\n节点的默认密码：为随机生成\n\n启动时候会在控制台输出：automatically generate authorized account:jpomagent password:xxxxx authorization information storage location：/home/jpom/agent/data/agent_authorize.json\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。\n\n如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 application.yml 自定义配置了账号密码不会出现此文件)\n\n\n# 模板节点\n\n是将对应的机器标记为模板节点，其他机器可以使用模板节点来快速同步：\n\n * 授权（白名单）配置\n * 系统配置\n\n此功能用于您多台机器的配置一致时可以快速统一修改多台机器的配置\n\n\n# 编码方式\n\n插件端支持配置发送请求消息编码方式（编码、混淆明文、规避防火墙）\n\n支持的方式有：\n\n * base4\n * aes\n\n一般情况使用 base64 即可避免 http 消息传输中关键词检测。\n\n如果您对消息想加密可以选择 aes,aes 的 key 默认为：djnn3runzbzdv9nv。\n\n如果您想修改其 key 则修改/添加插件端和服务端的环境变量：jpom_encrypt_aes_key 注意插件端和服务端 key 需要保持一致否则无法正常连接插件端\n\n\n# 代理\n\n节点网络代理是配置服务端和插件端通讯时使用那种代理方式来访问（此功能使用场景不多）\n\n支持的代理协议：\n\n * http\n * socks\n * direct\n\n\n# 常见问题\n\n# 节点网络连接异常或超时\n\n添加时候可能出现：xxx节点网络连接异常或超时,请优先检查插件端运行状态再检查 ip 地址、端口号是否配置正确,防火墙规则,云服务器的安全组配置等网络相关问题排查定位。xxxx\n\n\n\n这里一般需要检查防火墙、安全组以及 ip 地址是否正常等相关问题。\n\n出现这种提升还有可能是当前插件端的服务未运行，需要检查一下插件端是否正常运行。\n\n防火墙、安全组 更多说明\n\n# 授权信息错误\n\n添加时候可能出现：xxxx节点异常：授权信息错误\n\n\n\n这里的节点账号密码和超级管理员账号密码是两个东西哟\n\n节点账号密码在安装启动成功后会输出到控制台，请根据输出到内容填写。如果自己修改了账号密码则填写修改后的。\n\n节点账号和密码安装 agent 的时候有输出，查看路径：/agent安装目录/data/agent_authorize.json (如果 application.yml 自定义配置了账号密码不会出现此文件)\n\n如果您修改过 application.yml 中的授权信息需要重启插件端才能生效奥\n\n# 传输加密\n\n如果您想对服务端和插件端的通讯过程中的消息进行加密，您可以为机器配置编码方式为 aes。\n\n具体操作上文已经描述\n\n\n# 分配机器\n\n当您服务器安装了插件端并也将信息添加到服务端后，可以直接在资产里面看到对应节点的信息。\n\n\n\n\n\n这样操作后您就可以将对应资产信息分配到相应的工作空间的【逻辑节点】使用啦。\n\n我们回到【功能管理】里面去看看效果。\n\n\n\n\n# 查看机器关联工作空间\n\n机器资产管理中存在两种视图：【卡片】、【表格】\n\n温馨提醒\n\n卡片视图和表格视图的功能按钮有细微差异。比如：删除按钮在表格视图里面没有，需要切换到卡片视图\n\n\n\n在卡片视图中可以看到节点按钮，我们点击节点按钮\n\n\n\n\n\n即可查看到当前机器已经被分配到哪些工作空间中使用啦\n\n\n# 分发授权配置\n\n> 使用此功能前提需要至少有一个模板节点\n\n当您已经将机器分配到工作空间后，已经可以对机器和逻辑节点进行基础管理了。\n\n但是如果您想使用到项目功能，您还需要做一个事情就是授权（白名单）配置或者允许远程下载host。\n\n关于授权（白名单）的说明：授权（白名单）\n\n\n# 授权（白名单）配置\n\n主要用于限制创建项目存储的路径，避免其他用户将项目随意存放或者将系统目录暴露到项目管理中\n\n\n# 允许文件编辑后缀\n\n在项目文件管理中我们可以对文件进行编辑，此时我们就需要配置指定文件后缀是可以编辑的奥（关于文件管理请看项目管理）\n\n----------------------------------------\n\n使用方式：在机器管理列表中的表格视图选择（可以多选）您要同步的机器节点，弹窗后选择模板节点，然后您可以直接保存或者修改后保存\n\n\n\n\n\n\n# 分发同步配置\n\n> 使用此功能前提需要至少有一个模板节点\n\n机器节点中的插件端的配置我们可以通过资产管理来实现统一管理和分发\n\n使用方式：在机器管理列表中的表格视图选择（可以多选）您要同步的机器节点，弹窗后选择模板节点，然后您可以直接保存或者修改后保存\n\n\n\n\n\n> 通常情况下我们大多数机器节点中的插件的配置均是一致的（需要注意辨别是否为指定机器配置插件端授权账户和密码）\n\n\n# 机器详情\n\n在资产管理中我们可以对单个机器进行查看详情管理，可以操作的功能如下：\n\n * 基本信息（趋势统计、系统进程、文件系统、硬件硬盘、网卡信息）\n * 缓存监控\n * 系统配置\n * 授权批准\n * 在线升级\n * 系统日志\n\n\n# 基本信息\n\n基本信息监控是采用 oshi 实现\n\n\n\n趋势监控您可用看到对应集群的 cpu、内存、硬盘是历史趋势\n\n\n\n\n\n\n\n\n\n\n\n\n# 缓存监控\n\n缓存信息\n\n\n\n定时任务\n\n\n\n孤独数据\n\n\n\n\n# 系统配置\n\n这里可以为单个机器进行配置文件修改，但是我们建议您使用模板节点来进行统一分发管理\n\n\n\n\n# 授权配置\n\n这里可以为单个机器进行授权配置修改，但是我们建议您使用模板节点来进行统一分发管理\n\n\n\n\n# 在线升级\n\n这里可以为单管机器进行升级，其实您可以通过服务端的在线升级来统一管理所有机器节点，详情查看升级相关文档\n\n\n\n\n# 系统日志\n\n在系统日志中您可以查看到插件端运行的日志方便您遇到问题时进行排查\n\n\n\n\n# 机器的孤独数据\n\n在一些极端操作项目和脚本可能产生孤独数据（无法和服务端工作空间和逻辑节点绑定）此时您需要手动来修正\n\n\n\n\n# 删除机器\n\n> 在列表视图中没有删除按钮奥，需要切换到卡片视图\n\n\n\n注意\n\n删除机器前您需要保证此机器未被分配到任何工作空间下（逻辑节点）\n\n如果已经分配到工作空间下，需要您先去逻辑节点中删除，如果忘记机器分配到哪些工作空间您可以通过卡片视图中的关联来查看\n\n请注意：删除逻辑节点需要检查关联数据如果对应节点还存在关联数据是无法直接删除，需要您一一解除关联后才能删除\n\n\n# 修改监控周期（采集周期）\n\n目前服务端对插件端的机器监控采用服务端主动轮询模式，服务端会定时向所有插件端机器查询机器的监控信息，默认是 30 秒。\n\n如果您修改修改监控间隔频率可以通过服务端中的配置文件中的jpom.node.heart-second 属性",charsets:{cjk:!0},lastUpdated:"2024/01/24, 02:08:23",lastUpdatedTimestamp:1706062103e3},{title:"SSH资产",frontmatter:{title:"SSH资产",date:"2023-12-24T19:12:25.000Z",permalink:"/pages/d2df49/",categories:["docs","文档","工作空间&集群","资产管理"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/20.SSH%E8%B5%84%E4%BA%A7.html",relativePath:"文档/035.资产管理/20.SSH资产.md",key:"v-c5a2c41a",path:"/pages/d2df49/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"新增 SSH",slug:"新增-ssh",normalizedTitle:"新增 ssh",charIndex:240},{level:3,title:"认证方式",slug:"认证方式",normalizedTitle:"认证方式",charIndex:255},{level:3,title:"密码",slug:"密码",normalizedTitle:"密码",charIndex:263},{level:3,title:"编码格式（编码方式）",slug:"编码格式-编码方式",normalizedTitle:"编码格式（编码方式）",charIndex:395},{level:3,title:"文件后缀",slug:"文件后缀",normalizedTitle:"文件后缀",charIndex:461},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:302},{level:2,title:"证书算法",slug:"证书算法",normalizedTitle:"证书算法",charIndex:806},{level:2,title:"资产中使用 SSH",slug:"资产中使用-ssh",normalizedTitle:"资产中使用 ssh",charIndex:1490},{level:3,title:"在线终端",slug:"在线终端",normalizedTitle:"在线终端",charIndex:66},{level:3,title:"文件管理",slug:"文件管理",normalizedTitle:"文件管理",charIndex:74},{level:2,title:"分配/配置 SSH",slug:"分配-配置-ssh",normalizedTitle:"分配/配置 ssh",charIndex:1633},{level:3,title:"查看 SSH 关联工作空间",slug:"查看-ssh-关联工作空间",normalizedTitle:"查看 ssh 关联工作空间",charIndex:1721},{level:2,title:"终端日志",slug:"终端日志",normalizedTitle:"终端日志",charIndex:1950},{level:2,title:"导入/导出",slug:"导入-导出",normalizedTitle:"导入/导出",charIndex:2016},{level:3,title:"下载导入模板",slug:"下载导入模板",normalizedTitle:"下载导入模板",charIndex:2143},{level:3,title:"导出示例",slug:"导出示例",normalizedTitle:"导出示例",charIndex:2156},{level:2,title:"SSH 监控",slug:"ssh-监控",normalizedTitle:"ssh 监控",charIndex:2167},{level:3,title:"自定义监控",slug:"自定义监控",normalizedTitle:"自定义监控",charIndex:2331},{level:3,title:"修改监控频率",slug:"修改监控频率",normalizedTitle:"修改监控频率",charIndex:2444},{level:3,title:"禁用监控",slug:"禁用监控",normalizedTitle:"禁用监控",charIndex:2535},{level:2,title:"删除 SSH",slug:"删除-ssh",normalizedTitle:"删除 ssh",charIndex:2738}],headersStr:"前言 新增 SSH 认证方式 密码 编码格式（编码方式） 文件后缀 注意 证书算法 资产中使用 SSH 在线终端 文件管理 分配/配置 SSH 查看 SSH 关联工作空间 终端日志 导入/导出 下载导入模板 导出示例 SSH 监控 自定义监控 修改监控频率 禁用监控 删除 SSH",content:'# 前言\n\n在 jpom 中您可以将您服务器的 SSH 信息配置到系统中来实现通过 Jpom 来管控\n\n主要支持的功能有：\n\n * 在线终端\n * 文件管理\n * 脚本管理\n * SSH 方式连接 Docker\n * 构建通过 SSH 发布\n\n> 在新版本中我们通过 mwiede 来对 SSH 连接，此工具库对高版本的 openssl 证书进行了支持\n\n> 如果您是 windows 中安装的 ssh 在使用过程中可能出现一些兼容性问题，这块我们暂时不考虑适配优化\n\n\n\n\n# 新增 SSH\n\n\n\n\n\n\n# 认证方式\n\n支持密码和证书认证\n\n证书您可以将证书内容或者证书文件到路径配置到对应输入框中\n\n注意如果是配置证书路径请配置绝对路径：file:/xxxxx/xxxx\n\n\n# 密码\n\n密码您可以直接输入，也可以引用全局环境变量，环境变量中配置到密码我们建议您配置为隐私变量\n\n\n# 编码格式（编码方式）\n\n通常 SSH 终端均是 UTF-8，如果您的终端编码格式不是 UTF-8 那么请您手动配置对应格式\n\n\n# 文件后缀\n\n这里配置的文件后缀是方便您在使用文件管理时候可以进行快速编辑的后缀授权\n\n如果您其实指定后缀使用指定编码格式那么您配置的格式可以为：bat@GBK\n\n配置示例仅供参考\n\ntxt@UTF-8\nhtml\nlog:UTF-8\nbat:GBK\nphp:GBK\n\n\n1\n2\n3\n4\n5\n\n\n如果有些文件是没有后缀的您可以直接配置全文件名，后缀配置 * ，但是配置 * 后所以文件编辑按钮均可用在实际中请勿编辑大文件避免卡顿和阻塞奥\n\n注意\n\n此处配置的后缀生效范围仅为资产管理中，如果需要为工作空间中的 SSH 进行配置需要您单独去配置\n\n\n# 注意\n\n如果您保存提示错误一般有两种情况：\n\n 1. 网络不通：IP 或者端口无法连接\n 2. 密码或者证书错误\n\n请您自行多多检查\n\n\n# 证书算法\n\n如果您使用证书提示证书相关算法问题，您可以尝试修改配置来看支持对应的证书算法\n\nJSchAlgoNegoFailException:Algorithm negotiation fail:algorithmName="server_host_key"\njschProposal="ssh-ed25519ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2256"\nserverProposal="ssh-rsa,ssh-dss\'\n\n\n1\n2\n3\n\n\n如图\n\n\n\n修改 Server.sh 脚本内容\n\n# 添加低版本ssh适配启动参数\nJAVA_OPTS="$JAVA_OPTS -Djsch.server_host_key=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\nJAVA_OPTS="$JAVA_OPTS -Djsch.client_pubkey=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\n\n\n1\n2\n3\n\n\n包括但不限于此当遇到问题您可以到 mwiede 库去检索是否有相同问题和解决方案\n\n\n# 资产中使用 SSH\n\n\n# 在线终端\n\n当您配置好后即可在线使用终端啦\n\n\n\n\n\n\n# 文件管理\n\n在资产管理中我们默认开放了 sftp 中的根路径来进行管理（在工作空间下需要您进行授权配置指定目录奥）\n\n\n\n\n\n文件管理中您可以下载，上传、编辑、查看权限、删除等操作\n\n\n\n\n\n\n# 分配/配置 SSH\n\n当您在资产管理中新增 SSH 后，如果您期望在工作空间中使用或者让非管理员能使用，您还需要将对应的 SSH 分配到指定的工作空间中才能使用奥\n\n\n\n\n# 查看 SSH 关联工作空间\n\n\n\n\n\n将 SSH 分配到工作空间后您还需要进行授权配置，对应工作空间的 SSH 才能完美使用奥\n\n\n\n\n\n * 这里配置的文件目录是授权指定目录可用在对应工作空间中进行文件管理\n * 文件后缀也是同理在对应工作空间中的文件管理可以编辑指定后缀文件\n * 禁止命令是指在对应的工作空间中，SSH 终端中不能执行特定命令（如 rm wget）\n   * 注意此限制不一定 100% 准确有如果您发现未限制到可以反馈给我们\n\n\n# 终端日志\n\n您可以在系统中查看到终端执行命令的记录，方便您回溯问题\n\n\n\n\n\n您还可以查看指定 SSH 的命令执行记录\n\n\n\n\n# 导入/导出\n\n在一些情况下您可能需要批量添加 SSH 我们提供了导入和导出功能方便您批量添加或者对 SSH 数据进行备份迁移\n\n> 导入/导出均使用 CSV 格式，我们建议您使用 UTF-8 的编码格式来进行导入（新版本使用了探测文件编码格式）\n\n\n# 下载导入模板\n\n\n\n\n# 导出示例\n\n\n\n\n# SSH 监控\n\n系统中默认实现了对 SSH 进行监控，判断机器是否可以连接上，服务器CPU、内存、硬盘等基础信息\n\n\n\n\n\n> 注意这里监控是定时对 SSH 执行脚本来实现，脚本也并非兼容所有系统当您发现监控信息不对，后缀您明明已经安装了 Docker 但是 Jpom 中无法显示对应状态，那么您就需要考虑修改监控脚本\n\n\n# 自定义监控\n\n路径：【系统管理】-> 【配置管理】->【系统配置目录】-> [ssh/monitor-script.sh]\n\n\n\n> 如果您对您的机器配置好自定义监控我们更期望您将对应的脚本贡献出来为开源做出一点贡献\n\n\n# 修改监控频率\n\n默认的监控频率是 1 分钟一次，如果您想修改监控频率则可以通过服务端配置文件来实现\n\n配置属性：jpom.assets.ssh.monitor-cron\n\n\n\n\n# 禁用监控\n\n如果实际使用中由于部分安全策略或者条件限制不希望系统定期监控那么您可以配置指定分组的 SSH 不被监控\n\n修改服务端配置文件中的：jpom.assets.ssh.disable-monitor-group-name （数组）\n\n\n\n配置后您可以在 SSH 编辑中来修改对应的分组\n\n\n\n注意\n\n从低版本开始使用的情况您的配置文件中可能没有此属性，您手动添加对应的属性即可\n\n禁用后\n\n\n\n\n# 删除 SSH\n\n\n\n注意\n\n删除 SSH 前您需要保证此 SSH 未被分配到任何工作空间下\n\n如果已经分配到工作空间下，需要您先去工作空间中删除，如果忘记分配到哪些工作空间您可以通过关联来查看\n\n请注意：删除 SSH 需要检查关联数据如果对应 SSH 还存在关联数据是无法直接删除，需要您一一解除关联后才能删除',normalizedContent:'# 前言\n\n在 jpom 中您可以将您服务器的 ssh 信息配置到系统中来实现通过 jpom 来管控\n\n主要支持的功能有：\n\n * 在线终端\n * 文件管理\n * 脚本管理\n * ssh 方式连接 docker\n * 构建通过 ssh 发布\n\n> 在新版本中我们通过 mwiede 来对 ssh 连接，此工具库对高版本的 openssl 证书进行了支持\n\n> 如果您是 windows 中安装的 ssh 在使用过程中可能出现一些兼容性问题，这块我们暂时不考虑适配优化\n\n\n\n\n# 新增 ssh\n\n\n\n\n\n\n# 认证方式\n\n支持密码和证书认证\n\n证书您可以将证书内容或者证书文件到路径配置到对应输入框中\n\n注意如果是配置证书路径请配置绝对路径：file:/xxxxx/xxxx\n\n\n# 密码\n\n密码您可以直接输入，也可以引用全局环境变量，环境变量中配置到密码我们建议您配置为隐私变量\n\n\n# 编码格式（编码方式）\n\n通常 ssh 终端均是 utf-8，如果您的终端编码格式不是 utf-8 那么请您手动配置对应格式\n\n\n# 文件后缀\n\n这里配置的文件后缀是方便您在使用文件管理时候可以进行快速编辑的后缀授权\n\n如果您其实指定后缀使用指定编码格式那么您配置的格式可以为：bat@gbk\n\n配置示例仅供参考\n\ntxt@utf-8\nhtml\nlog:utf-8\nbat:gbk\nphp:gbk\n\n\n1\n2\n3\n4\n5\n\n\n如果有些文件是没有后缀的您可以直接配置全文件名，后缀配置 * ，但是配置 * 后所以文件编辑按钮均可用在实际中请勿编辑大文件避免卡顿和阻塞奥\n\n注意\n\n此处配置的后缀生效范围仅为资产管理中，如果需要为工作空间中的 ssh 进行配置需要您单独去配置\n\n\n# 注意\n\n如果您保存提示错误一般有两种情况：\n\n 1. 网络不通：ip 或者端口无法连接\n 2. 密码或者证书错误\n\n请您自行多多检查\n\n\n# 证书算法\n\n如果您使用证书提示证书相关算法问题，您可以尝试修改配置来看支持对应的证书算法\n\njschalgonegofailexception:algorithm negotiation fail:algorithmname="server_host_key"\njschproposal="ssh-ed25519ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2256"\nserverproposal="ssh-rsa,ssh-dss\'\n\n\n1\n2\n3\n\n\n如图\n\n\n\n修改 server.sh 脚本内容\n\n# 添加低版本ssh适配启动参数\njava_opts="$java_opts -djsch.server_host_key=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\njava_opts="$java_opts -djsch.client_pubkey=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\n\n\n1\n2\n3\n\n\n包括但不限于此当遇到问题您可以到 mwiede 库去检索是否有相同问题和解决方案\n\n\n# 资产中使用 ssh\n\n\n# 在线终端\n\n当您配置好后即可在线使用终端啦\n\n\n\n\n\n\n# 文件管理\n\n在资产管理中我们默认开放了 sftp 中的根路径来进行管理（在工作空间下需要您进行授权配置指定目录奥）\n\n\n\n\n\n文件管理中您可以下载，上传、编辑、查看权限、删除等操作\n\n\n\n\n\n\n# 分配/配置 ssh\n\n当您在资产管理中新增 ssh 后，如果您期望在工作空间中使用或者让非管理员能使用，您还需要将对应的 ssh 分配到指定的工作空间中才能使用奥\n\n\n\n\n# 查看 ssh 关联工作空间\n\n\n\n\n\n将 ssh 分配到工作空间后您还需要进行授权配置，对应工作空间的 ssh 才能完美使用奥\n\n\n\n\n\n * 这里配置的文件目录是授权指定目录可用在对应工作空间中进行文件管理\n * 文件后缀也是同理在对应工作空间中的文件管理可以编辑指定后缀文件\n * 禁止命令是指在对应的工作空间中，ssh 终端中不能执行特定命令（如 rm wget）\n   * 注意此限制不一定 100% 准确有如果您发现未限制到可以反馈给我们\n\n\n# 终端日志\n\n您可以在系统中查看到终端执行命令的记录，方便您回溯问题\n\n\n\n\n\n您还可以查看指定 ssh 的命令执行记录\n\n\n\n\n# 导入/导出\n\n在一些情况下您可能需要批量添加 ssh 我们提供了导入和导出功能方便您批量添加或者对 ssh 数据进行备份迁移\n\n> 导入/导出均使用 csv 格式，我们建议您使用 utf-8 的编码格式来进行导入（新版本使用了探测文件编码格式）\n\n\n# 下载导入模板\n\n\n\n\n# 导出示例\n\n\n\n\n# ssh 监控\n\n系统中默认实现了对 ssh 进行监控，判断机器是否可以连接上，服务器cpu、内存、硬盘等基础信息\n\n\n\n\n\n> 注意这里监控是定时对 ssh 执行脚本来实现，脚本也并非兼容所有系统当您发现监控信息不对，后缀您明明已经安装了 docker 但是 jpom 中无法显示对应状态，那么您就需要考虑修改监控脚本\n\n\n# 自定义监控\n\n路径：【系统管理】-> 【配置管理】->【系统配置目录】-> [ssh/monitor-script.sh]\n\n\n\n> 如果您对您的机器配置好自定义监控我们更期望您将对应的脚本贡献出来为开源做出一点贡献\n\n\n# 修改监控频率\n\n默认的监控频率是 1 分钟一次，如果您想修改监控频率则可以通过服务端配置文件来实现\n\n配置属性：jpom.assets.ssh.monitor-cron\n\n\n\n\n# 禁用监控\n\n如果实际使用中由于部分安全策略或者条件限制不希望系统定期监控那么您可以配置指定分组的 ssh 不被监控\n\n修改服务端配置文件中的：jpom.assets.ssh.disable-monitor-group-name （数组）\n\n\n\n配置后您可以在 ssh 编辑中来修改对应的分组\n\n\n\n注意\n\n从低版本开始使用的情况您的配置文件中可能没有此属性，您手动添加对应的属性即可\n\n禁用后\n\n\n\n\n# 删除 ssh\n\n\n\n注意\n\n删除 ssh 前您需要保证此 ssh 未被分配到任何工作空间下\n\n如果已经分配到工作空间下，需要您先去工作空间中删除，如果忘记分配到哪些工作空间您可以通过关联来查看\n\n请注意：删除 ssh 需要检查关联数据如果对应 ssh 还存在关联数据是无法直接删除，需要您一一解除关联后才能删除',charsets:{cjk:!0},lastUpdated:"2024/05/09, 02:37:43",lastUpdatedTimestamp:1715222263e3},{title:"新增&删除",frontmatter:{title:"新增&删除",date:"2023-12-24T19:12:37.000Z",permalink:"/pages/4d0c1b/",categories:["docs","文档","Docker","资产管理"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/30.Docker%E8%B5%84%E4%BA%A7/00.%E6%96%B0%E5%A2%9EDocker.html",relativePath:"文档/035.资产管理/30.Docker资产/00.新增Docker.md",key:"v-f0625140",path:"/pages/4d0c1b/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"本地自动探测",slug:"本地自动探测",normalizedTitle:"本地自动探测",charIndex:142},{level:2,title:"TCP 端口（2375）新增",slug:"tcp-端口-2375-新增",normalizedTitle:"tcp 端口（2375）新增",charIndex:1055},{level:3,title:"生成 TLS 证书（建议）",slug:"生成-tls-证书-建议",normalizedTitle:"生成 tls 证书（建议）",charIndex:1282},{level:3,title:"查看 docker.service 路径",slug:"查看-docker-service-路径",normalizedTitle:"查看 docker.service 路径",charIndex:4191},{level:3,title:"配置 tcp + tls（推荐）",slug:"配置-tcp-tls-推荐",normalizedTitle:"配置 tcp + tls（推荐）",charIndex:4243},{level:3,title:"配置 tcp（不开启 tls 示例）",slug:"配置-tcp-不开启-tls-示例",normalizedTitle:"配置 tcp（不开启 tls 示例）",charIndex:4792},{level:3,title:"重启 docker （必须）",slug:"重启-docker-必须",normalizedTitle:"重启 docker （必须）",charIndex:4954},{level:3,title:"下载并导入 TLS 证书到系统",slug:"下载并导入-tls-证书到系统",normalizedTitle:"下载并导入 tls 证书到系统",charIndex:5049},{level:3,title:"资产管理中新增",slug:"资产管理中新增",normalizedTitle:"资产管理中新增",charIndex:5284},{level:2,title:"SSH 协议新增",slug:"ssh-协议新增",normalizedTitle:"ssh 协议新增",charIndex:5434},{level:3,title:"前提条件",slug:"前提条件",normalizedTitle:"前提条件",charIndex:5571},{level:3,title:"资产管理中新增",slug:"资产管理中新增-2",normalizedTitle:"资产管理中新增",charIndex:5284},{level:2,title:"镜像仓库",slug:"镜像仓库",normalizedTitle:"镜像仓库",charIndex:6028},{level:2,title:"删除 Docker",slug:"删除-docker",normalizedTitle:"删除 docker",charIndex:6107}],headersStr:"前言 本地自动探测 TCP 端口（2375）新增 生成 TLS 证书（建议） 查看 docker.service 路径 配置 tcp + tls（推荐） 配置 tcp（不开启 tls 示例） 重启 docker （必须） 下载并导入 TLS 证书到系统 资产管理中新增 SSH 协议新增 前提条件 资产管理中新增 镜像仓库 删除 Docker",content:'# 前言\n\n在 Jpom 中您可以将 docker 信息添加到系统中来统一管理实行类型于 docker ui 功能（功能不一定全面奥，如果发现您需要的功能没有可以反馈给我们）\n\n系统中我们提供了多种方式来供您新增 docker 到系统中，请根据您实际使用情况来选择对应的方式\n\n\n# 本地自动探测\n\n本方式是直接将服务端所在的服务器中的 docker 快捷添加进来，但是此方式仅能添加一个 docker 如果跨机器还需要使用其他方式来添加\n\n本地探测又分为：\n\n * 原生安装服务端（服务器中直接安装）\n * 容器安装服务端\n\n如果您是原生安装方式（服务器中直接安装）安装服务端可以直接使用自动探测功能快速检测并新增\n\n\n\n点击按钮后会自动提示是否新增成功，如果您服务器中存在 docker 绝大多数情况会成功如果不成功那么您需要排查您 docker 的 docker.sock 文件是否存在或者当前用户是否有对应权限\n\n如果您是容器方式安装的服务端那么您需要检查您在创建服务端容器时候是否挂载 docker.sock 文件，如果未挂载您需要重新创建容器并挂载 docker.sock 文件\n\n绝大多数情况下您 docker.sock 文件均在默认路径 /var/run/docker.sock\n\n推荐命令：（您需要根据您实际情况进行数据目录和日志目录微调）\n\n需要挂载：\n\n * /usr/bin/docker\n * /var/run/docker.sock\n\ndocker run -d -p 2122:2122 \\\n  --name jpom-server \\\n  --restart=always \\\n  -v /etc/localtime:/etc/localtime:ro \\\n  -v /usr/bin/docker:/usr/bin/docker \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n  -v /home/jpom-server/data:/usr/local/jpom-server/data \\\n  -v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n  jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n\n\n# TCP 端口（2375）新增\n\n如果您要新增其他服务器中的 docker 您可以选择 TCP(http) 端口，但是请注意 2375 端口的安全性问题。\n\n> docker 2375 端口默认没有开启任何认证这样使得 docker 极不安全 如果端口暴露到公网很容易出现挖矿情况\n\n我们建议您使用 TLS 证书来对 docker 2375 端口来进行通讯，如果您对服务器间已经做了安全限制能保证 2375 端口的安全情况下可以忽略 TLS 证书\n\n\n# 生成 TLS 证书（建议）\n\n这里提供一个快速生成证书到脚本示例：（使用中请一定修改脚本内的 IP 或者可能无法使用的情况奥，证书的允许的 IP 需要和 docker host 一致）\n\n如果脚本有更新我们会维护在仓库：docker-tls.sh 脚本中\n\n本脚本可能有一定兼容性问题，如果您在您的服务器中无法执行成功您可以自行搜索学习其他配置方法\n\n#!/bin/bash\n#\n# -------------------------------------------------------------\n# 自动创建 Docker TLS 证书\n# wget https://gitee.com/dromara/Jpom/raw/master/script/docker-tls.sh\n# curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n# systemctl daemon-reload && systemctl restart docker\n# -------------------------------------------------------------\n# 以下是配置信息\n# --[BEGIN]------------------------------\nNOW_PATH=$(\n\tcd "$(dirname "$0")" || exit\n\tpwd\n)"/"\necho "当前目录：${NOW_PATH} 证书文件将保存在此文件夹下"\nread -p "请输入证书使用的 IP 地址或者 HOST: " HOST\n#\necho "您输入的是：${HOST} 证书只能在这个 IP 或者 HOST 下使用,证书密码和输入的一致"\n# --[INIT PARAMETER]------------------------------\nPASSWORD="$HOST"\nCOUNTRY="CN"\nSTATE="$HOST"\nCITY="$HOST"\nORGANIZATION="$HOST"\nORGANIZATIONAL_UNIT="Dev"\nCOMMON_NAME="$HOST"\nEMAIL="$HOST@docker-tls.com"\n# --[END]--\n# Generate CA key\nopenssl genrsa -aes256 -passout "pass:$PASSWORD" -out "ca-key.pem" 4096\n# Generate CA\nopenssl req -new -x509 -days 365 -key "ca-key.pem" -sha256 -out "ca.pem" -passin "pass:$PASSWORD" -subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORGANIZATION/OU=$ORGANIZATIONAL_UNIT/CN=$COMMON_NAME/emailAddress=$EMAIL"\n# Generate Server key\nopenssl genrsa -out "server-key.pem" 4096\n# Generate Server Certs.\nopenssl req -subj "/CN=$COMMON_NAME" -sha256 -new -key "server-key.pem" -out server.csr\nrm -f extfile.cnf\necho "subjectAltName = DNS.1:$HOST,IP.1:127.0.0.1,IP.2:$HOST" >>extfile.cnf\necho "extendedKeyUsage = serverAuth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "server-cert.pem" -extfile extfile.cnf\n# Generate Client Certs.\nrm -f extfile.cnf\nopenssl genrsa -out "key.pem" 4096\nopenssl req -subj \'/CN=client\' -new -key "key.pem" -out client.csr\necho "extendedKeyUsage = clientAuth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "cert.pem" -extfile extfile.cnf\nrm -f client.csr server.csr ca.srl extfile.cnf\n\n# check\nif [ -f "${NOW_PATH}key.pem" -a -f "${NOW_PATH}ca.pem" -a -f "${NOW_PATH}ca-key.pem" -a -f "${NOW_PATH}server-cert.pem" -a -f "${NOW_PATH}server-key.pem" ]; then\n\techo "证书生成完成"\n\techo "客户端使用文件：key.pem ca.pem cert.pem"\n\techo "Docker 端使用文件：ca.pem server-cert.pem server-key.pem"\n\techo "Docker 推荐配置内容：-H tcp://0.0.0.0:2375 --tlsverify --tlscacert=${NOW_PATH}ca.pem --tlscert=${NOW_PATH}server-cert.pem --tlskey=${NOW_PATH}server-key.pem"\nelse\n\techo "证书生成不完整,请检查配置和根据错误日志排查"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n同时将生成的证书下载到本地 保存使用（客户端需要：key.pem ca.pem cert.pem）\n\n证书示例：\n\n\n\n\n# 查看 docker.service 路径\n\nsystemctl status docker\n\n\n\n\n# 配置 tcp + tls（推荐）\n\nvim /lib/systemd/system/docker.service\n\n\n\nExecStart 需要添加内容\n\n--tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375\n\n# 配置示例\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n注意\n\n请将证书路径（/home/docker/tls-ca/）更换为实际存放证书路径\n\n\n# 配置 tcp（不开启 tls 示例）\n\n# 配置示例\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n部分情况需要删除：-H fd://\n\n\n\n\n# 重启 docker （必须）\n\n> 配置完成后需要重启 才能生效\n\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n\n\n\n# 下载并导入 TLS 证书到系统\n\n上述操作完成后如果您使用了证书您还需要将证书下载到本地并导入到服务端中\n\n需要下载到文件有：key.pem ca.pem cert.pem\n\n\n\n将上述三个文件打包成压缩包（注意三个文件需要在压缩包根路径）\n\n在服务端证书管理中导入对应的证书\n\n\n\n注意导入时候需要选择：X.509 类型\n\n\n\n导入后我们可以在系统中看到对应证书的信息（注意检查证书中的 IP 地址是否为您填写的和后续链接 docker 的 ip 一致）\n\n\n\n\n# 资产管理中新增\n\n路径：【系统管理】->【资产管理】->【Docker管理】->[新增]\n\n\n\n\n\n\n\n\n\n\n\n注意此时可以还没有显示 docker 信息需要等待下一个监控周期执行才能获取到 docker 版本信息\n\n\n\n> 经过上述操作后您即可在 Jpom 系统中来管理 docker 啦\n\n\n# SSH 协议新增\n\nSSH 方式连接 docker 是通过终端实现，每次操作 docker 相关 api 需要登录一次终端 docker 版本需要大于 18.09 才能使用 SSH 方式连接。\n\n> 使用：docker system dial-stdio 方式实现\n\n\n# 前提条件\n\n您已经将安装 docker 的服务器添加到 SSH 资产中啦，添加 ssh 资产操作文档请自行查阅本文不再概述。\n\n将 ssh 添加到资产中后您还需要保证系统能通过 ssh 方式监控到 docker 信息\n\n如果不能监控到 docker 信息是不可以使用 ssh 方式新增 docker 奥。\n\n\n\n如果您服务器中已经安装 docker 但是系统监控不到，您需要自行修改 ssh 监控文件\n\n路径：【系统管理】-> 【配置管理】->【系统配置目录】-> [ssh/monitor-script.sh]\n\n\n\n> 如果您对您的机器配置好自定义监控我们更期望您将对应的脚本贡献出来为开源做出一点贡献\n\n\n# 资产管理中新增\n\n如果对应的 ssh 不可选表示系统没有监控到 ssh 中的 docker 信息奥\n\n\n\n\n\n> 注意此时可以还没有显示 docker 信息需要等待下一个监控周期执行才能获取到 docker 版本信息\n\n> 经过上述操作后您即可在 Jpom 系统中来管理 docker 啦\n\n\n# 镜像仓库\n\n您可以在编辑 docker 中的其他配置选项中为当前 docker 配置仓库\n\n\n\n> 注意：仓库生效范围仅为在 Jpom 服务端系统中\n\n\n# 删除 Docker\n\n\n\n注意\n\n删除 Docker 前您需要保证此 Docker 和集群 未被分配到任何工作空间下\n\n如果已经分配到工作空间下，需要您先去工作空间中删除，如果忘记分配到哪些工作空间您可以通过关联来查看\n\n请注意：删除 Docker 需要检查关联数据如果对应 Docker 或者集群还存在关联数据是无法直接删除，需要您一一解除关联后才能删除\n\n\n\n删除只会检查本地系统的数据关联,不会删除 docker 中的任何数据',normalizedContent:'# 前言\n\n在 jpom 中您可以将 docker 信息添加到系统中来统一管理实行类型于 docker ui 功能（功能不一定全面奥，如果发现您需要的功能没有可以反馈给我们）\n\n系统中我们提供了多种方式来供您新增 docker 到系统中，请根据您实际使用情况来选择对应的方式\n\n\n# 本地自动探测\n\n本方式是直接将服务端所在的服务器中的 docker 快捷添加进来，但是此方式仅能添加一个 docker 如果跨机器还需要使用其他方式来添加\n\n本地探测又分为：\n\n * 原生安装服务端（服务器中直接安装）\n * 容器安装服务端\n\n如果您是原生安装方式（服务器中直接安装）安装服务端可以直接使用自动探测功能快速检测并新增\n\n\n\n点击按钮后会自动提示是否新增成功，如果您服务器中存在 docker 绝大多数情况会成功如果不成功那么您需要排查您 docker 的 docker.sock 文件是否存在或者当前用户是否有对应权限\n\n如果您是容器方式安装的服务端那么您需要检查您在创建服务端容器时候是否挂载 docker.sock 文件，如果未挂载您需要重新创建容器并挂载 docker.sock 文件\n\n绝大多数情况下您 docker.sock 文件均在默认路径 /var/run/docker.sock\n\n推荐命令：（您需要根据您实际情况进行数据目录和日志目录微调）\n\n需要挂载：\n\n * /usr/bin/docker\n * /var/run/docker.sock\n\ndocker run -d -p 2122:2122 \\\n  --name jpom-server \\\n  --restart=always \\\n  -v /etc/localtime:/etc/localtime:ro \\\n  -v /usr/bin/docker:/usr/bin/docker \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /home/jpom-server/logs:/usr/local/jpom-server/logs \\\n  -v /home/jpom-server/data:/usr/local/jpom-server/data \\\n  -v /home/jpom-server/conf:/usr/local/jpom-server/conf \\\n  jpomdocker/jpom\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n\n\n# tcp 端口（2375）新增\n\n如果您要新增其他服务器中的 docker 您可以选择 tcp(http) 端口，但是请注意 2375 端口的安全性问题。\n\n> docker 2375 端口默认没有开启任何认证这样使得 docker 极不安全 如果端口暴露到公网很容易出现挖矿情况\n\n我们建议您使用 tls 证书来对 docker 2375 端口来进行通讯，如果您对服务器间已经做了安全限制能保证 2375 端口的安全情况下可以忽略 tls 证书\n\n\n# 生成 tls 证书（建议）\n\n这里提供一个快速生成证书到脚本示例：（使用中请一定修改脚本内的 ip 或者可能无法使用的情况奥，证书的允许的 ip 需要和 docker host 一致）\n\n如果脚本有更新我们会维护在仓库：docker-tls.sh 脚本中\n\n本脚本可能有一定兼容性问题，如果您在您的服务器中无法执行成功您可以自行搜索学习其他配置方法\n\n#!/bin/bash\n#\n# -------------------------------------------------------------\n# 自动创建 docker tls 证书\n# wget https://gitee.com/dromara/jpom/raw/master/script/docker-tls.sh\n# curl -fssl https://get.docker.com | bash -s docker --mirror aliyun\n# systemctl daemon-reload && systemctl restart docker\n# -------------------------------------------------------------\n# 以下是配置信息\n# --[begin]------------------------------\nnow_path=$(\n\tcd "$(dirname "$0")" || exit\n\tpwd\n)"/"\necho "当前目录：${now_path} 证书文件将保存在此文件夹下"\nread -p "请输入证书使用的 ip 地址或者 host: " host\n#\necho "您输入的是：${host} 证书只能在这个 ip 或者 host 下使用,证书密码和输入的一致"\n# --[init parameter]------------------------------\npassword="$host"\ncountry="cn"\nstate="$host"\ncity="$host"\norganization="$host"\norganizational_unit="dev"\ncommon_name="$host"\nemail="$host@docker-tls.com"\n# --[end]--\n# generate ca key\nopenssl genrsa -aes256 -passout "pass:$password" -out "ca-key.pem" 4096\n# generate ca\nopenssl req -new -x509 -days 365 -key "ca-key.pem" -sha256 -out "ca.pem" -passin "pass:$password" -subj "/c=$country/st=$state/l=$city/o=$organization/ou=$organizational_unit/cn=$common_name/emailaddress=$email"\n# generate server key\nopenssl genrsa -out "server-key.pem" 4096\n# generate server certs.\nopenssl req -subj "/cn=$common_name" -sha256 -new -key "server-key.pem" -out server.csr\nrm -f extfile.cnf\necho "subjectaltname = dns.1:$host,ip.1:127.0.0.1,ip.2:$host" >>extfile.cnf\necho "extendedkeyusage = serverauth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$password" -ca "ca.pem" -cakey "ca-key.pem" -cacreateserial -out "server-cert.pem" -extfile extfile.cnf\n# generate client certs.\nrm -f extfile.cnf\nopenssl genrsa -out "key.pem" 4096\nopenssl req -subj \'/cn=client\' -new -key "key.pem" -out client.csr\necho "extendedkeyusage = clientauth" >>extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$password" -ca "ca.pem" -cakey "ca-key.pem" -cacreateserial -out "cert.pem" -extfile extfile.cnf\nrm -f client.csr server.csr ca.srl extfile.cnf\n\n# check\nif [ -f "${now_path}key.pem" -a -f "${now_path}ca.pem" -a -f "${now_path}ca-key.pem" -a -f "${now_path}server-cert.pem" -a -f "${now_path}server-key.pem" ]; then\n\techo "证书生成完成"\n\techo "客户端使用文件：key.pem ca.pem cert.pem"\n\techo "docker 端使用文件：ca.pem server-cert.pem server-key.pem"\n\techo "docker 推荐配置内容：-h tcp://0.0.0.0:2375 --tlsverify --tlscacert=${now_path}ca.pem --tlscert=${now_path}server-cert.pem --tlskey=${now_path}server-key.pem"\nelse\n\techo "证书生成不完整,请检查配置和根据错误日志排查"\nfi\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n\n\n同时将生成的证书下载到本地 保存使用（客户端需要：key.pem ca.pem cert.pem）\n\n证书示例：\n\n\n\n\n# 查看 docker.service 路径\n\nsystemctl status docker\n\n\n\n\n# 配置 tcp + tls（推荐）\n\nvim /lib/systemd/system/docker.service\n\n\n\nexecstart 需要添加内容\n\n--tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -h tcp://0.0.0.0:2375\n\n# 配置示例\nexecstart=/usr/bin/dockerd -h fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -h tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n注意\n\n请将证书路径（/home/docker/tls-ca/）更换为实际存放证书路径\n\n\n# 配置 tcp（不开启 tls 示例）\n\n# 配置示例\nexecstart=/usr/bin/dockerd -h fd:// --containerd=/run/containerd/containerd.sock -h tcp://0.0.0.0:2375\n\n\n1\n2\n\n\n部分情况需要删除：-h fd://\n\n\n\n\n# 重启 docker （必须）\n\n> 配置完成后需要重启 才能生效\n\nsystemctl daemon-reload && systemctl restart docker\n\n\n1\n\n\n\n# 下载并导入 tls 证书到系统\n\n上述操作完成后如果您使用了证书您还需要将证书下载到本地并导入到服务端中\n\n需要下载到文件有：key.pem ca.pem cert.pem\n\n\n\n将上述三个文件打包成压缩包（注意三个文件需要在压缩包根路径）\n\n在服务端证书管理中导入对应的证书\n\n\n\n注意导入时候需要选择：x.509 类型\n\n\n\n导入后我们可以在系统中看到对应证书的信息（注意检查证书中的 ip 地址是否为您填写的和后续链接 docker 的 ip 一致）\n\n\n\n\n# 资产管理中新增\n\n路径：【系统管理】->【资产管理】->【docker管理】->[新增]\n\n\n\n\n\n\n\n\n\n\n\n注意此时可以还没有显示 docker 信息需要等待下一个监控周期执行才能获取到 docker 版本信息\n\n\n\n> 经过上述操作后您即可在 jpom 系统中来管理 docker 啦\n\n\n# ssh 协议新增\n\nssh 方式连接 docker 是通过终端实现，每次操作 docker 相关 api 需要登录一次终端 docker 版本需要大于 18.09 才能使用 ssh 方式连接。\n\n> 使用：docker system dial-stdio 方式实现\n\n\n# 前提条件\n\n您已经将安装 docker 的服务器添加到 ssh 资产中啦，添加 ssh 资产操作文档请自行查阅本文不再概述。\n\n将 ssh 添加到资产中后您还需要保证系统能通过 ssh 方式监控到 docker 信息\n\n如果不能监控到 docker 信息是不可以使用 ssh 方式新增 docker 奥。\n\n\n\n如果您服务器中已经安装 docker 但是系统监控不到，您需要自行修改 ssh 监控文件\n\n路径：【系统管理】-> 【配置管理】->【系统配置目录】-> [ssh/monitor-script.sh]\n\n\n\n> 如果您对您的机器配置好自定义监控我们更期望您将对应的脚本贡献出来为开源做出一点贡献\n\n\n# 资产管理中新增\n\n如果对应的 ssh 不可选表示系统没有监控到 ssh 中的 docker 信息奥\n\n\n\n\n\n> 注意此时可以还没有显示 docker 信息需要等待下一个监控周期执行才能获取到 docker 版本信息\n\n> 经过上述操作后您即可在 jpom 系统中来管理 docker 啦\n\n\n# 镜像仓库\n\n您可以在编辑 docker 中的其他配置选项中为当前 docker 配置仓库\n\n\n\n> 注意：仓库生效范围仅为在 jpom 服务端系统中\n\n\n# 删除 docker\n\n\n\n注意\n\n删除 docker 前您需要保证此 docker 和集群 未被分配到任何工作空间下\n\n如果已经分配到工作空间下，需要您先去工作空间中删除，如果忘记分配到哪些工作空间您可以通过关联来查看\n\n请注意：删除 docker 需要检查关联数据如果对应 docker 或者集群还存在关联数据是无法直接删除，需要您一一解除关联后才能删除\n\n\n\n删除只会检查本地系统的数据关联,不会删除 docker 中的任何数据',charsets:{cjk:!0},lastUpdated:"2024/12/03, 08:54:50",lastUpdatedTimestamp:173321609e4},{title:"Docker控制台",frontmatter:{title:"Docker控制台",date:"2024-01-14T14:17:42.000Z",permalink:"/pages/81c6ca/",categories:["docs","文档","资产管理","Docker资产"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/30.Docker%E8%B5%84%E4%BA%A7/05.Docker%E6%8E%A7%E5%88%B6%E5%8F%B0.html",relativePath:"文档/035.资产管理/30.Docker资产/05.Docker控制台.md",key:"v-ea656672",path:"/pages/81c6ca/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"入口",slug:"入口",normalizedTitle:"入口",charIndex:223},{level:2,title:"独立容器",slug:"独立容器",normalizedTitle:"独立容器",charIndex:275},{level:3,title:"列表查看",slug:"列表查看",normalizedTitle:"列表查看",charIndex:415},{level:3,title:"容器操作",slug:"容器操作",normalizedTitle:"容器操作",charIndex:476},{level:3,title:"容器终端",slug:"容器终端",normalizedTitle:"容器终端",charIndex:406},{level:3,title:"容器日志",slug:"容器日志",normalizedTitle:"容器日志",charIndex:382},{level:3,title:"编辑容器",slug:"编辑容器",normalizedTitle:"编辑容器",charIndex:390},{level:3,title:"重建容器",slug:"重建容器",normalizedTitle:"重建容器",charIndex:398},{level:2,title:"docker-compose",slug:"docker-compose",normalizedTitle:"docker-compose",charIndex:83},{level:2,title:"镜像",slug:"镜像",normalizedTitle:"镜像",charIndex:66},{level:3,title:"拉取镜像",slug:"拉取镜像",normalizedTitle:"拉取镜像",charIndex:975},{level:3,title:"导入镜像",slug:"导入镜像",normalizedTitle:"导入镜像",charIndex:983},{level:3,title:"导出镜像",slug:"导出镜像",normalizedTitle:"导出镜像",charIndex:991},{level:3,title:"更新镜像",slug:"更新镜像",normalizedTitle:"更新镜像",charIndex:999},{level:3,title:"创建容器",slug:"创建容器",normalizedTitle:"创建容器",charIndex:1015},{level:2,title:"查看卷",slug:"查看卷",normalizedTitle:"查看卷",charIndex:1340},{level:2,title:"查看网络",slug:"查看网络",normalizedTitle:"查看网络",charIndex:1387},{level:2,title:"信息",slug:"信息",normalizedTitle:"信息",charIndex:1445},{level:2,title:"修剪",slug:"修剪",normalizedTitle:"修剪",charIndex:127}],headersStr:"前言 入口 独立容器 列表查看 容器操作 容器终端 容器日志 编辑容器 重建容器 docker-compose 镜像 拉取镜像 导入镜像 导出镜像 更新镜像 创建容器 查看卷 查看网络 信息 修剪",content:"# 前言\n\njpom 中的 docker 控制台主要是方便您在日常使用中可以通过页面来管理您的 docker，主要功能有：\n\n * 镜像管理\n * 容器管理、\n * docker-compose容器查看\n * 卷查看\n * 网络查看\n * docker 修剪\n\n> 注意：系统中 docker 控制台没有权限限制奥，只要您分配到工作空间后对应工作空间人员均可以管理（管理员可以在资产管理中管理 docker 控制台功能和工作空间下一致）\n\n\n# 入口\n\n此入口仅说明资产管理中的入口（工作空间下的 docker 控制台入口不同于次）\n\n\n\n\n\n\n# 独立容器\n\n系统中的独立容器等同于 docker 容器（区分的目的是为来和 docker-compose 容器区分）\n\n目前可以对容器管理的功能有如下：\n\n * 启动容器\n * 停止容器\n * 删除容器\n * 查看容器日志\n * 编辑容器\n * 重建容器\n * 容器终端\n\n\n# 列表查看\n\n可以在列表中查看到容器状态、开放端口、容器标签、容器挂载\n\n> 注意：相关的列悬停可以查看详情奥\n\n\n\n\n# 容器操作\n\n操作栏我们可以看到的功能有：启动、停止、重启、终端\n\n\n\n\n# 容器终端\n\n> 注意：只要容器在运行中才可以进入终端奥\n\n\n\n\n\n\n# 容器日志\n\n点击状态列或者操作栏更多中日志按钮\n\n\n\n您可以在日志弹窗中下载当前查看的容器日志到本地进行查阅，同时可以限制默认查看行数\n\n\n\n\n# 编辑容器\n\n提醒\n\n编辑容器是高阶操作，使用 jpom 编辑时一些参数注意对应的单位\n\n\n\n\n\n\n# 重建容器\n\n重建容器是指基于当前容器配置重新创建一个新容器\n\n提醒\n\nJpom 中并未兼容到容器所有配置参数重要容器请谨慎使用此功能，避免配置参数丢失。\n\n如果您有用到的参数系统未支持，请反馈给我们我们会确认是否可以添加对应参数\n\n\n\n\n\n\n\n\n# docker-compose\n\n> 目前系统主要是将通过 docker-compose 创建的容器进行合并显示，还不支持在系统中创建 docker-compose 容器\n\n\n\n可以通过折叠查看当前 docker-compose 容器组的状态，组下面的单个容器是功能和【独立容器】功能均一致\n\n\n# 镜像\n\n\n\n在系统中您可以对镜像的操作有：\n\n * 拉取镜像\n * 导入镜像\n * 导出镜像\n * 更新镜像\n * 删除镜像\n * 创建容器\n\n\n# 拉取镜像\n\n\n\n在输入框中填写要拉起的进行名或者地址，然后点击后面下载按钮\n\n\n\n默认走 docker 官方仓库拉起，您修改将地址修改为国内镜像仓库地址\n\n\n\n\n# 导入镜像\n\n您可以将您通过 docker 命令导入的镜像包导入到当前的 docker 中\n\n命令示例：docker save xxxxx > xxx.tar\n\n或者您可以将通过 jpom 导入的镜像包导入到其他集群的 docker 中\n\n\n\n\n# 导出镜像\n\n您可以通过系统将您需要备份、迁移的镜像导出成压缩包来进行保存或者离线迁移\n\n\n\n\n# 更新镜像\n\n是更新指定 tag 的镜像到最新版本\n\n\n\n\n\n\n# 创建容器\n\n可以指定镜像创建一个容器\n\n\n\n\n\n\n# 查看卷\n\n可以在系统中查看当前 docker 有哪些卷，悬停名称可以看到卷的标签\n\n\n\n\n# 查看网络\n\n在系统中查看当前 docker 有哪些可用网络配置\n\n\n\n> 注意：暂不支持创建网络、修改网络\n\n\n# 信息\n\n查看当前 docker 的基础信息\n\n\n\n\n# 修剪\n\n可以在系统中对 docker 的一些空间进行修剪\n\n\n\n\n\n支持修剪：\n\n * 镜像\n * 容器\n * 网络\n * 卷\n * 构建缓存",normalizedContent:"# 前言\n\njpom 中的 docker 控制台主要是方便您在日常使用中可以通过页面来管理您的 docker，主要功能有：\n\n * 镜像管理\n * 容器管理、\n * docker-compose容器查看\n * 卷查看\n * 网络查看\n * docker 修剪\n\n> 注意：系统中 docker 控制台没有权限限制奥，只要您分配到工作空间后对应工作空间人员均可以管理（管理员可以在资产管理中管理 docker 控制台功能和工作空间下一致）\n\n\n# 入口\n\n此入口仅说明资产管理中的入口（工作空间下的 docker 控制台入口不同于次）\n\n\n\n\n\n\n# 独立容器\n\n系统中的独立容器等同于 docker 容器（区分的目的是为来和 docker-compose 容器区分）\n\n目前可以对容器管理的功能有如下：\n\n * 启动容器\n * 停止容器\n * 删除容器\n * 查看容器日志\n * 编辑容器\n * 重建容器\n * 容器终端\n\n\n# 列表查看\n\n可以在列表中查看到容器状态、开放端口、容器标签、容器挂载\n\n> 注意：相关的列悬停可以查看详情奥\n\n\n\n\n# 容器操作\n\n操作栏我们可以看到的功能有：启动、停止、重启、终端\n\n\n\n\n# 容器终端\n\n> 注意：只要容器在运行中才可以进入终端奥\n\n\n\n\n\n\n# 容器日志\n\n点击状态列或者操作栏更多中日志按钮\n\n\n\n您可以在日志弹窗中下载当前查看的容器日志到本地进行查阅，同时可以限制默认查看行数\n\n\n\n\n# 编辑容器\n\n提醒\n\n编辑容器是高阶操作，使用 jpom 编辑时一些参数注意对应的单位\n\n\n\n\n\n\n# 重建容器\n\n重建容器是指基于当前容器配置重新创建一个新容器\n\n提醒\n\njpom 中并未兼容到容器所有配置参数重要容器请谨慎使用此功能，避免配置参数丢失。\n\n如果您有用到的参数系统未支持，请反馈给我们我们会确认是否可以添加对应参数\n\n\n\n\n\n\n\n\n# docker-compose\n\n> 目前系统主要是将通过 docker-compose 创建的容器进行合并显示，还不支持在系统中创建 docker-compose 容器\n\n\n\n可以通过折叠查看当前 docker-compose 容器组的状态，组下面的单个容器是功能和【独立容器】功能均一致\n\n\n# 镜像\n\n\n\n在系统中您可以对镜像的操作有：\n\n * 拉取镜像\n * 导入镜像\n * 导出镜像\n * 更新镜像\n * 删除镜像\n * 创建容器\n\n\n# 拉取镜像\n\n\n\n在输入框中填写要拉起的进行名或者地址，然后点击后面下载按钮\n\n\n\n默认走 docker 官方仓库拉起，您修改将地址修改为国内镜像仓库地址\n\n\n\n\n# 导入镜像\n\n您可以将您通过 docker 命令导入的镜像包导入到当前的 docker 中\n\n命令示例：docker save xxxxx > xxx.tar\n\n或者您可以将通过 jpom 导入的镜像包导入到其他集群的 docker 中\n\n\n\n\n# 导出镜像\n\n您可以通过系统将您需要备份、迁移的镜像导出成压缩包来进行保存或者离线迁移\n\n\n\n\n# 更新镜像\n\n是更新指定 tag 的镜像到最新版本\n\n\n\n\n\n\n# 创建容器\n\n可以指定镜像创建一个容器\n\n\n\n\n\n\n# 查看卷\n\n可以在系统中查看当前 docker 有哪些卷，悬停名称可以看到卷的标签\n\n\n\n\n# 查看网络\n\n在系统中查看当前 docker 有哪些可用网络配置\n\n\n\n> 注意：暂不支持创建网络、修改网络\n\n\n# 信息\n\n查看当前 docker 的基础信息\n\n\n\n\n# 修剪\n\n可以在系统中对 docker 的一些空间进行修剪\n\n\n\n\n\n支持修剪：\n\n * 镜像\n * 容器\n * 网络\n * 卷\n * 构建缓存",charsets:{cjk:!0},lastUpdated:"2024/01/14, 09:27:37",lastUpdatedTimestamp:1705224457e3},{title:"Swarm管理",frontmatter:{title:"Swarm管理",date:"2024-01-14T15:50:21.000Z",permalink:"/pages/6af9e1/",categories:["docs","文档","资产管理","Docker资产"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/30.Docker%E8%B5%84%E4%BA%A7/10.Swarm%E7%AE%A1%E7%90%86.html",relativePath:"文档/035.资产管理/30.Docker资产/10.Swarm管理.md",key:"v-2934d34f",path:"/pages/6af9e1/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"自动绑定",slug:"自动绑定",normalizedTitle:"自动绑定",charIndex:76},{level:2,title:"全新创建",slug:"全新创建",normalizedTitle:"全新创建",charIndex:144},{level:2,title:"加入集群",slug:"加入集群",normalizedTitle:"加入集群",charIndex:59},{level:2,title:"退出集群",slug:"退出集群",normalizedTitle:"退出集群",charIndex:67}],headersStr:"前言 自动绑定 全新创建 加入集群 退出集群",content:"# 前言\n\n您可以通过本系统来简单管理 Docker Swarm 集群\n\n目前支持的功能有：\n\n * 创建集群\n * 加入集群\n * 退出集群\n\n\n# 自动绑定\n\n如果您的 docker 已经通过命令行创建过集群啦，系统在监控到集群信息后会自动绑定上集群信息（无需再次创建）\n\n\n\n\n# 全新创建\n\n如果集群还没有集群，您可以选择全新创建一个集群\n\n\n\n\n\n\n\n\n# 加入集群\n\n如果您已经有一个 docker 集群管理节点啦，您想为集群新加一个节点那么您需要使用加入集群的功能\n\n\n\n\n\n选择系统中已经存在的集群和选择节点的角色（一般推荐选择工作节点即可）\n\n\n\n集群 IP 这么默认使用您配置在系统中的 IP 地址如果您集群间通信需要使用到其他 IP 地址请自行更换\n\n\n\n\n\n加入成功后您可以在列表中查看相关的机器集群 ID 为一致，说明他们所在同一个集群中\n\n\n# 退出集群\n\n操作指南\n\n我们建议您通过集群控制台的节点管理去剔除节点，而不是直接退出集群\n\n如果您想将指定节点在集群中下架那么您需要操作节点退出集群\n\n\n\n\n\n风险提示\n\n请不要优先退出管理节点，退出集群前请您自行确认集群中的数据是否还需要，如果退出集群产生的数据错误或者丢失需要自行修复。\n\n",normalizedContent:"# 前言\n\n您可以通过本系统来简单管理 docker swarm 集群\n\n目前支持的功能有：\n\n * 创建集群\n * 加入集群\n * 退出集群\n\n\n# 自动绑定\n\n如果您的 docker 已经通过命令行创建过集群啦，系统在监控到集群信息后会自动绑定上集群信息（无需再次创建）\n\n\n\n\n# 全新创建\n\n如果集群还没有集群，您可以选择全新创建一个集群\n\n\n\n\n\n\n\n\n# 加入集群\n\n如果您已经有一个 docker 集群管理节点啦，您想为集群新加一个节点那么您需要使用加入集群的功能\n\n\n\n\n\n选择系统中已经存在的集群和选择节点的角色（一般推荐选择工作节点即可）\n\n\n\n集群 ip 这么默认使用您配置在系统中的 ip 地址如果您集群间通信需要使用到其他 ip 地址请自行更换\n\n\n\n\n\n加入成功后您可以在列表中查看相关的机器集群 id 为一致，说明他们所在同一个集群中\n\n\n# 退出集群\n\n操作指南\n\n我们建议您通过集群控制台的节点管理去剔除节点，而不是直接退出集群\n\n如果您想将指定节点在集群中下架那么您需要操作节点退出集群\n\n\n\n\n\n风险提示\n\n请不要优先退出管理节点，退出集群前请您自行确认集群中的数据是否还需要，如果退出集群产生的数据错误或者丢失需要自行修复。\n\n",charsets:{cjk:!0},lastUpdated:"2024/01/14, 09:27:37",lastUpdatedTimestamp:1705224457e3},{title:"Swarm控制台",frontmatter:{title:"Swarm控制台",date:"2024-01-14T16:17:15.000Z",permalink:"/pages/ccc0ae/",categories:["docs","文档","资产管理","Docker资产"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/30.Docker%E8%B5%84%E4%BA%A7/14.Swarm%E6%8E%A7%E5%88%B6%E5%8F%B0.html",relativePath:"文档/035.资产管理/30.Docker资产/14.Swarm控制台.md",key:"v-5cf4a45e",path:"/pages/ccc0ae/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"入口",slug:"入口",normalizedTitle:"入口",charIndex:177},{level:2,title:"集群节点",slug:"集群节点",normalizedTitle:"集群节点",charIndex:60},{level:3,title:"修改",slug:"修改",normalizedTitle:"修改",charIndex:296},{level:3,title:"剔除",slug:"剔除",normalizedTitle:"剔除",charIndex:299},{level:3,title:"手动剔除",slug:"手动剔除",normalizedTitle:"手动剔除",charIndex:462},{level:4,title:"需要退出的节点执行",slug:"需要退出的节点执行",normalizedTitle:"需要退出的节点执行",charIndex:527},{level:4,title:"管理节点",slug:"管理节点",normalizedTitle:"管理节点",charIndex:638},{level:2,title:"集群服务",slug:"集群服务",normalizedTitle:"集群服务",charIndex:33},{level:3,title:"配置参数",slug:"配置参数",normalizedTitle:"配置参数",charIndex:782},{level:3,title:"编辑互斥",slug:"编辑互斥",normalizedTitle:"编辑互斥",charIndex:992},{level:3,title:"查看服务任务",slug:"查看服务任务",normalizedTitle:"查看服务任务",charIndex:1171},{level:2,title:"集群任务",slug:"集群任务",normalizedTitle:"集群任务",charIndex:80},{level:3,title:"任务日志",slug:"任务日志",normalizedTitle:"任务日志",charIndex:1245}],headersStr:"前言 入口 集群节点 修改 剔除 手动剔除 需要退出的节点执行 管理节点 集群服务 配置参数 编辑互斥 查看服务任务 集群任务 任务日志",content:'# 前言\n\n您可以通过本系统来简单管理 Docker Swarm 集群服务和查看任务\n\n目前支持的功能有：\n\n * 管理集群节点\n * 管理集群服务\n * 查看集群任务\n\n> 注意：系统中 Swarm 集群 控制台没有子级权限限制奥，只要您分配到工作空间后对应工作空间人员均可以管理（管理员可以在资产管理中管理 集群控制台功能和工作空间下一致）\n\n\n# 入口\n\n此入口仅说明资产管理中的入口（工作空间下的集群控制台入口不同于次）\n\n\n\n当 docker 节点存在集群并且可以正常连接上 docker 那么您可以进入集群控制台\n\n\n\n\n# 集群节点\n\n可以在系统中对所有节点进行管理，查看状态、修改、剔除\n\n\n\n\n# 修改\n\n\n\n\n# 剔除\n\n> 注意：主节点不能直接剔除奥\n\n如果您想讲指定节点下架您可以使用剔除功能讲节点踢出当前集群\n\n\n\n提示\n\n如果您剔除时候提醒【当前集群对应的节点，不在本系统中无法退出集群】那么表示您操作过退出集群而产生了冗余数据，此时您不能通过本系统来剔除节点，需要通过终端命令行来执行\n\n\n# 手动剔除\n\n> 一般正常操作无需关心此方式\n\n如果您误操作后在本系统无法操作集群节点后，您可以通过手动执行命令的方式来修改\n\n# 需要退出的节点执行\n\n在需要退出的节点终端执行\n\ndocker swarm leave\n\n\n1\n\n\n您可以强制退出（谨慎添加 --force 参数）\n\ndocker swarm leave --force\n\n\n1\n\n\n# 管理节点\n\n在需要删除的节点执行后您可能还需要去管理节点执行删除节点的操作\n\n\n\ndocker node ls\n\n\n1\n\n\ndocker node rm jovfbmtiwfe1yj40m55hsnhqd\n\n\n1\n\n\n\n# 集群服务\n\n您可以在系统中创建一个服务来管理奥\n\n\n\n\n\n\n# 配置参数\n\n服务有太多配置参数，目前支持：\n\n * 端口\n * 挂载\n * 运行参数\n * 运行命令\n * 环境变量\n * 升级策略\n * 回滚策略\n * 资源限制\n\n如果没有您需要的可以反馈给我们，我们会看是否可以添加\n\n提示\n\n参数太多，这里就不一一说明每个参数的配置作用和示例\n\n网络限制\n\n在配置端口时候请您一定提前了解 Swarm 集群网络的解析模式：VIP、DNSRR 的区别还有主机模式和路由模式\n\n\n# 编辑互斥\n\nupdate out of sequence\n\n{"message":"rpc error: code = Unknown desc = update out of sequence"}\n\n\n1\n\n\n注意\n\n集群服务有编辑互斥限制，如果您在其他地方修改或者系统自动修改，您未获取到最新的信息（version）直接修改可能提示错误奥。\n\n\n\n\n# 查看服务任务\n\n您可以通过服务之间查看指定服务的所有任务记录\n\n\n\n\n\n\n# 集群任务\n\n您可以通过集群查看到当前集群中的所有任务记录\n\n\n\n\n# 任务日志\n\n查看指定任务的运行日志\n\n\n\n本文中的服务是一个错误示范，所以日志可能是异常（请以您实际的为准）\n\n',normalizedContent:'# 前言\n\n您可以通过本系统来简单管理 docker swarm 集群服务和查看任务\n\n目前支持的功能有：\n\n * 管理集群节点\n * 管理集群服务\n * 查看集群任务\n\n> 注意：系统中 swarm 集群 控制台没有子级权限限制奥，只要您分配到工作空间后对应工作空间人员均可以管理（管理员可以在资产管理中管理 集群控制台功能和工作空间下一致）\n\n\n# 入口\n\n此入口仅说明资产管理中的入口（工作空间下的集群控制台入口不同于次）\n\n\n\n当 docker 节点存在集群并且可以正常连接上 docker 那么您可以进入集群控制台\n\n\n\n\n# 集群节点\n\n可以在系统中对所有节点进行管理，查看状态、修改、剔除\n\n\n\n\n# 修改\n\n\n\n\n# 剔除\n\n> 注意：主节点不能直接剔除奥\n\n如果您想讲指定节点下架您可以使用剔除功能讲节点踢出当前集群\n\n\n\n提示\n\n如果您剔除时候提醒【当前集群对应的节点，不在本系统中无法退出集群】那么表示您操作过退出集群而产生了冗余数据，此时您不能通过本系统来剔除节点，需要通过终端命令行来执行\n\n\n# 手动剔除\n\n> 一般正常操作无需关心此方式\n\n如果您误操作后在本系统无法操作集群节点后，您可以通过手动执行命令的方式来修改\n\n# 需要退出的节点执行\n\n在需要退出的节点终端执行\n\ndocker swarm leave\n\n\n1\n\n\n您可以强制退出（谨慎添加 --force 参数）\n\ndocker swarm leave --force\n\n\n1\n\n\n# 管理节点\n\n在需要删除的节点执行后您可能还需要去管理节点执行删除节点的操作\n\n\n\ndocker node ls\n\n\n1\n\n\ndocker node rm jovfbmtiwfe1yj40m55hsnhqd\n\n\n1\n\n\n\n# 集群服务\n\n您可以在系统中创建一个服务来管理奥\n\n\n\n\n\n\n# 配置参数\n\n服务有太多配置参数，目前支持：\n\n * 端口\n * 挂载\n * 运行参数\n * 运行命令\n * 环境变量\n * 升级策略\n * 回滚策略\n * 资源限制\n\n如果没有您需要的可以反馈给我们，我们会看是否可以添加\n\n提示\n\n参数太多，这里就不一一说明每个参数的配置作用和示例\n\n网络限制\n\n在配置端口时候请您一定提前了解 swarm 集群网络的解析模式：vip、dnsrr 的区别还有主机模式和路由模式\n\n\n# 编辑互斥\n\nupdate out of sequence\n\n{"message":"rpc error: code = unknown desc = update out of sequence"}\n\n\n1\n\n\n注意\n\n集群服务有编辑互斥限制，如果您在其他地方修改或者系统自动修改，您未获取到最新的信息（version）直接修改可能提示错误奥。\n\n\n\n\n# 查看服务任务\n\n您可以通过服务之间查看指定服务的所有任务记录\n\n\n\n\n\n\n# 集群任务\n\n您可以通过集群查看到当前集群中的所有任务记录\n\n\n\n\n# 任务日志\n\n查看指定任务的运行日志\n\n\n\n本文中的服务是一个错误示范，所以日志可能是异常（请以您实际的为准）\n\n',charsets:{cjk:!0},lastUpdated:"2024/01/14, 09:27:37",lastUpdatedTimestamp:1705224457e3},{title:"分配Docker",frontmatter:{title:"分配Docker",date:"2024-01-14T17:09:28.000Z",permalink:"/pages/bb772f/",categories:["docs","文档","资产管理","Docker资产"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/035.%E8%B5%84%E4%BA%A7%E7%AE%A1%E7%90%86/30.Docker%E8%B5%84%E4%BA%A7/20.%E5%88%86%E9%85%8DDocker.html",relativePath:"文档/035.资产管理/30.Docker资产/20.分配Docker.md",key:"v-951bd066",path:"/pages/bb772f/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"分配",slug:"分配",normalizedTitle:"分配",charIndex:6},{level:2,title:"关联",slug:"关联",normalizedTitle:"关联",charIndex:228},{level:2,title:"删除",slug:"删除",normalizedTitle:"删除",charIndex:273}],headersStr:"前言 分配 关联 删除",content:"# 前言\n\n分配 Docker 是指讲资产管理中的 Docker 后缀集群分配到指定工作空间下供其他用户管理使用\n\n权限注意\n\n系统中 Docker 控制台、Swarm 集群控制台没有子级权限限制奥，只要您分配到工作空间后对应工作空间人员均可以管理（管理员可以在资产管理中管理 集群控制台功能和工作空间下一致）\n\n\n# 分配\n\n\n\n选择需要分配的资源类型：Docker 控制台还是集群（如果对应 Docker 没有集群对应选项按钮是不可以奥）\n\n\n\n\n# 关联\n\n您可以通过关联来查看当前 Docker 资源被分配到哪些工作空间\n\n\n\n\n\n\n# 删除\n\n如果已经分配到工作空间，您需要删除则需要到对应工作空间中去删除奥",normalizedContent:"# 前言\n\n分配 docker 是指讲资产管理中的 docker 后缀集群分配到指定工作空间下供其他用户管理使用\n\n权限注意\n\n系统中 docker 控制台、swarm 集群控制台没有子级权限限制奥，只要您分配到工作空间后对应工作空间人员均可以管理（管理员可以在资产管理中管理 集群控制台功能和工作空间下一致）\n\n\n# 分配\n\n\n\n选择需要分配的资源类型：docker 控制台还是集群（如果对应 docker 没有集群对应选项按钮是不可以奥）\n\n\n\n\n# 关联\n\n您可以通过关联来查看当前 docker 资源被分配到哪些工作空间\n\n\n\n\n\n\n# 删除\n\n如果已经分配到工作空间，您需要删除则需要到对应工作空间中去删除奥",charsets:{cjk:!0},lastUpdated:"2024/01/14, 09:27:37",lastUpdatedTimestamp:1705224457e3},{title:"逻辑节点",frontmatter:{title:"逻辑节点",date:"2024-01-14T18:32:42.000Z",permalink:"/pages/285484/",categories:["docs","文档","节点&项目"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/040.%E8%8A%82%E7%82%B9&%E9%A1%B9%E7%9B%AE/010.%E9%80%BB%E8%BE%91%E8%8A%82%E7%82%B9.html",relativePath:"文档/040.节点&项目/010.逻辑节点.md",key:"v-3594dcbe",path:"/pages/285484/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"新增逻辑节点",slug:"新增逻辑节点",normalizedTitle:"新增逻辑节点",charIndex:151},{level:3,title:"资产机器分配",slug:"资产机器分配",normalizedTitle:"资产机器分配",charIndex:191},{level:3,title:"快速安装",slug:"快速安装",normalizedTitle:"快速安装",charIndex:203},{level:4,title:"安装失败",slug:"安装失败",normalizedTitle:"安装失败",charIndex:866},{level:4,title:"向服务端推送注册失败",slug:"向服务端推送注册失败",normalizedTitle:"向服务端推送注册失败",charIndex:914},{level:4,title:"不能和节点正常通讯",slug:"不能和节点正常通讯",normalizedTitle:"不能和节点正常通讯",charIndex:1015},{level:4,title:"多IP可以使用",slug:"多ip可以使用",normalizedTitle:"多ip可以使用",charIndex:1123},{level:4,title:"节点已经存在",slug:"节点已经存在",normalizedTitle:"节点已经存在",charIndex:1251},{level:4,title:"绑定成功",slug:"绑定成功",normalizedTitle:"绑定成功",charIndex:1335},{level:3,title:"工作空间同步",slug:"工作空间同步",normalizedTitle:"工作空间同步",charIndex:216},{level:4,title:"管理员分配",slug:"管理员分配",normalizedTitle:"管理员分配",charIndex:1587},{level:4,title:"普通用户同步",slug:"普通用户同步",normalizedTitle:"普通用户同步",charIndex:1619},{level:2,title:"节点管理",slug:"节点管理",normalizedTitle:"节点管理",charIndex:1673},{level:3,title:"项目管理",slug:"项目管理",normalizedTitle:"项目管理",charIndex:1736},{level:3,title:"脚本管理",slug:"脚本管理",normalizedTitle:"脚本管理",charIndex:1770},{level:3,title:"脚本日志",slug:"脚本日志",normalizedTitle:"脚本日志",charIndex:1725},{level:2,title:"节点监控",slug:"节点监控",normalizedTitle:"节点监控",charIndex:1858},{level:2,title:"节点终端",slug:"节点终端",normalizedTitle:"节点终端",charIndex:1931},{level:2,title:"节点缓存",slug:"节点缓存",normalizedTitle:"节点缓存",charIndex:2128},{level:2,title:"删除节点",slug:"删除节点",normalizedTitle:"删除节点",charIndex:2540},{level:2,title:"解绑节点",slug:"解绑节点",normalizedTitle:"解绑节点",charIndex:2738},{level:2,title:"节点排序",slug:"节点排序",normalizedTitle:"节点排序",charIndex:2927},{level:3,title:"置顶、下移、下移",slug:"置顶、下移、下移",normalizedTitle:"置顶、下移、下移",charIndex:3003}],headersStr:"前言 新增逻辑节点 资产机器分配 快速安装 安装失败 向服务端推送注册失败 不能和节点正常通讯 多IP可以使用 节点已经存在 绑定成功 工作空间同步 管理员分配 普通用户同步 节点管理 项目管理 脚本管理 脚本日志 节点监控 节点终端 节点缓存 删除节点 解绑节点 节点排序 置顶、下移、下移",content:"# 前言\n\n逻辑节点是指物理集群安装 Jpom 插件端后并且添加到资产管理中再分配到工作空间的机器节点，\n\n像节点项目、节点脚本均是绑定在逻辑节点上的\n\n提醒\n\n逻辑节点是在工作空间之下奥，得先有工作空间才能分配资产机器为逻辑节点，那么删除资产机器时需要保证资产机器下未分配逻辑节点才能删除奥\n\n\n# 新增逻辑节点\n\n新增逻辑节点有如下几种方式，请自行根据实际情况选择操作\n\n * 资产机器分配新增\n * 快速安装自动新增\n * 跨工作空间同步新增\n\n\n# 资产机器分配\n\n资产机器分配时指您先在服务器中安装插件端后并且添加到【系统管理】中的【资产机器】中，然后手动分配到当前工作空间\n\n资产机器操作说明请查看资产机器说明文档\n\n\n\n\n\n这样操作后您就可以将对应资产信息分配到相应的工作空间的【逻辑节点】使用啦。\n\n我们回到【功能管理】里面去看看效果。\n\n\n\n\n# 快速安装\n\n快速安装是指您机器中还没有安装插件端，使用安装脚本来自动安装插件端并添加【资产机器】再自动分配【逻辑节点】\n\n前提\n\n仅 Linux 系统支持快速安装、您节点服务器中有公网能下载文件\n\n----------------------------------------\n\n节点服务器能访问服务端的端口（服务端端口默认：2122）\n\n----------------------------------------\n\n安装操作过程中不建议您关闭弹窗，因为安装机器结果会轮询并展示到弹窗【执行结果】中\n\n----------------------------------------\n\n如果失败请不要灰心，您可以使用资产管理中新增机器节点来逐步添加\n\n使用此功能时请仔细阅读【温馨提示】/【注意事项】\n\n\n\n按照提示分为快速安装和快速绑定：快速安装时指您还未安装插件端、快速绑定是指您以及安装插件端但是未添加到服务端中的资产机器中（请根据实际情况选择）\n\n执行命令后您可能有如下几种结果：（由于情况太多，本文就不一一复现并截图请根据下述类型对照排查）\n\n# 安装失败\n\n请根据安装脚本输出的日志自行排查\n\n脚本安装可以参考：一键安装（linux）\n\n# 向服务端推送注册失败\n\n如果您在执行安装脚本中查看到控制台有类似日志输出：此情况一般是网络不可达或者程序错误，如果是网络问题您需要自行检查插件端服务器是否可以访问服务端服务器（防火墙、安全组等）\n\n# 不能和节点正常通讯\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功向服务端推送了自身信息但是服务端去反向访问插件端时网络不可达，此时您需要排查插件端所在服务器的：防火墙、安全组等了网络限制\n\n# 多IP可以使用\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功向服务端推送他自身可用的 IP 地址时，服务端发现有多个可用 IP 时考虑到不同网络 IP 可能有不同特点，需要您手动确认使用哪个 IP 让服务器和插件端进行通信\n\n\n\n# 节点已经存在\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功并向服务端推送成功，但是发现已经存在对应的机器信息并且节点也存在啦，无需重复操作\n\n# 绑定成功\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功也向服务端推送成功并且一切顺利执行，机器节点、逻辑节点均正常新增\n\n看到此结果您可以先关闭弹窗查看对应节点信息是否正确，确认后我们建议您再次打卡弹窗，将对应安装和绑定记录缓存手动清除掉（当然您可以不操作，因为重启服务端后自动失效）\n\n\n\n\n# 工作空间同步\n\n工作空间同步指您已经存在一个逻辑节点啦，但是想快速将此节点同步或者分配到其他工作空间\n\n您有两种方式：\n\n * 管理员资产机器中分配\n * 普通用户工作空间同步\n\n# 管理员分配\n\n需要到【资产管理】->【机器管理】手动分配\n\n# 普通用户同步\n\n普通用户可以将他有权限的工作空间下的逻辑节点同步到他有权限的其他工作空间下\n\n\n\n\n\n\n# 节点管理\n\n节点管理是可以统一查看当前逻辑节点（逻辑节点+工作空间）下面关联的关联的项目数据、脚本数据、脚本日志\n\n\n\n\n# 项目管理\n\n> 项目管理的具体说明请查阅项目管理的文档\n\n\n\n\n# 脚本管理\n\n> 脚本管理（节点脚本）的具体说明请查阅节点脚本管理的文档\n\n\n\n\n# 脚本日志\n\n> 脚本日志（节点脚本日志）的具体说明请查阅节点脚本日志管理的文档\n\n\n\n\n# 节点监控\n\n普通用户可以通过逻辑节点查看到逻辑节点对应的机器的资源信息（数据来源资产监控）\n\n查看方式：逻辑节点中切换为卡片视图\n\n\n\n\n\n\n# 节点终端\n\n节点终端是指您可以将当前工作空间下的一个 SSH 与逻辑节点做一个关系绑定，用户快速登录到机器的 SSH 终端\n\n\n\n\n\n提醒\n\n此绑定仅是一个逻辑绑定，最终绑定的 SSH 机器是否和逻辑节点的机器是否一致是不会判断的\n\n----------------------------------------\n\n删除工作空间下的 SSH 时候需要先与逻辑节点解绑才能删除\n\n\n\n\n\n\n# 节点缓存\n\n节点缓存是由于节点的项目数据、脚本数据、脚本日志数据最终均存储在机器节点中，服务端会主动同步过来。有时候可能缓存不一致的情况此时就需要手动同步一次来达到缓存一致的问题\n\n查看节点项目缓存\n\n\n\n通过悬停可以看到机器节点和逻辑节点的项目具体数量\n\n关系说明\n\n关联绑定为：项目=逻辑节点ID+工作空间ID\n\n----------------------------------------\n\n逻辑节点=机器ID+工作空间ID\n\n----------------------------------------\n\n一些极端情况关联绑定错误会形成孤独数据：孤独数据管理请查阅【机器节点】->【缓存监控】->【孤独数据】中引导操作\n\n----------------------------------------\n\n如果发现项目找不到了（未主动删除的情况、新增提示路径占用合作存在请参考孤独数据解决方案）\n\n\n\n\n# 删除节点\n\n如果您想删除节点那么您需要检查逻辑节点是否还存在关联数据：\n\n * 节点项目\n * 节点脚本\n * 节点分发\n * 日志阅读\n * 项目监控\n * 在线构建（分发方式为节点项目）\n\n操作提示\n\n删除逻辑节点会通知机器节点，如果您机器节点已经无法访问（资源过期、关闭机器）请使用解绑\n\n温馨提醒\n\n删除时候如果提示还存在 xxxx 关联数据请耐心检查核对，不要操之过急\n\n\n\n\n\n\n# 解绑节点\n\n如果您想删除逻辑节点但是机器节点已经未使用或者不能使用（云服务器资源过期、资源分配释放等各种原因）您可以使用解绑节点\n\n但是解绑节点仍然会检查数据关联性：\n\n * 节点分发\n * 日志阅读\n * 项目监控\n * 在线构建（分发方式为节点项目）\n\n您仍然需要先删除关联数据\n\n数据风险\n\n解绑不会判断：节点项目、节点脚本（请慎重操作避免产生冗余数据）\n\n\n\n\n\n\n# 节点排序\n\n节点排序，如果您单个工作空间下节点过多，但是有部分为高频节点，有部分为低频节点可以使用此功能（不过我们还是建议您合理分配工作空间）\n\n\n# 置顶、下移、下移\n\n\n\n\n\n",normalizedContent:"# 前言\n\n逻辑节点是指物理集群安装 jpom 插件端后并且添加到资产管理中再分配到工作空间的机器节点，\n\n像节点项目、节点脚本均是绑定在逻辑节点上的\n\n提醒\n\n逻辑节点是在工作空间之下奥，得先有工作空间才能分配资产机器为逻辑节点，那么删除资产机器时需要保证资产机器下未分配逻辑节点才能删除奥\n\n\n# 新增逻辑节点\n\n新增逻辑节点有如下几种方式，请自行根据实际情况选择操作\n\n * 资产机器分配新增\n * 快速安装自动新增\n * 跨工作空间同步新增\n\n\n# 资产机器分配\n\n资产机器分配时指您先在服务器中安装插件端后并且添加到【系统管理】中的【资产机器】中，然后手动分配到当前工作空间\n\n资产机器操作说明请查看资产机器说明文档\n\n\n\n\n\n这样操作后您就可以将对应资产信息分配到相应的工作空间的【逻辑节点】使用啦。\n\n我们回到【功能管理】里面去看看效果。\n\n\n\n\n# 快速安装\n\n快速安装是指您机器中还没有安装插件端，使用安装脚本来自动安装插件端并添加【资产机器】再自动分配【逻辑节点】\n\n前提\n\n仅 linux 系统支持快速安装、您节点服务器中有公网能下载文件\n\n----------------------------------------\n\n节点服务器能访问服务端的端口（服务端端口默认：2122）\n\n----------------------------------------\n\n安装操作过程中不建议您关闭弹窗，因为安装机器结果会轮询并展示到弹窗【执行结果】中\n\n----------------------------------------\n\n如果失败请不要灰心，您可以使用资产管理中新增机器节点来逐步添加\n\n使用此功能时请仔细阅读【温馨提示】/【注意事项】\n\n\n\n按照提示分为快速安装和快速绑定：快速安装时指您还未安装插件端、快速绑定是指您以及安装插件端但是未添加到服务端中的资产机器中（请根据实际情况选择）\n\n执行命令后您可能有如下几种结果：（由于情况太多，本文就不一一复现并截图请根据下述类型对照排查）\n\n# 安装失败\n\n请根据安装脚本输出的日志自行排查\n\n脚本安装可以参考：一键安装（linux）\n\n# 向服务端推送注册失败\n\n如果您在执行安装脚本中查看到控制台有类似日志输出：此情况一般是网络不可达或者程序错误，如果是网络问题您需要自行检查插件端服务器是否可以访问服务端服务器（防火墙、安全组等）\n\n# 不能和节点正常通讯\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功向服务端推送了自身信息但是服务端去反向访问插件端时网络不可达，此时您需要排查插件端所在服务器的：防火墙、安全组等了网络限制\n\n# 多ip可以使用\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功向服务端推送他自身可用的 ip 地址时，服务端发现有多个可用 ip 时考虑到不同网络 ip 可能有不同特点，需要您手动确认使用哪个 ip 让服务器和插件端进行通信\n\n\n\n# 节点已经存在\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功并向服务端推送成功，但是发现已经存在对应的机器信息并且节点也存在啦，无需重复操作\n\n# 绑定成功\n\n如果您在安装弹窗【执行结果】中看到有类似状态表示：插件端安装成功也向服务端推送成功并且一切顺利执行，机器节点、逻辑节点均正常新增\n\n看到此结果您可以先关闭弹窗查看对应节点信息是否正确，确认后我们建议您再次打卡弹窗，将对应安装和绑定记录缓存手动清除掉（当然您可以不操作，因为重启服务端后自动失效）\n\n\n\n\n# 工作空间同步\n\n工作空间同步指您已经存在一个逻辑节点啦，但是想快速将此节点同步或者分配到其他工作空间\n\n您有两种方式：\n\n * 管理员资产机器中分配\n * 普通用户工作空间同步\n\n# 管理员分配\n\n需要到【资产管理】->【机器管理】手动分配\n\n# 普通用户同步\n\n普通用户可以将他有权限的工作空间下的逻辑节点同步到他有权限的其他工作空间下\n\n\n\n\n\n\n# 节点管理\n\n节点管理是可以统一查看当前逻辑节点（逻辑节点+工作空间）下面关联的关联的项目数据、脚本数据、脚本日志\n\n\n\n\n# 项目管理\n\n> 项目管理的具体说明请查阅项目管理的文档\n\n\n\n\n# 脚本管理\n\n> 脚本管理（节点脚本）的具体说明请查阅节点脚本管理的文档\n\n\n\n\n# 脚本日志\n\n> 脚本日志（节点脚本日志）的具体说明请查阅节点脚本日志管理的文档\n\n\n\n\n# 节点监控\n\n普通用户可以通过逻辑节点查看到逻辑节点对应的机器的资源信息（数据来源资产监控）\n\n查看方式：逻辑节点中切换为卡片视图\n\n\n\n\n\n\n# 节点终端\n\n节点终端是指您可以将当前工作空间下的一个 ssh 与逻辑节点做一个关系绑定，用户快速登录到机器的 ssh 终端\n\n\n\n\n\n提醒\n\n此绑定仅是一个逻辑绑定，最终绑定的 ssh 机器是否和逻辑节点的机器是否一致是不会判断的\n\n----------------------------------------\n\n删除工作空间下的 ssh 时候需要先与逻辑节点解绑才能删除\n\n\n\n\n\n\n# 节点缓存\n\n节点缓存是由于节点的项目数据、脚本数据、脚本日志数据最终均存储在机器节点中，服务端会主动同步过来。有时候可能缓存不一致的情况此时就需要手动同步一次来达到缓存一致的问题\n\n查看节点项目缓存\n\n\n\n通过悬停可以看到机器节点和逻辑节点的项目具体数量\n\n关系说明\n\n关联绑定为：项目=逻辑节点id+工作空间id\n\n----------------------------------------\n\n逻辑节点=机器id+工作空间id\n\n----------------------------------------\n\n一些极端情况关联绑定错误会形成孤独数据：孤独数据管理请查阅【机器节点】->【缓存监控】->【孤独数据】中引导操作\n\n----------------------------------------\n\n如果发现项目找不到了（未主动删除的情况、新增提示路径占用合作存在请参考孤独数据解决方案）\n\n\n\n\n# 删除节点\n\n如果您想删除节点那么您需要检查逻辑节点是否还存在关联数据：\n\n * 节点项目\n * 节点脚本\n * 节点分发\n * 日志阅读\n * 项目监控\n * 在线构建（分发方式为节点项目）\n\n操作提示\n\n删除逻辑节点会通知机器节点，如果您机器节点已经无法访问（资源过期、关闭机器）请使用解绑\n\n温馨提醒\n\n删除时候如果提示还存在 xxxx 关联数据请耐心检查核对，不要操之过急\n\n\n\n\n\n\n# 解绑节点\n\n如果您想删除逻辑节点但是机器节点已经未使用或者不能使用（云服务器资源过期、资源分配释放等各种原因）您可以使用解绑节点\n\n但是解绑节点仍然会检查数据关联性：\n\n * 节点分发\n * 日志阅读\n * 项目监控\n * 在线构建（分发方式为节点项目）\n\n您仍然需要先删除关联数据\n\n数据风险\n\n解绑不会判断：节点项目、节点脚本（请慎重操作避免产生冗余数据）\n\n\n\n\n\n\n# 节点排序\n\n节点排序，如果您单个工作空间下节点过多，但是有部分为高频节点，有部分为低频节点可以使用此功能（不过我们还是建议您合理分配工作空间）\n\n\n# 置顶、下移、下移\n\n\n\n\n\n",charsets:{cjk:!0},lastUpdated:"2024/12/13, 08:32:47",lastUpdatedTimestamp:1734078767e3},{title:"节点项目",frontmatter:{title:"节点项目",date:"2024-01-14T18:32:58.000Z",permalink:"/pages/b3e508/",categories:["docs","文档","节点&项目"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/040.%E8%8A%82%E7%82%B9&%E9%A1%B9%E7%9B%AE/020.%E8%8A%82%E7%82%B9%E9%A1%B9%E7%9B%AE.html",relativePath:"文档/040.节点&项目/020.节点项目.md",key:"v-28d2ad57",path:"/pages/b3e508/",headersStr:null,content:"文档努力编写中。。。敬请期待。。。",normalizedContent:"文档努力编写中。。。敬请期待。。。",charsets:{cjk:!0},lastUpdated:"2024/01/14, 12:26:57",lastUpdatedTimestamp:1705235217e3},{title:"节点脚本",frontmatter:{title:"节点脚本",date:"2024-01-14T18:33:23.000Z",permalink:"/pages/8a95bf/",categories:["docs","文档","节点&项目"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/040.%E8%8A%82%E7%82%B9&%E9%A1%B9%E7%9B%AE/030.%E8%8A%82%E7%82%B9%E8%84%9A%E6%9C%AC.html",relativePath:"文档/040.节点&项目/030.节点脚本.md",key:"v-07446048",path:"/pages/8a95bf/",headersStr:null,content:"文档努力编写中。。。敬请期待。。。",normalizedContent:"文档努力编写中。。。敬请期待。。。",charsets:{cjk:!0},lastUpdated:"2024/01/14, 12:26:57",lastUpdatedTimestamp:1705235217e3},{title:"日志搜索",frontmatter:{title:"日志搜索",date:"2024-01-14T18:34:41.000Z",permalink:"/pages/c5cbe6/",categories:["docs","文档","节点&项目"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/040.%E8%8A%82%E7%82%B9&%E9%A1%B9%E7%9B%AE/050.%E6%97%A5%E5%BF%97%E6%90%9C%E7%B4%A2.html",relativePath:"文档/040.节点&项目/050.日志搜索.md",key:"v-111883b0",path:"/pages/c5cbe6/",headersStr:null,content:"文档努力编写中。。。敬请期待。。。",normalizedContent:"文档努力编写中。。。敬请期待。。。",charsets:{cjk:!0},lastUpdated:"2024/01/14, 12:26:57",lastUpdatedTimestamp:1705235217e3},{title:"DSL 说明",frontmatter:{title:"DSL 说明",date:"2022-10-20T10:35:12.000Z",permalink:"/pages/FQA/DSL/",categories:["docs","FQA","DSL说明"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/100.DSL%E8%AF%B4%E6%98%8E/00.%E4%BB%8B%E7%BB%8D.html",relativePath:"文档/100.DSL说明/00.介绍.md",key:"v-1a26fd2a",path:"/pages/FQA/DSL/",headers:[{level:2,title:"什么是 DSL ?",slug:"什么是-dsl",normalizedTitle:"什么是 dsl ?",charIndex:2},{level:2,title:"Jpom 中为什么有 DSL？",slug:"jpom-中为什么有-dsl",normalizedTitle:"jpom 中为什么有 dsl？",charIndex:176},{level:2,title:"Jpom 中有哪些地方用到了 DSL ?",slug:"jpom-中有哪些地方用到了-dsl",normalizedTitle:"jpom 中有哪些地方用到了 dsl ?",charIndex:413},{level:2,title:"DSL 模式的项目",slug:"dsl-模式的项目",normalizedTitle:"dsl 模式的项目",charIndex:446},{level:2,title:"DSL 模式的项目 - 脚本说明",slug:"dsl-模式的项目-脚本说明",normalizedTitle:"dsl 模式的项目 - 脚本说明",charIndex:637},{level:4,title:"把 status 这个事件（函数）利用好可以实现很多种监控效果",slug:"把-status-这个事件-函数-利用好可以实现很多种监控效果",normalizedTitle:"把 status 这个事件（函数）利用好可以实现很多种监控效果",charIndex:845},{level:2,title:"配置内容相关示例",slug:"配置内容相关示例",normalizedTitle:"配置内容相关示例",charIndex:969}],headersStr:"什么是 DSL ? Jpom 中为什么有 DSL？ Jpom 中有哪些地方用到了 DSL ? DSL 模式的项目 DSL 模式的项目 - 脚本说明 把 status 这个事件（函数）利用好可以实现很多种监控效果 配置内容相关示例",content:"# 什么是 DSL ?\n\nDSL（Domain Specific Language）是针对某一领域，具有受限表达性的一种计算机程序设计语言。 常用于聚焦指定的领域或问题，这就要求 DSL 具备强大的表现力，同时在使用起来要简单。说到DSL，大家也会自然的想到通用语言（如Java、C等）。\n\n> 上面一段话都是搜索引擎 copy 的，忽略即可\n\n\n# Jpom 中为什么有 DSL？\n\nJpom 中为了能更好的配置某些功能的属性，采用了 yml（YAML）格式来配置某些功能的属性，这里配置内容统一称为 DSL。\n\n> 大白话：如果不使用 yml 格式的配置内容来实现，那么意味着需要更多的前端页面组件交互来实现属性配置，使用了 yml 配置后啥属性都一把梭\n\n> 为啥要把 yml 格式的配置叫 DSL，提升高级感🫣\n\n一句话总结\n\nDSL 就是让程序知道在对应的流程该调用啥脚本的一段 yml（ymal） 配置\n\n\n# Jpom 中有哪些地方用到了 DSL ?\n\n 1. 项目管理中的 DSL 模式的项目\n 2. 容器构建中的容器配置\n\n\n# DSL 模式的项目\n\nDSL 是一个万能的模式，可以执行自定义脚本实现各种命令，来实现管理项目或者监控项目等操作\n\n 1. 使用 DSL 模式实现接口探活\n 2. 使用 DSL 模式管理 tomcat\n 3. 使用 DSL 运行非标准的模式（如：canal、elasticsearch、nacos、go、php等）\n\n\n# DSL 模式的项目 - 脚本说明\n\n * 脚本里面至少需要实现的三件事：启动、停止、查状态\n * 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n * 脚本里面不能使用阻塞命令奥（阻塞命令和非阻塞命令解释）\n * 脚本里面支持的变量有：${PROJECT_ID}、${PROJECT_NAME}、${PROJECT_PATH}\n\n# 把 status 这个事件（函数）利用好可以实现很多种监控效果\n\n 1. 使用 CURL 实现接口探活（监控项目假死、监控 elasticsearch 状态、监控其他更多应用状态）\n 2. 使用命令实现 硬盘、CPU、内存监控（逆向思维）\n\n\n# 配置内容相关示例\n\n * 管理 java 项目脚本示例\n * 管理 python 项目脚本示例\n * 容器构建的 DSL 配置示例",normalizedContent:"# 什么是 dsl ?\n\ndsl（domain specific language）是针对某一领域，具有受限表达性的一种计算机程序设计语言。 常用于聚焦指定的领域或问题，这就要求 dsl 具备强大的表现力，同时在使用起来要简单。说到dsl，大家也会自然的想到通用语言（如java、c等）。\n\n> 上面一段话都是搜索引擎 copy 的，忽略即可\n\n\n# jpom 中为什么有 dsl？\n\njpom 中为了能更好的配置某些功能的属性，采用了 yml（yaml）格式来配置某些功能的属性，这里配置内容统一称为 dsl。\n\n> 大白话：如果不使用 yml 格式的配置内容来实现，那么意味着需要更多的前端页面组件交互来实现属性配置，使用了 yml 配置后啥属性都一把梭\n\n> 为啥要把 yml 格式的配置叫 dsl，提升高级感🫣\n\n一句话总结\n\ndsl 就是让程序知道在对应的流程该调用啥脚本的一段 yml（ymal） 配置\n\n\n# jpom 中有哪些地方用到了 dsl ?\n\n 1. 项目管理中的 dsl 模式的项目\n 2. 容器构建中的容器配置\n\n\n# dsl 模式的项目\n\ndsl 是一个万能的模式，可以执行自定义脚本实现各种命令，来实现管理项目或者监控项目等操作\n\n 1. 使用 dsl 模式实现接口探活\n 2. 使用 dsl 模式管理 tomcat\n 3. 使用 dsl 运行非标准的模式（如：canal、elasticsearch、nacos、go、php等）\n\n\n# dsl 模式的项目 - 脚本说明\n\n * 脚本里面至少需要实现的三件事：启动、停止、查状态\n * 查状态输出最后一行需要是 running:$pid $pid 必须为数字且表示当前项目的进程 id ，如果不匹配项目则显示未运行\n * 脚本里面不能使用阻塞命令奥（阻塞命令和非阻塞命令解释）\n * 脚本里面支持的变量有：${project_id}、${project_name}、${project_path}\n\n# 把 status 这个事件（函数）利用好可以实现很多种监控效果\n\n 1. 使用 curl 实现接口探活（监控项目假死、监控 elasticsearch 状态、监控其他更多应用状态）\n 2. 使用命令实现 硬盘、cpu、内存监控（逆向思维）\n\n\n# 配置内容相关示例\n\n * 管理 java 项目脚本示例\n * 管理 python 项目脚本示例\n * 容器构建的 dsl 配置示例",charsets:{cjk:!0},lastUpdated:"2025/05/16, 05:58:29",lastUpdatedTimestamp:1747375109e3},{title:"常见问题",frontmatter:{title:"常见问题",date:"2024-04-01T14:23:54.000Z",permalink:"/pages/9c85bc/",categories:["docs","文档","DSL说明"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/100.DSL%E8%AF%B4%E6%98%8E/10.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.html",relativePath:"文档/100.DSL说明/10.常见问题.md",key:"v-53db48e2",path:"/pages/9c85bc/",headers:[{level:2,title:"使用 DSL 运行项目后日志文件无法找到",slug:"使用-dsl-运行项目后日志文件无法找到",normalizedTitle:"使用 dsl 运行项目后日志文件无法找到",charIndex:2}],headersStr:"使用 DSL 运行项目后日志文件无法找到",content:"# 使用 DSL 运行项目后日志文件无法找到\n\n当您使用 DSL 配置成功并运行项目后发现您项目的日志框架生成的日志文件无法找到时请不要慌。\n\n大概率您在日志框架配置文件中使用了相对路径来生成，由于项目 DSL 脚本执行的目录不并不在项目目录中，所以相对路径无法找到。\n\n此时您可以修改日志框架配置文件中的相对路径为绝对路径。",normalizedContent:"# 使用 dsl 运行项目后日志文件无法找到\n\n当您使用 dsl 配置成功并运行项目后发现您项目的日志框架生成的日志文件无法找到时请不要慌。\n\n大概率您在日志框架配置文件中使用了相对路径来生成，由于项目 dsl 脚本执行的目录不并不在项目目录中，所以相对路径无法找到。\n\n此时您可以修改日志框架配置文件中的相对路径为绝对路径。",charsets:{cjk:!0},lastUpdated:"2024/04/07, 08:59:24",lastUpdatedTimestamp:1712480364e3},{title:"节点分发",frontmatter:{title:"节点分发",date:"2024-01-14T18:33:38.000Z",permalink:"/pages/e35370/",categories:["docs","文档","节点&项目"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/040.%E8%8A%82%E7%82%B9&%E9%A1%B9%E7%9B%AE/040.%E8%8A%82%E7%82%B9%E5%88%86%E5%8F%91.html",relativePath:"文档/040.节点&项目/040.节点分发.md",key:"v-23a772d3",path:"/pages/e35370/",headersStr:null,content:"文档努力编写中。。。敬请期待。。。",normalizedContent:"文档努力编写中。。。敬请期待。。。",charsets:{cjk:!0},lastUpdated:"2024/01/14, 12:26:57",lastUpdatedTimestamp:1705235217e3},{title:"管理 java 项目脚本示例",frontmatter:{title:"管理 java 项目脚本示例",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/519020/",tags:["DSL"],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/100.DSL%E8%AF%B4%E6%98%8E/10.%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B/01.DSL-java.html",relativePath:"文档/100.DSL说明/10.配置示例/01.DSL-java.md",key:"v-387f6a75",path:"/pages/519020/",headers:[{level:2,title:"linux 示例",slug:"linux-示例",normalizedTitle:"linux 示例",charIndex:2},{level:2,title:"window 示例",slug:"window-示例",normalizedTitle:"window 示例",charIndex:1731}],headersStr:"linux 示例 window 示例",content:'# linux 示例\n\n#!/bin/bash\nTag="Application_${PROJECT_ID}"\nMainClass="org.springframework.boot.loader.JarLauncher"\nLib="${PROJECT_PATH}"\nLog="${PROJECT_PATH}/run.log"\nJVM="-server -Xms128m -Xmx128m -XX:PermSize=32M -XX:MaxNewSize=64m -XX:MaxPermSize=64m -Djava.awt.headless=true -XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled"\necho $Tag\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n    echo  $Log \n    if [ ! -f $Log ]; then\n        touch $Log\n    fi\n    nohup java $JVM -Dappliction=$Tag -Djava.ext.dirs=$Lib":${JAVA_HOME}/jre/lib/ext" $MainClass > $Log 2>&1 &  \n\t\tsleep 3\n    head -n 10 $Log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n\n# window 示例\n\n@echo off\n@REM setlocal enabledelayedexpansion\n@REM Set environment variables to prevent some servers from failing to taskkill\nset PATH = %PATH%;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\system32\\Wbem\n\nset Tag=Jpom-demo-case-${PROJECT_ID}\nset MainClass=org.springframework.boot.loader.JarLauncher\nset Lib=${PROJECT_PATH}\nset Log=${PROJECT_PATH}/run.log\nset JVM=-server -Xms200m -Xmx400m\nset ARGS= \n\n\nIF "%1"=="start" call:start\nIF "%1"=="stop" call:stop\nIF "%1"=="status" call:status\n\n\n@REM start\n:start\n    if "%JAVA_HOME%"=="" (\n        echo please configure [JAVA_HOME] environment variable\n        EXIT 2\n    )\n\n\techo Starting.....\n\tjavaw %JVM% -Dapplication=%Tag% -Djava.ext.dirs=%Lib%  %MainClass% %ARGS% %1 >> %Log%\n\ttimeout 3\n\tEXIT 0\ngoto:eof\n\n\n@REM stop\n:stop\n\tfor /f "tokens=1 delims= " %%I in (\'jps -v ^| findstr "Jpom-demo-case-${PROJECT_ID}"\') do taskkill /F /PID %%I\n\tEXIT 0\ngoto:eof\n\n@REM view status\n:status\n\tfor /f "tokens=1 delims= " %%I in (\'jps -v ^| findstr "Jpom-demo-case-${PROJECT_ID}"\') do @echo running:%%I\n\t\n\tEXIT 0\ngoto:eof\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n',normalizedContent:'# linux 示例\n\n#!/bin/bash\ntag="application_${project_id}"\nmainclass="org.springframework.boot.loader.jarlauncher"\nlib="${project_path}"\nlog="${project_path}/run.log"\njvm="-server -xms128m -xmx128m -xx:permsize=32m -xx:maxnewsize=64m -xx:maxpermsize=64m -djava.awt.headless=true -xx:+cmsclassunloadingenabled -xx:+cmspermgensweepingenabled"\necho $tag\nretval="0"\n\n# see how we were called.\nfunction start() {\n    echo  $log \n    if [ ! -f $log ]; then\n        touch $log\n    fi\n    nohup java $jvm -dappliction=$tag -djava.ext.dirs=$lib":${java_home}/jre/lib/ext" $mainclass > $log 2>&1 &  \n\t\tsleep 3\n    head -n 10 $log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n\n# window 示例\n\n@echo off\n@rem setlocal enabledelayedexpansion\n@rem set environment variables to prevent some servers from failing to taskkill\nset path = %path%;c:\\windows\\system32;c:\\windows;c:\\windows\\system32\\wbem\n\nset tag=jpom-demo-case-${project_id}\nset mainclass=org.springframework.boot.loader.jarlauncher\nset lib=${project_path}\nset log=${project_path}/run.log\nset jvm=-server -xms200m -xmx400m\nset args= \n\n\nif "%1"=="start" call:start\nif "%1"=="stop" call:stop\nif "%1"=="status" call:status\n\n\n@rem start\n:start\n    if "%java_home%"=="" (\n        echo please configure [java_home] environment variable\n        exit 2\n    )\n\n\techo starting.....\n\tjavaw %jvm% -dapplication=%tag% -djava.ext.dirs=%lib%  %mainclass% %args% %1 >> %log%\n\ttimeout 3\n\texit 0\ngoto:eof\n\n\n@rem stop\n:stop\n\tfor /f "tokens=1 delims= " %%i in (\'jps -v ^| findstr "jpom-demo-case-${project_id}"\') do taskkill /f /pid %%i\n\texit 0\ngoto:eof\n\n@rem view status\n:status\n\tfor /f "tokens=1 delims= " %%i in (\'jps -v ^| findstr "jpom-demo-case-${project_id}"\') do @echo running:%%i\n\t\n\texit 0\ngoto:eof\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n',charsets:{cjk:!0},lastUpdated:"2023/12/24, 09:29:40",lastUpdatedTimestamp:170341018e4},{title:"管理 python 项目脚本示例",frontmatter:{title:"管理 python 项目脚本示例",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/eb9c6e/",tags:["DSL"],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/100.DSL%E8%AF%B4%E6%98%8E/10.%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B/02.DSL-python.html",relativePath:"文档/100.DSL说明/10.配置示例/02.DSL-python.md",key:"v-d12216fa",path:"/pages/eb9c6e/",headers:[{level:2,title:"python3 程序",slug:"python3-程序",normalizedTitle:"python3 程序",charIndex:2},{level:3,title:"linux 示例",slug:"linux-示例",normalizedTitle:"linux 示例",charIndex:17},{level:2,title:"python2 程序",slug:"python2-程序",normalizedTitle:"python2 程序",charIndex:1484},{level:3,title:"linux 示例",slug:"linux-示例-2",normalizedTitle:"linux 示例",charIndex:17}],headersStr:"python3 程序 linux 示例 python2 程序 linux 示例",content:'# python3 程序\n\n\n# linux 示例\n\n> python3 启动一个简单 httpserver\n\n#!/bin/bash\nTag="Application_${PROJECT_ID}"\nLib="${PROJECT_PATH}"\nLog="${PROJECT_PATH}/run.log"\necho $Tag\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n    echo  $Log \n    if [ ! -f $Log ]; then\n        touch $Log\n    fi\n    nohup python $Lib/simple_httpd.py $Tag > $Log 2>&1 &  \n\tsleep 3\n    head -n 10 $Log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n\n\n\n# python2 程序\n\n\n# linux 示例\n\n> python2 启动一个简单 httpserver\n\n#!/bin/bash\nTag="Application_${PROJECT_ID}"\nLib="${PROJECT_PATH}"\nLog="${PROJECT_PATH}/run.log"\necho $Tag\nRETVAL="0"\n\n# See how we were called.\nfunction start() {\n    echo  $Log \n    if [ ! -f $Log ]; then\n        touch $Log\n    fi\n   \n   cd $Lib && nohup python -m SimpleHTTPServer 8000 $Tag > $Log 2>&1 &  \n\tsleep 5\n    head -n 10 $Log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"Shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $Tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# See how we were called.\nRETVAL="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $RETVAL\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n',normalizedContent:'# python3 程序\n\n\n# linux 示例\n\n> python3 启动一个简单 httpserver\n\n#!/bin/bash\ntag="application_${project_id}"\nlib="${project_path}"\nlog="${project_path}/run.log"\necho $tag\nretval="0"\n\n# see how we were called.\nfunction start() {\n    echo  $log \n    if [ ! -f $log ]; then\n        touch $log\n    fi\n    nohup python $lib/simple_httpd.py $tag > $log 2>&1 &  \n\tsleep 3\n    head -n 10 $log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n\n\n\n# python2 程序\n\n\n# linux 示例\n\n> python2 启动一个简单 httpserver\n\n#!/bin/bash\ntag="application_${project_id}"\nlib="${project_path}"\nlog="${project_path}/run.log"\necho $tag\nretval="0"\n\n# see how we were called.\nfunction start() {\n    echo  $log \n    if [ ! -f $log ]; then\n        touch $log\n    fi\n   \n   cd $lib && nohup python -m simplehttpserver 8000 $tag > $log 2>&1 &  \n\tsleep 5\n    head -n 10 $log\n}\n\n\nfunction stop() {\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    if [ "$pid" != "" ]; then      \n        echo -n "boot ( pid $pid) is running" \n        echo \n        echo -n $"shutting down boot: "\n        pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n        if [ "$pid" != "" ]; then\n            echo "kill boot process"\n            kill -9 "$pid"\n        fi\n        else \n             echo "boot is stopped" \n        fi\n\n    status\n}\n\nfunction status()\n{\n    pid=$(ps -ef | grep -v \'grep\' | egrep $tag| awk \'{printf $2 " "}\')\n    #echo "$pid"\n    if [ "$pid" != "" ]; then\n        echo "running:$pid"\n    else\n        echo "boot is stopped"\n    fi\n}\n\n# see how we were called.\nretval="0"\ncase "$1" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    status)\n        status\n        ;;\n    *)\n      usage\n      ;;\nesac\n\nexit $retval\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n',charsets:{cjk:!0},lastUpdated:"2023/12/24, 09:29:40",lastUpdatedTimestamp:170341018e4},{title:"问题合集",frontmatter:{pageComponent:{name:"Catalogue",data:{path:"文档/200.常见问题/",description:"常见问题是目前我们收到到您在使用过程中可能遇到的一系列问题的解决方案和说明"}},title:"问题合集",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/FQA/",tags:["FQA"],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/010.FQA.html",relativePath:"文档/200.常见问题/010.FQA.md",key:"v-63c94824",path:"/pages/FQA/",headersStr:null,content:"> 请选择您遇到的问题大分类来进行查阅",normalizedContent:"> 请选择您遇到的问题大分类来进行查阅",charsets:{cjk:!0},lastUpdated:"2024/01/13, 11:36:49",lastUpdatedTimestamp:1705145809e3},{title:"账号相关",frontmatter:{title:"账号相关",date:"2022-07-25T16:36:11.000Z",permalink:"/pages/FQA/839836/",categories:["docs","FQA","常见问题"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/100.%E8%B4%A6%E5%8F%B7%E7%9B%B8%E5%85%B3.html",relativePath:"文档/200.常见问题/100.账号相关.md",key:"v-894b1e10",path:"/pages/FQA/839836/",headers:[{level:2,title:"忘记系统管理员密码",slug:"忘记系统管理员密码",normalizedTitle:"忘记系统管理员密码",charIndex:3},{level:4,title:"2.8.0 版本及其以上",slug:"_2-8-0-版本及其以上",normalizedTitle:"2.8.0 版本及其以上",charIndex:93},{level:4,title:"2.8.0 版本以下",slug:"_2-8-0-版本以下",normalizedTitle:"2.8.0 版本以下",charIndex:674},{level:2,title:"账号异常锁定",slug:"账号异常锁定",normalizedTitle:"账号异常锁定",charIndex:16},{level:2,title:"两步验证（两步认证）令牌丢失（mfa key 丢失）",slug:"两步验证-两步认证-令牌丢失-mfa-key-丢失",normalizedTitle:"两步验证（两步认证）令牌丢失（mfa key 丢失）",charIndex:26},{level:3,title:"超级管理员",slug:"超级管理员",normalizedTitle:"超级管理员",charIndex:58},{level:4,title:"linux",slug:"linux",normalizedTitle:"linux",charIndex:109},{level:4,title:"windows",slug:"windows",normalizedTitle:"windows",charIndex:192},{level:3,title:"普通用户",slug:"普通用户",normalizedTitle:"普通用户",charIndex:69}],headersStr:"忘记系统管理员密码 2.8.0 版本及其以上 2.8.0 版本以下 账号异常锁定 两步验证（两步认证）令牌丢失（mfa key 丢失） 超级管理员 linux windows 普通用户",content:' * 忘记系统管理员密码\n * 账号异常锁定\n * 两步验证（两步认证）令牌丢失（mfa key 丢失）\n   * 超级管理员\n   * 普通用户\n\n\n\n\n# 忘记系统管理员密码\n\n# 2.8.0 版本及其以上\n\n> linux 执行：bash /xxxx/Server.sh restart -15 --rest:super_user_pwd\n> \n> (2.10.0 及其以上) windows 执行: Server.bat restart --rest:super_user_pwd\n> \n> (2.10.0 以下) windows 执行 Server.bat 操作面板会提示如果执行\n\n注意⚠️：低版本的管理脚本可能未接收命令行传参，或者没有这个选项。还需要自行同步一下管理脚本里面的参数。（linux 版本中接收命令行参数传入程序变量为 $@，windows 版本中参考官方最新版本管理脚本内容 ）\n\n> 如果linux docker容器执行报错误如下： KeepBx-System-JpomServerApplication /usr/local/jpom-server/ Server.sh: 60: [[: not found Server.sh: 70: [[: not found Server.sh: 76: Syntax error: "(" unexpected 执行：bash /xxxx/Server.sh restart -15 --rest:super_user_pwd 执行成功后后台会提示账号和重置密码\n\n# 2.8.0 版本以下\n\n>  1. 删除服务端的数据目录中【data/user.json】所有用户信息将失效，需要重新初始化系统管理员账号信息（此操作不会其他其他信息以及项目运行状态）\n\n>  2. 重新确定密码，并js sha1后修改【data/user.json】中对应的系统管理员中的密码字段即可\n\n\n# 账号异常锁定\n\n> 为了保证账号安全，系统默认开启了账号多次登录失败后将锁定一定时间的功能。\n\n账号被有意或者无意锁定后解决方案：\n\n 1. 联系管理员，手动解锁账号。\n 2. 超级管理则走忘记系统管理员密码流程(会自动解锁，限定 2.8.0 版本及其以上)\n\n\n# 两步验证（两步认证）令牌丢失（mfa key 丢失）\n\n当账号开启两步验证时，发生令牌丢失或者特殊场景无法使用令牌怎么重置或者关闭\n\n\n# 超级管理员\n\n在重启服务端时候添加 --close:super_user_mfa 参数来关闭两步认证，能正常登陆账号后可以再进入安全设置里面重新开启\n\n# linux\n\nbash /xxxx/Server.sh restart -15 --close:super_user_mfa\n\n\n1\n\n\n# windows\n\nServer.bat restart --close:super_user_mfa\n\n\n1\n\n\n\n# 普通用户\n\n找拥有管理权限的管理员在用户管理中关闭对应用户当两步认证，能正常登陆账号后可以再进入安全设置里面重新开启',normalizedContent:' * 忘记系统管理员密码\n * 账号异常锁定\n * 两步验证（两步认证）令牌丢失（mfa key 丢失）\n   * 超级管理员\n   * 普通用户\n\n\n\n\n# 忘记系统管理员密码\n\n# 2.8.0 版本及其以上\n\n> linux 执行：bash /xxxx/server.sh restart -15 --rest:super_user_pwd\n> \n> (2.10.0 及其以上) windows 执行: server.bat restart --rest:super_user_pwd\n> \n> (2.10.0 以下) windows 执行 server.bat 操作面板会提示如果执行\n\n注意⚠️：低版本的管理脚本可能未接收命令行传参，或者没有这个选项。还需要自行同步一下管理脚本里面的参数。（linux 版本中接收命令行参数传入程序变量为 $@，windows 版本中参考官方最新版本管理脚本内容 ）\n\n> 如果linux docker容器执行报错误如下： keepbx-system-jpomserverapplication /usr/local/jpom-server/ server.sh: 60: [[: not found server.sh: 70: [[: not found server.sh: 76: syntax error: "(" unexpected 执行：bash /xxxx/server.sh restart -15 --rest:super_user_pwd 执行成功后后台会提示账号和重置密码\n\n# 2.8.0 版本以下\n\n>  1. 删除服务端的数据目录中【data/user.json】所有用户信息将失效，需要重新初始化系统管理员账号信息（此操作不会其他其他信息以及项目运行状态）\n\n>  2. 重新确定密码，并js sha1后修改【data/user.json】中对应的系统管理员中的密码字段即可\n\n\n# 账号异常锁定\n\n> 为了保证账号安全，系统默认开启了账号多次登录失败后将锁定一定时间的功能。\n\n账号被有意或者无意锁定后解决方案：\n\n 1. 联系管理员，手动解锁账号。\n 2. 超级管理则走忘记系统管理员密码流程(会自动解锁，限定 2.8.0 版本及其以上)\n\n\n# 两步验证（两步认证）令牌丢失（mfa key 丢失）\n\n当账号开启两步验证时，发生令牌丢失或者特殊场景无法使用令牌怎么重置或者关闭\n\n\n# 超级管理员\n\n在重启服务端时候添加 --close:super_user_mfa 参数来关闭两步认证，能正常登陆账号后可以再进入安全设置里面重新开启\n\n# linux\n\nbash /xxxx/server.sh restart -15 --close:super_user_mfa\n\n\n1\n\n\n# windows\n\nserver.bat restart --close:super_user_mfa\n\n\n1\n\n\n\n# 普通用户\n\n找拥有管理权限的管理员在用户管理中关闭对应用户当两步认证，能正常登陆账号后可以再进入安全设置里面重新开启',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"启动失败",frontmatter:{title:"启动失败",date:"2022-07-25T16:40:31.000Z",permalink:"/pages/FQA/a1e454/",categories:["docs","FQA","常见问题"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/101.%E5%90%AF%E5%8A%A8%E7%9B%B8%E5%85%B3.html",relativePath:"文档/200.常见问题/101.启动相关.md",key:"v-a782e9da",path:"/pages/FQA/a1e454/",headers:[{level:2,title:"在linux 系统中执行管理 sh 提示",slug:"在linux-系统中执行管理-sh-提示",normalizedTitle:"在linux 系统中执行管理 sh 提示",charIndex:3},{level:2,title:"windows 中执行管理bat命令乱码或者执行失败",slug:"windows-中执行管理bat命令乱码或者执行失败",normalizedTitle:"windows 中执行管理bat命令乱码或者执行失败",charIndex:27},{level:2,title:"windows 中上传中文文件名乱码",slug:"windows-中上传中文文件名乱码",normalizedTitle:"windows 中上传中文文件名乱码",charIndex:57},{level:2,title:"启动很慢",slug:"启动很慢",normalizedTitle:"启动很慢",charIndex:79},{level:2,title:"Ubuntu/Debian 执行脚本错误",slug:"ubuntu-debian-执行脚本错误",normalizedTitle:"ubuntu/debian 执行脚本错误",charIndex:87},{level:2,title:"Ubuntu 安装出现没有权限 Permission denied",slug:"ubuntu-安装出现没有权限-permission-denied",normalizedTitle:"ubuntu 安装出现没有权限 permission denied",charIndex:111},{level:2,title:"执行 install.sh 出现多个 Permission denied 错误",slug:"执行-install-sh-出现多个-permission-denied-错误",normalizedTitle:"执行 install.sh 出现多个 permission denied 错误",charIndex:148}],headersStr:"在linux 系统中执行管理 sh 提示 windows 中执行管理bat命令乱码或者执行失败 windows 中上传中文文件名乱码 启动很慢 Ubuntu/Debian 执行脚本错误 Ubuntu 安装出现没有权限 Permission denied 执行 install.sh 出现多个 Permission denied 错误",content:' * 在linux 系统中执行管理 sh 提示\n * windows 中执行管理bat命令乱码或者执行失败\n * windows 中上传中文文件名乱码\n * 启动很慢\n * Ubuntu/Debian 执行脚本错误\n * Ubuntu 安装出现没有权限 Permission denied\n * 执行 install.sh 出现多个 Permission denied 错误\n\n\n\n\n# 在linux 系统中执行管理 sh 提示\n\n\n\n\n\n执行如下命令：(https://blog.csdn.net/perter_liao/article/details/76757605)\n\n# 1.编辑文件\nvim filename（文件名）\n  \n# 2.进入末行模式（按esc键）\n\n# 3.设置文件格式\n:set fileformat=unix\n \n# 4.保存退出\n :wq\n \n# 5.#sh filename OK!\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n> 同时需要注意文件编码格式和内容换行符\n\n\n# windows 中执行管理bat命令乱码或者执行失败\n\n> 请修改（Agent.bat、Server.bat）文件编码为当前系统默认的编码（windows中默认为GB2312）、检查文件内容换行符\n> \n> 使用 GB2312 编码后请检查脚本里面是否包含 CHCP 相关命令,如果存在需要将其一并删除\n\n\n# windows 中上传中文文件名乱码\n\n 1. 请修改（Agent.bat、Server.bat）文件编码为当前系统默认的编码（windows中默认为GB2312）、检查文件内容换行符：\\r\\n\n 2. 删除（Agent.bat、Server.bat）文件中 CHCP 相关命令,果存在需要将其一并删除\n 3. 添加 JVM 参数：-Dfile.encoding=UTF-8\n\n\n# 启动很慢\n\n在 linux 中出现如下日志：Please verify your network configuration.\n\nWARN [main] o.s.b.StartupInfoLogger [StartupInfoLogger.java:117]- x:() InetAddress.getLocalHost().getHostName() took 10084 milliseconds to respond. Please verify your network configuration.\n\n\n1\n\n\n解决方法：\n\n 1. 查看主机名\n\nhostname\n\n\n1\n\n\n假设输出：myhostname\n\n 2. 在/etc/hosts上加上主机名\n\n127.0.0.1   localhost myhostname\n::1         localhost myhostname\n\n\n1\n2\n\n\n注意：myhostname 请修改为第一步执行结果\n\n\n# Ubuntu/Debian 执行脚本错误\n\n> Syntax error: "(" unexpected\n\n代码对于标准bash而言没有错，因为Ubuntu/Debian为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼。\n\n解决方法:\n\n 1. 就是取消dash\n    1. sudo dpkg-reconfigure dash 在选择项中选No，搞定了！\n 2. 通过 bash ./Agent.sh、bash ./Server.sh执行\n\n\n# Ubuntu 安装出现没有权限 Permission denied\n\nuser@user:~$ apt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh Server jdk\nE: Could not open lock file /var/lib/dpkg/lock-frontend - open (13: Permission denied)\nE: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root?\n\n\n1\n2\n3\n4\n5\n\n\n这是因为当前账号没有安装软件的权限，可以修改安装命令如下：\n\nsudo apt-get install -y wget && \\\nwget -O install.sh https://jpom.top/docs/install.sh && \\\nsudo bash install.sh Server jdk\n\n\n1\n2\n3\n\n\n\n# 执行 install.sh 出现多个 Permission denied 错误\n\n参考的错误日志如下：\n\n 1. mkdir: cannot create directory ‘/usr/java/’: Permission denied\n 2. install.sh: line 63: /etc/profile: Permission denied\n 3. mkdir: cannot create directory ‘/usr/local/jpom-server’: Permission denied\n\nResolving download.jpom.top (download.jpom.top)... 58.218.208.95, 58.218.208.93, 58.218.208.81, ...\nConnecting to download.jpom.top (download.jpom.top)|58.218.208.95|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 195132576 (186M) [application/gzip]\nSaving to: ‘jdk-8u251-linux-x64.tar.gz’\n\njdk-8u251-linux-x64.tar.gz                      100%[====================================================================================================>] 186.09M  3.49MB/s    in 47s     \n\n2022-11-24 08:18:42 (3.96 MB/s) - ‘jdk-8u251-linux-x64.tar.gz’ saved [195132576/195132576]\n\nmkdir: cannot create directory ‘/usr/java/’: Permission denied\ntar: /usr/java: Cannot open: No such file or directory\ntar: Error is not recoverable: exiting now\n安装jdk,路径/usr/java/jdk1.8.0_251/\ninstall.sh: line 63: /etc/profile: Permission denied\ninstall.sh: line 64: /etc/profile: Permission denied\ninstall.sh: line 65: /etc/profile: Permission denied\ninstall.sh: line 66: /etc/profile: Permission denied\n默认安装目录 /usr/local/jpom-server, 是否使用此目录作为安装目录? 输入 y 确定, 否则请输入安装目录, 需要使用绝对路径 (注意: agent 和 server 不能装到同一个目录!)：y\nmkdir: cannot create directory ‘/usr/local/jpom-server’: Permission denied\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n这是因为当前账号没有对应目录的写入权限，建议使用 sudo 切换 root 用户安装即可或者跟进日志信息看出路径有如下：\n\n 1. 自动安装 jdk 的路径：/usr/java/.\n    * 提前手动安装 jdk 环境\n 2. 安装 服务端的路径：/usr/local/jpom-server\n    * 安装时候根据提示手动填写有权限的路径',normalizedContent:' * 在linux 系统中执行管理 sh 提示\n * windows 中执行管理bat命令乱码或者执行失败\n * windows 中上传中文文件名乱码\n * 启动很慢\n * ubuntu/debian 执行脚本错误\n * ubuntu 安装出现没有权限 permission denied\n * 执行 install.sh 出现多个 permission denied 错误\n\n\n\n\n# 在linux 系统中执行管理 sh 提示\n\n\n\n\n\n执行如下命令：(https://blog.csdn.net/perter_liao/article/details/76757605)\n\n# 1.编辑文件\nvim filename（文件名）\n  \n# 2.进入末行模式（按esc键）\n\n# 3.设置文件格式\n:set fileformat=unix\n \n# 4.保存退出\n :wq\n \n# 5.#sh filename ok!\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n> 同时需要注意文件编码格式和内容换行符\n\n\n# windows 中执行管理bat命令乱码或者执行失败\n\n> 请修改（agent.bat、server.bat）文件编码为当前系统默认的编码（windows中默认为gb2312）、检查文件内容换行符\n> \n> 使用 gb2312 编码后请检查脚本里面是否包含 chcp 相关命令,如果存在需要将其一并删除\n\n\n# windows 中上传中文文件名乱码\n\n 1. 请修改（agent.bat、server.bat）文件编码为当前系统默认的编码（windows中默认为gb2312）、检查文件内容换行符：\\r\\n\n 2. 删除（agent.bat、server.bat）文件中 chcp 相关命令,果存在需要将其一并删除\n 3. 添加 jvm 参数：-dfile.encoding=utf-8\n\n\n# 启动很慢\n\n在 linux 中出现如下日志：please verify your network configuration.\n\nwarn [main] o.s.b.startupinfologger [startupinfologger.java:117]- x:() inetaddress.getlocalhost().gethostname() took 10084 milliseconds to respond. please verify your network configuration.\n\n\n1\n\n\n解决方法：\n\n 1. 查看主机名\n\nhostname\n\n\n1\n\n\n假设输出：myhostname\n\n 2. 在/etc/hosts上加上主机名\n\n127.0.0.1   localhost myhostname\n::1         localhost myhostname\n\n\n1\n2\n\n\n注意：myhostname 请修改为第一步执行结果\n\n\n# ubuntu/debian 执行脚本错误\n\n> syntax error: "(" unexpected\n\n代码对于标准bash而言没有错，因为ubuntu/debian为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼。\n\n解决方法:\n\n 1. 就是取消dash\n    1. sudo dpkg-reconfigure dash 在选择项中选no，搞定了！\n 2. 通过 bash ./agent.sh、bash ./server.sh执行\n\n\n# ubuntu 安装出现没有权限 permission denied\n\nuser@user:~$ apt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nbash install.sh server jdk\ne: could not open lock file /var/lib/dpkg/lock-frontend - open (13: permission denied)\ne: unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root?\n\n\n1\n2\n3\n4\n5\n\n\n这是因为当前账号没有安装软件的权限，可以修改安装命令如下：\n\nsudo apt-get install -y wget && \\\nwget -o install.sh https://jpom.top/docs/install.sh && \\\nsudo bash install.sh server jdk\n\n\n1\n2\n3\n\n\n\n# 执行 install.sh 出现多个 permission denied 错误\n\n参考的错误日志如下：\n\n 1. mkdir: cannot create directory ‘/usr/java/’: permission denied\n 2. install.sh: line 63: /etc/profile: permission denied\n 3. mkdir: cannot create directory ‘/usr/local/jpom-server’: permission denied\n\nresolving download.jpom.top (download.jpom.top)... 58.218.208.95, 58.218.208.93, 58.218.208.81, ...\nconnecting to download.jpom.top (download.jpom.top)|58.218.208.95|:443... connected.\nhttp request sent, awaiting response... 200 ok\nlength: 195132576 (186m) [application/gzip]\nsaving to: ‘jdk-8u251-linux-x64.tar.gz’\n\njdk-8u251-linux-x64.tar.gz                      100%[====================================================================================================>] 186.09m  3.49mb/s    in 47s     \n\n2022-11-24 08:18:42 (3.96 mb/s) - ‘jdk-8u251-linux-x64.tar.gz’ saved [195132576/195132576]\n\nmkdir: cannot create directory ‘/usr/java/’: permission denied\ntar: /usr/java: cannot open: no such file or directory\ntar: error is not recoverable: exiting now\n安装jdk,路径/usr/java/jdk1.8.0_251/\ninstall.sh: line 63: /etc/profile: permission denied\ninstall.sh: line 64: /etc/profile: permission denied\ninstall.sh: line 65: /etc/profile: permission denied\ninstall.sh: line 66: /etc/profile: permission denied\n默认安装目录 /usr/local/jpom-server, 是否使用此目录作为安装目录? 输入 y 确定, 否则请输入安装目录, 需要使用绝对路径 (注意: agent 和 server 不能装到同一个目录!)：y\nmkdir: cannot create directory ‘/usr/local/jpom-server’: permission denied\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n这是因为当前账号没有对应目录的写入权限，建议使用 sudo 切换 root 用户安装即可或者跟进日志信息看出路径有如下：\n\n 1. 自动安装 jdk 的路径：/usr/java/.\n    * 提前手动安装 jdk 环境\n 2. 安装 服务端的路径：/usr/local/jpom-server\n    * 安装时候根据提示手动填写有权限的路径',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"容器构建的 DSL 配置示例",frontmatter:{title:"容器构建的 DSL 配置示例",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/5020f7/",tags:[null],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/100.DSL%E8%AF%B4%E6%98%8E/10.%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B/03.DOCKER_DSL.html",relativePath:"文档/100.DSL说明/10.配置示例/03.DOCKER_DSL.md",key:"v-3b2e6be1",path:"/pages/5020f7/",headers:[{level:2,title:"完整的容器构建 dsl 示例",slug:"完整的容器构建-dsl-示例",normalizedTitle:"完整的容器构建 dsl 示例",charIndex:2}],headersStr:"完整的容器构建 dsl 示例",content:"# 完整的容器构建 dsl 示例\n\n# 基础镜像 目前仅支持 ubuntu-latest\nrunsOn: ubuntu-latest\n# 这里标明使用工作空间的docker管理列表的哪个 docker 构建,填写 docker 标签 默认查询可用的第一个,如果 tag 查询出多个也选择第一个结果\nfromTag: xxx\nsteps:\n  - uses: java\n    version: 8\n  - uses: maven\n    version: 3.8.5\n  - uses: node\n    version: 16.3.0\n# 将容器中的文件缓存到 docker 卷中\n  - uses: cache\n    path: /root/.m2\n  - run: npm config set registry https://registry.npmmirror.com\n# 内置变量 ${JPOM_WORKING_DIR} ${JPOM_BUILD_ID}\n  - run: cd  ${JPOM_WORKING_DIR}/web-vue && npm i && npm run build\n  - run: cd ${JPOM_WORKING_DIR} && mvn package -s script/settings.xml\n# 宿主机目录和容器目录挂载 /host:/container:ro\n# binds:\n#  - /Users/user/.m2/settings.xml:/root/.m2/\n# 宿主机文件上传到容器 /host:/container:true\n# dirChildrenOnly = true will create /var/data/titi and /var/data/tata dirChildrenOnly = false will create /var/data/root/titi and /var/data/root/tata\n# copy:\n#  - /Users/user/.m2/settings.xml:/root/.m2/:false\n# 给容器添加环境变量\nenv:\n  NODE_OPTIONS: --max-old-space-size=900\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n",normalizedContent:"# 完整的容器构建 dsl 示例\n\n# 基础镜像 目前仅支持 ubuntu-latest\nrunson: ubuntu-latest\n# 这里标明使用工作空间的docker管理列表的哪个 docker 构建,填写 docker 标签 默认查询可用的第一个,如果 tag 查询出多个也选择第一个结果\nfromtag: xxx\nsteps:\n  - uses: java\n    version: 8\n  - uses: maven\n    version: 3.8.5\n  - uses: node\n    version: 16.3.0\n# 将容器中的文件缓存到 docker 卷中\n  - uses: cache\n    path: /root/.m2\n  - run: npm config set registry https://registry.npmmirror.com\n# 内置变量 ${jpom_working_dir} ${jpom_build_id}\n  - run: cd  ${jpom_working_dir}/web-vue && npm i && npm run build\n  - run: cd ${jpom_working_dir} && mvn package -s script/settings.xml\n# 宿主机目录和容器目录挂载 /host:/container:ro\n# binds:\n#  - /users/user/.m2/settings.xml:/root/.m2/\n# 宿主机文件上传到容器 /host:/container:true\n# dirchildrenonly = true will create /var/data/titi and /var/data/tata dirchildrenonly = false will create /var/data/root/titi and /var/data/root/tata\n# copy:\n#  - /users/user/.m2/settings.xml:/root/.m2/:false\n# 给容器添加环境变量\nenv:\n  node_options: --max-old-space-size=900\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n",charsets:{cjk:!0},lastUpdated:"2023/12/24, 09:29:40",lastUpdatedTimestamp:170341018e4},{title:"使用报错",frontmatter:{title:"使用报错",date:"2022-07-25T16:44:53.000Z",permalink:"/pages/FQA/d0b0c3/",categories:["docs","FQA","常见问题"],tags:["常见问题"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/104.%E7%B3%BB%E7%BB%9F%E6%8A%A5%E9%94%99.html",relativePath:"文档/200.常见问题/104.系统报错.md",key:"v-8b483f02",path:"/pages/FQA/d0b0c3/",headers:[{level:2,title:"WebSocket （web socket 错误,请检查是否开启 ws 代理）",slug:"websocket-web-socket-错误-请检查是否开启-ws-代理",normalizedTitle:"websocket （web socket 错误,请检查是否开启 ws 代理）",charIndex:3},{level:2,title:"Jps 命令异常",slug:"jps-命令异常",normalizedTitle:"jps 命令异常",charIndex:46},{level:3,title:"最简单的自查方式",slug:"最简单的自查方式",normalizedTitle:"最简单的自查方式",charIndex:60},{level:3,title:"排查 jps 缓存文件",slug:"排查-jps-缓存文件",normalizedTitle:"排查 jps 缓存文件",charIndex:74},{level:2,title:"Jps 执行响应很慢",slug:"jps-执行响应很慢",normalizedTitle:"jps 执行响应很慢",charIndex:89},{level:2,title:"获取项目状态超时",slug:"获取项目状态超时",normalizedTitle:"获取项目状态超时",charIndex:103},{level:2,title:"项目丢失/孤独数据/项目找不到",slug:"项目丢失-孤独数据-项目找不到",normalizedTitle:"项目丢失/孤独数据/项目找不到",charIndex:115},{level:3,title:"快捷修复",slug:"快捷修复",normalizedTitle:"快捷修复",charIndex:136},{level:3,title:"手动修复",slug:"手动修复",normalizedTitle:"手动修复",charIndex:146},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:156}],headersStr:"WebSocket （web socket 错误,请检查是否开启 ws 代理） Jps 命令异常 最简单的自查方式 排查 jps 缓存文件 Jps 执行响应很慢 获取项目状态超时 项目丢失/孤独数据/项目找不到 快捷修复 手动修复 注意",content:' * WebSocket （web socket 错误,请检查是否开启 ws 代理）\n * Jps 命令异常\n   * 最简单的自查方式\n   * 排查 jps 缓存文件\n * Jps 执行响应很慢\n * 获取项目状态超时\n * 项目丢失/孤独数据/项目找不到\n   * 快捷修复\n   * 手动修复\n   * 注意\n\n\n\n\n# WebSocket （web socket 错误,请检查是否开启 ws 代理）\n\nJpom 中服务端和插件端通信方式有 http、WebSocket,http 主要传输一下基础操作、上传文件相关，WebSocket 主要用于一些需要实时传输的信息如：控制台日志、脚本执行日志等。\n\n服务端中对接口也是采用 http+WebSocket 来实现，如果用户在使用中出现 WebSocket 连接错误或者控制台看不到任何信息时候：需要检查一下是否使用代理软件代理 Jpom 服务端或者插件端（如：nginx 代理）\n\n如果使用了反向代理需要确认是否配置 WebSocket 相关配置\n\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection "upgrade";\n\n\n1\n2\n\n\n\n# Jps 命令异常\n\nJpom 针对 Java 程序状态监控采用 jps 命令，jps 在 jdk 中都默认包含一般不需要额外配置，如果出现插件端中提示 jps 命令异常等相关错误提示。\n\n * 需要检查一下在服务器中能正常执行 jps 命令,不能正常执行需要检查 jdk 是否完整（jps 是 jdk 的工具、jvm 中不存在 jps）\n * 需要检查插件端是否能正常加载环境变量\n * 需要检查服务器中是否存在多个 jdk 环境，如果存在多个需要确认使用的 jdk 是否正确（特殊情况下可以在 agent.sh、agent.bat 中指定使用的 jdk）\n * linux 服务器建议使用绝对路径启动插件端 如：bash /xxxx/xxxx/Agent.sh\n * windows 服务器需要检查 Agent.bat 编码格式是否匹配，windows 环境中建议使用 GB2312 编码格式\n\n> 注意修改相关配置或者环境变量后需要重启插件端\n\n如果排查上诉相关问题，还是不能解决问题请继续看下述说明\n\n判定依据 （jps 异常判定）\n\n 1. 对应的项目（普通运行模式）运行状态是未运行\n 2. 使用 jps 命令并未查询到插件端自身进程\n\n\n# 最简单的自查方式\n\n在 Jpom 中创建一个节点脚本（在对应的机器节点中）脚本内容：jps -mlv 看是否有 jpom 插件端进程，如果没有请继续自查，如果有那么您需要手动到中断重启一下插件端即可\n\n\n# 排查 jps 缓存文件\n\njps 的工作原理\n\njava程序在启动以后，会在java.io.tmpdir指定的目录下，就是临时文件夹里，生成一个类似于hsperfdata_User的文件夹，这个文件夹里有几个文件，名字就是java进程的pid，因此列出当前运行的java进程，只是把这个目录里的文件名列一下而已。 至于系统的参数什么，就可以解析这几个文件获得。\n\n目录举例： (一般情况下默认文件路径)\n\n * 在 Linux 中为/tmp/hsperfdata_{userName}/\n * 在 Windows 中为 C:\\Users\\用户\\AppData\\Local\\Temp\\hsperfdata_{userName}\n\n如果对应目录中没有 java 进程编号的文件，就表示文件被异常删除了、或者权限不足相关引起的。\n\n解决办法：\n\n 1. 手动关闭对应的 java 进程重新启动查看是否存在对应的文件\n 2. 检查对应的文件夹是否被修改过权限造成当前用户无法读取到对应目录\n\n\n# Jps 执行响应很慢\n\nJpom 中在获取节点状态、进程列表都会使用到部分 jps 命令，如果您发现节点基本功能都正常，但节点监控异常或者无法查看进程列表。 插件端日志有大量 /status 超时信息\n\n\n\n此时您可以在服务器中执行一下：jps -l 命令查看响应速度 ：\n\n 1. 如果响应慢但是返回个数不多这个很可能是 jdk 差异 目前已知 openJ9 jdk 可能出现这样的情况\n 2. 如果响应出很多进程，并且实际上未运行这么多进程排查方法如下：\n    1. 可能是因为平时关闭 java 进程均使用 kill -9 xxx，这样方式可能产生僵尸进程\n    2. jps 命令实际上是有文件缓存的，在 linux 服务器上目录为：/tmp/hsperfdata_$USER ($USER是启动Java程序的用户)\n\n\n# 获取项目状态超时\n\n如果在节点（插件端）控制台或者项目列表中出现一直没有显示项目状态，或者出现提示超时信息。 这种一般是获取项目状态超时，因为 jpom 针对 java 程序获取状态默认使用 jps 命令来处理，据了解可能在不同的 jdk 中 jps 命令存在一定差异，可能出现 jps 命令响应很慢（openJ9 ）\n\n解决办法有如下：\n\n 1. 配置节点超时时间 + 配置前端请求超时时间（前端请求超时时间在服务端 extConfig 中配置）\n 2. 跟换 jdk（建议使用 openjdk） 或者排查 是否出现异常进程\n 3. 升级 jpom 版本，2.8.18+ 优化过批量获取项目状态相关逻辑，会缩短整个接口耗时\n\n\n# 项目丢失/孤独数据/项目找不到\n\n如果您在使用过程中方式您新的项目在项目列表中无法看到，但是新建项目存在对应路径被占用表示此项目变成孤独数据啦。\n\n和为孤独数据：\n\n * 孤独数据是值机器几点里面存在数据，但是无非和当前系统绑定上关系（关闭绑定节点ID+工作空间ID对应才行），一般情况下不会出现这样的数据\n * 通常情况为项目迁移工作空间、迁移物理机器等一些操作可能产生孤独数据\n * 如果孤独数据被工作空间下的其他功能关联，修正后关联的数据将失效对应功能无非查询到关联数据\n * 低版本项目数据未存储节点ID，对应项目数据也将出来在孤独数据中（此类数据不影响使用）\n * 一个物理节点被多个服务端绑定也会产生孤独数据奥\n\n出现类似情况不要慌，我们可以手动修复孤独数据\n\n\n# 快捷修复\n\n路径：【系统管理】->【资产管理】->【机器管理】->【选择对应机器管理】->【缓存监控】->【孤独数据】\n\n请按照页面引导进行操作，如果误操作可能任然存在异常数据或者孤独数据奥。\n\n\n# 手动修复\n\n到对应的机器插件端的数据目录找到 project.json 或者 script.json 文件，手动修改：nodeId、workspaceId 字段，改为数据正确关联的Id。\n\n手动修改后我们建议您重启服务端来进行全量同步所有节点的项目或者脚步数据\n\n\n# 注意\n\n修改仅会修正项目数据，和项目关联的数据不会被修复，关联数据需要您重新绑定或者删除后新建',normalizedContent:' * websocket （web socket 错误,请检查是否开启 ws 代理）\n * jps 命令异常\n   * 最简单的自查方式\n   * 排查 jps 缓存文件\n * jps 执行响应很慢\n * 获取项目状态超时\n * 项目丢失/孤独数据/项目找不到\n   * 快捷修复\n   * 手动修复\n   * 注意\n\n\n\n\n# websocket （web socket 错误,请检查是否开启 ws 代理）\n\njpom 中服务端和插件端通信方式有 http、websocket,http 主要传输一下基础操作、上传文件相关，websocket 主要用于一些需要实时传输的信息如：控制台日志、脚本执行日志等。\n\n服务端中对接口也是采用 http+websocket 来实现，如果用户在使用中出现 websocket 连接错误或者控制台看不到任何信息时候：需要检查一下是否使用代理软件代理 jpom 服务端或者插件端（如：nginx 代理）\n\n如果使用了反向代理需要确认是否配置 websocket 相关配置\n\nproxy_set_header upgrade $http_upgrade;\nproxy_set_header connection "upgrade";\n\n\n1\n2\n\n\n\n# jps 命令异常\n\njpom 针对 java 程序状态监控采用 jps 命令，jps 在 jdk 中都默认包含一般不需要额外配置，如果出现插件端中提示 jps 命令异常等相关错误提示。\n\n * 需要检查一下在服务器中能正常执行 jps 命令,不能正常执行需要检查 jdk 是否完整（jps 是 jdk 的工具、jvm 中不存在 jps）\n * 需要检查插件端是否能正常加载环境变量\n * 需要检查服务器中是否存在多个 jdk 环境，如果存在多个需要确认使用的 jdk 是否正确（特殊情况下可以在 agent.sh、agent.bat 中指定使用的 jdk）\n * linux 服务器建议使用绝对路径启动插件端 如：bash /xxxx/xxxx/agent.sh\n * windows 服务器需要检查 agent.bat 编码格式是否匹配，windows 环境中建议使用 gb2312 编码格式\n\n> 注意修改相关配置或者环境变量后需要重启插件端\n\n如果排查上诉相关问题，还是不能解决问题请继续看下述说明\n\n判定依据 （jps 异常判定）\n\n 1. 对应的项目（普通运行模式）运行状态是未运行\n 2. 使用 jps 命令并未查询到插件端自身进程\n\n\n# 最简单的自查方式\n\n在 jpom 中创建一个节点脚本（在对应的机器节点中）脚本内容：jps -mlv 看是否有 jpom 插件端进程，如果没有请继续自查，如果有那么您需要手动到中断重启一下插件端即可\n\n\n# 排查 jps 缓存文件\n\njps 的工作原理\n\njava程序在启动以后，会在java.io.tmpdir指定的目录下，就是临时文件夹里，生成一个类似于hsperfdata_user的文件夹，这个文件夹里有几个文件，名字就是java进程的pid，因此列出当前运行的java进程，只是把这个目录里的文件名列一下而已。 至于系统的参数什么，就可以解析这几个文件获得。\n\n目录举例： (一般情况下默认文件路径)\n\n * 在 linux 中为/tmp/hsperfdata_{username}/\n * 在 windows 中为 c:\\users\\用户\\appdata\\local\\temp\\hsperfdata_{username}\n\n如果对应目录中没有 java 进程编号的文件，就表示文件被异常删除了、或者权限不足相关引起的。\n\n解决办法：\n\n 1. 手动关闭对应的 java 进程重新启动查看是否存在对应的文件\n 2. 检查对应的文件夹是否被修改过权限造成当前用户无法读取到对应目录\n\n\n# jps 执行响应很慢\n\njpom 中在获取节点状态、进程列表都会使用到部分 jps 命令，如果您发现节点基本功能都正常，但节点监控异常或者无法查看进程列表。 插件端日志有大量 /status 超时信息\n\n\n\n此时您可以在服务器中执行一下：jps -l 命令查看响应速度 ：\n\n 1. 如果响应慢但是返回个数不多这个很可能是 jdk 差异 目前已知 openj9 jdk 可能出现这样的情况\n 2. 如果响应出很多进程，并且实际上未运行这么多进程排查方法如下：\n    1. 可能是因为平时关闭 java 进程均使用 kill -9 xxx，这样方式可能产生僵尸进程\n    2. jps 命令实际上是有文件缓存的，在 linux 服务器上目录为：/tmp/hsperfdata_$user ($user是启动java程序的用户)\n\n\n# 获取项目状态超时\n\n如果在节点（插件端）控制台或者项目列表中出现一直没有显示项目状态，或者出现提示超时信息。 这种一般是获取项目状态超时，因为 jpom 针对 java 程序获取状态默认使用 jps 命令来处理，据了解可能在不同的 jdk 中 jps 命令存在一定差异，可能出现 jps 命令响应很慢（openj9 ）\n\n解决办法有如下：\n\n 1. 配置节点超时时间 + 配置前端请求超时时间（前端请求超时时间在服务端 extconfig 中配置）\n 2. 跟换 jdk（建议使用 openjdk） 或者排查 是否出现异常进程\n 3. 升级 jpom 版本，2.8.18+ 优化过批量获取项目状态相关逻辑，会缩短整个接口耗时\n\n\n# 项目丢失/孤独数据/项目找不到\n\n如果您在使用过程中方式您新的项目在项目列表中无法看到，但是新建项目存在对应路径被占用表示此项目变成孤独数据啦。\n\n和为孤独数据：\n\n * 孤独数据是值机器几点里面存在数据，但是无非和当前系统绑定上关系（关闭绑定节点id+工作空间id对应才行），一般情况下不会出现这样的数据\n * 通常情况为项目迁移工作空间、迁移物理机器等一些操作可能产生孤独数据\n * 如果孤独数据被工作空间下的其他功能关联，修正后关联的数据将失效对应功能无非查询到关联数据\n * 低版本项目数据未存储节点id，对应项目数据也将出来在孤独数据中（此类数据不影响使用）\n * 一个物理节点被多个服务端绑定也会产生孤独数据奥\n\n出现类似情况不要慌，我们可以手动修复孤独数据\n\n\n# 快捷修复\n\n路径：【系统管理】->【资产管理】->【机器管理】->【选择对应机器管理】->【缓存监控】->【孤独数据】\n\n请按照页面引导进行操作，如果误操作可能任然存在异常数据或者孤独数据奥。\n\n\n# 手动修复\n\n到对应的机器插件端的数据目录找到 project.json 或者 script.json 文件，手动修改：nodeid、workspaceid 字段，改为数据正确关联的id。\n\n手动修改后我们建议您重启服务端来进行全量同步所有节点的项目或者脚步数据\n\n\n# 注意\n\n修改仅会修正项目数据，和项目关联的数据不会被修复，关联数据需要您重新绑定或者删除后新建',charsets:{cjk:!0},lastUpdated:"2024/04/22, 12:06:12",lastUpdatedTimestamp:1713787572e3},{title:"无法访问",frontmatter:{title:"无法访问",date:"2022-07-25T16:43:49.000Z",permalink:"/pages/FQA/ba6ff8/",categories:["docs","FQA","常见问题"],tags:["常见问题","无法访问"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/103.%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE.html",relativePath:"文档/200.常见问题/103.无法访问.md",key:"v-ef23006a",path:"/pages/FQA/ba6ff8/",headers:[{level:2,title:"Prohibition of access",slug:"prohibition-of-access",normalizedTitle:"prohibition of access",charIndex:2},{level:2,title:"IP 授权（白名单）配置错误需要手动恢复",slug:"ip-授权-白名单-配置错误需要手动恢复",normalizedTitle:"ip 授权（白名单）配置错误需要手动恢复",charIndex:172},{level:2,title:"验证码无法正常加载（登录页）",slug:"验证码无法正常加载-登录页",normalizedTitle:"验证码无法正常加载（登录页）",charIndex:494},{level:3,title:"通用解决方法",slug:"通用解决方法",normalizedTitle:"通用解决方法",charIndex:749}],headersStr:"Prohibition of access IP 授权（白名单）配置错误需要手动恢复 验证码无法正常加载（登录页） 通用解决方法",content:"# Prohibition of access\n\n页面出现这样的提示有几个可能：\n\n 1. 有可能是您当前 IP 未授权不能访问，此时请联系管理员。\n 2. 您 IP 地址方式变化需要联系管理员添加授权\n 3. 未操作配置造成 IP 均未授权\n\n如果您切换 IP 后任然无法访问那么您可能需要手动恢复来达到可以访问的效果，手动解决方法参照下述：IP 授权（白名单）配置错误需要手动恢复\n\n\n# IP 授权（白名单）配置错误需要手动恢复\n\n> linux 执行：bash /xxxx/Server.sh restart -15 --rest:ip_config\n> \n> windows 执行 Server.bat 操作面板会提示如果执行 (2.10.0 及其以上) windows 执行: Server.bat restart --rest:ip_config\n\n注意⚠️：低版本的管理脚本可能未接收命令行传参，或者没有这个选项。还需要自行同步一下管理脚本里面的参数。（linux 版本中接收命令行参数传入程序变量为 $@，windows 版本中参考官方最新版本管理脚本内容 ）\n\n\n# 验证码无法正常加载（登录页）\n\n> 图形验证码使用到字体相关的资源，如果没有安装字体，需要手动安装字体，并且需要重启服务端。\n> \n> 如果服务器无法安装字体，则可以禁用图形验证码，并且需要重启服务端。\n\n配置方式：\n\n2.10.0 以上\n\n在服务端中的配置文件（application.yml）修改 jpom.web.disabledCaptcha 为 true\n\n2.10.0 一下\n\n在服务端中的配置文件（extConfig.yml）修改 jpom.disabledCaptcha 为 true\n\n\n# 通用解决方法\n\n安装：fontconfig\n\nyum install fontconfig\n\nfc-cache --force\n\n\n1\n2\n3\n\n\napt install fontconfig\n\nfc-cache --force\n\n\n1\n2\n3\n",normalizedContent:"# prohibition of access\n\n页面出现这样的提示有几个可能：\n\n 1. 有可能是您当前 ip 未授权不能访问，此时请联系管理员。\n 2. 您 ip 地址方式变化需要联系管理员添加授权\n 3. 未操作配置造成 ip 均未授权\n\n如果您切换 ip 后任然无法访问那么您可能需要手动恢复来达到可以访问的效果，手动解决方法参照下述：ip 授权（白名单）配置错误需要手动恢复\n\n\n# ip 授权（白名单）配置错误需要手动恢复\n\n> linux 执行：bash /xxxx/server.sh restart -15 --rest:ip_config\n> \n> windows 执行 server.bat 操作面板会提示如果执行 (2.10.0 及其以上) windows 执行: server.bat restart --rest:ip_config\n\n注意⚠️：低版本的管理脚本可能未接收命令行传参，或者没有这个选项。还需要自行同步一下管理脚本里面的参数。（linux 版本中接收命令行参数传入程序变量为 $@，windows 版本中参考官方最新版本管理脚本内容 ）\n\n\n# 验证码无法正常加载（登录页）\n\n> 图形验证码使用到字体相关的资源，如果没有安装字体，需要手动安装字体，并且需要重启服务端。\n> \n> 如果服务器无法安装字体，则可以禁用图形验证码，并且需要重启服务端。\n\n配置方式：\n\n2.10.0 以上\n\n在服务端中的配置文件（application.yml）修改 jpom.web.disabledcaptcha 为 true\n\n2.10.0 一下\n\n在服务端中的配置文件（extconfig.yml）修改 jpom.disabledcaptcha 为 true\n\n\n# 通用解决方法\n\n安装：fontconfig\n\nyum install fontconfig\n\nfc-cache --force\n\n\n1\n2\n3\n\n\napt install fontconfig\n\nfc-cache --force\n\n\n1\n2\n3\n",charsets:{cjk:!0},lastUpdated:"2024/05/09, 02:37:43",lastUpdatedTimestamp:1715222263e3},{title:"构建相关",frontmatter:{title:"构建相关",date:"2022-07-25T16:46:41.000Z",permalink:"/pages/FQA/6a1f29/",categories:["docs","FQA","常见问题"],tags:["在线构建"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/106.%E6%9E%84%E5%BB%BA%E7%9B%B8%E5%85%B3.html",relativePath:"文档/200.常见问题/106.构建相关.md",key:"v-800a98dc",path:"/pages/FQA/6a1f29/",headers:[{level:2,title:"在线构建异常",slug:"在线构建异常",normalizedTitle:"在线构建异常",charIndex:3},{level:2,title:"命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)",slug:"命令未找到或者不能执行-command-not-found-xxxx、xxxx-command-not-found",normalizedTitle:"命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)",charIndex:13},{level:3,title:"终极解决办法",slug:"终极解决办法",normalizedTitle:"终极解决办法",charIndex:79},{level:2,title:"本地构建为啥不能选",slug:"本地构建为啥不能选",normalizedTitle:"本地构建为啥不能选",charIndex:89},{level:2,title:"构建日志提示：xxx 不存在、处理构建产物失败",slug:"构建日志提示-xxx-不存在、处理构建产物失败",normalizedTitle:"构建日志提示：xxx 不存在、处理构建产物失败",charIndex:102},{level:2,title:"如何避免重复构建",slug:"如何避免重复构建",normalizedTitle:"如何避免重复构建",charIndex:129},{level:2,title:"上传或者构建发布出现：Error writing to server 异常信息",slug:"上传或者构建发布出现-error-writing-to-server-异常信息",normalizedTitle:"上传或者构建发布出现：error writing to server 异常信息",charIndex:141},{level:2,title:"导入仓库时：服务异常：SSLProtocolException: Empty issuer DN not allowed in X509Certificates",slug:"导入仓库时-服务异常-sslprotocolexception-empty-issuer-dn-not-allowed-in-x509certificates",normalizedTitle:"导入仓库时：服务异常：sslprotocolexception: empty issuer dn not allowed in x509certificates",charIndex:184},{level:2,title:"在线构建拉取代码异常",slug:"在线构建拉取代码异常",normalizedTitle:"在线构建拉取代码异常",charIndex:268},{level:2,title:"发布文件 / 上传文件 (Target must be a directory)",slug:"发布文件-上传文件-target-must-be-a-directory",normalizedTitle:"发布文件 / 上传文件 (target must be a directory)",charIndex:282}],headersStr:"在线构建异常 命令未找到或者不能执行 (command not found: xxxx、xxxx command not found) 终极解决办法 本地构建为啥不能选 构建日志提示：xxx 不存在、处理构建产物失败 如何避免重复构建 上传或者构建发布出现：Error writing to server 异常信息 导入仓库时：服务异常：SSLProtocolException: Empty issuer DN not allowed in X509Certificates 在线构建拉取代码异常 发布文件 / 上传文件 (Target must be a directory)",content:" * 在线构建异常\n * 命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)\n   * 终极解决办法\n * 本地构建为啥不能选\n * 构建日志提示：xxx 不存在、处理构建产物失败\n * 如何避免重复构建\n * 上传或者构建发布出现：Error writing to server 异常信息\n * 导入仓库时：服务异常：SSLProtocolException: Empty issuer DN not allowed in X509Certificates\n * 在线构建拉取代码异常\n * 发布文件 / 上传文件 (Target must be a directory)\n\n\n\n\n# 在线构建异常\n\n> 在使用在线构建中出现 xxx:未找到命令 等相关提示。\n\n> 构建依赖的是系统环境，如果需要 maven 或者 node 需要服务端所在的服务器中有对应插件，如果已经启动服务端再安装的对应环境需要通过命令行重启服务端后才生效。\n\n\n# 命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)\n\n提醒\n\n如果您使用在线构建遇到此问题，您子需要检查安装服务端所有的服务器即可，因为在线构建是在服务端执行\n\n在使用在线构建提示相关命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)，请检查服务端所在的服务器中是否存在对应环境\n\n构建依赖的是系统环境，如果需要 maven 或者 node 需要服务端所在的服务器中有对应插件。\n\n如果已经启动服务端再安装的对应环境需要通过命令行重启服务端后可能生效。\n\n注意环境变量分为：系统级别、用户级别、当前会话级别。我们建议您检查系统级别和用户级别，因为系统级别和用户级别会覆盖当前会话级别的环境变量。\n\n如果操作重启还是不生效请检查\n\n 1. 执行重启命令的终端是否能正常执行对应命令\n 2. 建议将环境变量配置到当前用户级别\n 3. 建议使用全路径来重启服务端 bash /xxxx/bin/Server.sh restart\n 4. 如果 linux 注册成服务方式启动可能部分环境变量失效，需要您手动在 Jpom 中配置\n\n\n# 终极解决办法\n\n在 Jpom 系统中再次配置环境变量，使其来生效。配置路径：\n\n【系统管理】-> 【配置管理】->【系统配置目录】->[ exec/template.sh/exec/template.bat ]\n\n----------------------------------------\n\n执行上述所有操作均不能生效、请不要灰心还是您的问题。此时您需要检查您的系统中对应环境变量相关的配置了，不同系统和不用场景操作均不同\n\n注意：此问题和 Jpom 服务端本身程序没有任何关系！！！！\n\n注意\n\n上述操作仅适用于本地构建情况\n\n\n# 本地构建为啥不能选\n\n容器安装的服务端不能使用本地构建（因为本地构建依赖启动服务端本地的环境，容器方式安装不便于管理本地依赖插件）\n\n\n# 构建日志提示：xxx 不存在、处理构建产物失败\n\n请优先检查构建命令执行结果是否如预期执行结果一致产生对应的文件\n\n需要检查构建日志中是否存在异常，造成命令并未正常执行结束而是提前终止。\n\n再检查构建产物目录填写是否正常\n\n请注意构建产物目录是填写仓库下面的相对路径：如 dist 、/target/xxxx.jar\n\n⚠️ 注意：\n\n目前 Jpom 执行构建命令是逐行执行，如果需要切换命令或者多条命令需要同时执行需要使用 &&\n\n比如：cd xxx && mvn clean package (先将执行目录切换到 xxx 再执行 后续命令)\n\n需要保证多条命令都必须执行成功，如果执行某条命令失败需要终止也是需要使用 && 来实现\n\n比如：npm i && npm run build 需要先安装依赖并且成功安装后再打包\n\n\n# 如何避免重复构建\n\n目前 Jpom 中的触发器并未解析触发事件信息，相当于只要请求了该接口就将执行构建。\n\n问： 那么该如何避免提交非构建分支时候触发构建呢？\n\n答： 开启差异构建，差异构建是指构建时候是否判断仓库代码有变动，如果没有变动则不执行构建\n\n\n\n\n# 上传或者构建发布出现：Error writing to server 异常信息\n\norg.dromara.jpom.system.AgentException: xxx节点异常：Error writing to server\n\tat forward.org.dromara.jpom.common.NodeForward.responseException(NodeForward.java:235)\n\tat forward.org.dromara.jpom.common.NodeForward.request(NodeForward.java:208)\n\tat forward.org.dromara.jpom.common.NodeForward.request(NodeForward.java:90)\n\tat org.dromara.jpom.outgiving.OutGivingRun.fileUpload(OutGivingRun.java:145)\n\tat org.dromara.jpom.build.ReleaseManage.doProject(ReleaseManage.java:505)\n\tat org.dromara.jpom.build.ReleaseManage.start(ReleaseManage.java:165)\n\tat org.dromara.jpom.build.ReleaseManage.run(ReleaseManage.java:546)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n出现上述信息可能是因为上传文件超过插件端上传文件大小限制，需要配置更大的上传文件限制\n\n\n# 导入仓库时：服务异常：SSLProtocolException: Empty issuer DN not allowed in X509Certificates\n\nCaused by: javax.net.ssl.SSLProtocolException: Empty issuer DN not allowed in X509Certificates\n        at sun.security.ssl.HandshakeMessage$CertificateMsg.<init>(HandshakeMessage.java:452)\n        at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216)\n        at sun.security.ssl.Handshaker.processLoop(Handshaker.java:1026)\n        at sun.security.ssl.Handshaker.process_record(Handshaker.java:961)\n        at sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1062)\n        at sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375)\n        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403)\n        at sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387)\n        at sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559)\n        at sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)\n        at sun.net.www.protocol.https.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:153)\n        at cn.hutool.http.HttpConnection.connect(HttpConnection.java:379)\n        at cn.hutool.http.HttpRequest.send(HttpRequest.java:1299)\n        ... 81 common frames omitted\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n出现上述信息可能是因为JAVA 版本问题\n\n目前无问题版本≤1.8.0_332\n\n发现问题版本：1.8.0_121\n\n1.8.0_332版本以下，出现升级版本即可 centos 命令yum -y install java-1.8.0-openjdk.x86_64Ubuntu自行百度\n\n\n# 在线构建拉取代码异常\n\n拉取代码发生未知异常建议清除构建重新操作:malformed input or input contains unmnappable characters:\n\njava.nio.file.InvalidPathException：Malformed input or input contains unmappable characters\n\n问题可能是因为您仓库中存在中文字符，但是您服务端所在的服务器不支持中文字符，导致拉取文件失败。\n\n解决办法：\n\n 1. 确保 Server.sh 中 JVM 参数存在：-Dfile.encoding=UTF-8\n 2. 检查服务器是否支持 zh_CN.UTF-8 （/etc/sysconfig/i18n）\n\n\n# 发布文件 / 上传文件 (Target must be a directory)\n\n当您构建发布项目、节点分发项目、手动上传文件到文件\n\n出现此问题绝大多数是在 windows 环境（插件端），并且对应项目正在运行中，此文件正在被进程占用。\n\n解决办法：\n\n 1. 构建项目发布开启：发布前停止\n 2. 节点分发开启：发布前停止",normalizedContent:" * 在线构建异常\n * 命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)\n   * 终极解决办法\n * 本地构建为啥不能选\n * 构建日志提示：xxx 不存在、处理构建产物失败\n * 如何避免重复构建\n * 上传或者构建发布出现：error writing to server 异常信息\n * 导入仓库时：服务异常：sslprotocolexception: empty issuer dn not allowed in x509certificates\n * 在线构建拉取代码异常\n * 发布文件 / 上传文件 (target must be a directory)\n\n\n\n\n# 在线构建异常\n\n> 在使用在线构建中出现 xxx:未找到命令 等相关提示。\n\n> 构建依赖的是系统环境，如果需要 maven 或者 node 需要服务端所在的服务器中有对应插件，如果已经启动服务端再安装的对应环境需要通过命令行重启服务端后才生效。\n\n\n# 命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)\n\n提醒\n\n如果您使用在线构建遇到此问题，您子需要检查安装服务端所有的服务器即可，因为在线构建是在服务端执行\n\n在使用在线构建提示相关命令未找到或者不能执行 (command not found: xxxx、xxxx command not found)，请检查服务端所在的服务器中是否存在对应环境\n\n构建依赖的是系统环境，如果需要 maven 或者 node 需要服务端所在的服务器中有对应插件。\n\n如果已经启动服务端再安装的对应环境需要通过命令行重启服务端后可能生效。\n\n注意环境变量分为：系统级别、用户级别、当前会话级别。我们建议您检查系统级别和用户级别，因为系统级别和用户级别会覆盖当前会话级别的环境变量。\n\n如果操作重启还是不生效请检查\n\n 1. 执行重启命令的终端是否能正常执行对应命令\n 2. 建议将环境变量配置到当前用户级别\n 3. 建议使用全路径来重启服务端 bash /xxxx/bin/server.sh restart\n 4. 如果 linux 注册成服务方式启动可能部分环境变量失效，需要您手动在 jpom 中配置\n\n\n# 终极解决办法\n\n在 jpom 系统中再次配置环境变量，使其来生效。配置路径：\n\n【系统管理】-> 【配置管理】->【系统配置目录】->[ exec/template.sh/exec/template.bat ]\n\n----------------------------------------\n\n执行上述所有操作均不能生效、请不要灰心还是您的问题。此时您需要检查您的系统中对应环境变量相关的配置了，不同系统和不用场景操作均不同\n\n注意：此问题和 jpom 服务端本身程序没有任何关系！！！！\n\n注意\n\n上述操作仅适用于本地构建情况\n\n\n# 本地构建为啥不能选\n\n容器安装的服务端不能使用本地构建（因为本地构建依赖启动服务端本地的环境，容器方式安装不便于管理本地依赖插件）\n\n\n# 构建日志提示：xxx 不存在、处理构建产物失败\n\n请优先检查构建命令执行结果是否如预期执行结果一致产生对应的文件\n\n需要检查构建日志中是否存在异常，造成命令并未正常执行结束而是提前终止。\n\n再检查构建产物目录填写是否正常\n\n请注意构建产物目录是填写仓库下面的相对路径：如 dist 、/target/xxxx.jar\n\n⚠️ 注意：\n\n目前 jpom 执行构建命令是逐行执行，如果需要切换命令或者多条命令需要同时执行需要使用 &&\n\n比如：cd xxx && mvn clean package (先将执行目录切换到 xxx 再执行 后续命令)\n\n需要保证多条命令都必须执行成功，如果执行某条命令失败需要终止也是需要使用 && 来实现\n\n比如：npm i && npm run build 需要先安装依赖并且成功安装后再打包\n\n\n# 如何避免重复构建\n\n目前 jpom 中的触发器并未解析触发事件信息，相当于只要请求了该接口就将执行构建。\n\n问： 那么该如何避免提交非构建分支时候触发构建呢？\n\n答： 开启差异构建，差异构建是指构建时候是否判断仓库代码有变动，如果没有变动则不执行构建\n\n\n\n\n# 上传或者构建发布出现：error writing to server 异常信息\n\norg.dromara.jpom.system.agentexception: xxx节点异常：error writing to server\n\tat forward.org.dromara.jpom.common.nodeforward.responseexception(nodeforward.java:235)\n\tat forward.org.dromara.jpom.common.nodeforward.request(nodeforward.java:208)\n\tat forward.org.dromara.jpom.common.nodeforward.request(nodeforward.java:90)\n\tat org.dromara.jpom.outgiving.outgivingrun.fileupload(outgivingrun.java:145)\n\tat org.dromara.jpom.build.releasemanage.doproject(releasemanage.java:505)\n\tat org.dromara.jpom.build.releasemanage.start(releasemanage.java:165)\n\tat org.dromara.jpom.build.releasemanage.run(releasemanage.java:546)\n\tat java.util.concurrent.threadpoolexecutor.runworker(threadpoolexecutor.java:1149)\n\tat java.util.concurrent.threadpoolexecutor$worker.run(threadpoolexecutor.java:624)\n\tat java.lang.thread.run(thread.java:748)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n出现上述信息可能是因为上传文件超过插件端上传文件大小限制，需要配置更大的上传文件限制\n\n\n# 导入仓库时：服务异常：sslprotocolexception: empty issuer dn not allowed in x509certificates\n\ncaused by: javax.net.ssl.sslprotocolexception: empty issuer dn not allowed in x509certificates\n        at sun.security.ssl.handshakemessage$certificatemsg.<init>(handshakemessage.java:452)\n        at sun.security.ssl.clienthandshaker.processmessage(clienthandshaker.java:216)\n        at sun.security.ssl.handshaker.processloop(handshaker.java:1026)\n        at sun.security.ssl.handshaker.process_record(handshaker.java:961)\n        at sun.security.ssl.sslsocketimpl.readrecord(sslsocketimpl.java:1062)\n        at sun.security.ssl.sslsocketimpl.performinitialhandshake(sslsocketimpl.java:1375)\n        at sun.security.ssl.sslsocketimpl.starthandshake(sslsocketimpl.java:1403)\n        at sun.security.ssl.sslsocketimpl.starthandshake(sslsocketimpl.java:1387)\n        at sun.net.www.protocol.https.httpsclient.afterconnect(httpsclient.java:559)\n        at sun.net.www.protocol.https.abstractdelegatehttpsurlconnection.connect(abstractdelegatehttpsurlconnection.java:185)\n        at sun.net.www.protocol.https.httpsurlconnectionimpl.connect(httpsurlconnectionimpl.java:153)\n        at cn.hutool.http.httpconnection.connect(httpconnection.java:379)\n        at cn.hutool.http.httprequest.send(httprequest.java:1299)\n        ... 81 common frames omitted\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n出现上述信息可能是因为java 版本问题\n\n目前无问题版本≤1.8.0_332\n\n发现问题版本：1.8.0_121\n\n1.8.0_332版本以下，出现升级版本即可 centos 命令yum -y install java-1.8.0-openjdk.x86_64ubuntu自行百度\n\n\n# 在线构建拉取代码异常\n\n拉取代码发生未知异常建议清除构建重新操作:malformed input or input contains unmnappable characters:\n\njava.nio.file.invalidpathexception：malformed input or input contains unmappable characters\n\n问题可能是因为您仓库中存在中文字符，但是您服务端所在的服务器不支持中文字符，导致拉取文件失败。\n\n解决办法：\n\n 1. 确保 server.sh 中 jvm 参数存在：-dfile.encoding=utf-8\n 2. 检查服务器是否支持 zh_cn.utf-8 （/etc/sysconfig/i18n）\n\n\n# 发布文件 / 上传文件 (target must be a directory)\n\n当您构建发布项目、节点分发项目、手动上传文件到文件\n\n出现此问题绝大多数是在 windows 环境（插件端），并且对应项目正在运行中，此文件正在被进程占用。\n\n解决办法：\n\n 1. 构建项目发布开启：发布前停止\n 2. 节点分发开启：发布前停止",charsets:{cjk:!0},lastUpdated:"2024/04/24, 07:06:47",lastUpdatedTimestamp:1713942407e3},{title:"修改配置",frontmatter:{title:"修改配置",date:"2022-07-25T16:45:23.000Z",permalink:"/pages/FQA/98500f/",categories:["docs","FQA","常见问题"],tags:[null],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/105.%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE.html",relativePath:"文档/200.常见问题/105.修改配置.md",key:"v-70549619",path:"/pages/FQA/98500f/",headers:[{level:2,title:"如何修改Jpom自身控制台日志级别",slug:"如何修改jpom自身控制台日志级别",normalizedTitle:"如何修改jpom自身控制台日志级别",charIndex:3},{level:2,title:"如何修改程序日志路径",slug:"如何修改程序日志路径",normalizedTitle:"如何修改程序日志路径",charIndex:24},{level:2,title:"如何指定Jpom运行 jvm 内存",slug:"如何指定jpom运行-jvm-内存",normalizedTitle:"如何指定jpom运行 jvm 内存",charIndex:38},{level:2,title:"如何修改程序运行端口",slug:"如何修改程序运行端口",normalizedTitle:"如何修改程序运行端口",charIndex:59},{level:2,title:"如何修改Jpom数据存储目录",slug:"如何修改jpom数据存储目录",normalizedTitle:"如何修改jpom数据存储目录",charIndex:73},{level:3,title:"2.10.0+",slug:"_2-10-0",normalizedTitle:"2.10.0+",charIndex:93},{level:3,title:"2.10.0 以下",slug:"_2-10-0-以下",normalizedTitle:"2.10.0 以下",charIndex:106},{level:2,title:"如何修改Jpom插件端账户/密码",slug:"如何修改jpom插件端账户-密码",normalizedTitle:"如何修改jpom插件端账户/密码",charIndex:119},{level:3,title:"2.10.0+",slug:"_2-10-0-2",normalizedTitle:"2.10.0+",charIndex:93},{level:3,title:"2.10.0 以下",slug:"_2-10-0-以下-2",normalizedTitle:"2.10.0 以下",charIndex:106},{level:2,title:"查看控制台日志中文乱码",slug:"查看控制台日志中文乱码",normalizedTitle:"查看控制台日志中文乱码",charIndex:167},{level:3,title:"2.10.0+",slug:"_2-10-0-3",normalizedTitle:"2.10.0+",charIndex:93},{level:3,title:"2.10.0 以下",slug:"_2-10-0-以下-3",normalizedTitle:"2.10.0 以下",charIndex:106},{level:2,title:"配置上传文件大小限制",slug:"配置上传文件大小限制",normalizedTitle:"配置上传文件大小限制",charIndex:210},{level:2,title:"项目控制台日志说明",slug:"项目控制台日志说明",normalizedTitle:"项目控制台日志说明",charIndex:224},{level:2,title:"DSL 项目的控制台日志",slug:"dsl-项目的控制台日志",normalizedTitle:"dsl 项目的控制台日志",charIndex:237},{level:2,title:"项目日志占用太多存储空间怎么办？",slug:"项目日志占用太多存储空间怎么办",normalizedTitle:"项目日志占用太多存储空间怎么办？",charIndex:253},{level:3,title:"2.10.0+",slug:"_2-10-0-4",normalizedTitle:"2.10.0+",charIndex:93},{level:3,title:"2.10.0 以下",slug:"_2-10-0-以下-4",normalizedTitle:"2.10.0 以下",charIndex:106},{level:2,title:"如何关闭项目日志（控制台日志）自动备份",slug:"如何关闭项目日志-控制台日志-自动备份",normalizedTitle:"如何关闭项目日志（控制台日志）自动备份",charIndex:301},{level:3,title:"2.10.0+",slug:"_2-10-0-5",normalizedTitle:"2.10.0+",charIndex:93},{level:3,title:"2.10.0 以下",slug:"_2-10-0-以下-5",normalizedTitle:"2.10.0 以下",charIndex:106},{level:2,title:"构建历史占空间太大（在线构建文件占用空间过大）？",slug:"构建历史占空间太大-在线构建文件占用空间过大",normalizedTitle:"构建历史占空间太大（在线构建文件占用空间过大）？",charIndex:352},{level:2,title:"项目重启失败、项目停止失败",slug:"项目重启失败、项目停止失败",normalizedTitle:"项目重启失败、项目停止失败",charIndex:380}],headersStr:"如何修改Jpom自身控制台日志级别 如何修改程序日志路径 如何指定Jpom运行 jvm 内存 如何修改程序运行端口 如何修改Jpom数据存储目录 2.10.0+ 2.10.0 以下 如何修改Jpom插件端账户/密码 2.10.0+ 2.10.0 以下 查看控制台日志中文乱码 2.10.0+ 2.10.0 以下 配置上传文件大小限制 项目控制台日志说明 DSL 项目的控制台日志 项目日志占用太多存储空间怎么办？ 2.10.0+ 2.10.0 以下 如何关闭项目日志（控制台日志）自动备份 2.10.0+ 2.10.0 以下 构建历史占空间太大（在线构建文件占用空间过大）？ 项目重启失败、项目停止失败",content:' * 如何修改Jpom自身控制台日志级别\n * 如何修改程序日志路径\n * 如何指定Jpom运行 jvm 内存\n * 如何修改程序运行端口\n * 如何修改Jpom数据存储目录\n   * 2.10.0+\n   * 2.10.0 以下\n * 如何修改Jpom插件端账户/密码\n   * 2.10.0+\n   * 2.10.0 以下\n * 查看控制台日志中文乱码\n   * 2.10.0+\n   * 2.10.0 以下\n * 配置上传文件大小限制\n * 项目控制台日志说明\n * DSL 项目的控制台日志\n * 项目日志占用太多存储空间怎么办？\n   * 2.10.0+\n   * 2.10.0 以下\n * 如何关闭项目日志（控制台日志）自动备份\n   * 2.10.0+\n   * 2.10.0 以下\n * 构建历史占空间太大（在线构建文件占用空间过大）？\n * 项目重启失败、项目停止失败\n\n\n\n\n# 如何修改Jpom自身控制台日志级别\n\n修改管理程序命令文件中--spring.profiles.active=属性值pro/dev\n\n\n# 如何修改程序日志路径\n\n修改管理程序命令文件中 --jpom.log=/jpom/log/\n\n\n# 如何指定Jpom运行 jvm 内存\n\n修改管理程序命令文件中 JVM 变量添加 -Xms512m -Xmx1024m\n\n\n# 如何修改程序运行端口\n\n修改管理程序命令(Server.sh/Server.bat)文件中 --server.port=2122\n\n修改管理程序命令(Agent.sh/Agent.bat)文件中 --server.port=2123\n\n\n# 如何修改Jpom数据存储目录\n\n\n# 2.10.0+\n\n修改安装目录下 conf 文件夹 application.yml中的 jpom.path 属性\n\n\n# 2.10.0 以下\n\n修改外部配置文件extConfig.yml中的 jpom.path 属性\n\njpom:\n  # jpom 数据存储路径, 如果调试模式运行默认路径为【${user.home}/jpom/】,安装运行默认为jar包文件的父级\n  path:\n  authorize:\n    # agent 端管理账号，必填。\n    agentName: jpomAgent\n    # agent 端管理密码，非必填，如果为空Jpom 会自动生成一串随机字符串当密码\n    agentPwd:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 如何修改Jpom插件端账户/密码\n\n\n# 2.10.0+\n\n修改安装目录下 conf 文件夹application.yml中的 jpom.authorize.agent-name 和 jpom.authorize.agent-pwd 属性\n\njpom:\n  # jpom 数据存储路径, 如果调试模式运行默认路径为【${user.home}/jpom/】,安装运行默认为jar包文件的父级\n  path:\n  authorize:\n    # agent 端管理账号，必填。\n    agent-name: jpomAgent\n    # agent 端管理密码，非必填，如果为空Jpom 会自动生成一串随机字符串当密码\n    agent-pwd:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 2.10.0 以下\n\n修改插件端外部配置文件extConfig.yml中的 jpom.authorize.agentName 和 jpom.authorize.agentPwd 属性\n\njpom:\n  # jpom 数据存储路径, 如果调试模式运行默认路径为【${user.home}/jpom/】,安装运行默认为jar包文件的父级\n  path:\n  authorize:\n    # agent 端管理账号，必填。\n    agentName: jpomAgent\n    # agent 端管理密码，非必填，如果为空Jpom 会自动生成一串随机字符串当密码\n    agentPwd:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 查看控制台日志中文乱码\n\n由于目前采用自动识别文件编码格式，可能不准确（新版本取消自动识别），如果明确日志文件编码格式。可以在插件端的外部文件【extConfig.yml】中指定\n\n\n# 2.10.0+\n\njpom:\n  project:\n    log:\n      # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n      auto-backup-console-cron: 0 0/10 * * * ?\n      # 控制台日志文件保留大小\n      auto-backup-size: 50MB\n      # 是否自动将控制台日志文件备份\n      auto-backup-to-file: true\n      # 保存天数 配置错误或者没有，默认是7天\n      save-days: 7\n      # 日志文件的编码格式 （windows 的默认值为 GBK，其他系统默认均为 UTF8）\n      file-charset:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 2.10.0 以下\n\nlog:\n  # 日志文件的编码格式，如果没有指定就自动识别，自动识别可能出现不准确的情况\n  fileCharset:\n  # 查看日志时初始读取最后多少行（默认10，0不读取）\n  intiReadLine: 10\n\n\n1\n2\n3\n4\n5\n\n\n\n# 配置上传文件大小限制\n\nJpom 上传文件大小限制默认为 1GB，如果有上传更大到文件需要修改限制大小\n\nJpom 使用 SpringBoot 实现，大部分配置遵循 SpringBoot 配置属性。\n\n上传文件大小限制配置属性为：\n\nspring:\n  servlet:\n    multipart:\n      # 上传文件大小限制\n      max-request-size: 2GB\n      max-file-size: 1GB\n\n\n1\n2\n3\n4\n5\n6\n\n\n如果上传大文件出现 OOM 那么则需要为程序配置更大的内存，因为上传文件默认都会先缓存到内存中\n\n配置方式为：修改配置文件(application.yml/extConfig.yml)中对应属性值\n\n\n# 项目控制台日志说明\n\nJpom 项目控制台日志仅是方便您调试使用，不建议用来做日志记录。\n\n日志记录请使用专业的日志记录工具，如：Log4j2、Logback、Log4j、ELK、FileBeat、Logstash、Fluentd 等。\n\n请一定区分开控制台日志和项目日志的区别。\n\n控制台日志一般是：System.out（Java 语言）、 print (其他语言) 输出的信息\n\n项目日志一般是：程序日志框架输出的信息\n\n误区\n\n很多人没有正确使用日志框架的情况下很容易造成项目输出的日志既输出到日志文件同时也输出到控制台（非常不建议如此操作）\n\n----------------------------------------\n\n如何避免服务器运行时项目日志不输出到控制台，需要根据您项目使用的日志框架来定（请自行搜索）\n\n风险注意\n\n如果您使用 windows 服务器运行项目请一定严格把控控制台日志输出，因为 windows 服务器不支持运行中的项目自动备份清空正在运行的项目的控制台日志文件，如果没有把控好很容易出现控制台日志耗尽服务器硬盘的情况\n\n\n# DSL 项目的控制台日志\n\n如果您项目是 DSL 类型，那么您没有办法直接在项目控制台查看到您项目的日志。\n\n因为 DSL 项目的启动完全由您控制系统没有办法接管控制台输出，那么需要您自行配置控制台日志和项目日志的输出。\n\n我们建议您完全使用您使用的程序对应的日志框架来管控您项目的日志，一般不需要使用到控制台日志（本地开发和调试期间除外）。\n\n疑问\n\n如何在 Jpom 系统中查看日志文件呢？\n\n----------------------------------------\n\n声明：Jpom 暂不考虑实现完善的日志管理：ELK、Logstash 等效果，主打一个轻量辅助。专业的功能请找专业的软件\n\n----------------------------------------\n\n当您有此问题的前提您已经正常配置了日志框架并输出到指定目录了，那么您可以使用在系统中新增一个 file 类型的项目，此项目的目录指向您日志文件的文件夹，随后您可以只有文件跟踪或者日志搜索（日志阅读）来查看日志文件\n\n\n# 项目日志占用太多存储空间怎么办？\n\n可以配置项目控制台日志存储规则：（在节点管理>系统管理>系统配置 中修改）\n\n\n# 2.10.0+\n\njpom:\n  project:\n    log:\n      # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n      auto-backup-console-cron: 0 0/10 * * * ?\n      # 控制台日志文件保留大小\n      auto-backup-size: 50MB\n      # 是否自动将控制台日志文件备份\n      auto-backup-to-file: true\n      # 保存天数 配置错误或者没有，默认是7天\n      save-days: 7\n      # 日志文件的编码格式 （windows 的默认值为 GBK，其他系统默认均为 UTF8）\n      file-charset:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 2.10.0 以下\n\nlog:\n  # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n  autoBackConsoleCron: 0 0/1 * * * ?\n  # 控制台日志文件保留大小\n  autoBackSize: 10MB\n  # 是否自动将控制台日志文件备份\n  autoBackToFile: false\n  # 保存天数 配置错误或者没有，默认是7天\n  saveDays: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n参考上面配置修改保存并重启后，这样单个项目的控制台日志文件将控制在 10M、并且不会产生日志备份文件\n\n注意：参考配置中检测周期为 1 分钟，如果您项目在 1 分钟的周期内会产生 10M 的内容，那么会在下一次检测进行清空。\n\n\n# 如何关闭项目日志（控制台日志）自动备份\n\nJpom 中的项目控制台日志默认开启了备份的，但是您在项目日志太多并且存储资源有限的情况下可以选择关闭备份这样节省存储空间\n\n\n# 2.10.0+\n\njpom:\n  project:\n    log:\n      # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n      auto-backup-console-cron: 0 0/10 * * * ?\n      # 控制台日志文件保留大小\n      auto-backup-size: 50MB\n      # 是否自动将控制台日志文件备份\n      auto-backup-to-file: true\n      # 保存天数 配置错误或者没有，默认是7天\n      save-days: 7\n      # 日志文件的编码格式 （windows 的默认值为 GBK，其他系统默认均为 UTF8）\n      file-charset:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n配置页面路径：\n\n * 系统管理->资产管理->资产机器->系统配置\n * 系统管理->资产管理->资产机器->分发配置\n\n\n# 2.10.0 以下\n\nlog:\n  # 是否自动将控制台日志文件备份\n  autoBackToFile: false\n  # 保存天数 配置错误或者没有，默认是7天\n  saveDays: 1\n\n\n1\n2\n3\n4\n5\n\n\n配置页面路径：节点管理>系统管理>系统配置\n\n\n# 构建历史占空间太大（在线构建文件占用空间过大）？\n\nJpom 的在线构建默认会缓存仓库相关的文件，同时执行一次构建也将产生构建日志，保留构建产物相关的文件。\n\n构建历史主要用户查看构建日志、下载构建产物、回滚构建产物等操作\n\n随着构建功能使用频率提高构建历史占用的空间会逐步增加。\n\n该如果清理或者减少报错文件：\n\n 1. 配置统一规则\n 2. 单个构建配置是否保留构建产物\n\n配置统一规则参考服务端 extConfig.yml 配置文件：\n\n注意：修改配置后不会立即生效，会在下次触发构建时候执行检查保留规则\n\n# 构建相关配置\nbuild:\n  # 最多保存多少份历史记录\n  maxHistoryCount: 1000\n  # 单个最多保存多少份历史记录\n  itemMaxHistoryCount: 50\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 项目重启失败、项目停止失败\n\nJpom 中在项目重启的流程如下\n\n\n\n但是当执行了停止、启动 后会进行阻塞检测是否达到预期值\n\n停止项目检测的预期值是：项目状态未运行 启动项目检测的预期值是：项目状态运行中\n\n如果阻塞检测未达到期望值或者检测超时会终止执行后续流程\n\n一般情况在执行重启或者停止看到返回消息关键词包含：but unsuccessful 就表示未能成功执行\n\n举例：\n\n{"code":405,"data":{"msgs":["当前程序正常运行中，不能重复启动,PID:1341336","stop done,but unsuccessful","running:1341336"],"success":false},"msg":"上传成功并重启"}\n\n\n1\n\n\n{"code":405,"data":{"msgs":["restart done,but unsuccessful","running:1341336"],"success":false}}\n\n\n1\n\n\n问题排查\n\n * 这个时候我们需要检查我们的项目是否能正常停止，并排查不能正常停止的原因\n * 如果是 DSL 项目还需要检查 stop 事件里面是否正常实现或者正确停止项目\n\n优化配置\n\n如果您确定您的项目是能正常停止，但是就是停止耗时比较长（大于5秒） 这时我们可以通过修改配置来实现检查超时时间\n\n在插件端的配置文件：extConfig.yml （您的这个文件中可能没有相关属性，可以按照格式手动添加即可）\n\nproject:\n  # 停止、启动项目(项目状态检测)等待的时长 单位秒\n  stopWaitTime: 10\n  # 项目文件备份保留个数,大于 0 才会备份\n  fileBackupCount: 0\n  # 限制备份指定文件后缀（支持正则）\n  #fileBackupSuffix: [ \'.jar\',\'.html\',\'^.+\\\\.(?i)(txt)$\' ]\n  # 项目状态检测间隔时间 单位毫秒，最小为1毫秒\n  statusDetectionInterval: 500\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n修改说明：\n\n默认是 10 (stopWaitTime) * 500 (statusDetectionInterval)，就是 5s，假设您的程序正常停止需要 6s, 您可以配置成\n\n假设 10(stopWaitTime) 次 ，间隔 1000(statusDetectionInterval) 毫秒，这样最大 10s 基本就可以避免无法正常停止',normalizedContent:' * 如何修改jpom自身控制台日志级别\n * 如何修改程序日志路径\n * 如何指定jpom运行 jvm 内存\n * 如何修改程序运行端口\n * 如何修改jpom数据存储目录\n   * 2.10.0+\n   * 2.10.0 以下\n * 如何修改jpom插件端账户/密码\n   * 2.10.0+\n   * 2.10.0 以下\n * 查看控制台日志中文乱码\n   * 2.10.0+\n   * 2.10.0 以下\n * 配置上传文件大小限制\n * 项目控制台日志说明\n * dsl 项目的控制台日志\n * 项目日志占用太多存储空间怎么办？\n   * 2.10.0+\n   * 2.10.0 以下\n * 如何关闭项目日志（控制台日志）自动备份\n   * 2.10.0+\n   * 2.10.0 以下\n * 构建历史占空间太大（在线构建文件占用空间过大）？\n * 项目重启失败、项目停止失败\n\n\n\n\n# 如何修改jpom自身控制台日志级别\n\n修改管理程序命令文件中--spring.profiles.active=属性值pro/dev\n\n\n# 如何修改程序日志路径\n\n修改管理程序命令文件中 --jpom.log=/jpom/log/\n\n\n# 如何指定jpom运行 jvm 内存\n\n修改管理程序命令文件中 jvm 变量添加 -xms512m -xmx1024m\n\n\n# 如何修改程序运行端口\n\n修改管理程序命令(server.sh/server.bat)文件中 --server.port=2122\n\n修改管理程序命令(agent.sh/agent.bat)文件中 --server.port=2123\n\n\n# 如何修改jpom数据存储目录\n\n\n# 2.10.0+\n\n修改安装目录下 conf 文件夹 application.yml中的 jpom.path 属性\n\n\n# 2.10.0 以下\n\n修改外部配置文件extconfig.yml中的 jpom.path 属性\n\njpom:\n  # jpom 数据存储路径, 如果调试模式运行默认路径为【${user.home}/jpom/】,安装运行默认为jar包文件的父级\n  path:\n  authorize:\n    # agent 端管理账号，必填。\n    agentname: jpomagent\n    # agent 端管理密码，非必填，如果为空jpom 会自动生成一串随机字符串当密码\n    agentpwd:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 如何修改jpom插件端账户/密码\n\n\n# 2.10.0+\n\n修改安装目录下 conf 文件夹application.yml中的 jpom.authorize.agent-name 和 jpom.authorize.agent-pwd 属性\n\njpom:\n  # jpom 数据存储路径, 如果调试模式运行默认路径为【${user.home}/jpom/】,安装运行默认为jar包文件的父级\n  path:\n  authorize:\n    # agent 端管理账号，必填。\n    agent-name: jpomagent\n    # agent 端管理密码，非必填，如果为空jpom 会自动生成一串随机字符串当密码\n    agent-pwd:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 2.10.0 以下\n\n修改插件端外部配置文件extconfig.yml中的 jpom.authorize.agentname 和 jpom.authorize.agentpwd 属性\n\njpom:\n  # jpom 数据存储路径, 如果调试模式运行默认路径为【${user.home}/jpom/】,安装运行默认为jar包文件的父级\n  path:\n  authorize:\n    # agent 端管理账号，必填。\n    agentname: jpomagent\n    # agent 端管理密码，非必填，如果为空jpom 会自动生成一串随机字符串当密码\n    agentpwd:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 查看控制台日志中文乱码\n\n由于目前采用自动识别文件编码格式，可能不准确（新版本取消自动识别），如果明确日志文件编码格式。可以在插件端的外部文件【extconfig.yml】中指定\n\n\n# 2.10.0+\n\njpom:\n  project:\n    log:\n      # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n      auto-backup-console-cron: 0 0/10 * * * ?\n      # 控制台日志文件保留大小\n      auto-backup-size: 50mb\n      # 是否自动将控制台日志文件备份\n      auto-backup-to-file: true\n      # 保存天数 配置错误或者没有，默认是7天\n      save-days: 7\n      # 日志文件的编码格式 （windows 的默认值为 gbk，其他系统默认均为 utf8）\n      file-charset:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 2.10.0 以下\n\nlog:\n  # 日志文件的编码格式，如果没有指定就自动识别，自动识别可能出现不准确的情况\n  filecharset:\n  # 查看日志时初始读取最后多少行（默认10，0不读取）\n  intireadline: 10\n\n\n1\n2\n3\n4\n5\n\n\n\n# 配置上传文件大小限制\n\njpom 上传文件大小限制默认为 1gb，如果有上传更大到文件需要修改限制大小\n\njpom 使用 springboot 实现，大部分配置遵循 springboot 配置属性。\n\n上传文件大小限制配置属性为：\n\nspring:\n  servlet:\n    multipart:\n      # 上传文件大小限制\n      max-request-size: 2gb\n      max-file-size: 1gb\n\n\n1\n2\n3\n4\n5\n6\n\n\n如果上传大文件出现 oom 那么则需要为程序配置更大的内存，因为上传文件默认都会先缓存到内存中\n\n配置方式为：修改配置文件(application.yml/extconfig.yml)中对应属性值\n\n\n# 项目控制台日志说明\n\njpom 项目控制台日志仅是方便您调试使用，不建议用来做日志记录。\n\n日志记录请使用专业的日志记录工具，如：log4j2、logback、log4j、elk、filebeat、logstash、fluentd 等。\n\n请一定区分开控制台日志和项目日志的区别。\n\n控制台日志一般是：system.out（java 语言）、 print (其他语言) 输出的信息\n\n项目日志一般是：程序日志框架输出的信息\n\n误区\n\n很多人没有正确使用日志框架的情况下很容易造成项目输出的日志既输出到日志文件同时也输出到控制台（非常不建议如此操作）\n\n----------------------------------------\n\n如何避免服务器运行时项目日志不输出到控制台，需要根据您项目使用的日志框架来定（请自行搜索）\n\n风险注意\n\n如果您使用 windows 服务器运行项目请一定严格把控控制台日志输出，因为 windows 服务器不支持运行中的项目自动备份清空正在运行的项目的控制台日志文件，如果没有把控好很容易出现控制台日志耗尽服务器硬盘的情况\n\n\n# dsl 项目的控制台日志\n\n如果您项目是 dsl 类型，那么您没有办法直接在项目控制台查看到您项目的日志。\n\n因为 dsl 项目的启动完全由您控制系统没有办法接管控制台输出，那么需要您自行配置控制台日志和项目日志的输出。\n\n我们建议您完全使用您使用的程序对应的日志框架来管控您项目的日志，一般不需要使用到控制台日志（本地开发和调试期间除外）。\n\n疑问\n\n如何在 jpom 系统中查看日志文件呢？\n\n----------------------------------------\n\n声明：jpom 暂不考虑实现完善的日志管理：elk、logstash 等效果，主打一个轻量辅助。专业的功能请找专业的软件\n\n----------------------------------------\n\n当您有此问题的前提您已经正常配置了日志框架并输出到指定目录了，那么您可以使用在系统中新增一个 file 类型的项目，此项目的目录指向您日志文件的文件夹，随后您可以只有文件跟踪或者日志搜索（日志阅读）来查看日志文件\n\n\n# 项目日志占用太多存储空间怎么办？\n\n可以配置项目控制台日志存储规则：（在节点管理>系统管理>系统配置 中修改）\n\n\n# 2.10.0+\n\njpom:\n  project:\n    log:\n      # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n      auto-backup-console-cron: 0 0/10 * * * ?\n      # 控制台日志文件保留大小\n      auto-backup-size: 50mb\n      # 是否自动将控制台日志文件备份\n      auto-backup-to-file: true\n      # 保存天数 配置错误或者没有，默认是7天\n      save-days: 7\n      # 日志文件的编码格式 （windows 的默认值为 gbk，其他系统默认均为 utf8）\n      file-charset:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 2.10.0 以下\n\nlog:\n  # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n  autobackconsolecron: 0 0/1 * * * ?\n  # 控制台日志文件保留大小\n  autobacksize: 10mb\n  # 是否自动将控制台日志文件备份\n  autobacktofile: false\n  # 保存天数 配置错误或者没有，默认是7天\n  savedays: 1\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n参考上面配置修改保存并重启后，这样单个项目的控制台日志文件将控制在 10m、并且不会产生日志备份文件\n\n注意：参考配置中检测周期为 1 分钟，如果您项目在 1 分钟的周期内会产生 10m 的内容，那么会在下一次检测进行清空。\n\n\n# 如何关闭项目日志（控制台日志）自动备份\n\njpom 中的项目控制台日志默认开启了备份的，但是您在项目日志太多并且存储资源有限的情况下可以选择关闭备份这样节省存储空间\n\n\n# 2.10.0+\n\njpom:\n  project:\n    log:\n      # 检测控制台日志周期，防止日志文件过大，目前暂只支持linux 不停服备份\n      auto-backup-console-cron: 0 0/10 * * * ?\n      # 控制台日志文件保留大小\n      auto-backup-size: 50mb\n      # 是否自动将控制台日志文件备份\n      auto-backup-to-file: true\n      # 保存天数 配置错误或者没有，默认是7天\n      save-days: 7\n      # 日志文件的编码格式 （windows 的默认值为 gbk，其他系统默认均为 utf8）\n      file-charset:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n配置页面路径：\n\n * 系统管理->资产管理->资产机器->系统配置\n * 系统管理->资产管理->资产机器->分发配置\n\n\n# 2.10.0 以下\n\nlog:\n  # 是否自动将控制台日志文件备份\n  autobacktofile: false\n  # 保存天数 配置错误或者没有，默认是7天\n  savedays: 1\n\n\n1\n2\n3\n4\n5\n\n\n配置页面路径：节点管理>系统管理>系统配置\n\n\n# 构建历史占空间太大（在线构建文件占用空间过大）？\n\njpom 的在线构建默认会缓存仓库相关的文件，同时执行一次构建也将产生构建日志，保留构建产物相关的文件。\n\n构建历史主要用户查看构建日志、下载构建产物、回滚构建产物等操作\n\n随着构建功能使用频率提高构建历史占用的空间会逐步增加。\n\n该如果清理或者减少报错文件：\n\n 1. 配置统一规则\n 2. 单个构建配置是否保留构建产物\n\n配置统一规则参考服务端 extconfig.yml 配置文件：\n\n注意：修改配置后不会立即生效，会在下次触发构建时候执行检查保留规则\n\n# 构建相关配置\nbuild:\n  # 最多保存多少份历史记录\n  maxhistorycount: 1000\n  # 单个最多保存多少份历史记录\n  itemmaxhistorycount: 50\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 项目重启失败、项目停止失败\n\njpom 中在项目重启的流程如下\n\n\n\n但是当执行了停止、启动 后会进行阻塞检测是否达到预期值\n\n停止项目检测的预期值是：项目状态未运行 启动项目检测的预期值是：项目状态运行中\n\n如果阻塞检测未达到期望值或者检测超时会终止执行后续流程\n\n一般情况在执行重启或者停止看到返回消息关键词包含：but unsuccessful 就表示未能成功执行\n\n举例：\n\n{"code":405,"data":{"msgs":["当前程序正常运行中，不能重复启动,pid:1341336","stop done,but unsuccessful","running:1341336"],"success":false},"msg":"上传成功并重启"}\n\n\n1\n\n\n{"code":405,"data":{"msgs":["restart done,but unsuccessful","running:1341336"],"success":false}}\n\n\n1\n\n\n问题排查\n\n * 这个时候我们需要检查我们的项目是否能正常停止，并排查不能正常停止的原因\n * 如果是 dsl 项目还需要检查 stop 事件里面是否正常实现或者正确停止项目\n\n优化配置\n\n如果您确定您的项目是能正常停止，但是就是停止耗时比较长（大于5秒） 这时我们可以通过修改配置来实现检查超时时间\n\n在插件端的配置文件：extconfig.yml （您的这个文件中可能没有相关属性，可以按照格式手动添加即可）\n\nproject:\n  # 停止、启动项目(项目状态检测)等待的时长 单位秒\n  stopwaittime: 10\n  # 项目文件备份保留个数,大于 0 才会备份\n  filebackupcount: 0\n  # 限制备份指定文件后缀（支持正则）\n  #filebackupsuffix: [ \'.jar\',\'.html\',\'^.+\\\\.(?i)(txt)$\' ]\n  # 项目状态检测间隔时间 单位毫秒，最小为1毫秒\n  statusdetectioninterval: 500\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n修改说明：\n\n默认是 10 (stopwaittime) * 500 (statusdetectioninterval)，就是 5s，假设您的程序正常停止需要 6s, 您可以配置成\n\n假设 10(stopwaittime) 次 ，间隔 1000(statusdetectioninterval) 毫秒，这样最大 10s 基本就可以避免无法正常停止',charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"更多问题",frontmatter:{title:"更多问题",date:"2022-07-25T16:46:14.000Z",permalink:"/pages/FQA/fa9335/",categories:["docs","FQA","常见问题"],tags:["常见问题"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/199.%E6%9B%B4%E5%A4%9A%E9%97%AE%E9%A2%98.html",relativePath:"文档/200.常见问题/199.更多问题.md",key:"v-55adf227",path:"/pages/FQA/fa9335/",headers:[{level:2,title:"版本号说明",slug:"版本号说明",normalizedTitle:"版本号说明",charIndex:3},{level:2,title:"筛选的分页有问题,当前页码查询不到任何数据",slug:"筛选的分页有问题-当前页码查询不到任何数据",normalizedTitle:"筛选的分页有问题,当前页码查询不到任何数据",charIndex:12},{level:2,title:"Jpom添加项目、启动、查看项目报错",slug:"jpom添加项目、启动、查看项目报错",normalizedTitle:"jpom添加项目、启动、查看项目报错",charIndex:37},{level:2,title:"服务端添加插件端",slug:"服务端添加插件端",normalizedTitle:"服务端添加插件端",charIndex:59},{level:2,title:"关于上传文件进度条说明",slug:"关于上传文件进度条说明",normalizedTitle:"关于上传文件进度条说明",charIndex:71},{level:2,title:"如何在 Jpom 中备份项目文件",slug:"如何在-jpom-中备份项目文件",normalizedTitle:"如何在 jpom 中备份项目文件",charIndex:86},{level:2,title:"在线构建备份文件说明",slug:"在线构建备份文件说明",normalizedTitle:"在线构建备份文件说明",charIndex:106},{level:2,title:"常见问题未知问题",slug:"常见问题未知问题",normalizedTitle:"常见问题未知问题",charIndex:120},{level:2,title:"windows 环境项目在运行中不能删除文件",slug:"windows-环境项目在运行中不能删除文件",normalizedTitle:"windows 环境项目在运行中不能删除文件",charIndex:132},{level:2,title:"快速在Jpom管理页面中添加自定义js代码",slug:"快速在jpom管理页面中添加自定义js代码",normalizedTitle:"快速在jpom管理页面中添加自定义js代码",charIndex:158},{level:3,title:"操作流程如下",slug:"操作流程如下",normalizedTitle:"操作流程如下",charIndex:185},{level:3,title:"common.js 文件中支持html和js混写",slug:"common-js-文件中支持html和js混写",normalizedTitle:"common.js 文件中支持html和js混写",charIndex:197},{level:2,title:"kill: xx xxx : arguments must be process or job IDs",slug:"kill-xx-xxx-arguments-must-be-process-or-job-ids",normalizedTitle:"kill: xx xxx : arguments must be process or job ids",charIndex:225},{level:3,title:"批量关闭进程相关命令举例：",slug:"批量关闭进程相关命令举例",normalizedTitle:"批量关闭进程相关命令举例：",charIndex:282},{level:2,title:"获取远程版本信息失败: Received fatal alert: internal_error",slug:"获取远程版本信息失败-received-fatal-alert-internal-error",normalizedTitle:"获取远程版本信息失败: received fatal alert: internal_error",charIndex:299},{level:2,title:"数据存储方式、使用的是什么数据库？",slug:"数据存储方式、使用的是什么数据库",normalizedTitle:"数据存储方式、使用的是什么数据库？",charIndex:351},{level:2,title:"The stack size sprcified is too small, Specify at least 328k",slug:"the-stack-size-sprcified-is-too-small-specify-at-least-328k",normalizedTitle:"the stack size sprcified is too small, specify at least 328k",charIndex:372},{level:2,title:"SSH 证书错误",slug:"ssh-证书错误",normalizedTitle:"ssh 证书错误",charIndex:436},{level:2,title:"SSH 证书异常",slug:"ssh-证书异常",normalizedTitle:"ssh 证书异常",charIndex:448},{level:2,title:"SSH 使用证书无法连接",slug:"ssh-使用证书无法连接",normalizedTitle:"ssh 使用证书无法连接",charIndex:460},{level:2,title:"机器监控内存占用不对",slug:"机器监控内存占用不对",normalizedTitle:"机器监控内存占用不对",charIndex:476},{level:3,title:"尝试手动释放内存",slug:"尝试手动释放内存",normalizedTitle:"尝试手动释放内存",charIndex:492}],headersStr:"版本号说明 筛选的分页有问题,当前页码查询不到任何数据 Jpom添加项目、启动、查看项目报错 服务端添加插件端 关于上传文件进度条说明 如何在 Jpom 中备份项目文件 在线构建备份文件说明 常见问题未知问题 windows 环境项目在运行中不能删除文件 快速在Jpom管理页面中添加自定义js代码 操作流程如下 common.js 文件中支持html和js混写 kill: xx xxx : arguments must be process or job IDs 批量关闭进程相关命令举例： 获取远程版本信息失败: Received fatal alert: internal_error 数据存储方式、使用的是什么数据库？ The stack size sprcified is too small, Specify at least 328k SSH 证书错误 SSH 证书异常 SSH 使用证书无法连接 机器监控内存占用不对 尝试手动释放内存",content:' * 版本号说明\n * 筛选的分页有问题,当前页码查询不到任何数据\n * Jpom添加项目、启动、查看项目报错\n * 服务端添加插件端\n * 关于上传文件进度条说明\n * 如何在 Jpom 中备份项目文件\n * 在线构建备份文件说明\n * 常见问题未知问题\n * windows 环境项目在运行中不能删除文件\n * 快速在Jpom管理页面中添加自定义js代码\n   * 操作流程如下\n   * common.js 文件中支持html和js混写\n * kill: xx xxx : arguments must be process or job IDs\n   * 批量关闭进程相关命令举例：\n * 获取远程版本信息失败: Received fatal alert: internal_error\n * 数据存储方式、使用的是什么数据库？\n * The stack size sprcified is too small, Specify at least 328k\n * SSH 证书错误\n * SSH 证书异常\n * SSH 使用证书无法连接\n * 机器监控内存占用不对\n   * 尝试手动释放内存\n\n\n\n\n# 版本号说明\n\nJpom 目前分为 2 个分支版本：release 和 beta。\n\nrelease 版本为稳定版本，beta 版本为测试版本。\n\n * release 版本号为三位数（X.X.X）\n * beta 版本号为四位数（X.X.X.X）\n\nbeta 版本为不定时发布，release 是在一个阶段内将所有 beta 合并发布\n\n> 在线升级（更新）release 和 beta 版本是独立的，release 版本不能直接升级到 beta，beta 也不能直接升级到 release\n\n\n# 筛选的分页有问题,当前页码查询不到任何数据\n\n当您在页面看到此提示不要慌，此问题是您当前使用的筛选条件在非第一页的时候没有查询到任何数据。\n\n解决办法：切换分页到第一页或者取消筛选条件。\n\n疑问：为啥不在搜索（筛选）时默认切换到第一页\n\n解释：首先表明此操作大部分是用户习惯不同，可能您平时用的搜索按钮是自动切换到第一次，Jpom 中搜索和刷新合并为一个按钮，所以在按搜索不会切换页码并且搜索等同于刷新按钮。\n\n快捷操作：您可以【按住 Ctr 或者 Alt/Option 键点击搜索快速回到第一页】\n\n\n# Jpom添加项目、启动、查看项目报错\n\n1.运行的java进程有32位和64位的\n\n\n\n2.抛出异常Unable to open socket file: target process not responding or HotSpot VM not load。\n\n\n\n针对以上两个问题，Jpom目前采用略过这些进程的解决办法，请更新到2.3.1以上。\n\n\n# 服务端添加插件端\n\n目前支持的方式有如下：\n\n 1. 手动添加，节点列表添加按钮，填写节点信息\n 2. 插件端自动注册，配置服务端 token，在插件端中配置注册信息\n 3. SSH 安装插件端，先添加 ssh 到服务端中，然后根据页面按钮提示安装\n 4. 快速安装并绑定，节点列表中有快速安装操作引导\n\n\n# 关于上传文件进度条说明\n\n目前 Jpom 中到上传文件进度条仅是一个心里安慰剂（有相关经验到开发同学都懂）\n\n目前暂时没有考虑优化为真实进度条的计划（主要是因为开发起来有一定工作量，带来的体验并不能提升多少）\n\n关于在浏览器中上传项目文件缓慢原因说明， Jpom 目前都使用 http 协议和插件端通讯，那么在浏览器中上传，首先会将文件上传到服务端，再由服务端上传到插件端（节点）,用户感知到的上传耗时就会多用一部分时间。服务端上传到插件端中理论上如果使用内网通讯那么此耗时基本可以忽略。\n\n\n# 如何在 Jpom 中备份项目文件\n\n在 Jpom 中备份项目相关文件有如下方式：\n\n 1. 在线构建产生到构建历史\n 2. 为节点项目开启备份文件功能\n\n\n# 在线构建备份文件说明\n\n在线构建会为每次构建成功到产物目录生成一个构建历史并备份相关文件\n\n可以针对相关产物文件进行：\n\n * 下载：下载到本地\n * 回滚：重新执行一遍发布逻辑\n\n\n# 常见问题未知问题\n\nhttps://github.com/alibaba/arthas/issues/347\n\nhttps://bugs.java.com/bugdatabase/view_bug.do?bug_id=4770092\n\n\n# windows 环境项目在运行中不能删除文件\n\n> 由于系统原因，暂时还没有找到解决办法\n\n\n# 快速在Jpom管理页面中添加自定义js代码\n\n> 比如我们需要对Jpom的后台页面添加一些自定义js代码，来实现自己的业务。如通用的添加cnzz监测代码\n\n\n# 操作流程如下\n\n 1. 在Jpom的Server端的数据目录同级创建【script】目录\n 2. 在创建的【script】目录中添加【common.js】文件即可\n\n\n# common.js 文件中支持html和js混写\n\n如：（此代码为Jpom演示平台的实例）\n\n<div style="display: none;">\n   <script type="text/javascript" src="https://s96.cnzz.com/z_stat.php?id=0000&web_id=0000"><\/script>\n</div>\n<script type="text/javascript">\n if(location.pathname==\'/login.html\') {\n     const user = layui.data(\'user\');\n     if(!user.userName){\n         layer.msg(\'演示账号：demo  </br>  密码：demo123\');\n     }\n }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# kill: xx xxx : arguments must be process or job IDs\n\n当相关日志出现类似错误信息时候，是因为 kill 默认只支持单过进程，当传入多过进程 id 就会出现类似提示\n\n一般是因为使用： pid=$(ps -ef | grep -v \'grep\' | egrep xxxx | awk \'{printf $2 " "}\') 匹配到多过进程号\n\n这里解决方案有如下：\n\n 1. 检查 ps 命令筛选是否准确唯一，如果筛选关键词错误请先修正筛选关键词\n 2. 使用相关命令实现批量 kill 进程\n\n\n# 批量关闭进程相关命令举例：\n\n * kill -9 $(ps aux |grep "xxxx"| awk \'{print $2}\')\n * kill -9 $(pgrep xxxx)\n * ps -ef | grep -v \'grep\' | egrep xxxx | awk \'{printf $2 " "}\' | xargs kill -9\n\nxxxx 需要替换为进程标识，比如：java、php、springbootxxx\n\n\n# 获取远程版本信息失败: Received fatal alert: internal_error\n\n当使用在线升级中出现一直没有办法获取到新版本，并且控制台出现如下日志：Received fatal alert: internal_error\n\n\n\n可能原因为：JDK 版本问题\n\n参考文档：\n\n * https://blog.csdn.net/sarafina527/article/details/104813015\n * https://blog.csdn.net/qq_36218267/article/details/121741914\n\n解决办法：\n\n 1. 建议升级 JDK：JDK 1.8.0_311+\n 2. 升级JDK版本，从 JDK1.8.0_121 升级到 jdk1.8.0_212\n\n\n# 数据存储方式、使用的是什么数据库？\n\nJpom 为了方便用户快捷安装使用不需要额外配置数据所以采用了 h2 数据库在存储。\n\nh2database 官网\n\n\n# The stack size sprcified is too small, Specify at least 328k\n\n修改sh（agent.sh/agent.bat/server.sh/server.bat）脚本内容 -Xss=328k ，后可以启动。\n\n\n# SSH 证书错误\n\n同下文\n\n\n# SSH 证书异常\n\n同下文\n\n\n# SSH 使用证书无法连接\n\njpom 中 ssh 协议是使用 mwiede 库来实现的。\n\n因为 mwiede 支持高版本的 openssh 证书。\n\n但是您在使用过程中可能会遇到一些问题\n\nJSchAlgoNegoFailException:Algorithm negotiation fail:algorithmName="server_host_key"\njschProposal="ssh-ed25519ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2256"\nserverProposal="ssh-rsa,ssh-dss\'\n\n\n1\n2\n3\n\n\n如图\n\n\n\n修改 Server.sh 脚本内容\n\n# 添加低版本ssh适配启动参数\nJAVA_OPTS="$JAVA_OPTS -Djsch.server_host_key=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\nJAVA_OPTS="$JAVA_OPTS -Djsch.client_pubkey=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\n\n\n1\n2\n3\n\n\n包括但不限于此当遇到问题您可以到 mwiede 库去检索是否有相同问题和解决方案\n\n\n# 机器监控内存占用不对\n\n如果您发现系统中监控到的内存占用和您实际看到的内存占用不一致可能原因如下\n\n首先：此问题在 Linux 系统中出现\n\n如果您使用：free -h 命令查询到 free 和 total 字段计算出数值相差过大那么此时就是您当前服务器中的交换内存引起的。\n\nJpom 采用 oshi 库来监控系统，在 oshi 中使用 /proc/meminfo 来获取内存使用情况。\n\n文件中如果存在：MemAvailable、MemTotal 这两个字段，那么 oshi 直接使用，所以 Jpom 中内存占用计算方式：内存占用=(total-available)/total\n\n文件中如果不存在：MemAvailable，那么 MemAvailable = MemFree+Active(file)+Inactive(file)+SReclaimable，所以 Jpom 中内存占用计算方式：内存占用=(total-(MemFree+Active(file)+Inactive(file)+SReclaimable))/total\n\n此时就和您使用 free -h 结果相差过大，原因是 MemAvailable 计算规则：\n\n * 在不使用交换空间的情况下，启动一个新的应用最大可用内存的大小\n * MemFree只是尚未分配的内存，并不是所有可用的内存。有些已经分配掉的内存是可以回收再分配的。比如cache/buffer、slab都有一部分是可以回收的，这部分可回收的内存加上MemFree才是系统可用的内存，即MemAvailable(不精确)。\n * MemAvailable <= MemFree + Active(file) + Inactive(file) + SReclaimable\n\n参考文章：\n\n * https://lotabout.me/2021/Linux-Available-Memory/\n * https://www.cnblogs.com/aalan/p/17026258.html\n * https://langzi989.github.io/2016/12/19/\n\n综上所述：数据出现不一致仅是计算方式不一样，也并不代表计算错误\n\n> 温馨提醒：系统中趋势图中虚拟内存占用百分比可能超过 100%（原因也是计算方式问题）\n\n\n# 尝试手动释放内存\n\n风险提醒\n\n说明，释放前最好sync一下，防止丢数据。\n\n----------------------------------------\n\n因为LINUX的内核机制，一般情况下不需要特意去释放已经使用的cache。这些cache起来的内容可以增加文件以及的读写速度\n\n * 参考文章\n * 参考文章\n\nTo free pagecache:\n\necho 1 > /proc/sys/vm/drop_caches\n\n\n1\n\n\nTo free dentries and inodes:\n\necho 2 > /proc/sys/vm/drop_caches\n\n\n1\n\n\nTo free pagecache, dentries and inodes:\n\necho 3 > /proc/sys/vm/drop_caches\n\n\n1\n',normalizedContent:' * 版本号说明\n * 筛选的分页有问题,当前页码查询不到任何数据\n * jpom添加项目、启动、查看项目报错\n * 服务端添加插件端\n * 关于上传文件进度条说明\n * 如何在 jpom 中备份项目文件\n * 在线构建备份文件说明\n * 常见问题未知问题\n * windows 环境项目在运行中不能删除文件\n * 快速在jpom管理页面中添加自定义js代码\n   * 操作流程如下\n   * common.js 文件中支持html和js混写\n * kill: xx xxx : arguments must be process or job ids\n   * 批量关闭进程相关命令举例：\n * 获取远程版本信息失败: received fatal alert: internal_error\n * 数据存储方式、使用的是什么数据库？\n * the stack size sprcified is too small, specify at least 328k\n * ssh 证书错误\n * ssh 证书异常\n * ssh 使用证书无法连接\n * 机器监控内存占用不对\n   * 尝试手动释放内存\n\n\n\n\n# 版本号说明\n\njpom 目前分为 2 个分支版本：release 和 beta。\n\nrelease 版本为稳定版本，beta 版本为测试版本。\n\n * release 版本号为三位数（x.x.x）\n * beta 版本号为四位数（x.x.x.x）\n\nbeta 版本为不定时发布，release 是在一个阶段内将所有 beta 合并发布\n\n> 在线升级（更新）release 和 beta 版本是独立的，release 版本不能直接升级到 beta，beta 也不能直接升级到 release\n\n\n# 筛选的分页有问题,当前页码查询不到任何数据\n\n当您在页面看到此提示不要慌，此问题是您当前使用的筛选条件在非第一页的时候没有查询到任何数据。\n\n解决办法：切换分页到第一页或者取消筛选条件。\n\n疑问：为啥不在搜索（筛选）时默认切换到第一页\n\n解释：首先表明此操作大部分是用户习惯不同，可能您平时用的搜索按钮是自动切换到第一次，jpom 中搜索和刷新合并为一个按钮，所以在按搜索不会切换页码并且搜索等同于刷新按钮。\n\n快捷操作：您可以【按住 ctr 或者 alt/option 键点击搜索快速回到第一页】\n\n\n# jpom添加项目、启动、查看项目报错\n\n1.运行的java进程有32位和64位的\n\n\n\n2.抛出异常unable to open socket file: target process not responding or hotspot vm not load。\n\n\n\n针对以上两个问题，jpom目前采用略过这些进程的解决办法，请更新到2.3.1以上。\n\n\n# 服务端添加插件端\n\n目前支持的方式有如下：\n\n 1. 手动添加，节点列表添加按钮，填写节点信息\n 2. 插件端自动注册，配置服务端 token，在插件端中配置注册信息\n 3. ssh 安装插件端，先添加 ssh 到服务端中，然后根据页面按钮提示安装\n 4. 快速安装并绑定，节点列表中有快速安装操作引导\n\n\n# 关于上传文件进度条说明\n\n目前 jpom 中到上传文件进度条仅是一个心里安慰剂（有相关经验到开发同学都懂）\n\n目前暂时没有考虑优化为真实进度条的计划（主要是因为开发起来有一定工作量，带来的体验并不能提升多少）\n\n关于在浏览器中上传项目文件缓慢原因说明， jpom 目前都使用 http 协议和插件端通讯，那么在浏览器中上传，首先会将文件上传到服务端，再由服务端上传到插件端（节点）,用户感知到的上传耗时就会多用一部分时间。服务端上传到插件端中理论上如果使用内网通讯那么此耗时基本可以忽略。\n\n\n# 如何在 jpom 中备份项目文件\n\n在 jpom 中备份项目相关文件有如下方式：\n\n 1. 在线构建产生到构建历史\n 2. 为节点项目开启备份文件功能\n\n\n# 在线构建备份文件说明\n\n在线构建会为每次构建成功到产物目录生成一个构建历史并备份相关文件\n\n可以针对相关产物文件进行：\n\n * 下载：下载到本地\n * 回滚：重新执行一遍发布逻辑\n\n\n# 常见问题未知问题\n\nhttps://github.com/alibaba/arthas/issues/347\n\nhttps://bugs.java.com/bugdatabase/view_bug.do?bug_id=4770092\n\n\n# windows 环境项目在运行中不能删除文件\n\n> 由于系统原因，暂时还没有找到解决办法\n\n\n# 快速在jpom管理页面中添加自定义js代码\n\n> 比如我们需要对jpom的后台页面添加一些自定义js代码，来实现自己的业务。如通用的添加cnzz监测代码\n\n\n# 操作流程如下\n\n 1. 在jpom的server端的数据目录同级创建【script】目录\n 2. 在创建的【script】目录中添加【common.js】文件即可\n\n\n# common.js 文件中支持html和js混写\n\n如：（此代码为jpom演示平台的实例）\n\n<div style="display: none;">\n   <script type="text/javascript" src="https://s96.cnzz.com/z_stat.php?id=0000&web_id=0000"><\/script>\n</div>\n<script type="text/javascript">\n if(location.pathname==\'/login.html\') {\n     const user = layui.data(\'user\');\n     if(!user.username){\n         layer.msg(\'演示账号：demo  </br>  密码：demo123\');\n     }\n }\n<\/script>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# kill: xx xxx : arguments must be process or job ids\n\n当相关日志出现类似错误信息时候，是因为 kill 默认只支持单过进程，当传入多过进程 id 就会出现类似提示\n\n一般是因为使用： pid=$(ps -ef | grep -v \'grep\' | egrep xxxx | awk \'{printf $2 " "}\') 匹配到多过进程号\n\n这里解决方案有如下：\n\n 1. 检查 ps 命令筛选是否准确唯一，如果筛选关键词错误请先修正筛选关键词\n 2. 使用相关命令实现批量 kill 进程\n\n\n# 批量关闭进程相关命令举例：\n\n * kill -9 $(ps aux |grep "xxxx"| awk \'{print $2}\')\n * kill -9 $(pgrep xxxx)\n * ps -ef | grep -v \'grep\' | egrep xxxx | awk \'{printf $2 " "}\' | xargs kill -9\n\nxxxx 需要替换为进程标识，比如：java、php、springbootxxx\n\n\n# 获取远程版本信息失败: received fatal alert: internal_error\n\n当使用在线升级中出现一直没有办法获取到新版本，并且控制台出现如下日志：received fatal alert: internal_error\n\n\n\n可能原因为：jdk 版本问题\n\n参考文档：\n\n * https://blog.csdn.net/sarafina527/article/details/104813015\n * https://blog.csdn.net/qq_36218267/article/details/121741914\n\n解决办法：\n\n 1. 建议升级 jdk：jdk 1.8.0_311+\n 2. 升级jdk版本，从 jdk1.8.0_121 升级到 jdk1.8.0_212\n\n\n# 数据存储方式、使用的是什么数据库？\n\njpom 为了方便用户快捷安装使用不需要额外配置数据所以采用了 h2 数据库在存储。\n\nh2database 官网\n\n\n# the stack size sprcified is too small, specify at least 328k\n\n修改sh（agent.sh/agent.bat/server.sh/server.bat）脚本内容 -xss=328k ，后可以启动。\n\n\n# ssh 证书错误\n\n同下文\n\n\n# ssh 证书异常\n\n同下文\n\n\n# ssh 使用证书无法连接\n\njpom 中 ssh 协议是使用 mwiede 库来实现的。\n\n因为 mwiede 支持高版本的 openssh 证书。\n\n但是您在使用过程中可能会遇到一些问题\n\njschalgonegofailexception:algorithm negotiation fail:algorithmname="server_host_key"\njschproposal="ssh-ed25519ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2256"\nserverproposal="ssh-rsa,ssh-dss\'\n\n\n1\n2\n3\n\n\n如图\n\n\n\n修改 server.sh 脚本内容\n\n# 添加低版本ssh适配启动参数\njava_opts="$java_opts -djsch.server_host_key=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\njava_opts="$java_opts -djsch.client_pubkey=ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa"\n\n\n1\n2\n3\n\n\n包括但不限于此当遇到问题您可以到 mwiede 库去检索是否有相同问题和解决方案\n\n\n# 机器监控内存占用不对\n\n如果您发现系统中监控到的内存占用和您实际看到的内存占用不一致可能原因如下\n\n首先：此问题在 linux 系统中出现\n\n如果您使用：free -h 命令查询到 free 和 total 字段计算出数值相差过大那么此时就是您当前服务器中的交换内存引起的。\n\njpom 采用 oshi 库来监控系统，在 oshi 中使用 /proc/meminfo 来获取内存使用情况。\n\n文件中如果存在：memavailable、memtotal 这两个字段，那么 oshi 直接使用，所以 jpom 中内存占用计算方式：内存占用=(total-available)/total\n\n文件中如果不存在：memavailable，那么 memavailable = memfree+active(file)+inactive(file)+sreclaimable，所以 jpom 中内存占用计算方式：内存占用=(total-(memfree+active(file)+inactive(file)+sreclaimable))/total\n\n此时就和您使用 free -h 结果相差过大，原因是 memavailable 计算规则：\n\n * 在不使用交换空间的情况下，启动一个新的应用最大可用内存的大小\n * memfree只是尚未分配的内存，并不是所有可用的内存。有些已经分配掉的内存是可以回收再分配的。比如cache/buffer、slab都有一部分是可以回收的，这部分可回收的内存加上memfree才是系统可用的内存，即memavailable(不精确)。\n * memavailable <= memfree + active(file) + inactive(file) + sreclaimable\n\n参考文章：\n\n * https://lotabout.me/2021/linux-available-memory/\n * https://www.cnblogs.com/aalan/p/17026258.html\n * https://langzi989.github.io/2016/12/19/\n\n综上所述：数据出现不一致仅是计算方式不一样，也并不代表计算错误\n\n> 温馨提醒：系统中趋势图中虚拟内存占用百分比可能超过 100%（原因也是计算方式问题）\n\n\n# 尝试手动释放内存\n\n风险提醒\n\n说明，释放前最好sync一下，防止丢数据。\n\n----------------------------------------\n\n因为linux的内核机制，一般情况下不需要特意去释放已经使用的cache。这些cache起来的内容可以增加文件以及的读写速度\n\n * 参考文章\n * 参考文章\n\nto free pagecache:\n\necho 1 > /proc/sys/vm/drop_caches\n\n\n1\n\n\nto free dentries and inodes:\n\necho 2 > /proc/sys/vm/drop_caches\n\n\n1\n\n\nto free pagecache, dentries and inodes:\n\necho 3 > /proc/sys/vm/drop_caches\n\n\n1\n',charsets:{cjk:!0},lastUpdated:"2024/05/14, 01:26:05",lastUpdatedTimestamp:1715649965e3},{title:"maven 私服",frontmatter:{title:"maven 私服",date:"2022-06-11T14:55:08.000Z",permalink:"/pages/FQA/maven-conf/",tags:["maven 私服"],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/500.maven.html",relativePath:"文档/200.常见问题/500.maven.md",key:"v-4489e684",path:"/pages/FQA/maven-conf/",headers:[{level:2,title:"原始本地安装服务端",slug:"原始本地安装服务端",normalizedTitle:"原始本地安装服务端",charIndex:36},{level:3,title:"本地构建",slug:"本地构建",normalizedTitle:"本地构建",charIndex:50},{level:3,title:"容器构建",slug:"容器构建",normalizedTitle:"容器构建",charIndex:278},{level:2,title:"容器安装服务端",slug:"容器安装服务端",normalizedTitle:"容器安装服务端",charIndex:641},{level:3,title:"本地构建",slug:"本地构建-2",normalizedTitle:"本地构建",charIndex:50},{level:3,title:"容器构建",slug:"容器构建-2",normalizedTitle:"容器构建",charIndex:278}],headersStr:"原始本地安装服务端 本地构建 容器构建 容器安装服务端 本地构建 容器构建",content:"在 Java 中很多时候都需要配置 maven 私服来构建项目\n\n\n# 原始本地安装服务端\n\n\n# 本地构建\n\n> 将 Jpom 服务端直接安装到服务器中并且使用本地构建场景说明\n\n 1. 推荐使用全局 maven 配置来实现，安装 maven 插件后默认都会使用 {user.home}/.m2/settings.xml 一般使用 root 用户文件示例：/root/.m2/settings.xml\n 2. 使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package\n\n\n# 容器构建\n\n> 将 Jpom 服务端直接安装到服务器中并且使用容器构建场景说明\n\n 1. 推荐使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package\n 2. 使用 binds 来配置指定 maven .m2 目录或者settings.xml【注意容器构建必须使用宿主机对应的 docker 容器构建否则 binds 将不生效】\n\n# 指定 .m2 目录\nbinds:\n  - /Users/user/.m2/:/root/.m2/\n\n\n1\n2\n3\n\n\n# 指定 settings.xml 文件\nbinds:\n  - /Users/user/.m2/settings.xml:/root/.m2/settings.xml\n\n\n1\n2\n3\n\n\n\n# 容器安装服务端\n\n\n# 本地构建\n\n> 将 Jpom 服务端直接安装到 docker 中并且使用本地构建场景说明\n\n 1. 使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package\n\n\n# 容器构建\n\n> 将 Jpom 服务端直接安装到 docker 中并且使用容器构建场景说明\n\n 1. 使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package",normalizedContent:"在 java 中很多时候都需要配置 maven 私服来构建项目\n\n\n# 原始本地安装服务端\n\n\n# 本地构建\n\n> 将 jpom 服务端直接安装到服务器中并且使用本地构建场景说明\n\n 1. 推荐使用全局 maven 配置来实现，安装 maven 插件后默认都会使用 {user.home}/.m2/settings.xml 一般使用 root 用户文件示例：/root/.m2/settings.xml\n 2. 使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package\n\n\n# 容器构建\n\n> 将 jpom 服务端直接安装到服务器中并且使用容器构建场景说明\n\n 1. 推荐使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package\n 2. 使用 binds 来配置指定 maven .m2 目录或者settings.xml【注意容器构建必须使用宿主机对应的 docker 容器构建否则 binds 将不生效】\n\n# 指定 .m2 目录\nbinds:\n  - /users/user/.m2/:/root/.m2/\n\n\n1\n2\n3\n\n\n# 指定 settings.xml 文件\nbinds:\n  - /users/user/.m2/settings.xml:/root/.m2/settings.xml\n\n\n1\n2\n3\n\n\n\n# 容器安装服务端\n\n\n# 本地构建\n\n> 将 jpom 服务端直接安装到 docker 中并且使用本地构建场景说明\n\n 1. 使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package\n\n\n# 容器构建\n\n> 将 jpom 服务端直接安装到 docker 中并且使用容器构建场景说明\n\n 1. 使用构建命令来指定 settings.xml 文件位置，如：mvn -s xxx/settings.xml clean package",charsets:{cjk:!0},lastUpdated:"2024/01/13, 11:36:49",lastUpdatedTimestamp:1705145809e3},{title:"启动参数",frontmatter:{title:"启动参数",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/1508cd/",tags:[null],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0111.%E7%AE%A1%E7%90%86/08.%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0.html",relativePath:"文档/9999.历史文档/0111.管理/08.启动参数.md",key:"v-9c9d9c48",path:"/pages/1508cd/",headers:[{level:2,title:"Jpom 的参数配置",slug:"jpom-的参数配置",normalizedTitle:"jpom 的参数配置",charIndex:2},{level:2,title:"如何修改程序运行端口",slug:"如何修改程序运行端口",normalizedTitle:"如何修改程序运行端口",charIndex:94},{level:2,title:"如何指定Jpom运行jvm内存",slug:"如何指定jpom运行jvm内存",normalizedTitle:"如何指定jpom运行jvm内存",charIndex:143},{level:2,title:"如何修改程序日志路径",slug:"如何修改程序日志路径",normalizedTitle:"如何修改程序日志路径",charIndex:206},{level:2,title:"如何修改会话超时时长",slug:"如何修改会话超时时长",normalizedTitle:"如何修改会话超时时长",charIndex:258},{level:2,title:"如何修改 Jpom 自身控制台日志级别",slug:"如何修改-jpom-自身控制台日志级别",normalizedTitle:"如何修改 jpom 自身控制台日志级别",charIndex:326},{level:2,title:"如何修改 Jpom 数据存储目录",slug:"如何修改-jpom-数据存储目录",normalizedTitle:"如何修改 jpom 数据存储目录",charIndex:400},{level:2,title:"如何修改 Jpom 插件端账户/密码",slug:"如何修改-jpom-插件端账户-密码",normalizedTitle:"如何修改 jpom 插件端账户/密码",charIndex:461}],headersStr:"Jpom 的参数配置 如何修改程序运行端口 如何指定Jpom运行jvm内存 如何修改程序日志路径 如何修改会话超时时长 如何修改 Jpom 自身控制台日志级别 如何修改 Jpom 数据存储目录 如何修改 Jpom 插件端账户/密码",content:"# Jpom 的参数配置\n\n在项目运行的根路径下的extConfig.yml文件\n\n 1. 插件端示例：extConfig.yml\n 2. 服务端示例：extConfig.yml\n\n\n# 如何修改程序运行端口\n\n> 修改管理程序命令文件中 --server.port=2122\n\n\n# 如何指定Jpom运行jvm内存\n\n> 修改管理程序命令文件中 JVM 变量添加 -Xms512m -Xmx1024m\n\n\n# 如何修改程序日志路径\n\n> 修改管理程序命令文件中 --jpom.log=/jpom/log/\n\n\n# 如何修改会话超时时长\n\n> 在管理程序命令文件中 ARGS 变量添加 --tomcat.sessionTimeOut=1800\n\n\n# 如何修改 Jpom 自身控制台日志级别\n\n> 修改管理程序命令文件中--spring.profiles.active=属性值pro/dev\n\n\n# 如何修改 Jpom 数据存储目录\n\n> 修改外部配置文件extConfig.yml中的 jpom.path 属性\n\n\n# 如何修改 Jpom 插件端账户/密码\n\n> 修改插件端外部配置文件extConfig.yml中的 jpom.authorize.agentName 和 jpom.authorize.agentPwd 属性",normalizedContent:"# jpom 的参数配置\n\n在项目运行的根路径下的extconfig.yml文件\n\n 1. 插件端示例：extconfig.yml\n 2. 服务端示例：extconfig.yml\n\n\n# 如何修改程序运行端口\n\n> 修改管理程序命令文件中 --server.port=2122\n\n\n# 如何指定jpom运行jvm内存\n\n> 修改管理程序命令文件中 jvm 变量添加 -xms512m -xmx1024m\n\n\n# 如何修改程序日志路径\n\n> 修改管理程序命令文件中 --jpom.log=/jpom/log/\n\n\n# 如何修改会话超时时长\n\n> 在管理程序命令文件中 args 变量添加 --tomcat.sessiontimeout=1800\n\n\n# 如何修改 jpom 自身控制台日志级别\n\n> 修改管理程序命令文件中--spring.profiles.active=属性值pro/dev\n\n\n# 如何修改 jpom 数据存储目录\n\n> 修改外部配置文件extconfig.yml中的 jpom.path 属性\n\n\n# 如何修改 jpom 插件端账户/密码\n\n> 修改插件端外部配置文件extconfig.yml中的 jpom.authorize.agentname 和 jpom.authorize.agentpwd 属性",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"项目备份",frontmatter:{title:"项目备份",date:"2022-06-11T14:58:09.000Z",permalink:"/pages/FQA/project-file-backup/",tags:[null],categories:["docs","FQA"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/200.%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/300.ProjectFileBackup.html",relativePath:"文档/200.常见问题/300.ProjectFileBackup.md",key:"v-67e2d778",path:"/pages/FQA/project-file-backup/",headers:[{level:2,title:"前言",slug:"前言",normalizedTitle:"前言",charIndex:2},{level:2,title:"项目备份 VS 构建产物",slug:"项目备份-vs-构建产物",normalizedTitle:"项目备份 vs 构建产物",charIndex:311},{level:2,title:"全局开启",slug:"全局开启",normalizedTitle:"全局开启",charIndex:454},{level:3,title:"2.10.0+",slug:"_2-10-0",normalizedTitle:"2.10.0+",charIndex:463},{level:3,title:"2.10.0 以下",slug:"_2-10-0-以下",normalizedTitle:"2.10.0 以下",charIndex:548},{level:2,title:"单个项目开启",slug:"单个项目开启",normalizedTitle:"单个项目开启",charIndex:616},{level:2,title:"如何限制仅备份指定后缀文件",slug:"如何限制仅备份指定后缀文件",normalizedTitle:"如何限制仅备份指定后缀文件",charIndex:718},{level:3,title:"全局限制",slug:"全局限制",normalizedTitle:"全局限制",charIndex:736},{level:4,title:"2.10.0+",slug:"_2-10-0-2",normalizedTitle:"2.10.0+",charIndex:463},{level:4,title:"2.10.0 以下",slug:"_2-10-0-以下-2",normalizedTitle:"2.10.0 以下",charIndex:548},{level:3,title:"单个项目限制",slug:"单个项目限制",normalizedTitle:"单个项目限制",charIndex:1053}],headersStr:"前言 项目备份 VS 构建产物 全局开启 2.10.0+ 2.10.0 以下 单个项目开启 如何限制仅备份指定后缀文件 全局限制 2.10.0+ 2.10.0 以下 单个项目限制",content:"# 前言\n\n何为项目备份，Jpom 中的项目备份为当您在系统中操作项目文件管理文件有变动将自动备份变动前的当文件\n\n举例：\n\n * 覆盖上传\n * 在线编辑（覆盖）\n\n上诉操作均产生文件变化如果您开启了文件备份功能系统将自动备份相应文件\n\n----------------------------------------\n\n开启备份文件功能相关说明如下：\n\n * 默认未开启文件备份功能\n * 如果配置值小于等于 0 则不开启备份功能\n * 备份文件保留规则为，只保留有差异的文件\n\n注意\n\n开启项目备份后您在上传项目文件操作耗时可能随着您对应项目文件数量和大小逐步增加，因为在上传结束后会触发文件对比和备份流程\n\n\n# 项目备份 VS 构建产物\n\n如果您的项目均是通过构建方式来发布文件的情况我们不建议您开启项目备份功能，因为构建产物系统默认是保留对应产物（如果您需要回滚/还原均可以通过构建历史来操作）\n\n区别：\n\n * 项目备份：存储在插件端所在服务器\n * 构建产物：存储在服务端所在服务器\n\n\n# 全局开启\n\n\n# 2.10.0+\n\n修改插件端安装目录下 conf 文件夹application.yml文件中配置jpom.project.file-backup-count属性\n\n\n# 2.10.0 以下\n\n插件端配置（ extConfig.yml ）文件中配置project.fileBackupCount属性\n\n\n# 单个项目开启\n\nDSL 项目可以在配置内容新增 file.backupCount 来开启（DSL 配置优先级最高）\n\n提醒\n\n目前仅支持对 DSL 的单个项目开启文件备份，配置到 DSL 内容中\n\n\n# 如何限制仅备份指定后缀文件\n\n\n# 全局限制\n\n# 2.10.0+\n\n修改插件端安装目录下 conf 文件夹application.yml文件中配置jpom.project.file-backup-suffix属性\n\n# 2.10.0 以下\n\n插件端配置（ extConfig.yml ）文件中配置project.fileBackupSuffix属性\n\n配置示例：\n\nproject:\n  # 项目文件备份保留个数,大于 0 才会备份\n  fileBackupCount: 5\n  # 限制备份指定文件后缀（支持正则）\n  fileBackupSuffix: [ '.jar','.html','^.+\\\\.(?i)(txt)$' ]\n\n\n1\n2\n3\n4\n5\n\n\n\n# 单个项目限制\n\n目前仅支持对 DSL 的单个项目配置限制，配置到 DSL 内容中\n\n配置示例：\n\nproject:\n  # 项目文件备份保留个数,大于 0 才会备份\n  backupCount: 5\n  # 限制备份指定文件后缀（支持正则）\n  backupSuffix: [ '.jar','.html','^.+\\\\.(?i)(txt)$' ]\n\n\n1\n2\n3\n4\n5\n",normalizedContent:"# 前言\n\n何为项目备份，jpom 中的项目备份为当您在系统中操作项目文件管理文件有变动将自动备份变动前的当文件\n\n举例：\n\n * 覆盖上传\n * 在线编辑（覆盖）\n\n上诉操作均产生文件变化如果您开启了文件备份功能系统将自动备份相应文件\n\n----------------------------------------\n\n开启备份文件功能相关说明如下：\n\n * 默认未开启文件备份功能\n * 如果配置值小于等于 0 则不开启备份功能\n * 备份文件保留规则为，只保留有差异的文件\n\n注意\n\n开启项目备份后您在上传项目文件操作耗时可能随着您对应项目文件数量和大小逐步增加，因为在上传结束后会触发文件对比和备份流程\n\n\n# 项目备份 vs 构建产物\n\n如果您的项目均是通过构建方式来发布文件的情况我们不建议您开启项目备份功能，因为构建产物系统默认是保留对应产物（如果您需要回滚/还原均可以通过构建历史来操作）\n\n区别：\n\n * 项目备份：存储在插件端所在服务器\n * 构建产物：存储在服务端所在服务器\n\n\n# 全局开启\n\n\n# 2.10.0+\n\n修改插件端安装目录下 conf 文件夹application.yml文件中配置jpom.project.file-backup-count属性\n\n\n# 2.10.0 以下\n\n插件端配置（ extconfig.yml ）文件中配置project.filebackupcount属性\n\n\n# 单个项目开启\n\ndsl 项目可以在配置内容新增 file.backupcount 来开启（dsl 配置优先级最高）\n\n提醒\n\n目前仅支持对 dsl 的单个项目开启文件备份，配置到 dsl 内容中\n\n\n# 如何限制仅备份指定后缀文件\n\n\n# 全局限制\n\n# 2.10.0+\n\n修改插件端安装目录下 conf 文件夹application.yml文件中配置jpom.project.file-backup-suffix属性\n\n# 2.10.0 以下\n\n插件端配置（ extconfig.yml ）文件中配置project.filebackupsuffix属性\n\n配置示例：\n\nproject:\n  # 项目文件备份保留个数,大于 0 才会备份\n  filebackupcount: 5\n  # 限制备份指定文件后缀（支持正则）\n  filebackupsuffix: [ '.jar','.html','^.+\\\\.(?i)(txt)$' ]\n\n\n1\n2\n3\n4\n5\n\n\n\n# 单个项目限制\n\n目前仅支持对 dsl 的单个项目配置限制，配置到 dsl 内容中\n\n配置示例：\n\nproject:\n  # 项目文件备份保留个数,大于 0 才会备份\n  backupcount: 5\n  # 限制备份指定文件后缀（支持正则）\n  backupsuffix: [ '.jar','.html','^.+\\\\.(?i)(txt)$' ]\n\n\n1\n2\n3\n4\n5\n",charsets:{cjk:!0},lastUpdated:"2024/01/13, 11:36:49",lastUpdatedTimestamp:1705145809e3},{title:"启动失败",frontmatter:{title:"启动失败",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/d39de8/",tags:[null],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0111.%E7%AE%A1%E7%90%86/09.%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html",relativePath:"文档/9999.历史文档/0111.管理/09.启动失败.md",key:"v-aa4eca94",path:"/pages/d39de8/",headers:[{level:2,title:"启动失败常见问题",slug:"启动失败常见问题",normalizedTitle:"启动失败常见问题",charIndex:2},{level:3,title:"1.  文件夹没有读写权限",slug:"_1-文件夹没有读写权限",normalizedTitle:"1.  文件夹没有读写权限",charIndex:null},{level:3,title:"3. 初始化数据库失败",slug:"_3-初始化数据库失败",normalizedTitle:"3. 初始化数据库失败",charIndex:94}],headersStr:"启动失败常见问题 1.  文件夹没有读写权限 3. 初始化数据库失败",content:"# 启动失败常见问题\n\n\n# 1. 文件夹没有读写权限\n\n> 这种错误是因为在linux或者mac系统中当前账户没有对应目录的权限，请检查当前账户是否有对应目录的读写权限\n\n\n\n\n\n\n# 3. 初始化数据库失败\n\n> 请根据具体的异常信息进行处理，一般存在数据库文件被占用、账号密码错误等\n\n> 如果出现某些字段错误，请及时联系我们。确认最新的解决方案\n\n> 联系方式以官方git上公布为准:https://gitee.com/dromara/Jpom",normalizedContent:"# 启动失败常见问题\n\n\n# 1. 文件夹没有读写权限\n\n> 这种错误是因为在linux或者mac系统中当前账户没有对应目录的权限，请检查当前账户是否有对应目录的读写权限\n\n\n\n\n\n\n# 3. 初始化数据库失败\n\n> 请根据具体的异常信息进行处理，一般存在数据库文件被占用、账号密码错误等\n\n> 如果出现某些字段错误，请及时联系我们。确认最新的解决方案\n\n> 联系方式以官方git上公布为准:https://gitee.com/dromara/jpom",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"部分限制说明",frontmatter:{title:"部分限制说明",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/7d218d/",tags:[null],categories:["docs","文档","用户管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0010.%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/01.%E7%94%A8%E6%88%B7%E8%A7%92%E8%89%B2.html",relativePath:"文档/9999.历史文档/0010.用户管理/01.用户角色.md",key:"v-6e8c7244",path:"/pages/7d218d/",headers:[{level:2,title:"防暴力登录账号机制",slug:"防暴力登录账号机制",normalizedTitle:"防暴力登录账号机制",charIndex:2},{level:2,title:"解除用户登录锁定",slug:"解除用户登录锁定",normalizedTitle:"解除用户登录锁定",charIndex:246}],headersStr:"防暴力登录账号机制 解除用户登录锁定",content:"# 防暴力登录账号机制\n\n 1. 当用户密码输错次数超过三次时，要求输出验证码才能登录\n 2. 当存在的用户登录次数超过外部配置的alwaysLoginError时，将锁定30分钟\n 3. 当存在的用户登录次数超过外部配置的alwaysLoginError两倍时，将锁定1小时\n 4. 当存在的用户登录次数超过外部配置的alwaysLoginError超过两倍时，将锁定10小时\n 5. 当登录某个Ip登录失败次数达到外部配置的alwaysLoginError十倍时，将锁定对应IP\n\n\n# 解除用户登录锁定\n\n 1. 如锁定的是普通管理员，可由系统管理员在用户列表解锁或者等待自动解锁",normalizedContent:"# 防暴力登录账号机制\n\n 1. 当用户密码输错次数超过三次时，要求输出验证码才能登录\n 2. 当存在的用户登录次数超过外部配置的alwaysloginerror时，将锁定30分钟\n 3. 当存在的用户登录次数超过外部配置的alwaysloginerror两倍时，将锁定1小时\n 4. 当存在的用户登录次数超过外部配置的alwaysloginerror超过两倍时，将锁定10小时\n 5. 当登录某个ip登录失败次数达到外部配置的alwaysloginerror十倍时，将锁定对应ip\n\n\n# 解除用户登录锁定\n\n 1. 如锁定的是普通管理员，可由系统管理员在用户列表解锁或者等待自动解锁",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"编辑用户",frontmatter:{title:"编辑用户",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/c6e79e/",tags:[null],categories:["docs","文档","用户管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0010.%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/02.%E7%BC%96%E8%BE%91%E7%94%A8%E6%88%B7.html",relativePath:"文档/9999.历史文档/0010.用户管理/02.编辑用户.md",key:"v-5632da12",path:"/pages/c6e79e/",headers:[{level:2,title:"用户属性会包含",slug:"用户属性会包含",normalizedTitle:"用户属性会包含",charIndex:2},{level:3,title:"设置用户资料",slug:"设置用户资料",normalizedTitle:"设置用户资料",charIndex:46},{level:2,title:"操作日志",slug:"操作日志",normalizedTitle:"操作日志",charIndex:367}],headersStr:"用户属性会包含 设置用户资料 操作日志",content:"# 用户属性会包含\n\n 1. 登录名\n 2. 昵称\n 3. 密码\n 4. 用户资料\n\n\n# 设置用户资料\n\n 1. 用户登录，打开用户资料\n    \n    \n\n 2. 设置通知地址\n    \n    \n\n> 设置通知邮箱需先配置发件邮箱。请先到服务端后台系统管理-邮箱配置中设置，详情请查看邮箱配置\n\n> 钉钉群\n\n获取自定义机器人webhook\n在机器人管理页面选择“自定义”机器人，输入机器人名字并选择要发送消息的群。如果需要的话，可以为机器人设置一个头像。点击“完成添加”，完成后会生成Hook地址，如下图：\n点击“复制”按钮，即可获得这个机器人对应的Webhook地址，其格式如下：\n    https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxx\n\n\n\n\n\n# 操作日志\n\n> 操作日志是记录所有用户对系统的一些操作记录\n\n> 所有人都可以看到登录日志\n\n会记录：\n\n 1. 操作用户的登录名\n 2. 操作人的IP\n 3. 所属节点Id\n 4. 数据Id(请求参数的ID字段)\n 5. 操作类型，不同的操作是不同的类型\n    \n    cn.keepbx.jpom.model.log.UserOperateLogV1.OptType\n    \n    \n    1\n    \n 6. 执行结果\n 7. 操作时间\n\n> 点击详情可以查看更多信息\n\n 1. 浏览器标识\n 2. 请求的所有参数\n 3. 响应结果",normalizedContent:"# 用户属性会包含\n\n 1. 登录名\n 2. 昵称\n 3. 密码\n 4. 用户资料\n\n\n# 设置用户资料\n\n 1. 用户登录，打开用户资料\n    \n    \n\n 2. 设置通知地址\n    \n    \n\n> 设置通知邮箱需先配置发件邮箱。请先到服务端后台系统管理-邮箱配置中设置，详情请查看邮箱配置\n\n> 钉钉群\n\n获取自定义机器人webhook\n在机器人管理页面选择“自定义”机器人，输入机器人名字并选择要发送消息的群。如果需要的话，可以为机器人设置一个头像。点击“完成添加”，完成后会生成hook地址，如下图：\n点击“复制”按钮，即可获得这个机器人对应的webhook地址，其格式如下：\n    https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxx\n\n\n\n\n\n# 操作日志\n\n> 操作日志是记录所有用户对系统的一些操作记录\n\n> 所有人都可以看到登录日志\n\n会记录：\n\n 1. 操作用户的登录名\n 2. 操作人的ip\n 3. 所属节点id\n 4. 数据id(请求参数的id字段)\n 5. 操作类型，不同的操作是不同的类型\n    \n    cn.keepbx.jpom.model.log.useroperatelogv1.opttype\n    \n    \n    1\n    \n 6. 执行结果\n 7. 操作时间\n\n> 点击详情可以查看更多信息\n\n 1. 浏览器标识\n 2. 请求的所有参数\n 3. 响应结果",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"管理命令",frontmatter:{title:"管理命令",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/530eb0/",tags:[null],categories:["docs","文档","安装使用"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0111.%E7%AE%A1%E7%90%86/10.%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4.html",relativePath:"文档/9999.历史文档/0111.管理/10.管理命令.md",key:"v-55d7a9c9",path:"/pages/530eb0/",headers:[{level:3,title:"管理命令",slug:"管理命令",normalizedTitle:"管理命令",charIndex:2},{level:3,title:"linux 服务方式管理",slug:"linux-服务方式管理",normalizedTitle:"linux 服务方式管理",charIndex:455}],headersStr:"管理命令 linux 服务方式管理",content:"# 管理命令\n\n 1. windows中Agent.bat 、Server.bat\n\n# 服务端\nServer.bat     启动管理面板(按照面板提示输入操作)\n\n# 插件端\nAgent.bat     启动管理面板(按照面板提示输入操作)\n\n\n1\n2\n3\n4\n5\n\n 2. linux中Agent.sh 、Server.sh\n\n# 服务端\nServer.sh start     启动Jpom服务端\nServer.sh stop      停止Jpom服务端\nServer.sh restart   重启Jpom服务端\nServer.sh status    查看Jpom服务端运行状态\n\n# 插件端\nAgent.sh start     启动Jpom插件端\nAgent.sh stop      停止Jpom插件端\nAgent.sh restart   重启Jpom插件端\nAgent.sh status    查看Jpom插件端运行状态\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# linux 服务方式管理\n\n> 在使用 Service.sh install 成功后\n> \n> service jpom-server {status | start | stop}\n> \n> service jpom-agent {status | start | stop}",normalizedContent:"# 管理命令\n\n 1. windows中agent.bat 、server.bat\n\n# 服务端\nserver.bat     启动管理面板(按照面板提示输入操作)\n\n# 插件端\nagent.bat     启动管理面板(按照面板提示输入操作)\n\n\n1\n2\n3\n4\n5\n\n 2. linux中agent.sh 、server.sh\n\n# 服务端\nserver.sh start     启动jpom服务端\nserver.sh stop      停止jpom服务端\nserver.sh restart   重启jpom服务端\nserver.sh status    查看jpom服务端运行状态\n\n# 插件端\nagent.sh start     启动jpom插件端\nagent.sh stop      停止jpom插件端\nagent.sh restart   重启jpom插件端\nagent.sh status    查看jpom插件端运行状态\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# linux 服务方式管理\n\n> 在使用 service.sh install 成功后\n> \n> service jpom-server {status | start | stop}\n> \n> service jpom-agent {status | start | stop}",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"编辑构建",frontmatter:{title:"编辑构建",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/29f687/",tags:[null],categories:["docs","文档","在线构建"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0887.%E5%9C%A8%E7%BA%BF%E6%9E%84%E5%BB%BA/01.%E7%BC%96%E8%BE%91%E6%9E%84%E5%BB%BA.html",relativePath:"文档/9999.历史文档/0887.在线构建/01.编辑构建.md",key:"v-0746684c",path:"/pages/29f687/",headers:[{level:4,title:"构建属性",slug:"构建属性",normalizedTitle:"构建属性",charIndex:77},{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:476},{level:3,title:"构建记录的属性",slug:"构建记录的属性",normalizedTitle:"构建记录的属性",charIndex:534},{level:3,title:"操作",slug:"操作",normalizedTitle:"操作",charIndex:322}],headersStr:"构建属性 注意 构建记录的属性 操作",content:"# 在线构建\n\n\n# 构建管理\n\n> 在线构建是提供方便快速在服务器中构建然后发布到项目或者分发到节点中个功能\n\n> 目前构建支持git仓库的拉取\n\n# 构建属性\n\n 1. 仓库地址\n\n 2. 登录名\n\n 3. 登录密码\n\n 4. 分支\n    \n    > 点击 获取分支 拉取该项目下的所有分支\n\n 5. 构建命令\n\n 6. 构建产物\n    \n    > 执行构建命令后构建产物的相对路径\n    \n     如jpom项目执行 mvn clean package 构建命令：\n     构建产物相对路径为：modules/server/target/server-2.4.2-release\n    \n    \n    \n\n 7. 发布操作\n    \n    1. 不发布\n       \n       > 只构建构建后不执行任何操作\n    \n    2. 节点分发\n       \n       > 选择已经创建的分发项\n    \n    3. 项目\n       \n       > 选择节点和项目，再选择发布后操作（重启）\n\n\n\n\n# 注意\n\n 1. 当前正在构建中必须等待上次构建结束后才能再次构建\n\n\n# 构建日志\n\n> 每次构建都会记录\n\n\n# 构建记录的属性\n\n 1. 构建Id\n    \n    > 每次构建都会自增\n\n 2. 构建状态\n    1. 构建中\n    2. 构建成功\n    3. 构建失败\n    4. 发布中\n    5. 发布成功\n    6. 发布失败\n    7. 取消构建\n 3. 开始时间\n 4. 结束时间\n 5. 构建人\n\n\n# 操作\n\n 1. 删除\n    \n    > 删除此条构建记录（如果存在构建物将一并删除）\n\n 2. 下载\n    \n    > 如果存在构建物可以把构建物打包下载\n\n 3. 发布\n    \n    > 如果构建是选择了发布，则对应构建记录可以再次发布\n    \n    > 方便快速回滚操作\n\n 4. 下载构建日志\n    \n    > 可以下载构建日志到本地查看",normalizedContent:"# 在线构建\n\n\n# 构建管理\n\n> 在线构建是提供方便快速在服务器中构建然后发布到项目或者分发到节点中个功能\n\n> 目前构建支持git仓库的拉取\n\n# 构建属性\n\n 1. 仓库地址\n\n 2. 登录名\n\n 3. 登录密码\n\n 4. 分支\n    \n    > 点击 获取分支 拉取该项目下的所有分支\n\n 5. 构建命令\n\n 6. 构建产物\n    \n    > 执行构建命令后构建产物的相对路径\n    \n     如jpom项目执行 mvn clean package 构建命令：\n     构建产物相对路径为：modules/server/target/server-2.4.2-release\n    \n    \n    \n\n 7. 发布操作\n    \n    1. 不发布\n       \n       > 只构建构建后不执行任何操作\n    \n    2. 节点分发\n       \n       > 选择已经创建的分发项\n    \n    3. 项目\n       \n       > 选择节点和项目，再选择发布后操作（重启）\n\n\n\n\n# 注意\n\n 1. 当前正在构建中必须等待上次构建结束后才能再次构建\n\n\n# 构建日志\n\n> 每次构建都会记录\n\n\n# 构建记录的属性\n\n 1. 构建id\n    \n    > 每次构建都会自增\n\n 2. 构建状态\n    1. 构建中\n    2. 构建成功\n    3. 构建失败\n    4. 发布中\n    5. 发布成功\n    6. 发布失败\n    7. 取消构建\n 3. 开始时间\n 4. 结束时间\n 5. 构建人\n\n\n# 操作\n\n 1. 删除\n    \n    > 删除此条构建记录（如果存在构建物将一并删除）\n\n 2. 下载\n    \n    > 如果存在构建物可以把构建物打包下载\n\n 3. 发布\n    \n    > 如果构建是选择了发布，则对应构建记录可以再次发布\n    \n    > 方便快速回滚操作\n\n 4. 下载构建日志\n    \n    > 可以下载构建日志到本地查看",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"监控介绍",frontmatter:{title:"监控介绍",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/2f4ebb/",tags:[null],categories:["docs","文档","监控管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0888.%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86/01.%E7%9B%91%E6%8E%A7%E4%BB%8B%E7%BB%8D.html",relativePath:"文档/9999.历史文档/0888.监控管理/01.监控介绍.md",key:"v-76174836",path:"/pages/2f4ebb/",headers:[{level:3,title:"目前支持的监控周期",slug:"目前支持的监控周期",normalizedTitle:"目前支持的监控周期",charIndex:74},{level:3,title:"异常后自动重启",slug:"异常后自动重启",normalizedTitle:"异常后自动重启",charIndex:124},{level:3,title:"报警联系人",slug:"报警联系人",normalizedTitle:"报警联系人",charIndex:167},{level:3,title:"通知报警规则",slug:"通知报警规则",normalizedTitle:"通知报警规则",charIndex:239}],headersStr:"目前支持的监控周期 异常后自动重启 报警联系人 通知报警规则",content:"# 监控管理\n\n\n# 监控说明\n\n> 监控是服务端查询会根据监控周期定期去检查配置需要监控的项目当前的状态，如果状态是未运行则触发报警通知\n\n\n# 目前支持的监控周期\n\n 1. 1分钟\n 2. 5分钟\n 3. 10分钟\n 4. 30 分钟\n\n\n# 异常后自动重启\n\n> 如果配置开启，监测到程序未运行，将自动尝试执行重启操作\n\n\n# 报警联系人\n\n> 如待选择用户无数据，请先在用户管理添加新用户\n\n> 如待选择用户不能勾选，则需要设置用户通知地址。详情请查看编辑用户\n\n\n# 通知报警规则\n\n> 触发报警通知后，第二次触发也是异常报警则不会重复发生报警通知\n\n> 当监测到恢复正常时候，将会通知对应项目恢复正常运行\n\n\n# 监控日志\n\n> 监控日志主要是记录每天监控消息通知的发送状态\n\n> 可以查看报警时间和通知状态，已经完整的通知消息",normalizedContent:"# 监控管理\n\n\n# 监控说明\n\n> 监控是服务端查询会根据监控周期定期去检查配置需要监控的项目当前的状态，如果状态是未运行则触发报警通知\n\n\n# 目前支持的监控周期\n\n 1. 1分钟\n 2. 5分钟\n 3. 10分钟\n 4. 30 分钟\n\n\n# 异常后自动重启\n\n> 如果配置开启，监测到程序未运行，将自动尝试执行重启操作\n\n\n# 报警联系人\n\n> 如待选择用户无数据，请先在用户管理添加新用户\n\n> 如待选择用户不能勾选，则需要设置用户通知地址。详情请查看编辑用户\n\n\n# 通知报警规则\n\n> 触发报警通知后，第二次触发也是异常报警则不会重复发生报警通知\n\n> 当监测到恢复正常时候，将会通知对应项目恢复正常运行\n\n\n# 监控日志\n\n> 监控日志主要是记录每天监控消息通知的发送状态\n\n> 可以查看报警时间和通知状态，已经完整的通知消息",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"系统日志",frontmatter:{title:"系统日志",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/5d6479/",tags:[null],categories:["docs","文档","系统管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0889.%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/01.%E7%B3%BB%E7%BB%9F%E6%97%A5%E5%BF%97.html",relativePath:"文档/9999.历史文档/0889.系统管理/01.系统日志.md",key:"v-11885233",path:"/pages/5d6479/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"系统管理",frontmatter:{title:"系统管理",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/0429ad/",tags:[null],categories:["docs","文档","系统管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0889.%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/02.%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86.html",relativePath:"文档/9999.历史文档/0889.系统管理/02.系统管理.md",key:"v-bec10dec",path:"/pages/0429ad/",headers:[{level:3,title:"黑名单IP数量",slug:"黑名单ip数量",normalizedTitle:"黑名单ip数量",charIndex:41},{level:3,title:"在读取的文件数",slug:"在读取的文件数",normalizedTitle:"在读取的文件数",charIndex:81},{level:3,title:"在线构建文件占用空间",slug:"在线构建文件占用空间",normalizedTitle:"在线构建文件占用空间",charIndex:112},{level:3,title:"在线升级是为了在方便快捷的升级系统",slug:"在线升级是为了在方便快捷的升级系统",normalizedTitle:"在线升级是为了在方便快捷的升级系统",charIndex:165},{level:3,title:"升级的注意实现",slug:"升级的注意实现",normalizedTitle:"升级的注意实现",charIndex:226},{level:4,title:"如果升级失败目前还需要手动回滚到升级前的版本",slug:"如果升级失败目前还需要手动回滚到升级前的版本",normalizedTitle:"如果升级失败目前还需要手动回滚到升级前的版本",charIndex:607},{level:3,title:"对系统日志可以操作的有",slug:"对系统日志可以操作的有",normalizedTitle:"对系统日志可以操作的有",charIndex:719},{level:3,title:"查看崩溃日志",slug:"查看崩溃日志",normalizedTitle:"查看崩溃日志",charIndex:861}],headersStr:"黑名单IP数量 在读取的文件数 在线构建文件占用空间 在线升级是为了在方便快捷的升级系统 升级的注意实现 如果升级失败目前还需要手动回滚到升级前的版本 对系统日志可以操作的有 查看崩溃日志",content:"# 系统管理\n\n\n# 服务端文件缓存\n\n> 用户上传文件临时的缓存文件夹\n\n\n# 黑名单IP数量\n\n> 多次登录失败的IP地址，将在一定的时间内不能登录\n\n\n# 在读取的文件数\n\n> 正在实时查看日志的文件的数据量\n\n\n# 在线构建文件占用空间\n\n> 在线构建会拉取仓库代码、构建会有构建日志和构建产物\n\n\n# 在线升级\n\n\n# 在线升级是为了在方便快捷的升级系统\n\n> 通过后台上传jar包即可完成升级\n\n> 仅有系统管理员可以操作系统升级\n\n\n# 升级的注意实现\n\n 1. 升级的前提是对运行应路径下存在标准的管理命令文件\n 2. 如果上传的包和当前运行的包一致将不执行升级操作\n 3. 如果上的包和现运行的包版本一致，打包时间不一致。生成的包文件名为【Server-versions-时间戳.jar】\n 4. 如果上的包和现运行的包版本不一致，生成的包文件名为【Server-versions.jar】\n 5. 如果新包文件以及存在则退出升级操作\n 6. 升级会在运行的jar包路径中生成一个【upgrade.json】\n    1. 文件内容是 beforeJar 升级前运行的jar文件名\n    2. newJar 升级后的jar文件名\n 7. 执行重启成功后，会自动将升级前的jar文件备份到路径下的【oldJars】文件夹下\n 8. 升级成功后会自动修改管理命令文件中的【RUNJAR】变量\n\n# 如果升级失败目前还需要手动回滚到升级前的版本\n\n\n# 系统日志\n\n> 查看当前查询运行的产生的日志\n\n日志路径默认会在运行路径在的log文件夹，可以指定存放的位置具体配置 在运行命令行中指定【jpom.log】参数\n\n\n# 对系统日志可以操作的有\n\n 1. 下载\n\n 2. 删除\n    \n    > 考虑到和日志框架的兼容只能删除一天以前的日志文件\n    \n    > 仅有系统管理员拥护删除权限\n\n 3. 实时查看\n    \n    > 在windows系统中由于系统限制无法很好的使用该功能\n\n\n# 查看崩溃日志\n\n> jpom项目各节点运行目录下log目录为系统日志。\n\n> 项目日志可查看节点项目列表管理项目信息配置界面。",normalizedContent:"# 系统管理\n\n\n# 服务端文件缓存\n\n> 用户上传文件临时的缓存文件夹\n\n\n# 黑名单ip数量\n\n> 多次登录失败的ip地址，将在一定的时间内不能登录\n\n\n# 在读取的文件数\n\n> 正在实时查看日志的文件的数据量\n\n\n# 在线构建文件占用空间\n\n> 在线构建会拉取仓库代码、构建会有构建日志和构建产物\n\n\n# 在线升级\n\n\n# 在线升级是为了在方便快捷的升级系统\n\n> 通过后台上传jar包即可完成升级\n\n> 仅有系统管理员可以操作系统升级\n\n\n# 升级的注意实现\n\n 1. 升级的前提是对运行应路径下存在标准的管理命令文件\n 2. 如果上传的包和当前运行的包一致将不执行升级操作\n 3. 如果上的包和现运行的包版本一致，打包时间不一致。生成的包文件名为【server-versions-时间戳.jar】\n 4. 如果上的包和现运行的包版本不一致，生成的包文件名为【server-versions.jar】\n 5. 如果新包文件以及存在则退出升级操作\n 6. 升级会在运行的jar包路径中生成一个【upgrade.json】\n    1. 文件内容是 beforejar 升级前运行的jar文件名\n    2. newjar 升级后的jar文件名\n 7. 执行重启成功后，会自动将升级前的jar文件备份到路径下的【oldjars】文件夹下\n 8. 升级成功后会自动修改管理命令文件中的【runjar】变量\n\n# 如果升级失败目前还需要手动回滚到升级前的版本\n\n\n# 系统日志\n\n> 查看当前查询运行的产生的日志\n\n日志路径默认会在运行路径在的log文件夹，可以指定存放的位置具体配置 在运行命令行中指定【jpom.log】参数\n\n\n# 对系统日志可以操作的有\n\n 1. 下载\n\n 2. 删除\n    \n    > 考虑到和日志框架的兼容只能删除一天以前的日志文件\n    \n    > 仅有系统管理员拥护删除权限\n\n 3. 实时查看\n    \n    > 在windows系统中由于系统限制无法很好的使用该功能\n\n\n# 查看崩溃日志\n\n> jpom项目各节点运行目录下log目录为系统日志。\n\n> 项目日志可查看节点项目列表管理项目信息配置界面。",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"邮箱配置",frontmatter:{title:"邮箱配置",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/25f350/",tags:[null],categories:["docs","文档","系统管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0889.%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/03.%E9%82%AE%E7%AE%B1%E9%85%8D%E7%BD%AE.html",relativePath:"文档/9999.历史文档/0889.系统管理/03.邮箱配置.md",key:"v-7212fccc",path:"/pages/25f350/",headers:[{level:3,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:341}],headersStr:"注意",content:"> 配置监控报警通知邮箱\n\n> 网易163免费邮箱相关服务器信息：\n\n服务器名称   服务器地址          SSL协议端口号   非SSL协议端口号\nIMAP    imap.163.com   993        143\nSMTP    smtp.163.com   465/994    25\nPOP3    pop.163.com    995        110\n\n> QQ邮箱 POP3 和 SMTP 服务器地址设置如下：\n\n服务器名称   服务器地址         SSL协议端口号   非SSL协议端口号\nSMTP    smtp.qq.com   465/587    25\nPOP3    pop.qq.com    995        \n\n\n# 注意\n\n 1. 注意阿里云服务器屏蔽25端口\n 2. 邮箱配置的密码不是邮箱登录密码，是邮箱授权码",normalizedContent:"> 配置监控报警通知邮箱\n\n> 网易163免费邮箱相关服务器信息：\n\n服务器名称   服务器地址          ssl协议端口号   非ssl协议端口号\nimap    imap.163.com   993        143\nsmtp    smtp.163.com   465/994    25\npop3    pop.163.com    995        110\n\n> qq邮箱 pop3 和 smtp 服务器地址设置如下：\n\n服务器名称   服务器地址         ssl协议端口号   非ssl协议端口号\nsmtp    smtp.qq.com   465/587    25\npop3    pop.qq.com    995        \n\n\n# 注意\n\n 1. 注意阿里云服务器屏蔽25端口\n 2. 邮箱配置的密码不是邮箱登录密码，是邮箱授权码",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"控制台",frontmatter:{title:"控制台",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/ff3028/",tags:[null],categories:["docs","文档","节点功能","项目管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0890.%E8%8A%82%E7%82%B9%E5%8A%9F%E8%83%BD/10.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/02.%E6%8E%A7%E5%88%B6%E5%8F%B0.html",relativePath:"文档/9999.历史文档/0890.节点功能/10.项目管理/02.控制台.md",key:"v-238d264d",path:"/pages/ff3028/",headers:[{level:4,title:"控制台日志文件生成规则",slug:"控制台日志文件生成规则",normalizedTitle:"控制台日志文件生成规则",charIndex:89},{level:4,title:"为了防止日志文件的增大",slug:"为了防止日志文件的增大",normalizedTitle:"为了防止日志文件的增大",charIndex:254},{level:4,title:"特说说明",slug:"特说说明",normalizedTitle:"特说说明",charIndex:755}],headersStr:"控制台日志文件生成规则 为了防止日志文件的增大 特说说明",content:"# Jpom 中的项目控制台日志说明\n\n> Jpom中为了实时查看控制台日志是将控制台日志输出到指定文件中，在控制台页面采用websocket实时监听文件内容的变化实现的\n\n# 控制台日志文件生成规则\n\n> 项目路径+项目id+【.log】\n\n> 如果选择的项目存放路径为【/test/project/test1】\n\n> 项目的id为【project1】\n\n> 控制台日志文件的实际路径为： /test/project/test1/project1.log\n\n> 在项目的编辑页面会显示日志的完整路径\n\n# 为了防止日志文件的增大\n\n> Jpom会在项目重启时自动转存上一次的日志文件到备份路径\n\n备份路径为：【控制台日志文件路径+_back(文件夹)】\n    \n如日志文件路径为：/test/project/test1/project1.log  备份日志文件夹路径为：/test/project/test1/project1.log_back\n    \n备份日志文件夹下面的文件存放规则为：操作时间.log 如：【20190421220400.log】\n\n\n1\n2\n3\n4\n5\n\n\n> 同时为了防止随着运行时间的增加造成的日志文件增大\n\nJpom 会定时扫描所有日志文件，如果超过一定大小将自动备份一次\n\n默认周期为 10分钟、默认大小为50MB\n\n扫描周期和文件大小为可配置 （配置规则请查看插件端的外部配置文件中）\n\nlog.autoBackConsoleCron 、 log.autoBackSize  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n> 为了日志文件的长期存储，Jpom也会定期清理过久的日志文件\n\n默认为保存7天\n\n保存天数为可以配置（log.saveDays）\n\n\n1\n2\n3\n\n\n# 特说说明\n\n> 由于windows系统机制问题，在windows中不支持不停服务移动文件，所有在windows中，正在运行的项目Jpom如果自动扫描备份日志文件",normalizedContent:"# jpom 中的项目控制台日志说明\n\n> jpom中为了实时查看控制台日志是将控制台日志输出到指定文件中，在控制台页面采用websocket实时监听文件内容的变化实现的\n\n# 控制台日志文件生成规则\n\n> 项目路径+项目id+【.log】\n\n> 如果选择的项目存放路径为【/test/project/test1】\n\n> 项目的id为【project1】\n\n> 控制台日志文件的实际路径为： /test/project/test1/project1.log\n\n> 在项目的编辑页面会显示日志的完整路径\n\n# 为了防止日志文件的增大\n\n> jpom会在项目重启时自动转存上一次的日志文件到备份路径\n\n备份路径为：【控制台日志文件路径+_back(文件夹)】\n    \n如日志文件路径为：/test/project/test1/project1.log  备份日志文件夹路径为：/test/project/test1/project1.log_back\n    \n备份日志文件夹下面的文件存放规则为：操作时间.log 如：【20190421220400.log】\n\n\n1\n2\n3\n4\n5\n\n\n> 同时为了防止随着运行时间的增加造成的日志文件增大\n\njpom 会定时扫描所有日志文件，如果超过一定大小将自动备份一次\n\n默认周期为 10分钟、默认大小为50mb\n\n扫描周期和文件大小为可配置 （配置规则请查看插件端的外部配置文件中）\n\nlog.autobackconsolecron 、 log.autobacksize  \n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n> 为了日志文件的长期存储，jpom也会定期清理过久的日志文件\n\n默认为保存7天\n\n保存天数为可以配置（log.savedays）\n\n\n1\n2\n3\n\n\n# 特说说明\n\n> 由于windows系统机制问题，在windows中不支持不停服务移动文件，所有在windows中，正在运行的项目jpom如果自动扫描备份日志文件",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"项目属性",frontmatter:{title:"项目属性",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/fa7614/",tags:[null],categories:["docs","文档","节点功能","项目管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0890.%E8%8A%82%E7%82%B9%E5%8A%9F%E8%83%BD/10.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/01.%E9%A1%B9%E7%9B%AE%E5%B1%9E%E6%80%A7.html",relativePath:"文档/9999.历史文档/0890.节点功能/10.项目管理/01.项目属性.md",key:"v-02eaa539",path:"/pages/fa7614/",headers:[{level:2,title:"项目属性说明",slug:"项目属性说明",normalizedTitle:"项目属性说明",charIndex:2},{level:3,title:"1. 项目名称",slug:"_1-项目名称",normalizedTitle:"1. 项目名称",charIndex:13},{level:3,title:"2. 分组名称",slug:"_2-分组名称",normalizedTitle:"2. 分组名称",charIndex:40},{level:3,title:"3. 项目ID",slug:"_3-项目id",normalizedTitle:"3. 项目id",charIndex:78},{level:3,title:"4. 运行方式",slug:"_4-运行方式",normalizedTitle:"4. 运行方式",charIndex:128},{level:3,title:"5. 项目路径",slug:"_5-项目路径",normalizedTitle:"5. 项目路径",charIndex:231},{level:3,title:"6. 项目Jar包即为项目存放jar包的文件夹路径（注意是文件夹而不是文件）",slug:"_6-项目jar包即为项目存放jar包的文件夹路径-注意是文件夹而不是文件",normalizedTitle:"6. 项目jar包即为项目存放jar包的文件夹路径（注意是文件夹而不是文件）",charIndex:310},{level:3,title:"7. MainClass",slug:"_7-mainclass",normalizedTitle:"7. mainclass",charIndex:633},{level:3,title:"8. WebHooks",slug:"_8-webhooks",normalizedTitle:"8. webhooks",charIndex:676},{level:3,title:"9. Build标识",slug:"_9-build标识",normalizedTitle:"9. build标识",charIndex:726},{level:3,title:"10. Jvm参数",slug:"_10-jvm参数",normalizedTitle:"10. jvm参数",charIndex:760},{level:3,title:"11. Args参数",slug:"_11-args参数",normalizedTitle:"11. args参数",charIndex:816},{level:2,title:"maven 快速创建项目",slug:"maven-快速创建项目",normalizedTitle:"maven 快速创建项目",charIndex:873}],headersStr:"项目属性说明 1. 项目名称 2. 分组名称 3. 项目ID 4. 运行方式 5. 项目路径 6. 项目Jar包即为项目存放jar包的文件夹路径（注意是文件夹而不是文件） 7. MainClass 8. WebHooks 9. Build标识 10. Jvm参数 11. Args参数 maven 快速创建项目",content:"# 项目属性说明\n\n\n# 1. 项目名称\n\n> 为项目取一个动听的名字\n\n\n# 2. 分组名称\n\n> 是为了在多个项目中区分和在项目列表中快速选择\n\n\n# 3. 项目ID\n\n> 一旦创建后是无法修改的(Jpom中以项目ID为参照判断程序运行状态)\n\n\n# 4. 运行方式\n\n> Jpom目前支持两种运行方式 jar和classpath jar即为运行jar包（java -jar） classpath即为运行多个jar(java -classpath)\n\n\n# 5. 项目路径\n\n> 为在授权（白名单）中配置的信息\n\n> 在创建项目时候需要选择对应的一个目录以来决定项目的实际jar包信息会存放在对应的目录之下\n\n\n# 6. 项目Jar包即为项目存放jar包的文件夹路径（注意是文件夹而不是文件）\n\n> 注意项目的实际jar存放的路径是以 选择的项目路径+填写的项目jar包路径，如图：选择的项目路径为(D:/dev) 填写的项目jar包为(sss) 那么项目实际的jar会存放在 D:/dev/sss 文件夹中\n\n> 同时注意最终的项目实际路径限制如下：\n> \n>  1. 如果实际路径为一个已经存在的文件，是不可以创建对应的项目的\n>  2. 如果实际路径是一个已经存在的文件夹，那么项目的文件会直接使用的\n>  3. 如果在修改项目jar包含子项目路径时，遇到新的实际路径已经存在，那么程序复制原实际路径中的所有文件到新的实际路径中，存在相同的则覆盖\n\n\n# 7. MainClass\n\n> 程序的主类，当项目运行方式为Jar时此项必填\n\n\n# 8. WebHooks\n\n> 当关闭Jpom时，程序会自动请求对应的路径(get方式请求)\n\n\n# 9. Build标识\n\n> 需要和阿里云oss配置配合使用\n\n\n# 10. Jvm参数\n\n> 设置java虚拟机参数\n\n> 如：-Xmin=512m -Xmax=512m\n\n\n# 11. Args参数\n\n> 程序运行的main方式参数\n\n> 如：--service.port=8080\n\n\n# maven 快速创建项目\n\n 1. 在pom 中添加插件如下，具体配置信息请自行修改为对应项目\n\n <plugin>\n    <groupId>io.jpom.jpom-plugin</groupId>\n    <artifactId>jpom-maven-plugin</artifactId>\n    <version>LATEST</version>\n    <configuration>\n        \x3c!--节点地址 --\x3e\n        <url>http://127.0.0.1:2122</url>\n        <nodeIds>\n            <nodeId>localhost</nodeId>\n        </nodeIds>\n        \x3c!--用户token --\x3e\n        <token>5610b7db99f7216e4ed3543f2a56eb95</token>\n        <project>\n            <name>测试</name>\n            <id>ss</id>\n            <runMode>File</runMode>\n            <path>dfgdsfg</path>\n            <whitelistDirectory>/test/</whitelistDirectory>\n            \x3c!--非必填--\x3e\n            <mainClass></mainClass>\n            <jvm></jvm>\n            <args></args>\n            <webHook></webHook>\n        </project>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>jpom-project</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n 2. 执行命令\n\nmvn clean package\n\n\n1\n",normalizedContent:"# 项目属性说明\n\n\n# 1. 项目名称\n\n> 为项目取一个动听的名字\n\n\n# 2. 分组名称\n\n> 是为了在多个项目中区分和在项目列表中快速选择\n\n\n# 3. 项目id\n\n> 一旦创建后是无法修改的(jpom中以项目id为参照判断程序运行状态)\n\n\n# 4. 运行方式\n\n> jpom目前支持两种运行方式 jar和classpath jar即为运行jar包（java -jar） classpath即为运行多个jar(java -classpath)\n\n\n# 5. 项目路径\n\n> 为在授权（白名单）中配置的信息\n\n> 在创建项目时候需要选择对应的一个目录以来决定项目的实际jar包信息会存放在对应的目录之下\n\n\n# 6. 项目jar包即为项目存放jar包的文件夹路径（注意是文件夹而不是文件）\n\n> 注意项目的实际jar存放的路径是以 选择的项目路径+填写的项目jar包路径，如图：选择的项目路径为(d:/dev) 填写的项目jar包为(sss) 那么项目实际的jar会存放在 d:/dev/sss 文件夹中\n\n> 同时注意最终的项目实际路径限制如下：\n> \n>  1. 如果实际路径为一个已经存在的文件，是不可以创建对应的项目的\n>  2. 如果实际路径是一个已经存在的文件夹，那么项目的文件会直接使用的\n>  3. 如果在修改项目jar包含子项目路径时，遇到新的实际路径已经存在，那么程序复制原实际路径中的所有文件到新的实际路径中，存在相同的则覆盖\n\n\n# 7. mainclass\n\n> 程序的主类，当项目运行方式为jar时此项必填\n\n\n# 8. webhooks\n\n> 当关闭jpom时，程序会自动请求对应的路径(get方式请求)\n\n\n# 9. build标识\n\n> 需要和阿里云oss配置配合使用\n\n\n# 10. jvm参数\n\n> 设置java虚拟机参数\n\n> 如：-xmin=512m -xmax=512m\n\n\n# 11. args参数\n\n> 程序运行的main方式参数\n\n> 如：--service.port=8080\n\n\n# maven 快速创建项目\n\n 1. 在pom 中添加插件如下，具体配置信息请自行修改为对应项目\n\n <plugin>\n    <groupid>io.jpom.jpom-plugin</groupid>\n    <artifactid>jpom-maven-plugin</artifactid>\n    <version>latest</version>\n    <configuration>\n        \x3c!--节点地址 --\x3e\n        <url>http://127.0.0.1:2122</url>\n        <nodeids>\n            <nodeid>localhost</nodeid>\n        </nodeids>\n        \x3c!--用户token --\x3e\n        <token>5610b7db99f7216e4ed3543f2a56eb95</token>\n        <project>\n            <name>测试</name>\n            <id>ss</id>\n            <runmode>file</runmode>\n            <path>dfgdsfg</path>\n            <whitelistdirectory>/test/</whitelistdirectory>\n            \x3c!--非必填--\x3e\n            <mainclass></mainclass>\n            <jvm></jvm>\n            <args></args>\n            <webhook></webhook>\n        </project>\n    </configuration>\n    <executions>\n        <execution>\n            <goals>\n                <goal>jpom-project</goal>\n            </goals>\n        </execution>\n    </executions>\n</plugin>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n\n 2. 执行命令\n\nmvn clean package\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"授权（白名单）目录",frontmatter:{title:"授权（白名单）目录",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/933483/",tags:[null],categories:["docs","文档","节点功能","系统管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0890.%E8%8A%82%E7%82%B9%E5%8A%9F%E8%83%BD/13.%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/01.%E7%99%BD%E5%90%8D%E5%8D%95%E7%9B%AE%E5%BD%95.html",relativePath:"文档/9999.历史文档/0890.节点功能/13.系统管理/01.白名单目录.md",key:"v-b5ea62e2",path:"/pages/933483/",headers:[{level:3,title:"综上Jpom 就使用授权（白名单）来管理项目相关的文件",slug:"综上jpom-就使用授权-白名单-来管理项目相关的文件",normalizedTitle:"综上jpom 就使用授权（白名单）来管理项目相关的文件",charIndex:220},{level:2,title:"1. 项目路径",slug:"_1-项目路径",normalizedTitle:"1. 项目路径",charIndex:282},{level:2,title:"2. 证书路径",slug:"_2-证书路径",normalizedTitle:"2. 证书路径",charIndex:690},{level:2,title:"3. Nginx路径",slug:"_3-nginx路径",normalizedTitle:"3. nginx路径",charIndex:795},{level:2,title:"4. 节点分发",slug:"_4-节点分发",normalizedTitle:"4. 节点分发",charIndex:866}],headersStr:"综上Jpom 就使用授权（白名单）来管理项目相关的文件 1. 项目路径 2. 证书路径 3. Nginx路径 4. 节点分发",content:"# Jpom 中的授权（白名单）说明\n\n> Jpom 中的授权（白名单）的由来，由于项目管理都需要对项目的文件进行管理。在创建项目的时候需要确定项目的相关文件存放的路径。 那么此时由用户决定存放到哪里，显得有点冒然（不安全，有点随意）。因为服务器中有些路径已经存放重要配置文件，此时项目路径相同那么必然没有任何安全性\n\n# 假设设置黑名单\n\n> 如果设置黑名单那么没有办法最快速收集用户不同服务器中重要文件路径，此方法也显得不合适\n\n\n# 综上Jpom 就使用授权（白名单）来管理项目相关的文件\n\n> 那么在Jpom 中有那些地方需要用到授权（白名单）呢\n\n\n# 1. 项目路径\n\n> 项目路径授权（白名单）主要是决定不同项目存放的位置，【但是项目路径选择的授权（白名单）不是项目文件存放的实际位置】\n\n> 项目文件存放的实际路径是由【选择的项目路径授权（白名单）+项目Jar包】 组合而成的\n\n# 举例说明项目授权（白名单）如何使用\n\n如果有4个项目需要部署到服务器中，但是4个项目又可以分为两大类型\n\n项目1、项目2、项目3、项目4\n\n可以分为：后台、接口\n\n【后台】：项目1、项目3\n\n【接口】：项目2、项目4\n\n那么推荐配置授权（白名单）：\n\n/project/admin/\n/project/api/\n\n那么在创建项目1、项目3的时候选择路径：/project/admin/\n\n那么在创建项目2、项目4的时候选择路径：/project/api/\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 2. 证书路径\n\n> 证书路径授权（白名单）是决定用户上次的ssl 证书存放的路径\n\n> 证书文件实际存放的路径是由【选择的证书路径授权（白名单）+证书id+id.key(id.pem)】 组合而成的\n\n\n# 3. Nginx路径\n\n> Nginx路径授权（白名单）是决定Jpom 程序会自动扫描对应目录下的 *.conf 文件还展示配置文件\n\n\n# 4. 节点分发\n\n> 节点分发授权（白名单）是决定创建节点分发项目时候，项目的授权（白名单）路径（此处规则和项目路径授权（白名单）一致）\n\n> 单独管理节点分发授权（白名单）的目的是为了多节点的授权（白名单）信息同步\n\n\n# 注意：为了系统安全授权（白名单）只允许系统管理配置，在节点第一次使用时候为了系统能正常使用需要添加一个项目的授权（白名单）路径",normalizedContent:"# jpom 中的授权（白名单）说明\n\n> jpom 中的授权（白名单）的由来，由于项目管理都需要对项目的文件进行管理。在创建项目的时候需要确定项目的相关文件存放的路径。 那么此时由用户决定存放到哪里，显得有点冒然（不安全，有点随意）。因为服务器中有些路径已经存放重要配置文件，此时项目路径相同那么必然没有任何安全性\n\n# 假设设置黑名单\n\n> 如果设置黑名单那么没有办法最快速收集用户不同服务器中重要文件路径，此方法也显得不合适\n\n\n# 综上jpom 就使用授权（白名单）来管理项目相关的文件\n\n> 那么在jpom 中有那些地方需要用到授权（白名单）呢\n\n\n# 1. 项目路径\n\n> 项目路径授权（白名单）主要是决定不同项目存放的位置，【但是项目路径选择的授权（白名单）不是项目文件存放的实际位置】\n\n> 项目文件存放的实际路径是由【选择的项目路径授权（白名单）+项目jar包】 组合而成的\n\n# 举例说明项目授权（白名单）如何使用\n\n如果有4个项目需要部署到服务器中，但是4个项目又可以分为两大类型\n\n项目1、项目2、项目3、项目4\n\n可以分为：后台、接口\n\n【后台】：项目1、项目3\n\n【接口】：项目2、项目4\n\n那么推荐配置授权（白名单）：\n\n/project/admin/\n/project/api/\n\n那么在创建项目1、项目3的时候选择路径：/project/admin/\n\n那么在创建项目2、项目4的时候选择路径：/project/api/\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n\n\n\n# 2. 证书路径\n\n> 证书路径授权（白名单）是决定用户上次的ssl 证书存放的路径\n\n> 证书文件实际存放的路径是由【选择的证书路径授权（白名单）+证书id+id.key(id.pem)】 组合而成的\n\n\n# 3. nginx路径\n\n> nginx路径授权（白名单）是决定jpom 程序会自动扫描对应目录下的 *.conf 文件还展示配置文件\n\n\n# 4. 节点分发\n\n> 节点分发授权（白名单）是决定创建节点分发项目时候，项目的授权（白名单）路径（此处规则和项目路径授权（白名单）一致）\n\n> 单独管理节点分发授权（白名单）的目的是为了多节点的授权（白名单）信息同步\n\n\n# 注意：为了系统安全授权（白名单）只允许系统管理配置，在节点第一次使用时候为了系统能正常使用需要添加一个项目的授权（白名单）路径",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"添加节点",frontmatter:{title:"添加节点",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/2573d3/",tags:[null],categories:["docs","文档","节点管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0891.%E8%8A%82%E7%82%B9%E7%AE%A1%E7%90%86/01.%E6%B7%BB%E5%8A%A0%E8%8A%82%E7%82%B9.html",relativePath:"文档/9999.历史文档/0891.节点管理/01.添加节点.md",key:"v-58368712",path:"/pages/2573d3/",headers:[{level:4,title:"功能介绍",slug:"功能介绍",normalizedTitle:"功能介绍",charIndex:10},{level:4,title:"创建节点配置参数",slug:"创建节点配置参数",normalizedTitle:"创建节点配置参数",charIndex:71},{level:4,title:"节点列表展示",slug:"节点列表展示",normalizedTitle:"节点列表展示",charIndex:473},{level:4,title:"进入节点初始化",slug:"进入节点初始化",normalizedTitle:"进入节点初始化",charIndex:953}],headersStr:"功能介绍 创建节点配置参数 节点列表展示 进入节点初始化",content:"# 节点列表\n\n# 功能介绍\n\n用于配置已安装插件端的服务器节点和展示已配置的服务器节点概览信息，并提供服务器节点内项目管理等操作入口\n\n# 创建节点配置参数\n\n配置已安装插件端的服务器节点:\n\n\n\n节点ID:遵守唯一性约束,首次创建成功后不可再次修改\n\n节点名称:当前节点名称描述,不限定 建议以服务器域名/IP/hostname命名\n\n分组:非必要 监控周期:用于监控节点内存、cpu、硬盘占用数据\n\n节点协议:支持http/https 节点状态:启用|关闭非对服务器节点物理启停操作\n\n节点地址:插件端服务的ip+port(或者域名),非url不带协议\n\n节点账号/密码:插件端登陆账户和密码,为插件端（agent）外部配置文件extConfig.yml中配置\n\n若采用默认配置，可在启动agent端日志控制台查看agent端登录账户密码，或者agent端存放数据目录的data目录下的agent_authorize.json文件中查看\n\n\n\n超时时间:节点请求超时时间(毫秒) 绑定ssh:SSH列表存在已配置的SSH，可关联绑定\n\n# 节点列表展示\n\n节点列表存在以配置正确的服务器节点，会对该节点相关状态信息和可操作入口进行展示\n\n\n\n * 进入:此为进入管理节点内功能入口，功能详解请参阅节点内项目管理操作\n * 终端:绑定SSH后可见入口，可通过SSH渠道进行服务器远程控制台访问操作，功能详情请参阅SSH管理-终端\n * 编辑:管理节点配置参数入口\n   \n   系统名:节点所在服务器os类型 Java版本:插件端运行所在JDK环境版本信息\n   JVM总内存:展示JVM总内存 JVM剩余内存:展示JVM剩余内存\n   Jpom版本:获取所安装插件端版本信息 Java程序个数:展示当前节点服务器运行Java程序个数\n   项目个数:展示当前节点服务器运行的节点项目管理所创建的项目个数，请参阅项目管理-项目列表\n   响应时间:展示节点响应时间 已运行时间:展示当前节点插件端连续运行时长\n   \n   \n\n * 异常信息展示\n   展示节点功能异常信息，如连接超时，需检查当前节点插件端运行情况，当前插件端与服务端网络情况\n   \n   \n   \n   问题请参阅启动失败\n\n# 进入节点初始化\n\n首次通过节点列表展示的正确配置的节点进入入口跳转管理节点功能页面时，按照提示进行初始化节点\n\n\n 1. 文本提示框填写您想在服务器运行项目的存放的授权（白名单）目录\n 2. 详情查看授权（白名单）",normalizedContent:"# 节点列表\n\n# 功能介绍\n\n用于配置已安装插件端的服务器节点和展示已配置的服务器节点概览信息，并提供服务器节点内项目管理等操作入口\n\n# 创建节点配置参数\n\n配置已安装插件端的服务器节点:\n\n\n\n节点id:遵守唯一性约束,首次创建成功后不可再次修改\n\n节点名称:当前节点名称描述,不限定 建议以服务器域名/ip/hostname命名\n\n分组:非必要 监控周期:用于监控节点内存、cpu、硬盘占用数据\n\n节点协议:支持http/https 节点状态:启用|关闭非对服务器节点物理启停操作\n\n节点地址:插件端服务的ip+port(或者域名),非url不带协议\n\n节点账号/密码:插件端登陆账户和密码,为插件端（agent）外部配置文件extconfig.yml中配置\n\n若采用默认配置，可在启动agent端日志控制台查看agent端登录账户密码，或者agent端存放数据目录的data目录下的agent_authorize.json文件中查看\n\n\n\n超时时间:节点请求超时时间(毫秒) 绑定ssh:ssh列表存在已配置的ssh，可关联绑定\n\n# 节点列表展示\n\n节点列表存在以配置正确的服务器节点，会对该节点相关状态信息和可操作入口进行展示\n\n\n\n * 进入:此为进入管理节点内功能入口，功能详解请参阅节点内项目管理操作\n * 终端:绑定ssh后可见入口，可通过ssh渠道进行服务器远程控制台访问操作，功能详情请参阅ssh管理-终端\n * 编辑:管理节点配置参数入口\n   \n   系统名:节点所在服务器os类型 java版本:插件端运行所在jdk环境版本信息\n   jvm总内存:展示jvm总内存 jvm剩余内存:展示jvm剩余内存\n   jpom版本:获取所安装插件端版本信息 java程序个数:展示当前节点服务器运行java程序个数\n   项目个数:展示当前节点服务器运行的节点项目管理所创建的项目个数，请参阅项目管理-项目列表\n   响应时间:展示节点响应时间 已运行时间:展示当前节点插件端连续运行时长\n   \n   \n\n * 异常信息展示\n   展示节点功能异常信息，如连接超时，需检查当前节点插件端运行情况，当前插件端与服务端网络情况\n   \n   \n   \n   问题请参阅启动失败\n\n# 进入节点初始化\n\n首次通过节点列表展示的正确配置的节点进入入口跳转管理节点功能页面时，按照提示进行初始化节点\n\n\n 1. 文本提示框填写您想在服务器运行项目的存放的授权（白名单）目录\n 2. 详情查看授权（白名单）",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"SSH管理",frontmatter:{title:"SSH管理",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/c6da0f/",tags:[null],categories:["docs","文档","节点管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0891.%E8%8A%82%E7%82%B9%E7%AE%A1%E7%90%86/02.SSH%E7%AE%A1%E7%90%86.html",relativePath:"文档/9999.历史文档/0891.节点管理/02.SSH管理.md",key:"v-0482581c",path:"/pages/c6da0f/",headers:[{level:4,title:"功能介绍",slug:"功能介绍",normalizedTitle:"功能介绍",charIndex:11},{level:4,title:"添加SSH",slug:"添加ssh",normalizedTitle:"添加ssh",charIndex:73},{level:4,title:"SSH列表展示",slug:"ssh列表展示",normalizedTitle:"ssh列表展示",charIndex:318},{level:4,title:"SSH快捷安装配置插件端",slug:"ssh快捷安装配置插件端",normalizedTitle:"ssh快捷安装配置插件端",charIndex:602},{level:4,title:"SSH文件管理",slug:"ssh文件管理",normalizedTitle:"ssh文件管理",charIndex:720}],headersStr:"功能介绍 添加SSH SSH列表展示 SSH快捷安装配置插件端 SSH文件管理",content:"# SSH管理\n\n# 功能介绍\n\n配置和管理通过SSH渠道远程控制访问的服务器列表和文件管理功能入口，SSH管理模块所有功能不依赖于插件端\n\n# 添加SSH\n\n编辑ssh配置信息\n\n\n\n\n\n\n\nSSH名称:当前SSH连接名称，建议使用IP/域名/hostname命名\n\nHostname:当前SSH连接服务器的IP Port:当前SSH端口，默认22，请填22\n\nUsername:当前服务器登陆账户\n\nPassword:服务器登陆密码，或者证书密钥\n\n认证方式:可选择 PASS 或者 PUBKEY\n\n编码方式:可选择SSH控制台字符集编码，编码请您根据服务器编码设置\n\n文件目录:授权可直接访问的目录，多目录回车换行即可\n\n\n\n# SSH列表展示\n\n展示当前已配置正确的SSH列表信息\n\n\n\n名称:SSH的名称 host:SSH的IPuser:登陆用户portSSH端口\n\n*关联节点:若已当前SSH对应管理的服务器上已安装插件端，可在添加节点配置时候关联SSH，成功关联后，当前SSH列表 信息的关联节点字段展示的将会是被关联节点的名称，可通过该名称快速跳转管理节点功能相关页面\n\n\n\n\n\n若当前SSH对应管理的服务器上未安装插件端，即节点列表尚未配置相关服务器节点信息时。关联节点字段展示的将会是 安装按钮控件，可通过此按钮快速安装当前服务器插件端和配置当前服务器的节点信息，详情请查阅下文**【SSH快捷安装配置插件端】**\n\n\n\n\n\n操作:提供当前SSH支持的三种功能入口\n\n1. 编辑:编辑SSH配置信息\n\n2. 终端:打开当前SSH渠道的远程访问控制台\n\n\n\n3. 文件管理:基于JSCH的文件管理工具，详情请查阅下文**【SSH文件管理】**\n\n# SSH快捷安装配置插件端\n\n快速安装SSH对应服务器的插件端并快速配置节点信息\n\n\n\n点击安装控件，打开安装插件端\n\n\n\n\n\n节点ID:遵守唯一性约束,首次创建成功后不可再次修改\n\n节点名称:当前节点名称描述,不限定 建议以服务器域名/IP/hostname命名\n\n节点协议:支持http/https节点地址:插件端服务的ip+port(或者域名),非url不带协议\n\n\n> 注意：如上即为创建节点配置参数的简化配置信息，安装成功后将按照如上所配置快速创建 默认分组、默认启用节点和默认不开启监控的节点**【节点管理列表可见可二次修改】**\n\n安装路径:远程安装插件端的安装目录**【目录必须在授权目录层级之下，目录不存在会自动创建，注意对存在目录的覆盖情况】**\n\n上传zip包:上传插件端安装包（agent-x.x.x-release.zip）\n\n> 注意：安装包必须是Jpom官方发布结构类型的插件包agent-x.x.x-release.zip\n> 可自行解压修改相关启动参数，请参阅启动参数\n> 修改完请必须按照Jpom官方发布的结构类型压缩回插件包\n> 若不自定义修改官方发布的Jpom插件包（agent-x.x.x-release.zip），则将以默认参数方式安装，详情请查阅开始安装-简易安装流程\n\n# SSH文件管理\n\n使用JSCH不依赖于插件端的文件管理系统，点击文件进入SSH授权目录起的文件目录\n\n\n\n\n\n * 点击文件路径下子目录可快速跳转到对应目录\n\n * 点击表格中文件类型的行即可进入该目录下\n\n * 上传的文件会采用SFTP协议并自动保存到与文件路径对应的目录中\n\n * 文件夹显示文件类型为文件夹，可进行删除操作\n\n * 压缩包可进行删除、解压和下载操作\n\n * 普通文件可进行删除、终端（查看）和下载操作",normalizedContent:"# ssh管理\n\n# 功能介绍\n\n配置和管理通过ssh渠道远程控制访问的服务器列表和文件管理功能入口，ssh管理模块所有功能不依赖于插件端\n\n# 添加ssh\n\n编辑ssh配置信息\n\n\n\n\n\n\n\nssh名称:当前ssh连接名称，建议使用ip/域名/hostname命名\n\nhostname:当前ssh连接服务器的ip port:当前ssh端口，默认22，请填22\n\nusername:当前服务器登陆账户\n\npassword:服务器登陆密码，或者证书密钥\n\n认证方式:可选择 pass 或者 pubkey\n\n编码方式:可选择ssh控制台字符集编码，编码请您根据服务器编码设置\n\n文件目录:授权可直接访问的目录，多目录回车换行即可\n\n\n\n# ssh列表展示\n\n展示当前已配置正确的ssh列表信息\n\n\n\n名称:ssh的名称 host:ssh的ipuser:登陆用户portssh端口\n\n*关联节点:若已当前ssh对应管理的服务器上已安装插件端，可在添加节点配置时候关联ssh，成功关联后，当前ssh列表 信息的关联节点字段展示的将会是被关联节点的名称，可通过该名称快速跳转管理节点功能相关页面\n\n\n\n\n\n若当前ssh对应管理的服务器上未安装插件端，即节点列表尚未配置相关服务器节点信息时。关联节点字段展示的将会是 安装按钮控件，可通过此按钮快速安装当前服务器插件端和配置当前服务器的节点信息，详情请查阅下文**【ssh快捷安装配置插件端】**\n\n\n\n\n\n操作:提供当前ssh支持的三种功能入口\n\n1. 编辑:编辑ssh配置信息\n\n2. 终端:打开当前ssh渠道的远程访问控制台\n\n\n\n3. 文件管理:基于jsch的文件管理工具，详情请查阅下文**【ssh文件管理】**\n\n# ssh快捷安装配置插件端\n\n快速安装ssh对应服务器的插件端并快速配置节点信息\n\n\n\n点击安装控件，打开安装插件端\n\n\n\n\n\n节点id:遵守唯一性约束,首次创建成功后不可再次修改\n\n节点名称:当前节点名称描述,不限定 建议以服务器域名/ip/hostname命名\n\n节点协议:支持http/https节点地址:插件端服务的ip+port(或者域名),非url不带协议\n\n\n> 注意：如上即为创建节点配置参数的简化配置信息，安装成功后将按照如上所配置快速创建 默认分组、默认启用节点和默认不开启监控的节点**【节点管理列表可见可二次修改】**\n\n安装路径:远程安装插件端的安装目录**【目录必须在授权目录层级之下，目录不存在会自动创建，注意对存在目录的覆盖情况】**\n\n上传zip包:上传插件端安装包（agent-x.x.x-release.zip）\n\n> 注意：安装包必须是jpom官方发布结构类型的插件包agent-x.x.x-release.zip\n> 可自行解压修改相关启动参数，请参阅启动参数\n> 修改完请必须按照jpom官方发布的结构类型压缩回插件包\n> 若不自定义修改官方发布的jpom插件包（agent-x.x.x-release.zip），则将以默认参数方式安装，详情请查阅开始安装-简易安装流程\n\n# ssh文件管理\n\n使用jsch不依赖于插件端的文件管理系统，点击文件进入ssh授权目录起的文件目录\n\n\n\n\n\n * 点击文件路径下子目录可快速跳转到对应目录\n\n * 点击表格中文件类型的行即可进入该目录下\n\n * 上传的文件会采用sftp协议并自动保存到与文件路径对应的目录中\n\n * 文件夹显示文件类型为文件夹，可进行删除操作\n\n * 压缩包可进行删除、解压和下载操作\n\n * 普通文件可进行删除、终端（查看）和下载操作",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"2.11.x-release",frontmatter:{title:"2.11.x-release",date:"2024-01-12T14:04:53.000Z",permalink:"/pages/changelog/new/",categories:["docs","更新日志","更新说明"],tags:["2.11.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/01.%E6%9C%80%E6%96%B0.html",relativePath:"日志&下载/01.更新日志/01.最新.md",key:"v-7c6bb49e",path:"/pages/changelog/new/",headers:[{level:2,title:"2.11.12-release (2025-05-06)",slug:"_2-11-12-release-2025-05-06",normalizedTitle:"2.11.12-release (2025-05-06)",charIndex:2},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.11-release (2024-12-02)",slug:"_2-11-11-release-2024-12-02",normalizedTitle:"2.11.11-release (2024-12-02)",charIndex:867},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.10-release (2024-09-19)",slug:"_2-11-10-release-2024-09-19",normalizedTitle:"2.11.10-release (2024-09-19)",charIndex:1711},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.9-release (2024-08-02)",slug:"_2-11-9-release-2024-08-02",normalizedTitle:"2.11.9-release (2024-08-02)",charIndex:2907},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.8-release (2024-06-20)",slug:"_2-11-8-release-2024-06-20",normalizedTitle:"2.11.8-release (2024-06-20)",charIndex:4103},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.7-release (2024-06-19)",slug:"_2-11-7-release-2024-06-19",normalizedTitle:"2.11.7-release (2024-06-19)",charIndex:4244},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-6",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:3,title:"⚠️ 注意",slug:"⚠️-注意",normalizedTitle:"⚠️ 注意",charIndex:5216},{level:3,title:"🤝致谢",slug:"🤝致谢",normalizedTitle:"🤝致谢",charIndex:5316},{level:2,title:"2.11.6-release (2024-05-30)",slug:"_2-11-6-release-2024-05-30",normalizedTitle:"2.11.6-release (2024-05-30)",charIndex:5418},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-7",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.5-release (2024-04-23)",slug:"_2-11-5-release-2024-04-23",normalizedTitle:"2.11.5-release (2024-04-23)",charIndex:6081},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-8",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.4 (2024-04-07)",slug:"_2-11-4-2024-04-07",normalizedTitle:"2.11.4 (2024-04-07)",charIndex:7065},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-6",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-9",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.3 (2024-03-01)",slug:"_2-11-3-2024-03-01",normalizedTitle:"2.11.3 (2024-03-01)",charIndex:8380},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-10",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.2 (2024-03-01)",slug:"_2-11-2-2024-03-01",normalizedTitle:"2.11.2 (2024-03-01)",charIndex:10265},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-2",normalizedTitle:"⚠️ 注意",charIndex:5216},{level:2,title:"2.11.1 (2024-01-18)",slug:"_2-11-1-2024-01-18",normalizedTitle:"2.11.1 (2024-01-18)",charIndex:10414},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-7",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-11",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:2,title:"2.11.0 (2024-01-12)",slug:"_2-11-0-2024-01-12",normalizedTitle:"2.11.0 (2024-01-12)",charIndex:11236},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-8",normalizedTitle:"🐣 新增功能",charIndex:35},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-12",normalizedTitle:"🐞 解决bug、优化功能",charIndex:314},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-3",normalizedTitle:"⚠️ 注意",charIndex:5216},{level:3,title:"🤝致谢",slug:"🤝致谢-2",normalizedTitle:"🤝致谢",charIndex:5316}],headersStr:"2.11.12-release (2025-05-06) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.11-release (2024-12-02) 🐞 解决BUG、优化功能 2.11.10-release (2024-09-19) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.9-release (2024-08-02) 🐞 解决BUG、优化功能 2.11.8-release (2024-06-20) 🐞 解决BUG、优化功能 2.11.7-release (2024-06-19) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 🤝致谢 2.11.6-release (2024-05-30) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.5-release (2024-04-23) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.4 (2024-04-07) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.3 (2024-03-01) 🐞 解决BUG、优化功能 2.11.2 (2024-03-01) ⚠️ 注意 2.11.1 (2024-01-18) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.0 (2024-01-12) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 🤝致谢",content:'# 2.11.12-release (2025-05-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 远程安装时的授权码支持（感谢@奇奇）\n 2. 【server】修复 SSH控制台输入Control + R后无法记录日志的问题\n 3. 【server】优化 容器构建镜像新增 毫秒镜像 临时仓库\n 4. 【all】优化 修改 tomcat版本到9.0.99安全版本 （感谢@龙猫 Gitee pr 292）\n 5. 【server】新增 服务端在线升级页面支持配置下载授权码，方便国内用户使用全速 CDN\n 6. 【server】新增 支持使用 TOPIAM 企业数字身份管控平台登录（oauth2）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建页面保存按钮使用 loading （感谢@hhh Gitee issues IBD8WF ）\n 2. 【server】优化 SSH 文件列表支持跟随目录排序\n 3. 【server】优化 用户操作日志记录表中用户 id 长度不够照成登录失败问题（感谢@Halo Gitee issues IBFNKE ）\n 4. 【agent】优化 DSL 项目备份支持配置开启或者关闭差异备份（默认使用差异备份：仅备份变动过的文件）（感谢@ercats Gitee issues IBF73J ）\n 5. 【server】优化 构建 webhook 新增 git 的提交id和提交信息参数（感谢@皮儿卡啦没有丘 Gitee issues IBDEU0 ）\n 6. 【server】优化 文件中心发布文件支持保存为模板方便后续使用（感谢@lin_yeqi Gitee issues IB2FRF ）\n 7. 【all】升级 hutool 版本\n 8. 【server】修复 ssh文件管理显示错位（感谢@lin_yeqi Gitee issues IB98AU ）\n\n----------------------------------------\n\n\n# 2.11.11-release (2024-12-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】升级 docker-java 版本到 3.4.0\n 2.  【server】优化 数据库备份支持外部调用触发器来实现自定义备份周期（感谢@刘志远）\n 3.  【server】优化 SSH、项目 文件管理树加载 loading 避免网络卡顿影响树渲染错误（感谢@Bo）\n 4.  【server】优化 SSH、项目 文件管理树支持横向滚动条\n 5.  【server】优化 构建记录存储最后 commitId commitMsg 信息（感谢@program）\n 6.  【server】优化 引用脚本库时出现 ${xxxx} 出现引用失败：No group with name {xxxx} （感谢@foot_print Gitee issues IAW413 ）\n 7.  【server】优化 构建环境变量自动识别系统变量密文相关关键词：pwd、pass、password、token 为隐私变量（感谢@lin_yeqi Gitee issues IB34L9 ）\n 8.  【agent】优化 项目状态触发器 result 参数返回 json 类型，DSL 项目重启成功返回 pid（感谢@新）\n 9.  【server】优化 日志查看器中行号增加无法选中样式（感谢@ning Gitee pr 284 ）\n 10. 【server】修复 容器构建自定义插件，环境变量不匹配问题（感谢@杨晓龙 Gitee pr 285 ）\n 11. 【agent】优化 项目日志文件编码格式支持独立配置（感谢@不渡 Gitee issues IB3DCP ）\n 12. 【all】优化 使用默认语言时增加判断所在时区来识别中文环境\n 13. 【all】升级 fastjson 依赖版本\n\n----------------------------------------\n\n\n# 2.11.10-release (2024-09-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 项目监控新增沉默时间配置，避免报警后不再触发报警\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【all】修复 多会话使用文件跟踪器可能出现多个线程未关闭问题（感谢@沐剑屏 Gitee issues IAI0I1 ）\n 2.  【all】修复 windows 管理脚本在 JDK 1.8 无法正常启动（感谢@流浪的墨染青衫、@LL）\n 3.  【server】修复 多个工作空间分组后子工作空间层级异常造成不能正常使用\n 4.  【server】修复 监控日志标题字段长度太短在英语模式下字段异常（感谢@Deer）\n 5.  【server】优化 监控新增使用语言来实现通知消息国际化\n 6.  【server】修复 git仓库账号/密码包含特殊符号导致系统Git工具无法成功认证的问题（感谢@🇩）\n 7.  【server】修复 SSH 分片上传极大概率上传失败问题（感谢@勤思·、@张飞鸿）\n 8.  【all】升级 hutool、logback、tomcat 版本\n 9.  【server】优化 时长格式化工具支持 i18n 国际化\n 10. 【server】修复 终端日志处理字节\'7\'导致的日志补全记录不全 （感谢@adao Github issues 91 ）\n 11. 【server】升级 spring 包到 5.3.39 修复漏洞 CVE-2024-38808，CVE-2024-38809（感谢@龙猫）Gitee Pr 281\n 12. 【server】优化 构建 webhook 携带工作空间和集群id参数（workspaceId、clusterInfoId、workspaceName）（感谢@🦁子）\n 13. 【server】修复 构建命令引用脚本时相关脚本引用脚本库未生效问题（感谢@木迷榖）\n 14. 【server】优化 构建命令、本地发布命令支持直接引起脚本库（G@("xx") xx 为脚本标记）\n 15. 【server】修复 构建时日志记录器异常关闭未提示并且构建状态未修改（感谢@陈晨🍊）\n 16. 【server】优化 构建日志弹窗支持查看可用环境变量\n 17. 【server】优化 构建支持查看可用环境变量（感谢@慌i Gitee issues IALAUW ）\n 18. 【server】升级 mysql 驱动版本到 8.2.0\n 19. 【server】优化 ssh docker 独立配置是否需要 sudo 执行\n 20. 【server】修复 ssh docker 选型固定只有最新 10 条调整为搜索下拉（@山上雪）\n\n----------------------------------------\n\n\n# 2.11.9-release (2024-08-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 静态文件扫描到空时更新数据库异常（感谢@blackcat Gitee issues IA6UO0 ）\n 2.  【server】修复 SSH命令行操作日志支持更全展示（感谢@beens Gitee issues IA6P3J ）\n 3.  【all】优化 升级 hutool、oshi、mwiede-jsch、fastjson2 版本\n 4.  【server】修复 非管理员用户无法使用脚本库数据（感谢@丁炳坤 Gitee issues IA8ZKP ）\n 5.  【server】修复 构建编辑页面未输入构建命令提示错误（感谢@yt Gitee issues IAAI8D ）\n 6.  【server】优化 构建容器镜像支持推送到远程仓库后自动删除本地镜像（感谢 @爱琳琳真是太好了 Gitee issues IA6UBO ）\n 7.  【server】修复 淘汰 javax.security.cert.X509Certificate（感谢@Jie Github issues 84 ）\n 8.  【all】优化 启动控制台日志完善 i18n\n 9.  【server】修复 证书删除后弹窗未正常关闭\n 10. 【server】优化 登录验证码去除易混淆字母（oO0、lL1、q9Q、pP）\n 11. 【server】修复 批量构建引起环境变量丢失问题（感谢@xieliangza Github issues 88 ）\n 12. 【all】优化 解析 HTTP Accept-Language 请求头支持多语言最高优先级\n 13. 【server】修复 页面未刷新情况下打开弹窗次数过多不能提示窗口层级太低（感谢@lin_yeqi Gitee issues IAEBUZ ）\n 14. 【server】优化 分发日志显示关联数据信息（感谢@pumpkinor Gitee issues IAF7IV ）\n 15. 【server】优化 分发文件使用文件中心或者静态文件上传至节点使用实际文件名（感谢@pumpkinor Gitee issues IAF7GD ）\n 16. 【server】优化 SSH 文件管理支持浏览器分片上传（感谢@超人那个超i Gitee issues IAD9W4 ）\n 17. 【all】优化 管理脚本判断 JDK9+ 自动添加解除限制反射参数：--add-opens=xxxx\n 18. 【server】优化 更多组件的页面层级问题，避免层级错乱无法正常使用页面相关功能\n 19. 【server】修复 容器构建 DSL 配置示例错乱\n\n----------------------------------------\n\n\n# 2.11.8-release (2024-06-20)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 操作确认交互弹窗层级过低无法正常显示使用（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.7-release (2024-06-19)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目文件支持快捷复制到当前文件夹\n 2. 【agent】新增 项目文件夹支持快捷压缩（感谢@yiziyu Gitee issues I9737L ）\n 3. 【agent】新增 全局脚本库（DSL 项目可引用）\n 4. 【all】新增 支持 i18n 语言国际化：简体中文、英语、繁體中文（中國香港）、繁體中文（中國臺灣）\n 5. 【server】新增 服务端脚本、SSH 脚本支持引用全局脚本库（G@("xx") xx 为脚本标记）\n 6. 【agent】新增 节点脚本支持引用全局脚本库（G@("xx") xx 为脚本标记）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 部分参数、环境变量配置交互优化取消文本输入框采用标签模式（感谢@湘江夜色）\n 2.  【server】修复 部分页面中文描述未正常显示\n 3.  【server】优化 文件发布支持选择脚本模板（感谢@linCodeTest Gitee issues I9P0EU ）\n 4.  【server】优化 升级 postgresql 版本（感谢@ʟᴊx💎💎）\n 5.  【server】修复 机器相关授权配置文件后缀输入框未正常显示（@感谢@ccx2480）\n 6.  【server】修复 没有端口的容器重建页面异常（感谢@冰淇淋还是冰激凌）\n 7.  【server】优化 ssh 管理独立 tab 页面使用默认的字符串排序\n 8.  【server】修复 服务端脚本无法执行、参数值描述不对应（感谢@冰淇淋还是冰激凌）\n 9.  【server】修复 gogs 仓库令牌导入异常（感谢@张飞鸿）\n 10. 【server】修复 自定义仓库令牌导入后页面异常（感谢@张飞鸿）\n 11. 【agent】修复 不同工作空间下同一个机器节点相同的项目ID的项目数据被覆盖（感谢@小朱）\n 12. 【agent】优化 DSL 项目支持引用脚本库中的脚本（G@xxxx）xxxx 为脚本标记\n 13. 【all】优化 新增系统语言配置 jpom.system.lang\n 14. 【server】优化 前端紧凑模式在浅色模式下也生效\n\n\n# ⚠️ 注意\n\n * 前端国际化翻译程度：98%\n * 后端已翻译语言可以度：95%（部分异步执行日志等目前未支持）\n\n后端日志国际化需要新增或者修改 jpom.system.lang 配置项\n\n\n# 🤝致谢\n\n感谢 @a20070322 / Controllers 大佬贡献 Jpom 前端 i18n 工具。\n\n----------------------------------------\n\n\n# 2.11.6-release (2024-05-30)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 自由脚本方便调试机器节点\n 2. 【agent】新增 项目支持配置禁止扫描目录避免大目录页面超时（感谢@我）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 资产管理 SSH 配置禁用命令无法回显（感谢@zhangw）\n 2.  【server】修复 资产管理 SSH 未配置授权目录时 NPE （感谢@Anley Gitee issues I9J17G ）\n 3.  【agent】优化 监控机器网络流程支持配置排除网卡或者仅统计对应的网卡\n 4.  【server】修复 退出登录时页面会提示需要登录相关信息\n 5.  【server】优化 页面检测新版本判断是否加入 beta\n 6.  【agent】优化 添加数据记录修改人（感谢@陈旭 Gitee issues I9JSY7 ）\n 7.  【server】优化 插件端注册到服务端，网络测试支持 ping + telnet （感谢@泊凉青川）\n 8.  【server】优化 自动续签采用无感模式（感谢@湘江夜色）\n 9.  【server】优化 容器构建执行配置自定义 host 参数（感谢@冰淇淋还是冰激凌）\n 10. 【all】升级 tomcat、yaml 版本（感谢@佳驰）\n 11. 【all】升级 bcprov-jdk18on 版本\n\n----------------------------------------\n\n\n# 2.11.5-release (2024-04-23)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 Oauth2 新增【飞书账号】、【自建 Gitlab】登录（感谢@鸡皮蒜毛与鸡毛蒜皮 Gitee issues I9ELGS ）\n 2. 【server】新增 Oauth2 新增企业微信登录\n 3. 【server】新增 发布系统公告\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 oauth2 第三方平台登录解析用户名将依次尝试：平台用户名、邮箱、uuid\n 2.  【server】修复 无法查询到分组信息（页面下拉框）（感谢@Robot Gitee issues I9FN9U ）\n 3.  【all】升级 hutool 版本\n 4.  【server】修复 修复孤独数据描述错别字（感谢@cuiyongsheng Github issues 77 ）\n 5.  【server】修复 前端地址栏输入二级路径 404 页面卡死问题\n 6.  【server】优化 Git 仓库地址不正确相关提示更准确（感谢@易自玉）\n 7.  【server】升级 前端组件版本\n 8.  【all】优化 管理脚本删除 -XX:-UseBiasedLocking 使其能在高版本 jdk 运行\n 9.  【server】修复 构建列表卡片模式按钮文字错乱\n 10. 【server】修复 项目列表和逻辑节点卡片视图冲突\n 11. 【server】修复 docker管理新增docker选择证书界面权重异常 （感谢@伤感的风铃草 Gitee issues I9GYVA ）\n 12. 【server】修复 系统管理中用户管理中登录日志无法筛选\n 13. 【server】优化 用户登录记录操作日志（保证操作监控能记录）\n 14. 【server】修复 系统管理中用户登录日志无法分页\n 15. 【server】优化 Oauth2 支持配置创建账号配置权限组\n 16. 【server】修复 文件发布权限为执行权限、文件发布记录删除无记录日志 （感谢@蓝枫）\n 17. 【server】修复 资产管理 SSH 配置禁用命令无法回显（感谢@zhangw）\n\n----------------------------------------\n\n\n# 2.11.4 (2024-04-07)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持 postgresql （感谢@王先生）Gitee Pr 223\n 2. 【server】新增 数据库支持 mariadb\n 3. 【server】新增 Oauth2 新增钉钉扫码登录\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【all】优化 新增 jpom.system.command-use-sudo 配置属性控制是否使用 sudo 执行部分系统命令\n 2.  【server】优化 前端页面 keep-alive 可能导致的内存泄漏问题（感谢@a20070322 Gitee issues I9510M ）\n 3.  【server】修复 部分弹窗不生效问题（感谢@a20070322 Gitee Pr 215 ）\n 4.  【server】优化 前端 ES lint 配置规范前端代码（感谢@a20070322 Gitee Pr 214 / Gitee Pr 215 / Gitee Pr 217 ）\n 5.  【server】修复 docker 控制台网络选项卡页面空白（感谢@破冰）\n 6.  【server】修复 节点历史监控统计图表时间查询不生效（感谢@九問）\n 7.  【server】优化 SSH 脚本触发器支持传入参数当环境变量（感谢@小朱）\n 8.  【server】修复 h2迁移其它数据库时部分数据丢失（感谢@王先生）Gitee issues I9977K\n 9.  【server】优化 逐步引入新版表格（构建、项目、节点、资产机器）（感谢@a20070322 Gitee Pr 218 / Gitee Pr 220 / Gitee Pr 222 ）\n 10. 【server】优化 工作空间概括构建日志支持快速查看详情（感谢@Roger.cao）\n 11. 【server】修复 无法查询到分组信息（页面下拉框）（感谢@猫猫向钱跑）\n 12. 【server】修复 【项目文件管理远程下载】、【镜像创建容器】确认按钮无法使用（感谢@猫猫向钱跑）\n 13. 【server】修改 资产管理机器管理删除按钮无法正常使用（感谢@🇩）\n 14. 【server】修复 SSH 面板文件管理无法正常切换（感谢@勤思·）\n 15. 【server】优化 部分页面在火狐浏览器无法正常打开（感谢@sparkarvin Gitee issues I96IOA ） （感谢@a20070322 Gitee Pr 221 ）\n 16. 【agent】优化 DSL 项目支持配置在特定目录执行脚本（run.execPath）\n 17. 【agent】优化 管理脚本 -Xss 默认值修改为 512k（感谢@Again... ）\n 18. 【server】优化 管理脚本 -Xss 默认值修改为 1024k（感谢@Again... ）\n 19. 【server】优化 声明使用开源软件列表、增加本软件开源协议声明\n\n----------------------------------------\n\n\n# 2.11.3 (2024-03-01)\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【agent】修复 修改项目日志路径如果文件夹不存在报错（感谢@长弘）\n 2.  【server】修复 节点机器日志无法下载（感谢@Again...）\n 3.  【agent】升级 oshi 版本\n 4.  【server】升级 mwiede、apache-sshd 版本（感谢@*斌）\n 5.  【server】优化 项目列表 file 类型正常排序（不再排序到最后）（感谢@pal865 Gitee issues I8XU32 ）\n 6.  【all】修复 windows 环境保存配置并重启失败（感谢@Robot Gitee issues I8Y01T ）\n 7.  【server】修复 新版本页面部分分页切换失效（构建详情、资产机器、逻辑节点）（感谢@zac）\n 8.  【server】优化 构建代码未变动流程打断触发器未传入原因（statusMsg）（感谢@烛孩）\n 9.  【server】修复 项目控制台日志删除弹窗未能正常关闭（感谢@%）\n 10. 【server】修复 脚本日志时间筛选不生效（感谢@zhaozxc2010 Gitee issues I8ZNKL ）\n 11. 【server】优化 页面左侧菜单固定悬浮不跟随屏幕滚动条滚动（感谢@a20070322 Gitee issues I8ZOOB / Gitee Pr 201 ）\n 12. 【server】优化 新增机器节点提示未选择协议（感谢@a20070322 Gitee issues I8ZDZT / Gitee Pr 202 ）\n 13. 【server】修复 SSH 资产硬盘信息显示错误（感谢@a20070322 Gitee issues I8ZY7K ）\n 14. 【server】优化 表格搜索区域小屏幕适配 （感谢@a20070322 Gitee issues I8ZY0B ）\n 15. 【server】优化 SSH 文件管理树操作优化 （感谢@a20070322 Gitee issues I9054L / Gitee issues I5DMKG ）\n 16. 【server】优化 整体页面顶部菜单吸顶效果（感谢@a20070322 Gitee issues I907Y8 ）\n 17. 【server】优化 资产监控线程池独立管理（感谢@singlethread Gitee issues I918AB ）\n 18. 【server】优化 构建回滚使用构建独立线程池\n 19. 【all】优化 升级 hutool 版本（主要解决版本号排序异常）（感谢 @Tom Xin Gitee issues I8Z3TI / Hutool issues I8Z3VE）\n 20. 【all】优化 升级 fastjson 版本\n 21. 【server】优化 页面整体滚动条兼容高版本浏览器（感谢@Controllers）\n 22. 【server】优化 升级 docker-java、jgit 版本\n 23. 【all】优化 升级 commons-compress 版本\n 24. 【server】优化 新增配置节点 websocket 通讯消息大小限制（jpom.node.web-socket-message-size-limit）（感谢@长弘）\n 25. 【server】优化 系统文件占用空间统计周期调整为每天2次（感谢@singlethread Gitee issues I9302U ）\n 26. 【server】优化 支持配置前端所有参数编码来规避部分安全规则检查（感谢@zhaozxc2010 Gitee issues I8Z1VJ ）\n 27. 【server】优化 上传文件空文件提示文件路径（感谢@SchuckBate Gitee issues I93FI6 ）\n 28. 【server】优化 监听日志文件消息发送失败后自动移除会话（感谢@singlethread Gitee issues I93ZFX ）\n 29. 【server】优化 容器构建产物为文件时保存路径层级错误（感谢@vfhky）Github Pr 71 ）\n 30. 【server】优化 个性配置区内容主题支持“跟随系统”（感谢@a20070322 Gitee issues I94SPA ）\n\n----------------------------------------\n\n\n# 2.11.2 (2024-03-01)\n\n\n# ⚠️ 注意\n\n此版本是一个空版本，为了更好地兼容后续 beta 和 release 版本发布特意创建的空版本\n\n2.11.2 版本等同于 2.11.3 版本\n\n----------------------------------------\n\n\n# 2.11.1 (2024-01-18)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 触发器调用次数统计、触发器统一管理\n 2. 【server】新增 本地构建命令执行支持配置多线程方式（多线程接收输出流，避免极端情况卡死）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 docker TLS 证书无法查看全部、证书无法编辑（新版遗漏）\n 2.  【server】优化 docker 资产监控支持自定义配置 cron jpom.assets.docker.monitor-cron\n 3.  【server】修复 容器终端、容器日志无法正常使用\n 4.  【server】修复 新版本页面多处无法正常使用相关问题（优化部分提示说明）\n 5.  【server】修复 静态文件名太短（100个字符）（感谢@*斌）\n 6.  【server】修复 还原数据库弹窗内容提示为空（感谢@伤感的风铃草🌿）\n 7.  【server】优化 echarts 支持跟随深色模式\n 8.  【server】修复 编辑节点分发服务端脚本弹窗被挡住（感谢@🇩）\n 9.  【server】优化 前端打包（缩减首屏加载时间）（感谢@曾梦想仗剑走天涯）\n 10. 【all】优化 机器状态新增：资源监控异常（资源监控异常不影响功能使用）\n 11. 【server】优化 取消登录页动态背景图\n 12. 【server】修复 节点分发文件中心、静态文件后文件自动被删除（感谢@九問）\n 13. 【server】优化 容器构建支持配置容器资源（HostConfig）（感谢@珂儿）\n 14. 【agent】修复 插件端非默认工作空间项目重启后变为孤独数据（感谢@ccx2480）\n 15. 【server】修复 新增节点分发项目数据为孤独数据\n\n----------------------------------------\n\n\n# 2.11.0 (2024-01-12)\n\n\n# 🐣 新增功能\n\n 1.  【all】新增 项目支持软链其他项目（代替项目副本）\n 2.  【server】新增 工作空间管理中新增概括总览页面、资产总览统计\n 3.  【server】升级 页面 UI 组件、VUE 版本升级到最新（支持配置浅色、深色主题、左边菜单主题）\n 4.  【all】新增 孤独数据管理（查看孤独数据、修正孤独数据）（感谢@陈旭 Gitee issues I8UNXZ）\n 5.  【server】新增 节点分发可以指定构建历史产物发布\n 6.  【server】新增 节点分发可以指定文件中心发布\n 7.  【server】新增 DSL 项目新增 reload 事件（可以开启文件变动触发）\n 8.  【server】新增 静态文件授权服务端指定目录到工作空间来管理（分发）(感谢@*斌)\n 9.  【server】新增 节点分发可以指定静态文件发布\n 10. 【server】修复 没有工作空间权限时页面循环跳转（感谢@王先生 Gitee issues I8RR01）\n 11. 【all】优化 授权目录判断逻辑\n 12. 【agent】取消 插件端授权目录关闭包含判断(jpom.whitelist.check-starts-with)\n 13. 【server】优化 触发器清理优化、删除用户主动删除关联触发器\n 14. 【server】优化 DSL 项目控制台支持快捷编辑节点脚本（查看流程信息）\n 15. 【server】修复 项目触发器无法调用\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【all】下架 全面下架项目副本功能（请使用 DSL 模式或者软链项目代替）\n 2.  【all】下架 全面节点证书管理功能（请使用工作空间证书代替）\n 3.  【all】下架 全面架节点 NGINX 管理功能（请使用 DSL 模式代替）\n 4.  【server】优化 构建编辑页面交互、编辑器样式、DSL 配置样式\n 5.  【server】优化 节点管理仅保留项目管理、脚本管理、脚本日志（其他功能迁移到机器资产管理）\n 6.  【all】优化 查看插件端和服务端的系统日志 websocket 地址\n 7.  【server】优化 监控机器系统负载保留2位小数\n 8.  【server】下架 取消节点管理员权限\n 9.  【server】修复 文件变动触发器不生效的问题\n 10. 【all】优化 项目操作接口合并（4 合 1）\n 11. 【server】优化 配置授权目录需要使用到绝对路径\n 12. 【server】优化 重新同步节点项目、节点脚本缓存交互\n 13. 【server】优化 SSH 脚本执行模板独立（/exec/template.sh -> /ssh/template.sh）\n 14. 【server】优化 服务端脚本支持加载脚本模板来实现自动加载部分环境变量\n 15. 【all】优化 关闭 Process 方式\n 16. 【server】优化 支持批量删除构建信息（感谢@奇奇）\n 17. 【server】修复 删除项目、删除分发检查关联构建失败问题\n 18. 【all】优化 日志记录器提升日志记录性能\n 19. 【server】优化 取消/停止构建采用异常来打断子进程\n 20. 【server】修复 本地构建无法取消\n 21. 【server】修复 服务端脚本触发器、节点脚本触发器提示找不到用户（感谢@LYY）\n 22. 【server】修复 部分低频功能无法正常使用（项目备份文件管理等）\n 23. 【server】修复 部分执行异常未输出到操作日志文件中（感谢@闫淼淼）\n 24. 【server】优化 系统Git拉取代码时，强制云端最新代码覆盖本地代码\n 25. 【agent】优化 插件端 java 项目启动支持读取环境变量\n 26. 【agent】修复 插件端环境变量值获取异常\n 27. 【server】优化 本地 git 联动严格执行开关\n 28. 【server】修复 登录账户未跳转配置的第一个工作空间（未遵循自定义配置）\n 29. 【server】修复 部分操作构建环境变量丢失（保存并构建、后台构建、直接构建）\n 30. 【agent】优化 插件端自由脚本（分发文件脚本）大小限制调整为 5M（感谢@九問）\n\n\n# ⚠️ 注意\n\n 1. 全面下架项目副本功能（请使用 DSL 模式或者软链项目代替）如果您当前使用到此功能请先手动备份相关数据\n 2. 升级后项目副本数据会被人工或者系统更新项目数据自动删除（请一定提前做好备份操作）\n 3. 全面下架节点证书管理功能（请使用工作空间证书代替）如果您当前使用到此功能请先手动备份相关数据\n 4. 全面下架全下架节点 NGINX 管理功能（请使用 DSL 模式代替）如果您当前使用到此功能请先手动备份相关数据\n\n> ❓ 为什么要下架上述功能：由于版本迭代已经有更好的新功能可以代替之前旧功能，并且新功能从另一种角度更方便。下架也是为了我们后续版本维护迭代更高效\n\n----------------------------------------\n\n 1. 如果您配置了授权目录但是保存项目报错您可以尝试重新报错一下授权目录来自动修复授权目录配置数据\n 2. 项目控制台日志默认路径调整为插件端数据目录下project-log/${projectId}/${projectId}.log\n 3. 项目控制台日志备份默认路径调整为插件端数据目录下project-log/${projectId}/back/${projectId}-xxxxxxx.log\n\n----------------------------------------\n\n如果您自定义过 SSH 脚本默认那么您需要重新同步一下脚本模板/exec/template.sh -> /ssh/template.sh\n\n新版本 /exec/template.sh 中仅在服务端中生效（本地构建脚本、服务端脚本、本地发布脚本）\n\n----------------------------------------\n\n * 【白名单】关键词统一调整为【授权】\n * 【黑名单】关键词统一调整为【禁止】\n * 部分【添加】关键词统一调整为【新增】\n\n\n# 🤝致谢\n\n感谢所有参与 2.11.0 beta 版本（2.11.0.0 ~ 2.11.0.13）内测的用户。\n\n----------------------------------------',normalizedContent:'# 2.11.12-release (2025-05-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 远程安装时的授权码支持（感谢@奇奇）\n 2. 【server】修复 ssh控制台输入control + r后无法记录日志的问题\n 3. 【server】优化 容器构建镜像新增 毫秒镜像 临时仓库\n 4. 【all】优化 修改 tomcat版本到9.0.99安全版本 （感谢@龙猫 gitee pr 292）\n 5. 【server】新增 服务端在线升级页面支持配置下载授权码，方便国内用户使用全速 cdn\n 6. 【server】新增 支持使用 topiam 企业数字身份管控平台登录（oauth2）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建页面保存按钮使用 loading （感谢@hhh gitee issues ibd8wf ）\n 2. 【server】优化 ssh 文件列表支持跟随目录排序\n 3. 【server】优化 用户操作日志记录表中用户 id 长度不够照成登录失败问题（感谢@halo gitee issues ibfnke ）\n 4. 【agent】优化 dsl 项目备份支持配置开启或者关闭差异备份（默认使用差异备份：仅备份变动过的文件）（感谢@ercats gitee issues ibf73j ）\n 5. 【server】优化 构建 webhook 新增 git 的提交id和提交信息参数（感谢@皮儿卡啦没有丘 gitee issues ibdeu0 ）\n 6. 【server】优化 文件中心发布文件支持保存为模板方便后续使用（感谢@lin_yeqi gitee issues ib2frf ）\n 7. 【all】升级 hutool 版本\n 8. 【server】修复 ssh文件管理显示错位（感谢@lin_yeqi gitee issues ib98au ）\n\n----------------------------------------\n\n\n# 2.11.11-release (2024-12-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】升级 docker-java 版本到 3.4.0\n 2.  【server】优化 数据库备份支持外部调用触发器来实现自定义备份周期（感谢@刘志远）\n 3.  【server】优化 ssh、项目 文件管理树加载 loading 避免网络卡顿影响树渲染错误（感谢@bo）\n 4.  【server】优化 ssh、项目 文件管理树支持横向滚动条\n 5.  【server】优化 构建记录存储最后 commitid commitmsg 信息（感谢@program）\n 6.  【server】优化 引用脚本库时出现 ${xxxx} 出现引用失败：no group with name {xxxx} （感谢@foot_print gitee issues iaw413 ）\n 7.  【server】优化 构建环境变量自动识别系统变量密文相关关键词：pwd、pass、password、token 为隐私变量（感谢@lin_yeqi gitee issues ib34l9 ）\n 8.  【agent】优化 项目状态触发器 result 参数返回 json 类型，dsl 项目重启成功返回 pid（感谢@新）\n 9.  【server】优化 日志查看器中行号增加无法选中样式（感谢@ning gitee pr 284 ）\n 10. 【server】修复 容器构建自定义插件，环境变量不匹配问题（感谢@杨晓龙 gitee pr 285 ）\n 11. 【agent】优化 项目日志文件编码格式支持独立配置（感谢@不渡 gitee issues ib3dcp ）\n 12. 【all】优化 使用默认语言时增加判断所在时区来识别中文环境\n 13. 【all】升级 fastjson 依赖版本\n\n----------------------------------------\n\n\n# 2.11.10-release (2024-09-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 项目监控新增沉默时间配置，避免报警后不再触发报警\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【all】修复 多会话使用文件跟踪器可能出现多个线程未关闭问题（感谢@沐剑屏 gitee issues iai0i1 ）\n 2.  【all】修复 windows 管理脚本在 jdk 1.8 无法正常启动（感谢@流浪的墨染青衫、@ll）\n 3.  【server】修复 多个工作空间分组后子工作空间层级异常造成不能正常使用\n 4.  【server】修复 监控日志标题字段长度太短在英语模式下字段异常（感谢@deer）\n 5.  【server】优化 监控新增使用语言来实现通知消息国际化\n 6.  【server】修复 git仓库账号/密码包含特殊符号导致系统git工具无法成功认证的问题（感谢@🇩）\n 7.  【server】修复 ssh 分片上传极大概率上传失败问题（感谢@勤思·、@张飞鸿）\n 8.  【all】升级 hutool、logback、tomcat 版本\n 9.  【server】优化 时长格式化工具支持 i18n 国际化\n 10. 【server】修复 终端日志处理字节\'7\'导致的日志补全记录不全 （感谢@adao github issues 91 ）\n 11. 【server】升级 spring 包到 5.3.39 修复漏洞 cve-2024-38808，cve-2024-38809（感谢@龙猫）gitee pr 281\n 12. 【server】优化 构建 webhook 携带工作空间和集群id参数（workspaceid、clusterinfoid、workspacename）（感谢@🦁子）\n 13. 【server】修复 构建命令引用脚本时相关脚本引用脚本库未生效问题（感谢@木迷榖）\n 14. 【server】优化 构建命令、本地发布命令支持直接引起脚本库（g@("xx") xx 为脚本标记）\n 15. 【server】修复 构建时日志记录器异常关闭未提示并且构建状态未修改（感谢@陈晨🍊）\n 16. 【server】优化 构建日志弹窗支持查看可用环境变量\n 17. 【server】优化 构建支持查看可用环境变量（感谢@慌i gitee issues ialauw ）\n 18. 【server】升级 mysql 驱动版本到 8.2.0\n 19. 【server】优化 ssh docker 独立配置是否需要 sudo 执行\n 20. 【server】修复 ssh docker 选型固定只有最新 10 条调整为搜索下拉（@山上雪）\n\n----------------------------------------\n\n\n# 2.11.9-release (2024-08-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 静态文件扫描到空时更新数据库异常（感谢@blackcat gitee issues ia6uo0 ）\n 2.  【server】修复 ssh命令行操作日志支持更全展示（感谢@beens gitee issues ia6p3j ）\n 3.  【all】优化 升级 hutool、oshi、mwiede-jsch、fastjson2 版本\n 4.  【server】修复 非管理员用户无法使用脚本库数据（感谢@丁炳坤 gitee issues ia8zkp ）\n 5.  【server】修复 构建编辑页面未输入构建命令提示错误（感谢@yt gitee issues iaai8d ）\n 6.  【server】优化 构建容器镜像支持推送到远程仓库后自动删除本地镜像（感谢 @爱琳琳真是太好了 gitee issues ia6ubo ）\n 7.  【server】修复 淘汰 javax.security.cert.x509certificate（感谢@jie github issues 84 ）\n 8.  【all】优化 启动控制台日志完善 i18n\n 9.  【server】修复 证书删除后弹窗未正常关闭\n 10. 【server】优化 登录验证码去除易混淆字母（oo0、ll1、q9q、pp）\n 11. 【server】修复 批量构建引起环境变量丢失问题（感谢@xieliangza github issues 88 ）\n 12. 【all】优化 解析 http accept-language 请求头支持多语言最高优先级\n 13. 【server】修复 页面未刷新情况下打开弹窗次数过多不能提示窗口层级太低（感谢@lin_yeqi gitee issues iaebuz ）\n 14. 【server】优化 分发日志显示关联数据信息（感谢@pumpkinor gitee issues iaf7iv ）\n 15. 【server】优化 分发文件使用文件中心或者静态文件上传至节点使用实际文件名（感谢@pumpkinor gitee issues iaf7gd ）\n 16. 【server】优化 ssh 文件管理支持浏览器分片上传（感谢@超人那个超i gitee issues iad9w4 ）\n 17. 【all】优化 管理脚本判断 jdk9+ 自动添加解除限制反射参数：--add-opens=xxxx\n 18. 【server】优化 更多组件的页面层级问题，避免层级错乱无法正常使用页面相关功能\n 19. 【server】修复 容器构建 dsl 配置示例错乱\n\n----------------------------------------\n\n\n# 2.11.8-release (2024-06-20)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 操作确认交互弹窗层级过低无法正常显示使用（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.7-release (2024-06-19)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目文件支持快捷复制到当前文件夹\n 2. 【agent】新增 项目文件夹支持快捷压缩（感谢@yiziyu gitee issues i9737l ）\n 3. 【agent】新增 全局脚本库（dsl 项目可引用）\n 4. 【all】新增 支持 i18n 语言国际化：简体中文、英语、繁體中文（中國香港）、繁體中文（中國臺灣）\n 5. 【server】新增 服务端脚本、ssh 脚本支持引用全局脚本库（g@("xx") xx 为脚本标记）\n 6. 【agent】新增 节点脚本支持引用全局脚本库（g@("xx") xx 为脚本标记）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 部分参数、环境变量配置交互优化取消文本输入框采用标签模式（感谢@湘江夜色）\n 2.  【server】修复 部分页面中文描述未正常显示\n 3.  【server】优化 文件发布支持选择脚本模板（感谢@lincodetest gitee issues i9p0eu ）\n 4.  【server】优化 升级 postgresql 版本（感谢@ʟᴊx💎💎）\n 5.  【server】修复 机器相关授权配置文件后缀输入框未正常显示（@感谢@ccx2480）\n 6.  【server】修复 没有端口的容器重建页面异常（感谢@冰淇淋还是冰激凌）\n 7.  【server】优化 ssh 管理独立 tab 页面使用默认的字符串排序\n 8.  【server】修复 服务端脚本无法执行、参数值描述不对应（感谢@冰淇淋还是冰激凌）\n 9.  【server】修复 gogs 仓库令牌导入异常（感谢@张飞鸿）\n 10. 【server】修复 自定义仓库令牌导入后页面异常（感谢@张飞鸿）\n 11. 【agent】修复 不同工作空间下同一个机器节点相同的项目id的项目数据被覆盖（感谢@小朱）\n 12. 【agent】优化 dsl 项目支持引用脚本库中的脚本（g@xxxx）xxxx 为脚本标记\n 13. 【all】优化 新增系统语言配置 jpom.system.lang\n 14. 【server】优化 前端紧凑模式在浅色模式下也生效\n\n\n# ⚠️ 注意\n\n * 前端国际化翻译程度：98%\n * 后端已翻译语言可以度：95%（部分异步执行日志等目前未支持）\n\n后端日志国际化需要新增或者修改 jpom.system.lang 配置项\n\n\n# 🤝致谢\n\n感谢 @a20070322 / controllers 大佬贡献 jpom 前端 i18n 工具。\n\n----------------------------------------\n\n\n# 2.11.6-release (2024-05-30)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 自由脚本方便调试机器节点\n 2. 【agent】新增 项目支持配置禁止扫描目录避免大目录页面超时（感谢@我）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 资产管理 ssh 配置禁用命令无法回显（感谢@zhangw）\n 2.  【server】修复 资产管理 ssh 未配置授权目录时 npe （感谢@anley gitee issues i9j17g ）\n 3.  【agent】优化 监控机器网络流程支持配置排除网卡或者仅统计对应的网卡\n 4.  【server】修复 退出登录时页面会提示需要登录相关信息\n 5.  【server】优化 页面检测新版本判断是否加入 beta\n 6.  【agent】优化 添加数据记录修改人（感谢@陈旭 gitee issues i9jsy7 ）\n 7.  【server】优化 插件端注册到服务端，网络测试支持 ping + telnet （感谢@泊凉青川）\n 8.  【server】优化 自动续签采用无感模式（感谢@湘江夜色）\n 9.  【server】优化 容器构建执行配置自定义 host 参数（感谢@冰淇淋还是冰激凌）\n 10. 【all】升级 tomcat、yaml 版本（感谢@佳驰）\n 11. 【all】升级 bcprov-jdk18on 版本\n\n----------------------------------------\n\n\n# 2.11.5-release (2024-04-23)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 oauth2 新增【飞书账号】、【自建 gitlab】登录（感谢@鸡皮蒜毛与鸡毛蒜皮 gitee issues i9elgs ）\n 2. 【server】新增 oauth2 新增企业微信登录\n 3. 【server】新增 发布系统公告\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 oauth2 第三方平台登录解析用户名将依次尝试：平台用户名、邮箱、uuid\n 2.  【server】修复 无法查询到分组信息（页面下拉框）（感谢@robot gitee issues i9fn9u ）\n 3.  【all】升级 hutool 版本\n 4.  【server】修复 修复孤独数据描述错别字（感谢@cuiyongsheng github issues 77 ）\n 5.  【server】修复 前端地址栏输入二级路径 404 页面卡死问题\n 6.  【server】优化 git 仓库地址不正确相关提示更准确（感谢@易自玉）\n 7.  【server】升级 前端组件版本\n 8.  【all】优化 管理脚本删除 -xx:-usebiasedlocking 使其能在高版本 jdk 运行\n 9.  【server】修复 构建列表卡片模式按钮文字错乱\n 10. 【server】修复 项目列表和逻辑节点卡片视图冲突\n 11. 【server】修复 docker管理新增docker选择证书界面权重异常 （感谢@伤感的风铃草 gitee issues i9gyva ）\n 12. 【server】修复 系统管理中用户管理中登录日志无法筛选\n 13. 【server】优化 用户登录记录操作日志（保证操作监控能记录）\n 14. 【server】修复 系统管理中用户登录日志无法分页\n 15. 【server】优化 oauth2 支持配置创建账号配置权限组\n 16. 【server】修复 文件发布权限为执行权限、文件发布记录删除无记录日志 （感谢@蓝枫）\n 17. 【server】修复 资产管理 ssh 配置禁用命令无法回显（感谢@zhangw）\n\n----------------------------------------\n\n\n# 2.11.4 (2024-04-07)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持 postgresql （感谢@王先生）gitee pr 223\n 2. 【server】新增 数据库支持 mariadb\n 3. 【server】新增 oauth2 新增钉钉扫码登录\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【all】优化 新增 jpom.system.command-use-sudo 配置属性控制是否使用 sudo 执行部分系统命令\n 2.  【server】优化 前端页面 keep-alive 可能导致的内存泄漏问题（感谢@a20070322 gitee issues i9510m ）\n 3.  【server】修复 部分弹窗不生效问题（感谢@a20070322 gitee pr 215 ）\n 4.  【server】优化 前端 es lint 配置规范前端代码（感谢@a20070322 gitee pr 214 / gitee pr 215 / gitee pr 217 ）\n 5.  【server】修复 docker 控制台网络选项卡页面空白（感谢@破冰）\n 6.  【server】修复 节点历史监控统计图表时间查询不生效（感谢@九問）\n 7.  【server】优化 ssh 脚本触发器支持传入参数当环境变量（感谢@小朱）\n 8.  【server】修复 h2迁移其它数据库时部分数据丢失（感谢@王先生）gitee issues i9977k\n 9.  【server】优化 逐步引入新版表格（构建、项目、节点、资产机器）（感谢@a20070322 gitee pr 218 / gitee pr 220 / gitee pr 222 ）\n 10. 【server】优化 工作空间概括构建日志支持快速查看详情（感谢@roger.cao）\n 11. 【server】修复 无法查询到分组信息（页面下拉框）（感谢@猫猫向钱跑）\n 12. 【server】修复 【项目文件管理远程下载】、【镜像创建容器】确认按钮无法使用（感谢@猫猫向钱跑）\n 13. 【server】修改 资产管理机器管理删除按钮无法正常使用（感谢@🇩）\n 14. 【server】修复 ssh 面板文件管理无法正常切换（感谢@勤思·）\n 15. 【server】优化 部分页面在火狐浏览器无法正常打开（感谢@sparkarvin gitee issues i96ioa ） （感谢@a20070322 gitee pr 221 ）\n 16. 【agent】优化 dsl 项目支持配置在特定目录执行脚本（run.execpath）\n 17. 【agent】优化 管理脚本 -xss 默认值修改为 512k（感谢@again... ）\n 18. 【server】优化 管理脚本 -xss 默认值修改为 1024k（感谢@again... ）\n 19. 【server】优化 声明使用开源软件列表、增加本软件开源协议声明\n\n----------------------------------------\n\n\n# 2.11.3 (2024-03-01)\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【agent】修复 修改项目日志路径如果文件夹不存在报错（感谢@长弘）\n 2.  【server】修复 节点机器日志无法下载（感谢@again...）\n 3.  【agent】升级 oshi 版本\n 4.  【server】升级 mwiede、apache-sshd 版本（感谢@*斌）\n 5.  【server】优化 项目列表 file 类型正常排序（不再排序到最后）（感谢@pal865 gitee issues i8xu32 ）\n 6.  【all】修复 windows 环境保存配置并重启失败（感谢@robot gitee issues i8y01t ）\n 7.  【server】修复 新版本页面部分分页切换失效（构建详情、资产机器、逻辑节点）（感谢@zac）\n 8.  【server】优化 构建代码未变动流程打断触发器未传入原因（statusmsg）（感谢@烛孩）\n 9.  【server】修复 项目控制台日志删除弹窗未能正常关闭（感谢@%）\n 10. 【server】修复 脚本日志时间筛选不生效（感谢@zhaozxc2010 gitee issues i8znkl ）\n 11. 【server】优化 页面左侧菜单固定悬浮不跟随屏幕滚动条滚动（感谢@a20070322 gitee issues i8zoob / gitee pr 201 ）\n 12. 【server】优化 新增机器节点提示未选择协议（感谢@a20070322 gitee issues i8zdzt / gitee pr 202 ）\n 13. 【server】修复 ssh 资产硬盘信息显示错误（感谢@a20070322 gitee issues i8zy7k ）\n 14. 【server】优化 表格搜索区域小屏幕适配 （感谢@a20070322 gitee issues i8zy0b ）\n 15. 【server】优化 ssh 文件管理树操作优化 （感谢@a20070322 gitee issues i9054l / gitee issues i5dmkg ）\n 16. 【server】优化 整体页面顶部菜单吸顶效果（感谢@a20070322 gitee issues i907y8 ）\n 17. 【server】优化 资产监控线程池独立管理（感谢@singlethread gitee issues i918ab ）\n 18. 【server】优化 构建回滚使用构建独立线程池\n 19. 【all】优化 升级 hutool 版本（主要解决版本号排序异常）（感谢 @tom xin gitee issues i8z3ti / hutool issues i8z3ve）\n 20. 【all】优化 升级 fastjson 版本\n 21. 【server】优化 页面整体滚动条兼容高版本浏览器（感谢@controllers）\n 22. 【server】优化 升级 docker-java、jgit 版本\n 23. 【all】优化 升级 commons-compress 版本\n 24. 【server】优化 新增配置节点 websocket 通讯消息大小限制（jpom.node.web-socket-message-size-limit）（感谢@长弘）\n 25. 【server】优化 系统文件占用空间统计周期调整为每天2次（感谢@singlethread gitee issues i9302u ）\n 26. 【server】优化 支持配置前端所有参数编码来规避部分安全规则检查（感谢@zhaozxc2010 gitee issues i8z1vj ）\n 27. 【server】优化 上传文件空文件提示文件路径（感谢@schuckbate gitee issues i93fi6 ）\n 28. 【server】优化 监听日志文件消息发送失败后自动移除会话（感谢@singlethread gitee issues i93zfx ）\n 29. 【server】优化 容器构建产物为文件时保存路径层级错误（感谢@vfhky）github pr 71 ）\n 30. 【server】优化 个性配置区内容主题支持“跟随系统”（感谢@a20070322 gitee issues i94spa ）\n\n----------------------------------------\n\n\n# 2.11.2 (2024-03-01)\n\n\n# ⚠️ 注意\n\n此版本是一个空版本，为了更好地兼容后续 beta 和 release 版本发布特意创建的空版本\n\n2.11.2 版本等同于 2.11.3 版本\n\n----------------------------------------\n\n\n# 2.11.1 (2024-01-18)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 触发器调用次数统计、触发器统一管理\n 2. 【server】新增 本地构建命令执行支持配置多线程方式（多线程接收输出流，避免极端情况卡死）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 docker tls 证书无法查看全部、证书无法编辑（新版遗漏）\n 2.  【server】优化 docker 资产监控支持自定义配置 cron jpom.assets.docker.monitor-cron\n 3.  【server】修复 容器终端、容器日志无法正常使用\n 4.  【server】修复 新版本页面多处无法正常使用相关问题（优化部分提示说明）\n 5.  【server】修复 静态文件名太短（100个字符）（感谢@*斌）\n 6.  【server】修复 还原数据库弹窗内容提示为空（感谢@伤感的风铃草🌿）\n 7.  【server】优化 echarts 支持跟随深色模式\n 8.  【server】修复 编辑节点分发服务端脚本弹窗被挡住（感谢@🇩）\n 9.  【server】优化 前端打包（缩减首屏加载时间）（感谢@曾梦想仗剑走天涯）\n 10. 【all】优化 机器状态新增：资源监控异常（资源监控异常不影响功能使用）\n 11. 【server】优化 取消登录页动态背景图\n 12. 【server】修复 节点分发文件中心、静态文件后文件自动被删除（感谢@九問）\n 13. 【server】优化 容器构建支持配置容器资源（hostconfig）（感谢@珂儿）\n 14. 【agent】修复 插件端非默认工作空间项目重启后变为孤独数据（感谢@ccx2480）\n 15. 【server】修复 新增节点分发项目数据为孤独数据\n\n----------------------------------------\n\n\n# 2.11.0 (2024-01-12)\n\n\n# 🐣 新增功能\n\n 1.  【all】新增 项目支持软链其他项目（代替项目副本）\n 2.  【server】新增 工作空间管理中新增概括总览页面、资产总览统计\n 3.  【server】升级 页面 ui 组件、vue 版本升级到最新（支持配置浅色、深色主题、左边菜单主题）\n 4.  【all】新增 孤独数据管理（查看孤独数据、修正孤独数据）（感谢@陈旭 gitee issues i8unxz）\n 5.  【server】新增 节点分发可以指定构建历史产物发布\n 6.  【server】新增 节点分发可以指定文件中心发布\n 7.  【server】新增 dsl 项目新增 reload 事件（可以开启文件变动触发）\n 8.  【server】新增 静态文件授权服务端指定目录到工作空间来管理（分发）(感谢@*斌)\n 9.  【server】新增 节点分发可以指定静态文件发布\n 10. 【server】修复 没有工作空间权限时页面循环跳转（感谢@王先生 gitee issues i8rr01）\n 11. 【all】优化 授权目录判断逻辑\n 12. 【agent】取消 插件端授权目录关闭包含判断(jpom.whitelist.check-starts-with)\n 13. 【server】优化 触发器清理优化、删除用户主动删除关联触发器\n 14. 【server】优化 dsl 项目控制台支持快捷编辑节点脚本（查看流程信息）\n 15. 【server】修复 项目触发器无法调用\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【all】下架 全面下架项目副本功能（请使用 dsl 模式或者软链项目代替）\n 2.  【all】下架 全面节点证书管理功能（请使用工作空间证书代替）\n 3.  【all】下架 全面架节点 nginx 管理功能（请使用 dsl 模式代替）\n 4.  【server】优化 构建编辑页面交互、编辑器样式、dsl 配置样式\n 5.  【server】优化 节点管理仅保留项目管理、脚本管理、脚本日志（其他功能迁移到机器资产管理）\n 6.  【all】优化 查看插件端和服务端的系统日志 websocket 地址\n 7.  【server】优化 监控机器系统负载保留2位小数\n 8.  【server】下架 取消节点管理员权限\n 9.  【server】修复 文件变动触发器不生效的问题\n 10. 【all】优化 项目操作接口合并（4 合 1）\n 11. 【server】优化 配置授权目录需要使用到绝对路径\n 12. 【server】优化 重新同步节点项目、节点脚本缓存交互\n 13. 【server】优化 ssh 脚本执行模板独立（/exec/template.sh -> /ssh/template.sh）\n 14. 【server】优化 服务端脚本支持加载脚本模板来实现自动加载部分环境变量\n 15. 【all】优化 关闭 process 方式\n 16. 【server】优化 支持批量删除构建信息（感谢@奇奇）\n 17. 【server】修复 删除项目、删除分发检查关联构建失败问题\n 18. 【all】优化 日志记录器提升日志记录性能\n 19. 【server】优化 取消/停止构建采用异常来打断子进程\n 20. 【server】修复 本地构建无法取消\n 21. 【server】修复 服务端脚本触发器、节点脚本触发器提示找不到用户（感谢@lyy）\n 22. 【server】修复 部分低频功能无法正常使用（项目备份文件管理等）\n 23. 【server】修复 部分执行异常未输出到操作日志文件中（感谢@闫淼淼）\n 24. 【server】优化 系统git拉取代码时，强制云端最新代码覆盖本地代码\n 25. 【agent】优化 插件端 java 项目启动支持读取环境变量\n 26. 【agent】修复 插件端环境变量值获取异常\n 27. 【server】优化 本地 git 联动严格执行开关\n 28. 【server】修复 登录账户未跳转配置的第一个工作空间（未遵循自定义配置）\n 29. 【server】修复 部分操作构建环境变量丢失（保存并构建、后台构建、直接构建）\n 30. 【agent】优化 插件端自由脚本（分发文件脚本）大小限制调整为 5m（感谢@九問）\n\n\n# ⚠️ 注意\n\n 1. 全面下架项目副本功能（请使用 dsl 模式或者软链项目代替）如果您当前使用到此功能请先手动备份相关数据\n 2. 升级后项目副本数据会被人工或者系统更新项目数据自动删除（请一定提前做好备份操作）\n 3. 全面下架节点证书管理功能（请使用工作空间证书代替）如果您当前使用到此功能请先手动备份相关数据\n 4. 全面下架全下架节点 nginx 管理功能（请使用 dsl 模式代替）如果您当前使用到此功能请先手动备份相关数据\n\n> ❓ 为什么要下架上述功能：由于版本迭代已经有更好的新功能可以代替之前旧功能，并且新功能从另一种角度更方便。下架也是为了我们后续版本维护迭代更高效\n\n----------------------------------------\n\n 1. 如果您配置了授权目录但是保存项目报错您可以尝试重新报错一下授权目录来自动修复授权目录配置数据\n 2. 项目控制台日志默认路径调整为插件端数据目录下project-log/${projectid}/${projectid}.log\n 3. 项目控制台日志备份默认路径调整为插件端数据目录下project-log/${projectid}/back/${projectid}-xxxxxxx.log\n\n----------------------------------------\n\n如果您自定义过 ssh 脚本默认那么您需要重新同步一下脚本模板/exec/template.sh -> /ssh/template.sh\n\n新版本 /exec/template.sh 中仅在服务端中生效（本地构建脚本、服务端脚本、本地发布脚本）\n\n----------------------------------------\n\n * 【白名单】关键词统一调整为【授权】\n * 【黑名单】关键词统一调整为【禁止】\n * 部分【添加】关键词统一调整为【新增】\n\n\n# 🤝致谢\n\n感谢所有参与 2.11.0 beta 版本（2.11.0.0 ~ 2.11.0.13）内测的用户。\n\n----------------------------------------',charsets:{cjk:!0},lastUpdated:"2025/05/06, 05:44:59",lastUpdatedTimestamp:1746510299e3},{title:"分发介绍",frontmatter:{title:"分发介绍",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/541f19/",tags:[null],categories:["docs","文档","节点分发"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0892.%E8%8A%82%E7%82%B9%E5%88%86%E5%8F%91/01.%E5%88%86%E5%8F%91%E4%BB%8B%E7%BB%8D.html",relativePath:"文档/9999.历史文档/0892.节点分发/01.分发介绍.md",key:"v-7c539bf6",path:"/pages/541f19/",headers:[{level:2,title:"创建节点分发项目",slug:"创建节点分发项目",normalizedTitle:"创建节点分发项目",charIndex:74},{level:4,title:"全新方式创建节点分发项目",slug:"全新方式创建节点分发项目",normalizedTitle:"全新方式创建节点分发项目",charIndex:86},{level:4,title:"关联已经存在的项目为节点分发",slug:"关联已经存在的项目为节点分发",normalizedTitle:"关联已经存在的项目为节点分发",charIndex:169},{level:2,title:"分发文件后的操作",slug:"分发文件后的操作",normalizedTitle:"分发文件后的操作",charIndex:244},{level:2,title:"分发日志",slug:"分发日志",normalizedTitle:"分发日志",charIndex:539},{level:2,title:"分发授权（白名单）",slug:"分发授权-白名单",normalizedTitle:"分发授权（白名单）",charIndex:582}],headersStr:"创建节点分发项目 全新方式创建节点分发项目 关联已经存在的项目为节点分发 分发文件后的操作 分发日志 分发授权（白名单）",content:"# 多节点中使用节点分发功能\n\n> 要使用节点分发功能所有需要确保已经安装并添加多个节点 节点分发项目无法在对应节点中的项目管理中直接修改\n\n\n# 创建节点分发项目\n\n# 全新方式创建节点分发项目\n\n> 如果需要被管理的项目还没有创建则可以采用直接创建分发项目，将自动在对应节点创建对应信息，省去需要在多个节点中依次创建项目的麻烦\n\n# 关联已经存在的项目为节点分发\n\n> 如果需要被管理的项目已经在部分节点创建，则可以采用添加关联项目，把多个节点的项目进行关联然后具有分发功能\n\n\n# 分发文件后的操作\n\n# 1. 不做任何操作\n\n> 只是将文件分发到对应项目目录中，不做其他操作，如果需要重启则需要手动操作\n\n# 2. 并发重启\n\n> 将并发执行分发操作，对应节点文件分发结束后将自动重启对应项目。此方式不能保证多个节点的分发和重启顺序\n\n# 3. 完整顺序重启\n\n> 将按照一定顺序分发文件，文件分发成功后将自动重启对应节点项目。如果分发并且重启成功将继续分发下一个项目、如果分发或者重启失败将不再执行后面的节点分发操作\n\n# 3. 顺序重启\n\n> 将按照一定顺序分发文件，文件分发成功后将自动重启对应节点项目。无论分发并且重启成功或者失败都将继续分发下一个项目\n\n\n# 分发日志\n\n> 分发日志是记录所有的分发记录的状态和开始结束时间、分发操作人\n\n\n# 分发授权（白名单）\n\n> 分发授权（白名单）是为了创建独立分发项目时，项目在节点中存放的路径统一。\n\n> 仅有系统管理员拥护修改权限",normalizedContent:"# 多节点中使用节点分发功能\n\n> 要使用节点分发功能所有需要确保已经安装并添加多个节点 节点分发项目无法在对应节点中的项目管理中直接修改\n\n\n# 创建节点分发项目\n\n# 全新方式创建节点分发项目\n\n> 如果需要被管理的项目还没有创建则可以采用直接创建分发项目，将自动在对应节点创建对应信息，省去需要在多个节点中依次创建项目的麻烦\n\n# 关联已经存在的项目为节点分发\n\n> 如果需要被管理的项目已经在部分节点创建，则可以采用添加关联项目，把多个节点的项目进行关联然后具有分发功能\n\n\n# 分发文件后的操作\n\n# 1. 不做任何操作\n\n> 只是将文件分发到对应项目目录中，不做其他操作，如果需要重启则需要手动操作\n\n# 2. 并发重启\n\n> 将并发执行分发操作，对应节点文件分发结束后将自动重启对应项目。此方式不能保证多个节点的分发和重启顺序\n\n# 3. 完整顺序重启\n\n> 将按照一定顺序分发文件，文件分发成功后将自动重启对应节点项目。如果分发并且重启成功将继续分发下一个项目、如果分发或者重启失败将不再执行后面的节点分发操作\n\n# 3. 顺序重启\n\n> 将按照一定顺序分发文件，文件分发成功后将自动重启对应节点项目。无论分发并且重启成功或者失败都将继续分发下一个项目\n\n\n# 分发日志\n\n> 分发日志是记录所有的分发记录的状态和开始结束时间、分发操作人\n\n\n# 分发授权（白名单）\n\n> 分发授权（白名单）是为了创建独立分发项目时，项目在节点中存放的路径统一。\n\n> 仅有系统管理员拥护修改权限",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"缓存管理",frontmatter:{title:"缓存管理",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/b06467/",tags:[null],categories:["docs","文档","节点功能","系统管理"],readingShow:"top"},regularPath:"/%E6%96%87%E6%A1%A3/9999.%E5%8E%86%E5%8F%B2%E6%96%87%E6%A1%A3/0890.%E8%8A%82%E7%82%B9%E5%8A%9F%E8%83%BD/13.%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/02.%E7%BC%93%E5%AD%98%E7%AE%A1%E7%90%86.html",relativePath:"文档/9999.历史文档/0890.节点功能/13.系统管理/02.缓存管理.md",key:"v-00eb9972",path:"/pages/b06467/",headers:[{level:3,title:"文件缓存",slug:"文件缓存",normalizedTitle:"文件缓存",charIndex:2},{level:3,title:"进程名缓存",slug:"进程名缓存",normalizedTitle:"进程名缓存",charIndex:29},{level:3,title:"进程端口缓存",slug:"进程端口缓存",normalizedTitle:"进程端口缓存",charIndex:71},{level:3,title:"在读取的日志文件数",slug:"在读取的日志文件数",normalizedTitle:"在读取的日志文件数",charIndex:110}],headersStr:"文件缓存 进程名缓存 进程端口缓存 在读取的日志文件数",content:"# 文件缓存\n\n> 用户上传文件临时的缓存文件夹\n\n\n# 进程名缓存\n\n> Jpom在解析进程为Jpom项目，会进行缓存加快解析速度\n\n\n# 进程端口缓存\n\n> Jpom在解析进程端口时，会进行缓存加快解析速度\n\n\n# 在读取的日志文件数\n\n> 正在实时查看日志的文件的数据量",normalizedContent:"# 文件缓存\n\n> 用户上传文件临时的缓存文件夹\n\n\n# 进程名缓存\n\n> jpom在解析进程为jpom项目，会进行缓存加快解析速度\n\n\n# 进程端口缓存\n\n> jpom在解析进程端口时，会进行缓存加快解析速度\n\n\n# 在读取的日志文件数\n\n> 正在实时查看日志的文件的数据量",charsets:{cjk:!0},lastUpdated:"2024/01/13, 07:38:16",lastUpdatedTimestamp:1705131496e3},{title:"2.10.x-release",frontmatter:{title:"2.10.x-release",date:"2022-12-19T15:12:09.000Z",permalink:"/pages/9b918a/",categories:["docs","日志&下载","更新日志"],tags:["2.10.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/1180.2.10.x-release.html",relativePath:"日志&下载/01.更新日志/1180.2.10.x-release.md",key:"v-0a7e37f1",path:"/pages/9b918a/",headers:[{level:2,title:"2.10.47 (2023-12-25)",slug:"_2-10-47-2023-12-25",normalizedTitle:"2.10.47 (2023-12-25)",charIndex:2},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.46 (2023-12-18)",slug:"_2-10-46-2023-12-18",normalizedTitle:"2.10.46 (2023-12-18)",charIndex:1762},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.45 (2023-10-17)",slug:"_2-10-45-2023-10-17",normalizedTitle:"2.10.45 (2023-10-17)",charIndex:2269},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.44 (2023-09-06)",slug:"_2-10-44-2023-09-06",normalizedTitle:"2.10.44 (2023-09-06)",charIndex:3079},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.43 (2023-08-25)",slug:"_2-10-43-2023-08-25",normalizedTitle:"2.10.43 (2023-08-25)",charIndex:3604},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.42 (2023-08-24)",slug:"_2-10-42-2023-08-24",normalizedTitle:"2.10.42 (2023-08-24)",charIndex:3729},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-6",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.41 (2023-06-16)",slug:"_2-10-41-2023-06-16",normalizedTitle:"2.10.41 (2023-06-16)",charIndex:5226},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-7",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-2",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.40 (2023-04-19)",slug:"_2-10-40-2023-04-19",normalizedTitle:"2.10.40 (2023-04-19)",charIndex:6337},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-6",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-8",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.39 (2023-04-04)",slug:"_2-10-39-2023-04-04",normalizedTitle:"2.10.39 (2023-04-04)",charIndex:7589},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-9",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.38 (2023-03-31)",slug:"_2-10-38-2023-03-31",normalizedTitle:"2.10.38 (2023-03-31)",charIndex:8200},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-7",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-10",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-3",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:2,title:"2.10.37 (2023-03-21)",slug:"_2-10-37-2023-03-21",normalizedTitle:"2.10.37 (2023-03-21)",charIndex:9967},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-8",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-11",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.36 (2023-03-20)",slug:"_2-10-36-2023-03-20",normalizedTitle:"2.10.36 (2023-03-20)",charIndex:10578},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-12",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.35 (2023-03-20)",slug:"_2-10-35-2023-03-20",normalizedTitle:"2.10.35 (2023-03-20)",charIndex:10820},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-13",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.34 (2023-03-20)",slug:"_2-10-34-2023-03-20",normalizedTitle:"2.10.34 (2023-03-20)",charIndex:10937},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-9",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-14",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-4",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-2",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:2,title:"2.10.33 (2023-03-16)",slug:"_2-10-33-2023-03-16",normalizedTitle:"2.10.33 (2023-03-16)",charIndex:11823},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-10",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-15",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-3",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-5",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.32 (2023-03-14)",slug:"_2-10-32-2023-03-14",normalizedTitle:"2.10.32 (2023-03-14)",charIndex:12480},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-16",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.31 (2023-03-14)",slug:"_2-10-31-2023-03-14",normalizedTitle:"2.10.31 (2023-03-14)",charIndex:12615},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-17",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.30 (2023-03-14)",slug:"_2-10-30-2023-03-14",normalizedTitle:"2.10.30 (2023-03-14)",charIndex:12743},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-11",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-18",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-4",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-6",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.29 (2023-03-10)",slug:"_2-10-29-2023-03-10",normalizedTitle:"2.10.29 (2023-03-10)",charIndex:13630},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-12",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-19",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.28 (2023-03-08)",slug:"_2-10-28-2023-03-08",normalizedTitle:"2.10.28 (2023-03-08)",charIndex:14279},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-13",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-20",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-7",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.27 (2023-03-06)",slug:"_2-10-27-2023-03-06",normalizedTitle:"2.10.27 (2023-03-06)",charIndex:14736},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-14",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-21",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-8",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.26 (2023-03-03)",slug:"_2-10-26-2023-03-03",normalizedTitle:"2.10.26 (2023-03-03)",charIndex:15181},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-22",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.25 (2023-03-03)",slug:"_2-10-25-2023-03-03",normalizedTitle:"2.10.25 (2023-03-03)",charIndex:15351},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-15",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-23",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-5",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:2,title:"2.10.24 (2023-03-01)",slug:"_2-10-24-2023-03-01",normalizedTitle:"2.10.24 (2023-03-01)",charIndex:15878},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-24",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-9",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.23 (2023-03-01)",slug:"_2-10-23-2023-03-01",normalizedTitle:"2.10.23 (2023-03-01)",charIndex:16243},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-16",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-25",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-10",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.22 (2023-02-24)",slug:"_2-10-22-2023-02-24",normalizedTitle:"2.10.22 (2023-02-24)",charIndex:16843},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-17",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-26",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.21 (2023-02-23)",slug:"_2-10-21-2023-02-23",normalizedTitle:"2.10.21 (2023-02-23)",charIndex:17023},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-27",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.20 (2023-02-23)",slug:"_2-10-20-2023-02-23",normalizedTitle:"2.10.20 (2023-02-23)",charIndex:17242},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-28",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.19 (2023-02-22)",slug:"_2-10-19-2023-02-22",normalizedTitle:"2.10.19 (2023-02-22)",charIndex:17370},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-18",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-29",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.18 (2023-02-20)",slug:"_2-10-18-2023-02-20",normalizedTitle:"2.10.18 (2023-02-20)",charIndex:18067},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-19",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-30",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-6",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-11",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.17 (2023-02-16)",slug:"_2-10-17-2023-02-16",normalizedTitle:"2.10.17 (2023-02-16)",charIndex:18914},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-31",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.16 (2023-02-14)",slug:"_2-10-16-2023-02-14",normalizedTitle:"2.10.16 (2023-02-14)",charIndex:19273},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-20",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-32",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.15 (2023-02-13)",slug:"_2-10-15-2023-02-13",normalizedTitle:"2.10.15 (2023-02-13)",charIndex:19680},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-21",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-33",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-12",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.14 (2023-02-10)",slug:"_2-10-14-2023-02-10",normalizedTitle:"2.10.14 (2023-02-10)",charIndex:20263},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-22",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-34",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-13",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:4,title:"🌰 举个栗子",slug:"🌰-举个栗子",normalizedTitle:"🌰 举个栗子",charIndex:21384},{level:2,title:"2.10.13 (2023-02-08)",slug:"_2-10-13-2023-02-08",normalizedTitle:"2.10.13 (2023-02-08)",charIndex:22266},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-23",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-35",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-14",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.12 (2023-01-29)",slug:"_2-10-12-2023-01-29",normalizedTitle:"2.10.12 (2023-01-29)",charIndex:23280},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-36",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-15",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.11 (2023-01-10)",slug:"_2-10-11-2023-01-10",normalizedTitle:"2.10.11 (2023-01-10)",charIndex:23842},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-24",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-37",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-7",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:2,title:"2.10.10 (2023-01-09)",slug:"_2-10-10-2023-01-09",normalizedTitle:"2.10.10 (2023-01-09)",charIndex:24501},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-25",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-38",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-16",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.9 (2023-01-06)",slug:"_2-10-9-2023-01-06",normalizedTitle:"2.10.9 (2023-01-06)",charIndex:25999},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-26",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-39",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-8",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-17",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.8 (2023-01-05)",slug:"_2-10-8-2023-01-05",normalizedTitle:"2.10.8 (2023-01-05)",charIndex:26742},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-40",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-9",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-18",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.7 (2023-01-04)",slug:"_2-10-7-2023-01-04",normalizedTitle:"2.10.7 (2023-01-04)",charIndex:27376},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-27",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-41",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-10",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:2,title:"2.10.6 (2022-12-29)",slug:"_2-10-6-2022-12-29",normalizedTitle:"2.10.6 (2022-12-29)",charIndex:27883},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-28",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-42",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:2,title:"2.10.5 (2022-12-27)",slug:"_2-10-5-2022-12-27",normalizedTitle:"2.10.5 (2022-12-27)",charIndex:28401},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-29",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-43",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-11",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:2,title:"2.10.4 (2022-12-23)",slug:"_2-10-4-2022-12-23",normalizedTitle:"2.10.4 (2022-12-23)",charIndex:29191},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-44",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-19",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.3 (2022-12-22)",slug:"_2-10-3-2022-12-22",normalizedTitle:"2.10.3 (2022-12-22)",charIndex:29946},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-30",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-45",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-20",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.2 (2022-12-21)",slug:"_2-10-2-2022-12-21",normalizedTitle:"2.10.2 (2022-12-21)",charIndex:30662},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-46",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-12",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:2,title:"2.10.1 (2022-12-20)",slug:"_2-10-1-2022-12-20",normalizedTitle:"2.10.1 (2022-12-20)",charIndex:31068},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-31",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-47",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-13",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-21",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:2,title:"2.10.0 (2022-12-19)",slug:"_2-10-0-2022-12-19",normalizedTitle:"2.10.0 (2022-12-19)",charIndex:32217},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-32",normalizedTitle:"🐣 新增功能",charIndex:27},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-48",normalizedTitle:"🐞 解决bug、优化功能",charIndex:390},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-14",normalizedTitle:"❌ 不兼容功能",charIndex:9793},{level:3,title:"❌ 不兼容的属性配置变更",slug:"❌-不兼容的属性配置变更",normalizedTitle:"❌ 不兼容的属性配置变更",charIndex:33179},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-22",normalizedTitle:"⚠️ 注意",charIndex:1353},{level:4,title:"简洁的升级流程",slug:"简洁的升级流程",normalizedTitle:"简洁的升级流程",charIndex:34349}],headersStr:"2.10.47 (2023-12-25) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.46 (2023-12-18) 🐞 解决BUG、优化功能 2.10.45 (2023-10-17) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.44 (2023-09-06) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.43 (2023-08-25) 🐞 解决BUG、优化功能 2.10.42 (2023-08-24) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.41 (2023-06-16) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.40 (2023-04-19) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.39 (2023-04-04) 🐞 解决BUG、优化功能 2.10.38 (2023-03-31) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 ❌ 不兼容功能 2.10.37 (2023-03-21) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.36 (2023-03-20) 🐞 解决BUG、优化功能 2.10.35 (2023-03-20) 🐞 解决BUG、优化功能 2.10.34 (2023-03-20) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 ❌ 不兼容功能 2.10.33 (2023-03-16) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 ⚠️ 注意 2.10.32 (2023-03-14) 🐞 解决BUG、优化功能 2.10.31 (2023-03-14) 🐞 解决BUG、优化功能 2.10.30 (2023-03-14) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 ⚠️ 注意 2.10.29 (2023-03-10) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.28 (2023-03-08) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.27 (2023-03-06) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.26 (2023-03-03) 🐞 解决BUG、优化功能 2.10.25 (2023-03-03) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.10.24 (2023-03-01) 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.23 (2023-03-01) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.22 (2023-02-24) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.21 (2023-02-23) 🐞 解决BUG、优化功能 2.10.20 (2023-02-23) 🐞 解决BUG、优化功能 2.10.19 (2023-02-22) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.18 (2023-02-20) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 ⚠️ 注意 2.10.17 (2023-02-16) 🐞 解决BUG、优化功能 2.10.16 (2023-02-14) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.15 (2023-02-13) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.14 (2023-02-10) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 🌰 举个栗子 2.10.13 (2023-02-08) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.12 (2023-01-29) 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.11 (2023-01-10) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.10.10 (2023-01-09) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.9 (2023-01-06) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 ⚠️ 注意 2.10.8 (2023-01-05) 🐞 解决BUG、优化功能 ❌ 不兼容功能 ⚠️ 注意 2.10.7 (2023-01-04) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.10.6 (2022-12-29) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.5 (2022-12-27) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.10.4 (2022-12-23) 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.3 (2022-12-22) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.2 (2022-12-21) 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.10.1 (2022-12-20) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 ⚠️ 注意 2.10.0 (2022-12-19) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 ❌ 不兼容的属性配置变更 ⚠️ 注意 简洁的升级流程",content:"# 2.10.47 (2023-12-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建支持自定义插件（感谢@远方 Gitee issues I8PEWI）\n 2. 【server】新增 容器管理新增导出、导入镜像\n 3. 【server】新增 环境变量支持触发器获取、修改\n 4. 【server】优化 容器日志、集群任务日志支持下载（感谢@在时间里流浪）\n 5. 【all】新增 部分项目支持迁移工作空间和逻辑节点（感谢@奇奇）\n 6. 【server】优化 资产管理 SSH 支持配置禁用监控（避免频繁登录）jpom.assets.ssh.disable-monitor-group-name（感谢@Again...）\n 7. 【server】优化 资产管理 SSH 支持配置监控周期：jpom.assets.ssh.monitor-cron\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】升级 数据库 h2 、mwiede、web axios 版本\n 2.  【server】修复 构建事件脚本未修改执行状态和退出码问题\n 3.  【server】优化 构建事件脚本支持多选（顺序执行其中有一个中断将结束执行后续脚本）（感谢@loyal）\n 4.  【server】优化 服务端脚本触发类型新增构建事件\n 5.  【agent】删除 项目副本中弃用兼容字段 parendId\n 6.  【server】优化 Docker 集群任务日志支持筛选行数、是否显示时间戳（感谢@在时间里流浪）\n 7.  【server】优化 项目控制台日志输出 N 人查看改为 N 个会话（@冬）\n 8.  【server】优化 添加超级管理员账号提醒勿使用常用账号\n 9.  【server】优化 逻辑节点节目取消全局 loading（感谢@小菜鸡）\n 10. 【server】优化 新增个性化配置全屏打开日志弹窗（构建、SSH、脚本、Docker等日志）（感谢@张飞鸿）\n 11. 【server】修复 项目副本无法保存（修改中不能删除副本集、请到副本集中删除）\n 12. 【server】优化 服务端中可以支持创建编辑项目、创建节点脚本啦！！！\n 13. 【server】优化 项目列表支持删除项目、自动刷新项目\n 14. 【server】优化 仓库支持查看关联的构建\n 15. 【server】修复 删除服务端脚本日志如果脚本不存在不能删除\n 16. 【server】优化 资产机器卡片试图部分场景未对齐问题\n 17. 【server】优化 部分页面在小屏兼容（资产 Docker、节点分发）\n 18. 【server】优化 节点脚本支持解绑（避免无非使用的服务器无非删除脚本）\n 19. 【server】优化 白名单配置提示 nginx、证书功能将下线\n 20. 【all】移除 插件端配置远程下载 host 输入框\n 21. 【server】优化 导入 SSH、项目 CSV 数据自动识别编码格式\n 22. 【server】优化 执行 SSH 脚本获取流异常：getInputStream() should be called before connect()\n\n\n# ⚠️ 注意\n\n新增容器构建自定义插件说明：\n\n 1. 到 【系统管理】->【配置管理】->【系统配置目录】 中找到 docker/uses 目录\n 2. 添加插件配置文件 /docker/uses/java8/install.sh 其中 java8 为新增的插件名\n 3. 注意脚本中需要自行控制插件相关依赖的文件，需要将最新的文件保持到 /opt/${name}/ 目录下，其中 ${name} 为插件名\n 4. 辅助说明1：插件支持自定义环境变量\n 5. 辅助说明2：自定义环境变量中需要引用插件目录请使用 ${JPOM_PLUGIN_PATH}\n 6. 系统默认集成了：java、maven、node、go、python3、gradle、cache 默认插件有依赖版本检查如果您的网络不通建议自行创建插件来规避默认检查\n\n----------------------------------------\n\n\n# 2.10.46 (2023-12-18)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 容器构建下载产物未关闭文件流占用句柄问题（感谢@在时间里流浪）\n 2. 【all】优化 ConcurrentHashMap 修改为线程安全的 hutoll[SafeConcurrentHashMap]（感谢@在时间里流浪）\n 3. 【all】升级 mwiede.jsch、oshi、fastjson、hutool、spring-boot、docker-java\n 4. 【server】优化 SSH 脚本在部分场景阻塞卡死（ChannelType.EXEC 不添加超时时间）\n 5. 【server】优化 SSH 脚本执行输出退出码\n 6. 【server】优化 解决构建流程,环境变量env里出现value==null出现null报错 （感谢 @周冰 Gitee pr 197 ）\n 7. 【server】优化 SSH 脚本执行记录退出码\n 8. 【server】优化 服务端脚本执行记录新增执行状态和退出码\n\n----------------------------------------\n\n\n# 2.10.45 (2023-10-17)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 SSH 新增独立管理面板（感谢@超人那个超i Gitee issues I7UFEX）\n 2. 【agent】新增 DSL 项目支持配置脚本环境变量（感谢@陈旭 Gitee issues I80PTK）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 构建产物同步到文件中心支持独立配置保留天数（感谢@zhangxin2477 Gitee issues I82G2F）\n 2.  【server】优化 不能删除超级管理员账号\n 3.  【agent】修复 Agent.sh 脚本的缺少方法问题（感谢@Siwen Yu Github issues 64）\n 4.  【server】优化 系统管理查看操作日志显示全部工作空间\n 5.  【server】优化 容器构建判断构建异常（严格模式异常中断构建）（感谢@在时间里流浪）\n 6.  【server】修复 构建流程中断触发 success 事件（感谢@在时间里流浪）\n 7.  【server】优化 SSH 独立管理面板支持快捷使用文件管理\n 8.  【server】优化 构建详情页面支持快捷回滚、查看构建日志（感谢@縁來只爲伱 Gitee issues I7YSNH）\n 9.  【all】升级 hutool、commons-compress\n 10. 【agent】修复 重启项目偶发 NPE（监听日志关闭事件）（感谢@caiqy Gitee issues I7Z2U6）\n 11. 【server】优化 构建支持配置环境变量实现产物打包为 tar.gz (USE_TAR_GZ=1)\n 12. 【server】修复 文件管理偶发无法查看发片下载地址\n\n----------------------------------------\n\n\n# 2.10.44 (2023-09-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持 git submodules （感谢 @Croce Gitee pr 195 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 资产管理共享仓库新建归属到工作空间问题（感谢@沈钊）\n 2. 【server】升级 springboot 、oshi、docker-java、jgit\n 3. 【server】升级 mwiede.jsch 版本\n 4. 【server】优化 构建回滚创建新的构建记录（感谢@Smith Gitee issues I7VEJA）\n 5. 【server】修复 新增资产无法正常监控问题（感谢@乔、@MichelleChung、@Pluto）\n 6. 【server】优化 编辑集群地址不验证，调整到心跳检测验证（感谢@黄纲）\n 7. 【server】优化 构建新增环境变量：BUILD_ORIGINAL_RESULT_DIR_FILE、BUILD_RESULT_DIR_FILE（发布流程）(感谢@黄纲)\n\n----------------------------------------\n\n\n# 2.10.43 (2023-08-25)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 未配置集群地址时无法切换工作空间（感谢@黄纲）\n\n----------------------------------------\n\n\n# 2.10.42 (2023-08-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 集群化管理工作空间（感谢@定格、@paobu Gitee issues I7UG5V）\n 2. 【server】优化 ssh 相关功能支持 openssh8+ （感谢 @孤城落寞 Gitee pr 193 ）\n 3. 【server】新增 SSH 文件管理修改文件权限功能（感谢 @MichelleChung Gitee issues I6VDXS ）\n 4. 【server】新增 Docker 容器重建功能，即删除原有的容器，重新创建一个新的容器\n 5. 【server】新增 Docker 管理增加 SSH 连接\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 资产管理 SSH 管理系统名称显示未知问题（感谢@勤思·）\n 2.  【server】优化 资产管理 Docker 管理支持配置分组\n 3.  【server】优化 仓库管理支持配置分组\n 4.  【server】优化 SSH 文件夹支持前端排序（感谢@勤思·）\n 5.  【server】优化 仓库账号、 SSH 证书密码支持选择环境变量\n 6.  【all】升级 commons-compress、fastjson、hutool 版本\n 7.  【server】优化 maven 依赖冲突\n 8.  【server】优化 文件发布-节点发布文件名使用真实名称（感谢@勤思·）\n 9.  【server】优化 文件发布-ssh发布新增变量：FILE_NAME、FILE_EXT_NAME\n 10. 【server】升级 h2、SpringBoot 版本\n 11. 【server】使用系统git时，无法克隆tag问题优化 （感谢@唐明）\n 12. 【server】优化 SSH 和 代码仓库的密码从工作空间变量中读取\n 13. 【server】优化 删除工作空间前预检查关联数据存在情况（感谢 @陈旭 Gitee issues I7F0ZN ）\n 14. 【server】优化 退出登录支持彻底退出、切换账号退出（感谢 @wangfubiao Gitee issues I7GA5Q ）\n 15. 【server】优化 IP 白名单验证忽略 IPV6 情况\n 16. 【server】优化 服务端缓存管理支持查看黑名单 IP 详细信息（感谢@酱总）\n 17. 【server】修复 SSH 编辑输入框出现部分关键词时保持报错（感谢 @一只羊 Gitee issues I7E3UG ）\n 18. 【server】优化 日志组件支持显示 \\t 制表符、清空缓冲区滚动到顶部\n 19. 【server】修复 彻底删除节点分发时未自动删除关联日志（感谢@ccx2480）\n 20. 【server】修复 节点管理中脚本模板翻页无效（感谢 @wangfubiao Gitee issues I7F0RS ）\n 21. 【server】优化 工作空间配置页面中新增节点分发白名单配置入口（感谢 @陈旭 Gitee issues I7F0W0 ）\n 22. 【server】优化 构建附加环境变量支持解析 URL 参数格式 （感谢 @爱琳琳真是太好了 Gitee issues I7FROG ）\n 23. 【server】优化 构建支持单个配置保留天数和保留个数 （感谢 @阿超 Gitee issues I7FOG2 ）\n\n----------------------------------------\n\n\n# 2.10.41 (2023-06-16)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 SSH 列表支持显示 docker 版本信息\n 2. 【server】优化 Docker 镜像增加批量删除（已经被容器使用的镜像不会删除）\n 3. 【server】优化 启用 Jpom 新版专属 logo\n 4. 【server】新增 工作空间新增分组字段（存在多个分组时页面切换将使用二级选择）（感谢@酱总）\n 5. 【server】新增 仓库支持导入导出\n 6. 【server】新增 镜像创建容器支持配置 hostname、集群服务支持配置 hostname（感谢@心光）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 查看 docker 容器日志 web socket 线程被阻塞问题\n 2.  【server】优化 日志组件显示高亮、滚动条样式优化\n 3.  【server】优化 web socket 会话关闭显示分类\n 4.  【server】优化 页面滚动条样式\n 5.  【server】优化 编辑关联分发，选择项目下拉框不能显示项目全名称（tooltip）（感谢@LYY）\n 6.  【server】优化 监听页面关闭事件，主动关闭 websocket\n 7.  【server】修复 批量构建触发器无法正常使用（感谢 @botboy Github issues 48 ）\n 8.  【server】修复 页面关闭 docker 终端未主动关闭后台终端进程问题\n 9.  【server】优化 docker 终端页面缓冲区大小自动适应\n 10. 【server】优化 项目列表可以查看项目日志（避免控制台卡顿无法操作下载日志）(感谢@阿超)\n 11. 【server】优化 日志组件采用虚拟滚动渲染，避免日志过多浏览器卡死\n 12. 【server】优化 资产管理支持管理共享仓库\n 13. 【server】优化 增大验证码检测功能异常捕捉范围\n 14. 【server】修复 令牌导入仓库令牌长度不足问题（感谢 @Sherman Chu Github issues 45 ）\n 15. 【server】修复 分发列表配置功能无法使用（感谢 @Free Gitee issues I716UI ）\n 16. 【server】修复 构建卡片布局、构建详情中构建方式显示不正确（感谢@A）\n\n\n# ⚠️ 注意\n\n 1. 如果自定义过 SSH 监控脚本需要自行同步获取 docker 信息脚本\n\n----------------------------------------\n\n\n# 2.10.40 (2023-04-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建中对 gradle 插件的支持（感谢 @xiaozhi Gitee pr 188 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 日志搜索控制台无法正常使用（感谢@左手生活，右手浪漫）\n 2.  【server】修复 项目文件跟踪控制台无法正常使用（感谢@左手生活，右手浪漫）\n 3.  【server】修复 插件端日志无法正常差异\n 4.  【server】修复 docker 拉取镜像不能识别私有仓库地址（@章强）\n 5.  【server】优化 编辑构建无法重置已经选择的事件脚本 （感谢@左手生活，右手浪漫）\n 6.  【server】优化 登录页面切换验证码自动清空验证码输入框（感谢@TrouBles）\n 7.  【server】修复 docker 集群日志查看后未自动关闭造成日志文件继续增长的问题（@无味。）\n 8.  【server】优化 服务端缓存项目信息的创建时间和修改时间同步为节点中的数据创建、修改时间\n 9.  【server】优化 文件管理支持批量删除（感谢@左手生活，右手浪漫）\n 10. 【agent】优化 取消 hutool-cache 包依赖\n 11. 【server】优化 JustAuth fastjson 依赖配置为 fastjson2\n 12. 【agent】修复 获取项目状态部分情况出现 NPE （感谢@酱总）\n 13. 【server】修复 清空浏览器缓存未跳转到登录页面\n 14. 【server】优化 构建拉取 git 仓库支持使用服务器中的 git 插件，实现配置克隆深度参数\n 15. 【server】修复 删除节点脚本报错（感谢 @xiaozhi Gitee issues I6USMY ）\n 16. 【server】优化 构建 SSH 发布命令支持 SSH_RELEASE_PATH 环境变量（感谢@定格）\n 17. 【server】修复 全屏终端无法打开文件管理（感谢@Pluto）\n 18. 【server】优化 自动探测服务端登录验证码是否可用\n 19. 【all】优化 文件编辑后缀识别支持配置文件名或者正则表达式（感谢@MichelleChung）\n 20. 【server】优化 支持自动执行触发器清理\n 21. 【server】优化 重新登录未加载管理员菜单（@A）\n 22. 【server】修复 第三方登录跳转测试丢失\n 23. 【server】修复 仓库编辑清除密码按钮弹窗层级问题（感谢 @轩辕豆豆 Gitee issues I6VSCR ）\n 24. 【server】修复 优化构建列表卡片布局存在未构建数据布局错乱问题（感谢 @lin_yeqi Gitee issues I6VUB7 ）\n\n----------------------------------------\n\n\n# 2.10.39 (2023-04-04)\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 资产管理机器管理单个分配工作空间无法正常使用（感谢@咻咻咻秀啊）\n 2.  【server】修复 资产管理相关权限、操作日志无法记录问题（感谢@咻咻咻秀啊）\n 3.  【server】修复 docker 控制台 、日志无法正常使用\n 4.  【server】优化 docker 控制台页面布局优化，支持单独查看 docker-compose\n 5.  【server】优化 docker 实时查看日志支持配置是否显示时间戳\n 6.  【server】修复 查看文件发布详情节点名称未显示\n 7.  【server】优化 发布记录重建不能选中节点\n 8.  【server】修复 构建同步到文件管理中心失败（感谢@破冰）\n 9.  【server】优化 登录成功主动刷新菜单缓存、切换账号登录工作空间无权限页面白屏（感谢@A、@零壹）\n 10. 【all】更名 变更包名为 org.dromara.jpom\n 11. 【server】修复 编辑 docker 导入证书弹窗无法正常显示问题（感谢@左手生活，右手浪漫）\n 12. 【server】修复 工作空间中资产管理相关页面搜索无数据时出现操作引导提示（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38 (2023-03-31)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 证书管理全部迁移到服务端统一导入 （感谢@.）\n 2. 【server】新增 节点项目支持导入，导出（感谢@酱总）\n 3. 【server】新增 支持 oauth2 登录（maxkey、gitee、github） （感谢 @MaxKeyTop Gitee pr 183 、@A）\n 4. 【all】新增 文件管理发布支持发布到节点指定目录\n 5. 【server】新增 构建新增配置排除发布目录表达式（感谢@毛毛虫）\n 6. 【all】新增 节点脚本支持全局共享（感谢@奇奇）\n 7. 【server】新增 构建状态新增队列等待，用于标记当前构建存于线程排队中（感谢@酱总）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 清理单项构建历史保留个数只判断（构建结束、发布中、发布失败、发布失败）有效构建状态，避免无法保留有效构建历史（感谢@张飞鸿）\n 2.  【server】优化 节点监控超时时间调整为 30 秒（避免 windows 服务器频繁超时）（感谢@波比）\n 3.  【server】优化 打开节点管理页面不刷新节点列表\n 4.  【agent】修复 未配置节点白名单时直接创建分发项目报错（感谢@奋起的大牛）\n 5.  【server】修复 SSH 关联工作空间的授权目录无法取消\n 6.  【server】优化 查看分发项目状态取消折叠 table，调整为独立页面\n 7.  【server】优化 逻辑节点没有显示快速安装按钮问题（感谢@酱总）\n 8.  【server】优化 docker TLS 证书全部迁移到证书管理，配置证书支持快捷选择 （感谢@.）\n 9.  【server】修复 仓库 ssh 协议配置超时时间无法正常拉取代码（感谢@毛毛虫）\n 10. 【server】优化 环境管理页面支持查看间隔任务统计信息\n 11. 【server】优化 令牌导入仓库模块统一调整为模板配置（部分方式不支持搜索）（感谢@魏宏斌）\n 12. 【agent】优化 DSL 项目报警内容添加状态消息（感谢@核桃）\n 13. 【server】优化 服务端脚本支持配置全局共享（感谢@酱总）\n 14. 【server】优化 删除管理脚本中的 -XX:+AggressiveOpts 参数 （感谢 @牛孝祖 Gitee issues I6PUNM ）\n 15. 【all】升级 springboot、hutool、fastjson2、svnkit 版本\n 16. 【server】修复 资产管理 ssh 分组不生效问题（感谢@A）\n 17. 【server】优化 构建详情页面布局（构建触发器、查看构建历史）\n 18. 【server】优化 新增构建状态描述来记录构建异常信息\n 19. 【server】优化 构建页面新增卡片布局方式\n 20. 【server】修复 SSH 分组无法正常搜索、排序异常（感谢@A）\n 21. 【server】优化 构建命令支持引用脚本模板内容（便于复杂构建命令管理）（感谢@毛毛虫）\n 22. 【server】新增 构建状态新增队列等待，用于标记当前构建存于线程排队中（感谢@酱总）\n 23. 【server】修复 创建构建选择命令模板无法修改（感谢@定格）\n 24. 【server】优化 构建新增配置是否发布隐藏文件属性（感谢@简单）\n\n\n# ⚠️ 注意\n\n 1. 如果节点已经配置过项目文件下载远程地址白名单需要统一配置到服务端的工作空间的白名单。\n 2. 已经配置节点项目远程下载白名单将保留只读，不做实际判断\n 3. 构建触发器变动，发生异常时 type 为 error,并且新增：statusMsg 字段\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 节点管理证书管理取消上传编辑功能（保留查询删除功能）\n 2. 【agent】取消 节点白名单配置取消 ssl 证书路径配置\n 3. 【agent】取消 节点项目文件下载远程文件白名单统一调整到服务端白名单配置\n\n----------------------------------------\n\n\n# 2.10.37 (2023-03-21)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 文件中心添加别名码来为文件进行分类下载，构建添加别名码可以同步到文件中心 （感谢 @大灰灰大 Gitee issues I6OUC8 ）\n 2. 【server】新增 服务端在线升级支持配置 beta 计划（”妈妈“再也不用担心没有稳定版了）（感谢@罗俊）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 容器构建 maven 插件版本错误提示可用版本号，如果构建容器已经存在则忽略远程版本（感谢@大灰灰）\n 2. 【server】优化 脚本列表显示脚本 ID，方便快速查看复制 （感谢 @大灰灰大 Gitee issues I6OUDT ）\n 3. 【server】优化 文件管理列表显示，小屏幕部分字段被隐藏（感谢@tinsang）\n 4. 【server】优化 docker 拉取镜像自动解析 tag，避免拉取所有镜像，如果没有配置 tag 默认使用 latest（感谢@Again... .）\n 5. 【server】修复 数据库迁移到 mysql 报错（字段不存在）（感谢@轩辕豆豆）\n 6. 【server】修复 节点统计页面错乱问题 （感谢 @轩辕豆豆 Gitee issues I6OYSU ）\n\n----------------------------------------\n\n\n# 2.10.36 (2023-03-20)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】优化 缓存管理统一全局任务刷新\n 2. 【server】优化 修复数据关联的工作空间ID sql（避免 '' 或者 'null' 无法修复）\n 3. 【server】优化 支持手动清理错误工作空间 ID 的数据\n 4. 【server】修复 构建 git 仓库无法正常获取问题（感谢@小翼哥）\n\n----------------------------------------\n\n\n# 2.10.35 (2023-03-20)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 mysql 数据库无法正常加载\n\n----------------------------------------\n\n\n# 2.10.34 (2023-03-20)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理 SSH 管理支持导入导出数据（感谢@吃葫芦娃的土拨鼠）\n 2. 【server】新增 文件管理中心（用于统一存储管理公共文件）\n 3. 【server】新增 仓库令牌导入支持 gogs （gogs 和 gitea 标准一致） （感谢 @爱琳琳真是太好了 Gitee issues I6CRPS ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 构建 SSH 发布上传文件执行输出上传进度\n 2.  【server】优化 在线构建产物支持同步到文件管理中心\n 3.  【server】优化 节点分发、在线构建 webhook 添加 triggerUser 参数（感谢@酱总）\n 4.  【server】优化 SSH 文件夹管理支持重命名文件夹（感谢@零壹）\n 5.  【server】优化 机器名称和 hostname、SSH 机器名称和 hostname 限制字段长度\n 6.  【server】优化 DSL 项目支持解析多 PID ：running:109,205:8080,8082（感谢@酱总）\n 7.  【server】优化 缓存管理页面支持查看运行中的线程同步器、正在构建的ID\n 8.  【server】优化 SSH 脚本批量执行采用线程同步器执行（避免线程数大于 CPU 核心数）\n 9.  【server】优化 构建 SSH 发布命令响应方式调整为逐行（避免长时间没有任何信息输出）\n 10. 【server】优化 资产管理支持批量分配到工作空间\n\n\n# ⚠️ 注意\n\n 1. 【server】节点管理和项目管理菜单合并到一个菜单\n 2. 【server】节点统计页面合并到逻辑节点中不同视图模式查看\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消 低版本（2.9.x 及其以下）的构建触发器 token 自动同步为新版本\n\n----------------------------------------\n\n\n# 2.10.33 (2023-03-16)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 ssh 基础信息监控（非报警监控）\n 2. 【agent】新增 DSL 项目支持解析端口号：running:109:8080,8082 （感谢 @大灰灰大 Gitee issues I6N35H ）\n 3. 【server】新增 用户支持自定义工作空间名，排序 （感谢@酱总）\n 4. 【server】新增 节点分发项目支持排序，设置项目启用/禁用状态（感谢@酱总）\n 5. 【server】新增 节点分发支持手动释放删除指定项目\n 6. 【server】新增 docker 镜像创建容器新增 runtime 参数\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 插件端在线升级页面无法正常使用（调用到服务端在线升级接口）\n 2. 【server】优化 节点在线升级统一管理避免出现 null\n 3. 【server】修复 节点信息编码在部分接口出现 NPE （感谢@酱总）\n 4. 【server】优化 工作空间中不存在资产管理相关的数据添加默认缺省页（仅管理员显示）\n 5. 【server】优化 支持手动释放节点项目的分发属性\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 节点进程列表显示 jpom 项目名\n\n\n# ⚠️ 注意\n\n 1. 【server】优化 在线工具菜单更名为其他管理\n\n----------------------------------------\n\n\n# 2.10.32 (2023-03-14)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 mysql 数据库因为字段长度问题初始化失败（感谢@xuejun）\n\n----------------------------------------\n\n\n# 2.10.31 (2023-03-14)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 未配置节点编码方式无法正常保存问题（感谢@初凡 ³）\n\n----------------------------------------\n\n\n# 2.10.30 (2023-03-14)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 插件端支持配置发送请求消息编码方式（编码、混淆明文、规避防火墙） （感谢 @Mr_loyal Gitee pr 179 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 导入 gitea 仓库搜索、分页无法正常使用问题 （感谢 @Smith Gitee pr 175 Gitee pr 174 ）\n 2.  【server】优化 镜像启动容器不填写运行命令行导致容器启动失败（部分低版本） （感谢 @失落的世界 Gitee pr 176 ）\n 3.  【server】修复 节点分发 webhook 输入框的错别字（感谢 @大灰灰 ）\n 4.  【server】修复 工作空间环境变量操作日志记录错误问题\n 5.  【all】更新 fastjson2 版本\n 6.  【all】优化 SSH 命令脚本、服务端脚本、插件端脚本执行参数优化 （感谢 @大灰灰大 Gitee issues I6IPDY ）\n 7.  【server】优化 导入仓库页面提示信息错乱（感谢@零壹）\n 8.  【agent】修复 项目修改路径为子目录时 mv 文件触发死循环（感谢@D¹⁹⁹¹）\n 9.  【server】修复 查询构建日志可能出现 NPE 问题 （感谢 @Tom Xin Gitee issues I6MX9G ）\n 10. 【server】优化 系统缓存页面显示当前服务器时间、时区信息\n 11. 【server】修复 还原数据后备份状态错误问题 （感谢 @lin_yeqi Gitee issues I6MVL7 ）\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 COMMAND_INFO 表 type 字段\n\n\n# ⚠️ 注意\n\nSSH 命令脚本、服务端脚本、插件端脚本默认参数规则变化：参数描述将必填，默认参数在手动执行时无法删除并且可以查看对应参数描述\n\n----------------------------------------\n\n\n# 2.10.29 (2023-03-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 导入仓库支持 gitea 系统 （感谢 @Smith Gitee pr 173 ）\n 2. 【server】新增 用户登录日志（取消用户登录生成操作日志的执行日志）\n 3. 【server】新增 在线工具验证 cron 表达式 （感谢@奇奇）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 SSH 并发执行脚本引起脚本丢失错误（感谢@墨汁）\n 2.  【server】优化 docker 编辑无法连接提示异常详情信息（感谢@章强）\n 3.  【agent】优化 节点分发配置白名单到插件端需要验证合法性\n 4.  【server】优化 docker 创建容器忽略未配置存储选项参数（感谢@D¹⁹⁹¹）\n 5.  【server】优化 docker 管理裁剪功能独立菜单\n 6.  【server】修复 资产管理未记录操作日志的问题\n 7.  【server】优化 操作日志存储用户名、工作空间名字段\n 8.  【server】优化 容器构建查询可用标签容器相关提示\n 9.  【server】优化 构建历史列表页面在小屏幕数据显示不全 （感谢 @一只羊 Gitee issues I6LLA0 ）\n 10. 【server】修复 在线构建发布到集群无法正常选择集群服务（感谢@心光）\n\n----------------------------------------\n\n\n# 2.10.28 (2023-03-08)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目触发器新增 fileChange 事件（文件变动对应触发点：上传、删除、远程下载、编辑、新增目录或者文件、重命名） （感谢 @胡明 Gitee issues I6KKEK ）\n 2. 【server】新增 镜像创建容器支持配置存储选项（感谢@topsuder、@章强）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 新增 docker 无法使用在线构建功能 （感谢 @失落的世界 Gitee issues I6KTLQ ）\n 2. 【server】优化 项目文件列表支持前端排序（文件大小、修改时间）\n 3. 【server】优化 关闭程序时依次关闭线程池\n 4. 【server】优化 工作空间环境变量开放给普通用户编辑\n\n\n# ⚠️ 注意\n\n插件端需要同步升级，否则项目文件列表排序无法正常使用\n\n----------------------------------------\n\n\n# 2.10.27 (2023-03-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理新增 docker 、集群管理\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】升级 springboot 版本\n 2. 【server】优化 系统自动同步 docker 已经安装的集群信息\n 3. 【server】更新 mysql maven 坐标：mysql-connector-j\n 4. 【server】修复 构建产物模糊匹配二级剔除配置 / 无效\n\n\n# ⚠️ 注意\n\n新增 docker 资产管理,系统会自动将已经存在的 docker 信息根据 host 去重同步到资产管理中（如果 host 存在多个工作空间将根据最后更新时间排序使用最新的一条数据）\n\n更新后 docker、集群列表中状态如果出现：信息丢失 表示关联数据存在异常不能正常使用，需要删除对应数据重新关联\n\n----------------------------------------\n\n\n# 2.10.26 (2023-03-03)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 初始化数据库未删除完整问题（感谢@酱总）\n 2. 【server】优化 日志阅读选项卡 tab 名称添加项目名称（感谢@tinsang）\n\n----------------------------------------\n\n\n# 2.10.25 (2023-03-03)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建历史新增产物文件大小\n 2. 【all】新增 机器安装 ID 文件（请勿删除数据目录 INSTALL.json 文件）\n 3. 【agent】新增 插件端新增虚拟内存和交互内存监控趋势\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建发布完成，自动删除压缩包文件（节省空间占用大小）（感谢@轩辕豆豆）\n 2. 【server】修复 更新构建历史环境变量失败\n 3. 【server】取消 SSH 脚本命令参数描述（避免误导用户） （感谢 @大灰灰大 Gitee issues I6IPDY ）\n 4. 【server】优化 编辑项目文件回显错乱问题\n 5. 【server】优化 日志阅读菜单更名日志搜索\n 6. 【server】优化 差异构建时，触发取消构建标记构建状态为构建中断 （感谢@张飞鸿）\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 弃用表 NODE_STAT\n 2. 【server】删除 弃用表 SYSTEMMONITORLOG\n 3. 【server】删除 相关表中的 strike 字段\n\n\n# 2.10.24 (2023-03-01)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 在线构建容器镜像构建参数和镜像标签支持解析环境变量\n 2. 【server】优化 替换环境变量，支持 $xxx ${xxx} （感谢@大锅饭集团）\n 3. 【server】修复 配置节点分发白名单报错 （感谢@酱总）\n 4. 【server】优化 节点分发配置【配置管理-白名单配置】菜单移动到功能管理中【项目管理-分发白名单】\n 5. 【server】修复 非管理员无法使用 SSH 终端问题 （感谢 @lilinLue Gitee issues I6IRJV ）\n\n\n# ⚠️ 注意\n\n节点分发白名单可能失效，需要重新配置\n\n----------------------------------------\n\n\n# 2.10.23 (2023-03-01)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 控制台输出工作空间关联数据错误未关联的表和条数\n 2. 【server】新增 资产管理-SSH管理\n 3. 【server】新增 构建 SSH 发布支持配置发布前执行命令 （感谢@daniel）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 使用 ANT 产物目录会自动生成模糊匹配表达式文件夹（感谢@leonchen21）\n 2. 【server】修复 启动时候未自动触发修复数据逻辑\n 3. 【server】修复 SSH 文件管理二级目录以下无法重命名\n 4. 【server】优化 SSH 配置授权目录、允许编辑文件后缀、禁止命令移动到资产管理中\n 5. 【all】优化 SSH文件、项目文件允许编辑文件的后缀支持配置 * (前提编辑格式统一)\n 6. 【server】优化 升级 docker-java 、svnkit 依赖版本\n 7. 【server】优化 SSH 支持清空隐藏字段\n\n\n# ⚠️ 注意\n\n由于新增 SSH 资产管理，之前ssh 配置如果引用的工作空间变量的配置信息可能将失效（作用域不同）. 如果任需要变量信息还需要将对应的信息迁移到全局变量中才可以正常使用\n\n----------------------------------------\n\n\n# 2.10.22 (2023-02-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 仓库新增配置超时属性（避免仓库拉取代码超时）（感谢 @阿超 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 容器构建无法下载产物（感谢@张飞鸿）\n\n----------------------------------------\n\n\n# 2.10.21 (2023-02-23)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 容器构建自动删除构建容器\n 2. 【server】优化 系统管理菜单名：变更为插件端配置，服务端配置 （感谢@ccx2480）\n 3. 【server】修复 机器管理节点配置同步获取信息错乱（使用到服务端配置）（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.10.20 (2023-02-23)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】修复 插件端验证项目白名单路径失败（感谢@ccblandy）\n\n----------------------------------------\n\n\n# 2.10.19 (2023-02-22)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建缓存插件支持按照 path 全局缓存 type: global\n 2. 【server】新增 容器构建缓存插件支持缓存 node_modules mode: copy (避免出现：https://github.com/npm/cli/issues/3669)\n 3. 【server】新增 构建列表新增批量构建 （感谢 @爱笑的眼睛 Gitee issues I6GNV2 ）\n 4. 【server】新增 机器管理新增查看关联节点功能\n 5. 【server】新增 机器新增网络、硬件硬盘查看\n 6. 【server】新增 机器管理列表新增表格视图\n 7. 【server】新增 手动分发文件、构建分发弹窗新增筛选指定项目进行分发 （感谢 @Smith Gitee issues I6GQNG ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 构建读取附件环境变量时机调整到 pull 后\n 2. 【agent】优化 白名单路径原样保存（避免部分安全组件拦截）\n 3. 【server】修复 编辑机器分组名失效问题\n 4. 【server】优化 工作空间菜单配置由系统管理移动到工作空间列表管理中\n 5. 【server】优化 节点白名单配置分发功能移动到机器管理表格视图中（模板节点）\n 6. 【server】优化 节点配置分发功能移动到机器管理表格视图中（模板节点）\n\n----------------------------------------\n\n\n# 2.10.18 (2023-02-20)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理->机器管理\n 2. 【server】新增 配置属性：jpom.node.stat-log-keep-days（节点统计日志保留天数）\n 3. 【all】新增 机器节点硬盘信息统计\n 4. 【all】新增 机器节点网络流量信息统计\n 5. 【server】新增 构建触发器新增获取构建日志接口 （感谢 @黑黑 Gitee issues I6G0AT ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】更名 节点列表更名逻辑节点\n 2. 【server】修复 节点分发编辑 webhook 字段回显（感谢@酱总）\n 3. 【server】优化 在线升级统一机器管理（无需切换工作空间）\n 4. 【server】优化 节点管理>在线升级菜单移动到机器管理中\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 node_info unLockType 字段\n 2. 【server】取消 节点解绑功能\n 3. 【server】停止 使用 NODE_STAT 表（暂时保留相关数据）\n 4. 【server】替代 MACHINE_NODE_STAT_LOG 表替代 SYSTEMMONITORLOG 表（并暂时保留 SYSTEMMONITORLOG 数据）\n\n\n# ⚠️ 注意\n\n由于新增机器管理，程序将自动同步节点表中的所有数据以节点地址去重后保存到机器表中，如果同一个节点地址出现多条数据（节点存在不同的工作空间）将跟进节点更新时间最新的为准\n\n插件端需要同步更新，否则节点状态、机器状态为：状态码错误\n\n如果更新当前版本后出现节点授权码错误：可能原因是之前同一个机器添加多个节点到不同的工作空间并且最后更新的节点中保存的授权信息是错误，导致数据自动同步后仍然是错误的授权信息\n\n----------------------------------------\n\n\n# 2.10.17 (2023-02-16)\n\n 1. 【server】新增 构建配置新增严格执行命令模式（判断命令执行状态码是否为0） （感谢@阿克苏市姑墨信息科技有限公司） Gitee pr 169 ）\n 2. 【server】新增 节点分发新增 webhook 配置属性（感谢@酱总）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 构建产物配置单属性时，二次匹配不能匹配到文件问题 （感谢 @伤感的风铃草 Gitee issues I6FETS ）\n 2. 【server】优化 构建历史回滚输出相关操作日志（感谢@酱总）\n 3. 【server】修复 windows 容器构建无法上传文件到容器问题\n\n----------------------------------------\n\n\n# 2.10.16 (2023-02-14)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 docker 列表支持跨工作空间同步 （感谢 @清风柳絮II号 Gitee issues I6EOIR ）\n 2. 【server】新增 构建历史保存构建环境变量（为回滚流程使用）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】优化 解压工具支持多种编码格式（GBK、UTF8）（感谢@Again... . ）\n 2. 【server】优化 在线构建新增配置文件环境变量测试（BUILD_CONFIG_BRANCH_NAME）(感谢@阿克苏市姑墨信息科技有限公司)\n 3. 【server】修复 节点分发回滚 NPE （感谢@酱总）\n 4. 【server】优化 构建弹窗部分下拉支持手动刷新数据（感谢@张飞鸿）\n\n----------------------------------------\n\n\n# 2.10.15 (2023-02-13)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建 pull 流程之后新增 BUILD_COMMIT_ID 变量\n 2. 【server】新增 执行脚本输出可用环境变量（服务端脚本、节点脚本、SSH 脚本、在线构建 pull 成功之后、构建事件脚本）\n 3. 【server】新增 构建确认弹窗新增配置构建环境变量\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 节点分发二级路径不能删除问题（感谢@张飞鸿）\n 2. 【agent】优化 服务端环境隐私变量字段传递到插件端（已经存在的插件端环境变量默认为隐私变量）\n 3. 【agent】修复 DSL 项目模式 status 事件写入日志编码格式跟随系统配置,避免编码格式不正确（已经存在的日志文件可能会乱码,可以删除文件解决）\n 4. 【server】优化 提前构建加载附加环境变量（startReady 事件）\n 5. 【agent】优化 节点进程列表、内存、cpu、硬盘加载方式采用 oshi\n 6. 【server】优化 在线升级页面新版本检测支持本地网络检测\n\n\n# ⚠️ 注意\n\n插件端需要同步更新，否则节点首页进程列表数据将不能正常显示\n\n----------------------------------------\n\n\n# 2.10.14 (2023-02-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建状态新增构建中断（执行事件脚本返回中断构建）\n 2. 【server】新增 构建事件脚本支持返回指定关键词中断构建（需要执行事件脚本输出的最后一行，interrupt $type）\n 3. 【server】新增 构建触发器将请求参数传入构建环境变量（triggerContentType、triggerBodyData）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 构建产物为文件夹打包位置优化（避免存放位置错乱）\n 2.  【server】修复 构建触发修改构建产物路径未验证 slip 问题\n 3.  【server】优化 本地构建产物模糊匹配（ant path）支持配置截取路径、合并文件\n 4.  【server】优化 构建日志输出信息（部分调整为中文、消息标签和级别）\n 5.  【server】优化 切换工作空间刷新菜单（感谢@ccx2480）\n 6.  【server】优化 用户密码提示改为弹窗并且可以快捷复制\n 7.  【agent】修复 保存 DSL 项目判断是否存在 status 节点,避免无法删除情况（感谢@张飞鸿）\n 8.  【agent】修复 节点项目修改路径移动文件不生效问题\n 9.  【agent】取消 编辑项目校验目录存在情况\n 10. 【server】优化 项目ID、节点分发ID 支持前端快捷生成\n 11. 【server】优化 构建执行事件脚本描述匹配支持 all 关键词 (匹配所有事件)\n 12. 【server】修复 执行脚本文件的换行符合跟随系统，避免 windows 中出现异常\n 13. 【server】优化 解绑操作提示弹窗更明确（减少误操作）（感谢@酱总）\n\n\n# ⚠️ 注意\n\n如果使用到产物模糊匹配的请关注是否需要重新调整匹配符。\n\n新版本匹配符支持配置三个属性：\n\n属性1:属性2[可选]:属性3[可选]\n\n属性1：为模糊匹配的表达式 ( Ant-style )\n\n属性2：匹配到的文件保留方式，可用值：KEEP_DIR、SAME_DIR。（大小写均兼容、配置错误默认为 KEEP_DIR）\n\nKEEP_DIR: 保留匹配到的文件的文件层级\n\nSAME_DIR: 将匹配到的文件均保留到同一个层级（合并到一个文件夹下）。慎用该方式，如果多目录存在相同的文件名会出现合并后只保留匹配到的最后一个文件\n\n属性3： 需要剔除匹配到多级文件夹的指定目录,(可以配置为空)。建议配合属性2的KEEP_DIR使用。剔除目录可以理解为二次过滤前缀匹配文件\n\n# 🌰 举个栗子\n\n# 栗子1： /web*/**/*.html:KEEP_DIR:/web2/\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\na.html\n/b/a.html\n\n\n1\n2\n\n\n# 栗子2： /web*/**/*.html:SAME_DIR:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且合并文件到同一个目录，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\nweb1.html\na.html\nt.html\n\n\n1\n2\n3\n\n\n# 栗子3： /web*/**/*.html:KEEP_DIR:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候按照原目录结构发布\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\n/web/web1.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n\n\n----------------------------------------\n\n\n# 2.10.13 (2023-02-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 项目支持配置分组属性，方便项目列表筛选 （感谢 @hjk2008 Gitee issues I63PEN ）\n 2. 【server】新增 节点分发支持配置分组属性，方便列表筛选\n 3. 【agent】新增 DSL 项目支持配置自定义备份路径 （感谢 @陈旭 Gitee issues I57ZKJ ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】修复 linux 无法正常安装 service （感谢@山上雪）\n 2. 【server】优化 构建的节点分发模式增加二级目录 （感谢 @爱琳琳真是太好了 Gitee issues I6DNMX ）\n 3. 【server】优化 构建不保留产物时自动删除产物为目录时的压缩包文件\n 4. 【server】优化 构建状态等待节点分发完成（阻塞执行节点分发）\n 5. 【server】修复 构建选择节点分发并关闭保留产物，会导致分发失败。 （感谢 @爱琳琳真是太好了 Gitee issues I6DII6 ）\n 6. 【server】修复 构建分发为节点分发，产物为文件时导致的不能回滚 （感谢 @Smith Gitee issues I6DNSM ）\n 7. 【server】优化 定时构建支持配置禁用表达式，方便临时关闭定时执行 （感谢 @阿超 Gitee issues I6DNBW ）\n 8. 【server】修复 DSL 项目配置文件备份数量不生效问题\n\n\n# ⚠️ 注意\n\nLinux 环境 已经安装的需要手动更新一下服务管理脚本\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Service.sh https://gitee.com/dromara/Jpom/raw/master/modules/server/src/main/bin/Service.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Service.sh https://gitee.com/dromara/Jpom/raw/master/modules/agent/src/main/bin/Service.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.12 (2023-01-29)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 在线终端断开连接时提醒并支持重连\n 2. 【server】修复 线程同步器，避免任务过多造成线程数不可控（节点分发相关功能）\n 3. 【server】优化 前端打包取消 .map 文件，缩少发布包大小 （感谢 @金技 Gitee issues I6AK0N ）\n 4. 【all】优化 分片上传文件名采用分片序号（伪装文件后缀）（感谢@冷月）\n 5. 【all】优化 分片上传文件签名由 sha1 改为 md5 提升效率\n 6. 【server】优化 构建历史页面鼠标移到名称下拉项显示文字 （感谢 @伤感的风铃草 Gitee pr 167 ）\n 7. 【all】修复 日志监听器 catch 异常日志造成会话未自动删除问题 （感谢 @金技 Gitee issues I6A5QW ）\n 8. 【server】修复 仓库地址 https 证书验证问题（自动忽略验证） （感谢 @arstercz Github issues 32 ）\n\n\n# ⚠️ 注意\n\n 1. 插件端需要同步升级，否则不能正常使用节点上传文件相关功能\n\n----------------------------------------\n\n\n# 2.10.11 (2023-01-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 系统缓存新增分片操作数查看\n 2. 【server】新增 节点分片上传支持配置并发数：jpom.node.upload-file-concurrent\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 迁移数据添加更多日志输出\n 2. 【server】优化 分片上传解析文件数据采用分片形式，避免大文件造成浏览器奔溃\n 3. 【server】优化 插件端在线升级管理页面错误信息提示由弹窗改到对应节点\n 4. 【server】修复 迁移数据出现监控报警记录表字段不全问题 （感谢@loyal）\n 5. 【server】修复 迁移系统参数表中的 sync_trigger_token 数据重复问题（感谢@loyal）\n 6. 【server】优化 取消迁移数据忽略处理（避免默认工作空间名称不迁移）（感谢@loyal）\n 7. 【server】优化 获取项目运行状态失败弹窗提醒改为单条数据异常提醒\n 8. 【server】优化 服务端项目管理项目列表获取运行状态改为并发执行,缩短加载时间\n 9. 【server】优化 分片上传文件中文件选择器禁用\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消 监控记录实体中的 logId 字段 （感谢@loyal）\n 2. 【all】取消 启动时候判断重复启动\n\n----------------------------------------\n\n\n# 2.10.10 (2023-01-09)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 在线升级是否允许降级操作配置属性jpom.system.allowed-downgrade\n 2. 【server】新增 分发整体状态新增分发失败\n 3. 【server】新增 构建日志显示进度折叠率配置：jpom.build.log-reduce-progress-ratio\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 mysql 环境非allowMultiQueries初始化表结构失败（感谢@丿幼儿园逃犯）\n 2.  【server】修复 部分表字段缺失问题（strike）\n 3.  【server】优化 迁移数据到 mysql 字段大小写跟随实体（感谢@丿幼儿园逃犯）\n 4.  【server】修复 导入数据库备份文件目录不存在时报错（感谢@丿幼儿园逃犯）\n 5.  【all】优化 节点上传项目文件采用分片上传、并且支持进度显示\n 6.  【all】优化 在线升级上传项目包采用分片上传、并且支持进度显示\n 7.  【all】优化 在线升级，默认禁止降级操作\n 8.  【server】优化 节点分发上传文件采用分片上传、并且支持进度显示\n 9.  【server】优化 分发单项的状态信息存储于日志记录中（取消 json 字段存储）\n 10. 【server】优化 节点分发子项展示逻辑（同步改异步加载,避免长时间加载）\n 11. 【server】优化 构建日志输出各个流程耗时\n 12. 【server】优化 构建发布项目文件采用分片上传、并且支持进度显示\n 13. 【agent】优化 配置文件中上传文件大小限制由 1G 改为 10MB 节省插件端占用内存大小（采用分片代替）\n 14. 【server】优化 手动上传的节点分发文件将自动删除，节省存储空间\n 15. 【server】优化 节点分发日志支持显示进度信息\n\n\n# ⚠️ 注意\n\n 1. 插件端需要同步升级，否则节点分发项目无法显示项目名称\n 2. 插件端需要同步升级，否则会出现部分接口 404 或者参数不正确的情况\n 3. 建议升级验证上传项目文件无问题后，将插件端上传文件大小限制配置属性大改小\n 4. spring.servlet.multipart.max-file-size=5MB\n 5. spring.servlet.multipart.max-request-size=20MB\n\n如果需要使用 mysql 存储，则需要修改配置\n\n 1. 修改 jpom.db.mode 为 MYSQL\n 2. 修改 jpom.db.url 为您 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1: 3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false)\n 3. 修改 jpom.db.user-name 为对应 mysql 账户\n 4. 修改 jpom.db.user-pwd 为对应 mysql 密码\n\n如果您需要迁移之前 h2 数据库中的数据到 mysql（需要先将 mysql 的连接信息配置好后才能迁移）\n\nbash ./bin/Server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n\n1\n2\n\n\n----------------------------------------\n\n\n# 2.10.9 (2023-01-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 服务端数据存储支持 mysql\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 在线编辑配置文件保存并修改数据库密码问题\n 2. 【server】三次修复 在线终端输入部分字符后自动断开连接问题\n 3. 【server】升级 svnkit 依赖版本\n 4. 【server】优化 docker 标签查询精准查询\n 5. 【server】更名 阅读文件更名为跟踪文件\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 数据库中多个数据表中弃用字段\n\n\n# ⚠️ 注意\n\n如果需要使用 mysql 存储，则需要修改配置：\n\n 1. 修改 jpom.db.mode 为 MYSQL\n 2. 修改 jpom.db.url 为您 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1: 3306/jpom?useUnicode=true&characterEncoding=UTF-8&useSSL=false)\n 3. 修改 jpom.db.user-name 为对应 mysql 账户\n 4. 修改 jpom.db.user-pwd 为对应 mysql 密码\n\n如果您需要迁移之前 h2 数据库中的数据到 mysql（需要先将 mysql 的连接信息配置好后才能迁移）\n\nbash ./bin/Server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n\n1\n2\n\n\n----------------------------------------\n\n\n# 2.10.8 (2023-01-05)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】优化 程序运行的 tmp 文件夹（java.io.tmpdir）跟随项目目录\n 2. 【all】优化 判断目录越级 checkSlip 目录转义至 tmpdir，避免在用户目录生成空白文件夹\n\n\n# ❌ 不兼容功能\n\n 1. 【all】取消 程序启动写入全局临时信息\n 2. 【server】取消 服务端没有节点自动探测本地节点功能\n\n\n# ⚠️ 注意\n\nLinux、Windows 环境 已经安装 2.10.0 ~ 2.10.7 的需要手动更新一下管理脚本\n\n> 建议先更新脚本再升级插件端或者服务端\n> \n> Windows 用户需要自行下载脚本替换\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Server.sh https://gitee.com/dromara/Jpom/raw/master/modules/server/src/main/bin/Server.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Agent.sh https://gitee.com/dromara/Jpom/raw/master/modules/agent/src/main/bin/Agent.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.7 (2023-01-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 配置管理新增配置目录在线编辑功能\n 2. 【server】新增 容器构建新增 ubuntu-git 镜像\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 在线终端输入部分字符后自动端口连接问题（感谢 @Again.... ）\n 2. 【server】修复 执行 SSH 脚本未正常加载环境变量问题\n 3. 【server】修复 快速安装(绑定)插件端的命令特殊字符转义问题 （感谢@张飞鸿）\n 4. 【server】优化 节点在线升级确认操作提醒要升级的目标版本号（感谢@木迷榖）\n 5. 【server】优化 modal 弹窗新增 destroyOnClose , 优化页面卡顿和组件样式冲突\n 6. 【server】修复 windows nginx 配置文件编辑白名单路径非绝对路径时出现名称错误\n\n\n# ❌ 不兼容功能\n\n 1. 【server】下架 构建配置管理功能（请使用配置目录管理功能代替）\n\n----------------------------------------\n\n\n# 2.10.6 (2022-12-29)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 上传项目文件，下载远程文件 压缩包支持自动剔除文件夹\n 2. 【server】新增 节点分发新增手动取消分发任务功能 （感谢 @gxw Gitee issues I61SBB ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 SSH 终端 JSCH 新增日志实现，方便排查问题\n 2. 【agent】优化 部分下载接口取消返回值，避免控制台出现错误日志\n 3. 【server】优化 服务端代理插件端的 websocket 超时问题\n 4. 【server】修复 在线终端输入部分字符后自动端口连接问题（感谢 @Again.... ）\n 5. 【server】修复 部分下拉框无法正常搜索文件（感谢 @Again.... ）\n 6. 【agent】优化 同时上传相同的文件名时可能异常\n 7. 【server】优化 节点分发状态新增（等待分发、手动取消状态）\n 8. 【server】修复 状态为未分发时分发失败引起的状态错误\n\n----------------------------------------\n\n\n# 2.10.5 (2022-12-27)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 操作日志新增数据名称字段\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【agent】修复 项目文件夹不存在时不能下载远程文件\n 2.  【all】升级 fastjson 升级为 fastjson2\n 3.  【all】升级 SpringBoot 2.7.7 、commons-compress\n 4.  【server】移除 空闲依赖 jaxb-api\n 5.  【all】优化 启动加载流程，保存顺序加载\n 6.  【all】修复 启动成功写入全局信息由于没有权限造成的异常 （感谢 @LeonChen21 Gitee issues I67C3C ）\n 7.  【server】优化 websocket 控制台操作日志记录\n 8.  【server】修复 超级管理的 websocket 操作日志记录工作空间不正确\n 9.  【agent】优化 插件端删除 spring-boot-starter-websocket 依赖\n 10. 【server】优化 服务端删除 Java-WebSocket 依赖（采用统一模块管理）\n 11. 【server】修复 更新构建状态互斥，避免状态被异步更新冲突\n 12. 【server】优化 下载文件采用标签页面形式取消 blob\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消 兼容低版本插件端的 websocket 授权信息传输方式（低版本插件端请同步升级到最新）\n 2. 【server】取消 服务端取消向插件端传递操作人的用户名\n 3. 【server】取消 服务端数据库用户操作日志表对 REQID 字段兼容（2.9.1 以下）\n\n----------------------------------------\n\n\n# 2.10.4 (2022-12-23)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】修复 linux 管理脚本中的 pid 文件内容与真实进程不一致问题\n 2. 【all】恢复 linux 管理脚本支持创建服务管理\n\n\n# ⚠️ 注意\n\nLinux 环境 已经安装 2.10.3 ~ 2.10.0 的需要手动更新一下管理脚本\n\n> 需要创建服务来管理的需要更新后才能正常使用在线升级和保存配置并重启\n\n> 建议先更新脚本再升级插件端或者服务端\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Server.sh https://gitee.com/dromara/Jpom/raw/master/modules/server/src/main/bin/Server.sh\n\n\n1\n\n\ncurl -LfsSo Service.sh https://gitee.com/dromara/Jpom/raw/master/modules/server/src/main/bin/Service.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Agent.sh https://gitee.com/dromara/Jpom/raw/master/modules/agent/src/main/bin/Agent.sh\n\n\n1\n\n\ncurl -LfsSo Service.sh https://gitee.com/dromara/Jpom/raw/master/modules/agent/src/main/bin/Service.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.3 (2022-12-22)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 在线构建新增 packageFile 流程 编译 webhook 或者事件脚本调用\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 快速导入节点工作空间id undefined\n 2. 【server】修复 本地运行脚本默认找不到的情况\n 3. 【agent】优化 项目控制台日志文件默认编码格式判断系统 windows 默认 GBK,其他默认 UTF-8 （感谢 @gf_666 Gitee issues I66ZZZ ）\n 4. 【server】优化 在线构建 ssh 清空产物异常不标记发布异常\n\n\n# ⚠️ 注意\n\nLinux 环境 已经安装 2.10.2 ~ 2.10.0 的需要手动更新一下管理脚本，之前管理脚本存在部分场景日志输出错乱的问题\n\n> 建议先更新脚本再升级插件端或者服务端\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Server.sh https://gitee.com/dromara/Jpom/raw/master/modules/server/src/main/bin/Server.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Agent.sh https://gitee.com/dromara/Jpom/raw/master/modules/agent/src/main/bin/Agent.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.2 (2022-12-21)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】节点快速安装命令示例提供默认安装命令\n 2. 【server】修复 docker 插件未正常加载问题（感谢@顺子）\n 3. 【server】优化 本地构建命令执行方式由逐行改为脚本执行\n 4. 【server】修复 构建未配置 webhook 控制台报错\n 5. 【server】修复 构建未配置 webhook 不触发事件脚本\n\n\n# ❌ 不兼容功能\n\n 1. 【server】下架 SSH 上传文件安装插件端方式，采用快速安装命令代替\n 2. 【server】取消 构建命令和本地命令发布 不支持 #{} 变量替换\n 3. 【server】取消 SSH 命令模板 不支持 #{} 变量替换（仅支持 ${} 替换）\n\n----------------------------------------\n\n\n# 2.10.1 (2022-12-20)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 节点项目支持快速复制操作 （感谢@mt-mored Gitee issues I653O3 ）\n 2. 【all】新增 节点项目、独立节点分发支持彻底删除\n 3. 【agent】新增 DSL 项目模式执行脚本支持节点环境变量 （感谢@苏生不语 Gitee issues I66MNP ）\n 4. 【all】新增 构建项目发布、节点分发支持配置发布前先停止（避免 windows 环境文件被占用） （感谢 @yiziyu Gitee issues I65MS1、@all-around-badass Gitee issues I66PYU ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 节点分发菜单更名为项目管理\n 2. 【server】优化 节点分发添加项目限制数量由 2 调整为 1 （感谢@苏生不语 Gitee issues I66R73 ）\n 3. 【server】修复 节点分发手动上传文件二级目录出现 undefined\n 4. 【agent】修复 默认项目模式执行命令存在 null 字符串\n 5. 【server】修复 初次安装服务端初始化数据库失败问题 （感谢@lg）\n 6. 【server】优化 日志显示组件（取消正则搜索），日志删除 ansi 颜色 （感谢@苏生不语 Gitee issues I657JR ）\n 7. 【server】优化 编辑组件可能出现行错和内容错乱问题\n 8. 【server】优化 查看系统日志的多次切换内容返回错乱问题\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 DSL 项目脚本的 #{} 替换变量\n\n\n# ⚠️ 注意\n\nLinux 环境 已经安装 2.10.0 的需要手动更新一下管理脚本，2.10.0 管理脚本存在在线升级和在线重启日志输出重复问题\n\n> 建议先更新脚本再升级插件端或者服务端\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Server.sh https://gitee.com/dromara/Jpom/raw/master/modules/server/src/main/bin/Server.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -LfsSo Agent.sh https://gitee.com/dromara/Jpom/raw/master/modules/agent/src/main/bin/Agent.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.0 (2022-12-19)\n\n\n# 🐣 新增功能\n\n 1. 【all】外置 logback 配置文件\n 2. 【server】服务端管理相关功能独立页面菜单\n 3. 【server】新增项目触发器用于管理项目状态\n 4. 【all】新增 构建项目发布支持配置发布到二级目录\n 5. 【server】新增 节点分发发布支持配置发布到二级目录\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】启动相关信息由控制台输出改为 logback\n 2. 【all】节点管理中 其他功能 菜单更名为 脚本管理\n 3. 【all】优化版本升级修改管理脚本里变量,采用文件记录方式\n 4. 【server】优化容器启动脚本，支持监听进程已经终端重启操作\n 5. 【server】修复 自动刷新页面已经关闭的标签页，后台仍然在发送请求 （感谢@苏生不语 Gitee issues I664OP ）\n 6. 【server】修正触发器说明错别字\n\n\n# ❌ 不兼容功能\n\n 1.  【server】取消支持 2.8.0 以下 json 文件转存数据库\n 2.  【all】下架 JDK 管理模块（请使用 DSL 项目模式代替）\n 3.  【all】下架 TOMCAT 管理模块（请使用 DSL 项目模式代替）\n 4.  【all】删除 项目内存监控页面\n 5.  【all】配置文件名称由 extConfig.yml 变更为 application.yml\n 6.  【all】调整项目打包目录结构\n 7.  【all】取消兼容低版本数据目录文件迁移（调试运行）\n 8.  【all】取消自动识别文件编码格式模块 auto-charset-jchardet\n 9.  【all】更新管理脚本，进程标识更新（已经存在的需要手动停止）\n 10. 【all】取消插件端配置化向服务端注册功能（采用快速导入方式替代）\n 11. 【server】取消服务端授权 token 配置\n 12. 【all】下架 节点脚本导入功能\n 13. 【server】取消限制创建用户最大数配置：user.maxCount\n 14. 【server】删除 node_info 表 cycle 字段\n 15. 【agent】删除项目回收记录功能\n\n\n# ❌ 不兼容的属性配置变更\n\n> 属性配置支持驼峰和下划线\n\n 1.  【agent】whitelistDirectory.checkStartsWith -> jpom.whitelist-directory.check-starts-with\n 2.  【agent】project.stopWaitTime -> jpom.project.statusWaitTime\n 3.  【agent】project.* -> jpom.project.*\n 4.  【agent】修正拼写错误 log.*back* -> jpom.project.log.*backup*\n 5.  【agent】log.* -> jpom.project.log.*\n 6.  【agent】log.intiReadLine -> jpom.init-read-line\n 7.  【agent】 log.autoBackConsoleCron 不支持配置 none (none 使用 jpom.project.log.autoBackupToFile 代替)\n 8.  【all】删除 consoleLog.reqXss 、consoleLog.reqResponse\n 9.  【all】consoleLog.charset -> jpom.system.console-charset\n 10. 【server】node.uploadFileTimeOut -> jpom.node.uploadFileTimeout\n 11. 【server】system.nodeHeartSecond -> jpom.node.heartSecond\n 12. 【server】user.* -> jpom.user.*\n 13. 【server】jpom.authorize.expired -> jpom.user.tokenExpired\n 14. 【server】jpom.authorize.renewal -> jpom.user.tokenRenewal\n 15. 【server】jpom.authorize.key -> jpom.user.tokenJwtKey\n 16. 【server】jpom.webApiTimeout -> jpom.web.api-timeout\n 17. 【server】删除 ssh.initEnv\n 18. 【server】批量修正前端相关配置属性均修改到 jpom.web.*\n 19. 【server】db.* -> jpom.db.*\n 20. 【server】build.* -> jpom.build.*\n\n\n# ⚠️ 注意\n\n> 此版本为不兼容升级，需要手动升级修改相关配置才能正常使用\n\n# 简洁的升级流程\n\n 1. 停止正在运行的程序插件端或者服务端\n 2. 备份已经存在的插件端或者服务端的数据目录\n 3. 手动安装新版本 2.10.0+\n 4. 还原数据：将备份的数据目录迁移到新安装的数据目录（需要再未运行的状态下操作）\n 5. 重启程序\n\n详细的升级文档：https://jpom.top/pages/upgrade/2.9.x-to-2.10.x/\n\n----------------------------------------",normalizedContent:"# 2.10.47 (2023-12-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建支持自定义插件（感谢@远方 gitee issues i8pewi）\n 2. 【server】新增 容器管理新增导出、导入镜像\n 3. 【server】新增 环境变量支持触发器获取、修改\n 4. 【server】优化 容器日志、集群任务日志支持下载（感谢@在时间里流浪）\n 5. 【all】新增 部分项目支持迁移工作空间和逻辑节点（感谢@奇奇）\n 6. 【server】优化 资产管理 ssh 支持配置禁用监控（避免频繁登录）jpom.assets.ssh.disable-monitor-group-name（感谢@again...）\n 7. 【server】优化 资产管理 ssh 支持配置监控周期：jpom.assets.ssh.monitor-cron\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】升级 数据库 h2 、mwiede、web axios 版本\n 2.  【server】修复 构建事件脚本未修改执行状态和退出码问题\n 3.  【server】优化 构建事件脚本支持多选（顺序执行其中有一个中断将结束执行后续脚本）（感谢@loyal）\n 4.  【server】优化 服务端脚本触发类型新增构建事件\n 5.  【agent】删除 项目副本中弃用兼容字段 parendid\n 6.  【server】优化 docker 集群任务日志支持筛选行数、是否显示时间戳（感谢@在时间里流浪）\n 7.  【server】优化 项目控制台日志输出 n 人查看改为 n 个会话（@冬）\n 8.  【server】优化 添加超级管理员账号提醒勿使用常用账号\n 9.  【server】优化 逻辑节点节目取消全局 loading（感谢@小菜鸡）\n 10. 【server】优化 新增个性化配置全屏打开日志弹窗（构建、ssh、脚本、docker等日志）（感谢@张飞鸿）\n 11. 【server】修复 项目副本无法保存（修改中不能删除副本集、请到副本集中删除）\n 12. 【server】优化 服务端中可以支持创建编辑项目、创建节点脚本啦！！！\n 13. 【server】优化 项目列表支持删除项目、自动刷新项目\n 14. 【server】优化 仓库支持查看关联的构建\n 15. 【server】修复 删除服务端脚本日志如果脚本不存在不能删除\n 16. 【server】优化 资产机器卡片试图部分场景未对齐问题\n 17. 【server】优化 部分页面在小屏兼容（资产 docker、节点分发）\n 18. 【server】优化 节点脚本支持解绑（避免无非使用的服务器无非删除脚本）\n 19. 【server】优化 白名单配置提示 nginx、证书功能将下线\n 20. 【all】移除 插件端配置远程下载 host 输入框\n 21. 【server】优化 导入 ssh、项目 csv 数据自动识别编码格式\n 22. 【server】优化 执行 ssh 脚本获取流异常：getinputstream() should be called before connect()\n\n\n# ⚠️ 注意\n\n新增容器构建自定义插件说明：\n\n 1. 到 【系统管理】->【配置管理】->【系统配置目录】 中找到 docker/uses 目录\n 2. 添加插件配置文件 /docker/uses/java8/install.sh 其中 java8 为新增的插件名\n 3. 注意脚本中需要自行控制插件相关依赖的文件，需要将最新的文件保持到 /opt/${name}/ 目录下，其中 ${name} 为插件名\n 4. 辅助说明1：插件支持自定义环境变量\n 5. 辅助说明2：自定义环境变量中需要引用插件目录请使用 ${jpom_plugin_path}\n 6. 系统默认集成了：java、maven、node、go、python3、gradle、cache 默认插件有依赖版本检查如果您的网络不通建议自行创建插件来规避默认检查\n\n----------------------------------------\n\n\n# 2.10.46 (2023-12-18)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 容器构建下载产物未关闭文件流占用句柄问题（感谢@在时间里流浪）\n 2. 【all】优化 concurrenthashmap 修改为线程安全的 hutoll[safeconcurrenthashmap]（感谢@在时间里流浪）\n 3. 【all】升级 mwiede.jsch、oshi、fastjson、hutool、spring-boot、docker-java\n 4. 【server】优化 ssh 脚本在部分场景阻塞卡死（channeltype.exec 不添加超时时间）\n 5. 【server】优化 ssh 脚本执行输出退出码\n 6. 【server】优化 解决构建流程,环境变量env里出现value==null出现null报错 （感谢 @周冰 gitee pr 197 ）\n 7. 【server】优化 ssh 脚本执行记录退出码\n 8. 【server】优化 服务端脚本执行记录新增执行状态和退出码\n\n----------------------------------------\n\n\n# 2.10.45 (2023-10-17)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 ssh 新增独立管理面板（感谢@超人那个超i gitee issues i7ufex）\n 2. 【agent】新增 dsl 项目支持配置脚本环境变量（感谢@陈旭 gitee issues i80ptk）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 构建产物同步到文件中心支持独立配置保留天数（感谢@zhangxin2477 gitee issues i82g2f）\n 2.  【server】优化 不能删除超级管理员账号\n 3.  【agent】修复 agent.sh 脚本的缺少方法问题（感谢@siwen yu github issues 64）\n 4.  【server】优化 系统管理查看操作日志显示全部工作空间\n 5.  【server】优化 容器构建判断构建异常（严格模式异常中断构建）（感谢@在时间里流浪）\n 6.  【server】修复 构建流程中断触发 success 事件（感谢@在时间里流浪）\n 7.  【server】优化 ssh 独立管理面板支持快捷使用文件管理\n 8.  【server】优化 构建详情页面支持快捷回滚、查看构建日志（感谢@縁來只爲伱 gitee issues i7ysnh）\n 9.  【all】升级 hutool、commons-compress\n 10. 【agent】修复 重启项目偶发 npe（监听日志关闭事件）（感谢@caiqy gitee issues i7z2u6）\n 11. 【server】优化 构建支持配置环境变量实现产物打包为 tar.gz (use_tar_gz=1)\n 12. 【server】修复 文件管理偶发无法查看发片下载地址\n\n----------------------------------------\n\n\n# 2.10.44 (2023-09-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持 git submodules （感谢 @croce gitee pr 195 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 资产管理共享仓库新建归属到工作空间问题（感谢@沈钊）\n 2. 【server】升级 springboot 、oshi、docker-java、jgit\n 3. 【server】升级 mwiede.jsch 版本\n 4. 【server】优化 构建回滚创建新的构建记录（感谢@smith gitee issues i7veja）\n 5. 【server】修复 新增资产无法正常监控问题（感谢@乔、@michellechung、@pluto）\n 6. 【server】优化 编辑集群地址不验证，调整到心跳检测验证（感谢@黄纲）\n 7. 【server】优化 构建新增环境变量：build_original_result_dir_file、build_result_dir_file（发布流程）(感谢@黄纲)\n\n----------------------------------------\n\n\n# 2.10.43 (2023-08-25)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 未配置集群地址时无法切换工作空间（感谢@黄纲）\n\n----------------------------------------\n\n\n# 2.10.42 (2023-08-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 集群化管理工作空间（感谢@定格、@paobu gitee issues i7ug5v）\n 2. 【server】优化 ssh 相关功能支持 openssh8+ （感谢 @孤城落寞 gitee pr 193 ）\n 3. 【server】新增 ssh 文件管理修改文件权限功能（感谢 @michellechung gitee issues i6vdxs ）\n 4. 【server】新增 docker 容器重建功能，即删除原有的容器，重新创建一个新的容器\n 5. 【server】新增 docker 管理增加 ssh 连接\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 资产管理 ssh 管理系统名称显示未知问题（感谢@勤思·）\n 2.  【server】优化 资产管理 docker 管理支持配置分组\n 3.  【server】优化 仓库管理支持配置分组\n 4.  【server】优化 ssh 文件夹支持前端排序（感谢@勤思·）\n 5.  【server】优化 仓库账号、 ssh 证书密码支持选择环境变量\n 6.  【all】升级 commons-compress、fastjson、hutool 版本\n 7.  【server】优化 maven 依赖冲突\n 8.  【server】优化 文件发布-节点发布文件名使用真实名称（感谢@勤思·）\n 9.  【server】优化 文件发布-ssh发布新增变量：file_name、file_ext_name\n 10. 【server】升级 h2、springboot 版本\n 11. 【server】使用系统git时，无法克隆tag问题优化 （感谢@唐明）\n 12. 【server】优化 ssh 和 代码仓库的密码从工作空间变量中读取\n 13. 【server】优化 删除工作空间前预检查关联数据存在情况（感谢 @陈旭 gitee issues i7f0zn ）\n 14. 【server】优化 退出登录支持彻底退出、切换账号退出（感谢 @wangfubiao gitee issues i7ga5q ）\n 15. 【server】优化 ip 白名单验证忽略 ipv6 情况\n 16. 【server】优化 服务端缓存管理支持查看黑名单 ip 详细信息（感谢@酱总）\n 17. 【server】修复 ssh 编辑输入框出现部分关键词时保持报错（感谢 @一只羊 gitee issues i7e3ug ）\n 18. 【server】优化 日志组件支持显示 \\t 制表符、清空缓冲区滚动到顶部\n 19. 【server】修复 彻底删除节点分发时未自动删除关联日志（感谢@ccx2480）\n 20. 【server】修复 节点管理中脚本模板翻页无效（感谢 @wangfubiao gitee issues i7f0rs ）\n 21. 【server】优化 工作空间配置页面中新增节点分发白名单配置入口（感谢 @陈旭 gitee issues i7f0w0 ）\n 22. 【server】优化 构建附加环境变量支持解析 url 参数格式 （感谢 @爱琳琳真是太好了 gitee issues i7frog ）\n 23. 【server】优化 构建支持单个配置保留天数和保留个数 （感谢 @阿超 gitee issues i7fog2 ）\n\n----------------------------------------\n\n\n# 2.10.41 (2023-06-16)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 ssh 列表支持显示 docker 版本信息\n 2. 【server】优化 docker 镜像增加批量删除（已经被容器使用的镜像不会删除）\n 3. 【server】优化 启用 jpom 新版专属 logo\n 4. 【server】新增 工作空间新增分组字段（存在多个分组时页面切换将使用二级选择）（感谢@酱总）\n 5. 【server】新增 仓库支持导入导出\n 6. 【server】新增 镜像创建容器支持配置 hostname、集群服务支持配置 hostname（感谢@心光）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 查看 docker 容器日志 web socket 线程被阻塞问题\n 2.  【server】优化 日志组件显示高亮、滚动条样式优化\n 3.  【server】优化 web socket 会话关闭显示分类\n 4.  【server】优化 页面滚动条样式\n 5.  【server】优化 编辑关联分发，选择项目下拉框不能显示项目全名称（tooltip）（感谢@lyy）\n 6.  【server】优化 监听页面关闭事件，主动关闭 websocket\n 7.  【server】修复 批量构建触发器无法正常使用（感谢 @botboy github issues 48 ）\n 8.  【server】修复 页面关闭 docker 终端未主动关闭后台终端进程问题\n 9.  【server】优化 docker 终端页面缓冲区大小自动适应\n 10. 【server】优化 项目列表可以查看项目日志（避免控制台卡顿无法操作下载日志）(感谢@阿超)\n 11. 【server】优化 日志组件采用虚拟滚动渲染，避免日志过多浏览器卡死\n 12. 【server】优化 资产管理支持管理共享仓库\n 13. 【server】优化 增大验证码检测功能异常捕捉范围\n 14. 【server】修复 令牌导入仓库令牌长度不足问题（感谢 @sherman chu github issues 45 ）\n 15. 【server】修复 分发列表配置功能无法使用（感谢 @free gitee issues i716ui ）\n 16. 【server】修复 构建卡片布局、构建详情中构建方式显示不正确（感谢@a）\n\n\n# ⚠️ 注意\n\n 1. 如果自定义过 ssh 监控脚本需要自行同步获取 docker 信息脚本\n\n----------------------------------------\n\n\n# 2.10.40 (2023-04-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建中对 gradle 插件的支持（感谢 @xiaozhi gitee pr 188 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 日志搜索控制台无法正常使用（感谢@左手生活，右手浪漫）\n 2.  【server】修复 项目文件跟踪控制台无法正常使用（感谢@左手生活，右手浪漫）\n 3.  【server】修复 插件端日志无法正常差异\n 4.  【server】修复 docker 拉取镜像不能识别私有仓库地址（@章强）\n 5.  【server】优化 编辑构建无法重置已经选择的事件脚本 （感谢@左手生活，右手浪漫）\n 6.  【server】优化 登录页面切换验证码自动清空验证码输入框（感谢@troubles）\n 7.  【server】修复 docker 集群日志查看后未自动关闭造成日志文件继续增长的问题（@无味。）\n 8.  【server】优化 服务端缓存项目信息的创建时间和修改时间同步为节点中的数据创建、修改时间\n 9.  【server】优化 文件管理支持批量删除（感谢@左手生活，右手浪漫）\n 10. 【agent】优化 取消 hutool-cache 包依赖\n 11. 【server】优化 justauth fastjson 依赖配置为 fastjson2\n 12. 【agent】修复 获取项目状态部分情况出现 npe （感谢@酱总）\n 13. 【server】修复 清空浏览器缓存未跳转到登录页面\n 14. 【server】优化 构建拉取 git 仓库支持使用服务器中的 git 插件，实现配置克隆深度参数\n 15. 【server】修复 删除节点脚本报错（感谢 @xiaozhi gitee issues i6usmy ）\n 16. 【server】优化 构建 ssh 发布命令支持 ssh_release_path 环境变量（感谢@定格）\n 17. 【server】修复 全屏终端无法打开文件管理（感谢@pluto）\n 18. 【server】优化 自动探测服务端登录验证码是否可用\n 19. 【all】优化 文件编辑后缀识别支持配置文件名或者正则表达式（感谢@michellechung）\n 20. 【server】优化 支持自动执行触发器清理\n 21. 【server】优化 重新登录未加载管理员菜单（@a）\n 22. 【server】修复 第三方登录跳转测试丢失\n 23. 【server】修复 仓库编辑清除密码按钮弹窗层级问题（感谢 @轩辕豆豆 gitee issues i6vscr ）\n 24. 【server】修复 优化构建列表卡片布局存在未构建数据布局错乱问题（感谢 @lin_yeqi gitee issues i6vub7 ）\n\n----------------------------------------\n\n\n# 2.10.39 (2023-04-04)\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 资产管理机器管理单个分配工作空间无法正常使用（感谢@咻咻咻秀啊）\n 2.  【server】修复 资产管理相关权限、操作日志无法记录问题（感谢@咻咻咻秀啊）\n 3.  【server】修复 docker 控制台 、日志无法正常使用\n 4.  【server】优化 docker 控制台页面布局优化，支持单独查看 docker-compose\n 5.  【server】优化 docker 实时查看日志支持配置是否显示时间戳\n 6.  【server】修复 查看文件发布详情节点名称未显示\n 7.  【server】优化 发布记录重建不能选中节点\n 8.  【server】修复 构建同步到文件管理中心失败（感谢@破冰）\n 9.  【server】优化 登录成功主动刷新菜单缓存、切换账号登录工作空间无权限页面白屏（感谢@a、@零壹）\n 10. 【all】更名 变更包名为 org.dromara.jpom\n 11. 【server】修复 编辑 docker 导入证书弹窗无法正常显示问题（感谢@左手生活，右手浪漫）\n 12. 【server】修复 工作空间中资产管理相关页面搜索无数据时出现操作引导提示（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38 (2023-03-31)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 证书管理全部迁移到服务端统一导入 （感谢@.）\n 2. 【server】新增 节点项目支持导入，导出（感谢@酱总）\n 3. 【server】新增 支持 oauth2 登录（maxkey、gitee、github） （感谢 @maxkeytop gitee pr 183 、@a）\n 4. 【all】新增 文件管理发布支持发布到节点指定目录\n 5. 【server】新增 构建新增配置排除发布目录表达式（感谢@毛毛虫）\n 6. 【all】新增 节点脚本支持全局共享（感谢@奇奇）\n 7. 【server】新增 构建状态新增队列等待，用于标记当前构建存于线程排队中（感谢@酱总）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 清理单项构建历史保留个数只判断（构建结束、发布中、发布失败、发布失败）有效构建状态，避免无法保留有效构建历史（感谢@张飞鸿）\n 2.  【server】优化 节点监控超时时间调整为 30 秒（避免 windows 服务器频繁超时）（感谢@波比）\n 3.  【server】优化 打开节点管理页面不刷新节点列表\n 4.  【agent】修复 未配置节点白名单时直接创建分发项目报错（感谢@奋起的大牛）\n 5.  【server】修复 ssh 关联工作空间的授权目录无法取消\n 6.  【server】优化 查看分发项目状态取消折叠 table，调整为独立页面\n 7.  【server】优化 逻辑节点没有显示快速安装按钮问题（感谢@酱总）\n 8.  【server】优化 docker tls 证书全部迁移到证书管理，配置证书支持快捷选择 （感谢@.）\n 9.  【server】修复 仓库 ssh 协议配置超时时间无法正常拉取代码（感谢@毛毛虫）\n 10. 【server】优化 环境管理页面支持查看间隔任务统计信息\n 11. 【server】优化 令牌导入仓库模块统一调整为模板配置（部分方式不支持搜索）（感谢@魏宏斌）\n 12. 【agent】优化 dsl 项目报警内容添加状态消息（感谢@核桃）\n 13. 【server】优化 服务端脚本支持配置全局共享（感谢@酱总）\n 14. 【server】优化 删除管理脚本中的 -xx:+aggressiveopts 参数 （感谢 @牛孝祖 gitee issues i6punm ）\n 15. 【all】升级 springboot、hutool、fastjson2、svnkit 版本\n 16. 【server】修复 资产管理 ssh 分组不生效问题（感谢@a）\n 17. 【server】优化 构建详情页面布局（构建触发器、查看构建历史）\n 18. 【server】优化 新增构建状态描述来记录构建异常信息\n 19. 【server】优化 构建页面新增卡片布局方式\n 20. 【server】修复 ssh 分组无法正常搜索、排序异常（感谢@a）\n 21. 【server】优化 构建命令支持引用脚本模板内容（便于复杂构建命令管理）（感谢@毛毛虫）\n 22. 【server】新增 构建状态新增队列等待，用于标记当前构建存于线程排队中（感谢@酱总）\n 23. 【server】修复 创建构建选择命令模板无法修改（感谢@定格）\n 24. 【server】优化 构建新增配置是否发布隐藏文件属性（感谢@简单）\n\n\n# ⚠️ 注意\n\n 1. 如果节点已经配置过项目文件下载远程地址白名单需要统一配置到服务端的工作空间的白名单。\n 2. 已经配置节点项目远程下载白名单将保留只读，不做实际判断\n 3. 构建触发器变动，发生异常时 type 为 error,并且新增：statusmsg 字段\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 节点管理证书管理取消上传编辑功能（保留查询删除功能）\n 2. 【agent】取消 节点白名单配置取消 ssl 证书路径配置\n 3. 【agent】取消 节点项目文件下载远程文件白名单统一调整到服务端白名单配置\n\n----------------------------------------\n\n\n# 2.10.37 (2023-03-21)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 文件中心添加别名码来为文件进行分类下载，构建添加别名码可以同步到文件中心 （感谢 @大灰灰大 gitee issues i6ouc8 ）\n 2. 【server】新增 服务端在线升级支持配置 beta 计划（”妈妈“再也不用担心没有稳定版了）（感谢@罗俊）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 容器构建 maven 插件版本错误提示可用版本号，如果构建容器已经存在则忽略远程版本（感谢@大灰灰）\n 2. 【server】优化 脚本列表显示脚本 id，方便快速查看复制 （感谢 @大灰灰大 gitee issues i6oudt ）\n 3. 【server】优化 文件管理列表显示，小屏幕部分字段被隐藏（感谢@tinsang）\n 4. 【server】优化 docker 拉取镜像自动解析 tag，避免拉取所有镜像，如果没有配置 tag 默认使用 latest（感谢@again... .）\n 5. 【server】修复 数据库迁移到 mysql 报错（字段不存在）（感谢@轩辕豆豆）\n 6. 【server】修复 节点统计页面错乱问题 （感谢 @轩辕豆豆 gitee issues i6oysu ）\n\n----------------------------------------\n\n\n# 2.10.36 (2023-03-20)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】优化 缓存管理统一全局任务刷新\n 2. 【server】优化 修复数据关联的工作空间id sql（避免 '' 或者 'null' 无法修复）\n 3. 【server】优化 支持手动清理错误工作空间 id 的数据\n 4. 【server】修复 构建 git 仓库无法正常获取问题（感谢@小翼哥）\n\n----------------------------------------\n\n\n# 2.10.35 (2023-03-20)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 mysql 数据库无法正常加载\n\n----------------------------------------\n\n\n# 2.10.34 (2023-03-20)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理 ssh 管理支持导入导出数据（感谢@吃葫芦娃的土拨鼠）\n 2. 【server】新增 文件管理中心（用于统一存储管理公共文件）\n 3. 【server】新增 仓库令牌导入支持 gogs （gogs 和 gitea 标准一致） （感谢 @爱琳琳真是太好了 gitee issues i6crps ）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 构建 ssh 发布上传文件执行输出上传进度\n 2.  【server】优化 在线构建产物支持同步到文件管理中心\n 3.  【server】优化 节点分发、在线构建 webhook 添加 triggeruser 参数（感谢@酱总）\n 4.  【server】优化 ssh 文件夹管理支持重命名文件夹（感谢@零壹）\n 5.  【server】优化 机器名称和 hostname、ssh 机器名称和 hostname 限制字段长度\n 6.  【server】优化 dsl 项目支持解析多 pid ：running:109,205:8080,8082（感谢@酱总）\n 7.  【server】优化 缓存管理页面支持查看运行中的线程同步器、正在构建的id\n 8.  【server】优化 ssh 脚本批量执行采用线程同步器执行（避免线程数大于 cpu 核心数）\n 9.  【server】优化 构建 ssh 发布命令响应方式调整为逐行（避免长时间没有任何信息输出）\n 10. 【server】优化 资产管理支持批量分配到工作空间\n\n\n# ⚠️ 注意\n\n 1. 【server】节点管理和项目管理菜单合并到一个菜单\n 2. 【server】节点统计页面合并到逻辑节点中不同视图模式查看\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消 低版本（2.9.x 及其以下）的构建触发器 token 自动同步为新版本\n\n----------------------------------------\n\n\n# 2.10.33 (2023-03-16)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 ssh 基础信息监控（非报警监控）\n 2. 【agent】新增 dsl 项目支持解析端口号：running:109:8080,8082 （感谢 @大灰灰大 gitee issues i6n35h ）\n 3. 【server】新增 用户支持自定义工作空间名，排序 （感谢@酱总）\n 4. 【server】新增 节点分发项目支持排序，设置项目启用/禁用状态（感谢@酱总）\n 5. 【server】新增 节点分发支持手动释放删除指定项目\n 6. 【server】新增 docker 镜像创建容器新增 runtime 参数\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 插件端在线升级页面无法正常使用（调用到服务端在线升级接口）\n 2. 【server】优化 节点在线升级统一管理避免出现 null\n 3. 【server】修复 节点信息编码在部分接口出现 npe （感谢@酱总）\n 4. 【server】优化 工作空间中不存在资产管理相关的数据添加默认缺省页（仅管理员显示）\n 5. 【server】优化 支持手动释放节点项目的分发属性\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 节点进程列表显示 jpom 项目名\n\n\n# ⚠️ 注意\n\n 1. 【server】优化 在线工具菜单更名为其他管理\n\n----------------------------------------\n\n\n# 2.10.32 (2023-03-14)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 mysql 数据库因为字段长度问题初始化失败（感谢@xuejun）\n\n----------------------------------------\n\n\n# 2.10.31 (2023-03-14)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 未配置节点编码方式无法正常保存问题（感谢@初凡 ³）\n\n----------------------------------------\n\n\n# 2.10.30 (2023-03-14)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 插件端支持配置发送请求消息编码方式（编码、混淆明文、规避防火墙） （感谢 @mr_loyal gitee pr 179 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 导入 gitea 仓库搜索、分页无法正常使用问题 （感谢 @smith gitee pr 175 gitee pr 174 ）\n 2.  【server】优化 镜像启动容器不填写运行命令行导致容器启动失败（部分低版本） （感谢 @失落的世界 gitee pr 176 ）\n 3.  【server】修复 节点分发 webhook 输入框的错别字（感谢 @大灰灰 ）\n 4.  【server】修复 工作空间环境变量操作日志记录错误问题\n 5.  【all】更新 fastjson2 版本\n 6.  【all】优化 ssh 命令脚本、服务端脚本、插件端脚本执行参数优化 （感谢 @大灰灰大 gitee issues i6ipdy ）\n 7.  【server】优化 导入仓库页面提示信息错乱（感谢@零壹）\n 8.  【agent】修复 项目修改路径为子目录时 mv 文件触发死循环（感谢@d¹⁹⁹¹）\n 9.  【server】修复 查询构建日志可能出现 npe 问题 （感谢 @tom xin gitee issues i6mx9g ）\n 10. 【server】优化 系统缓存页面显示当前服务器时间、时区信息\n 11. 【server】修复 还原数据后备份状态错误问题 （感谢 @lin_yeqi gitee issues i6mvl7 ）\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 command_info 表 type 字段\n\n\n# ⚠️ 注意\n\nssh 命令脚本、服务端脚本、插件端脚本默认参数规则变化：参数描述将必填，默认参数在手动执行时无法删除并且可以查看对应参数描述\n\n----------------------------------------\n\n\n# 2.10.29 (2023-03-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 导入仓库支持 gitea 系统 （感谢 @smith gitee pr 173 ）\n 2. 【server】新增 用户登录日志（取消用户登录生成操作日志的执行日志）\n 3. 【server】新增 在线工具验证 cron 表达式 （感谢@奇奇）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 ssh 并发执行脚本引起脚本丢失错误（感谢@墨汁）\n 2.  【server】优化 docker 编辑无法连接提示异常详情信息（感谢@章强）\n 3.  【agent】优化 节点分发配置白名单到插件端需要验证合法性\n 4.  【server】优化 docker 创建容器忽略未配置存储选项参数（感谢@d¹⁹⁹¹）\n 5.  【server】优化 docker 管理裁剪功能独立菜单\n 6.  【server】修复 资产管理未记录操作日志的问题\n 7.  【server】优化 操作日志存储用户名、工作空间名字段\n 8.  【server】优化 容器构建查询可用标签容器相关提示\n 9.  【server】优化 构建历史列表页面在小屏幕数据显示不全 （感谢 @一只羊 gitee issues i6lla0 ）\n 10. 【server】修复 在线构建发布到集群无法正常选择集群服务（感谢@心光）\n\n----------------------------------------\n\n\n# 2.10.28 (2023-03-08)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目触发器新增 filechange 事件（文件变动对应触发点：上传、删除、远程下载、编辑、新增目录或者文件、重命名） （感谢 @胡明 gitee issues i6kkek ）\n 2. 【server】新增 镜像创建容器支持配置存储选项（感谢@topsuder、@章强）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 新增 docker 无法使用在线构建功能 （感谢 @失落的世界 gitee issues i6ktlq ）\n 2. 【server】优化 项目文件列表支持前端排序（文件大小、修改时间）\n 3. 【server】优化 关闭程序时依次关闭线程池\n 4. 【server】优化 工作空间环境变量开放给普通用户编辑\n\n\n# ⚠️ 注意\n\n插件端需要同步升级，否则项目文件列表排序无法正常使用\n\n----------------------------------------\n\n\n# 2.10.27 (2023-03-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理新增 docker 、集群管理\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】升级 springboot 版本\n 2. 【server】优化 系统自动同步 docker 已经安装的集群信息\n 3. 【server】更新 mysql maven 坐标：mysql-connector-j\n 4. 【server】修复 构建产物模糊匹配二级剔除配置 / 无效\n\n\n# ⚠️ 注意\n\n新增 docker 资产管理,系统会自动将已经存在的 docker 信息根据 host 去重同步到资产管理中（如果 host 存在多个工作空间将根据最后更新时间排序使用最新的一条数据）\n\n更新后 docker、集群列表中状态如果出现：信息丢失 表示关联数据存在异常不能正常使用，需要删除对应数据重新关联\n\n----------------------------------------\n\n\n# 2.10.26 (2023-03-03)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 初始化数据库未删除完整问题（感谢@酱总）\n 2. 【server】优化 日志阅读选项卡 tab 名称添加项目名称（感谢@tinsang）\n\n----------------------------------------\n\n\n# 2.10.25 (2023-03-03)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建历史新增产物文件大小\n 2. 【all】新增 机器安装 id 文件（请勿删除数据目录 install.json 文件）\n 3. 【agent】新增 插件端新增虚拟内存和交互内存监控趋势\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建发布完成，自动删除压缩包文件（节省空间占用大小）（感谢@轩辕豆豆）\n 2. 【server】修复 更新构建历史环境变量失败\n 3. 【server】取消 ssh 脚本命令参数描述（避免误导用户） （感谢 @大灰灰大 gitee issues i6ipdy ）\n 4. 【server】优化 编辑项目文件回显错乱问题\n 5. 【server】优化 日志阅读菜单更名日志搜索\n 6. 【server】优化 差异构建时，触发取消构建标记构建状态为构建中断 （感谢@张飞鸿）\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 弃用表 node_stat\n 2. 【server】删除 弃用表 systemmonitorlog\n 3. 【server】删除 相关表中的 strike 字段\n\n\n# 2.10.24 (2023-03-01)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 在线构建容器镜像构建参数和镜像标签支持解析环境变量\n 2. 【server】优化 替换环境变量，支持 $xxx ${xxx} （感谢@大锅饭集团）\n 3. 【server】修复 配置节点分发白名单报错 （感谢@酱总）\n 4. 【server】优化 节点分发配置【配置管理-白名单配置】菜单移动到功能管理中【项目管理-分发白名单】\n 5. 【server】修复 非管理员无法使用 ssh 终端问题 （感谢 @lilinlue gitee issues i6irjv ）\n\n\n# ⚠️ 注意\n\n节点分发白名单可能失效，需要重新配置\n\n----------------------------------------\n\n\n# 2.10.23 (2023-03-01)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 控制台输出工作空间关联数据错误未关联的表和条数\n 2. 【server】新增 资产管理-ssh管理\n 3. 【server】新增 构建 ssh 发布支持配置发布前执行命令 （感谢@daniel）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 使用 ant 产物目录会自动生成模糊匹配表达式文件夹（感谢@leonchen21）\n 2. 【server】修复 启动时候未自动触发修复数据逻辑\n 3. 【server】修复 ssh 文件管理二级目录以下无法重命名\n 4. 【server】优化 ssh 配置授权目录、允许编辑文件后缀、禁止命令移动到资产管理中\n 5. 【all】优化 ssh文件、项目文件允许编辑文件的后缀支持配置 * (前提编辑格式统一)\n 6. 【server】优化 升级 docker-java 、svnkit 依赖版本\n 7. 【server】优化 ssh 支持清空隐藏字段\n\n\n# ⚠️ 注意\n\n由于新增 ssh 资产管理，之前ssh 配置如果引用的工作空间变量的配置信息可能将失效（作用域不同）. 如果任需要变量信息还需要将对应的信息迁移到全局变量中才可以正常使用\n\n----------------------------------------\n\n\n# 2.10.22 (2023-02-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 仓库新增配置超时属性（避免仓库拉取代码超时）（感谢 @阿超 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 容器构建无法下载产物（感谢@张飞鸿）\n\n----------------------------------------\n\n\n# 2.10.21 (2023-02-23)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 容器构建自动删除构建容器\n 2. 【server】优化 系统管理菜单名：变更为插件端配置，服务端配置 （感谢@ccx2480）\n 3. 【server】修复 机器管理节点配置同步获取信息错乱（使用到服务端配置）（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.10.20 (2023-02-23)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】修复 插件端验证项目白名单路径失败（感谢@ccblandy）\n\n----------------------------------------\n\n\n# 2.10.19 (2023-02-22)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建缓存插件支持按照 path 全局缓存 type: global\n 2. 【server】新增 容器构建缓存插件支持缓存 node_modules mode: copy (避免出现：https://github.com/npm/cli/issues/3669)\n 3. 【server】新增 构建列表新增批量构建 （感谢 @爱笑的眼睛 gitee issues i6gnv2 ）\n 4. 【server】新增 机器管理新增查看关联节点功能\n 5. 【server】新增 机器新增网络、硬件硬盘查看\n 6. 【server】新增 机器管理列表新增表格视图\n 7. 【server】新增 手动分发文件、构建分发弹窗新增筛选指定项目进行分发 （感谢 @smith gitee issues i6gqng ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 构建读取附件环境变量时机调整到 pull 后\n 2. 【agent】优化 白名单路径原样保存（避免部分安全组件拦截）\n 3. 【server】修复 编辑机器分组名失效问题\n 4. 【server】优化 工作空间菜单配置由系统管理移动到工作空间列表管理中\n 5. 【server】优化 节点白名单配置分发功能移动到机器管理表格视图中（模板节点）\n 6. 【server】优化 节点配置分发功能移动到机器管理表格视图中（模板节点）\n\n----------------------------------------\n\n\n# 2.10.18 (2023-02-20)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理->机器管理\n 2. 【server】新增 配置属性：jpom.node.stat-log-keep-days（节点统计日志保留天数）\n 3. 【all】新增 机器节点硬盘信息统计\n 4. 【all】新增 机器节点网络流量信息统计\n 5. 【server】新增 构建触发器新增获取构建日志接口 （感谢 @黑黑 gitee issues i6g0at ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】更名 节点列表更名逻辑节点\n 2. 【server】修复 节点分发编辑 webhook 字段回显（感谢@酱总）\n 3. 【server】优化 在线升级统一机器管理（无需切换工作空间）\n 4. 【server】优化 节点管理>在线升级菜单移动到机器管理中\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 node_info unlocktype 字段\n 2. 【server】取消 节点解绑功能\n 3. 【server】停止 使用 node_stat 表（暂时保留相关数据）\n 4. 【server】替代 machine_node_stat_log 表替代 systemmonitorlog 表（并暂时保留 systemmonitorlog 数据）\n\n\n# ⚠️ 注意\n\n由于新增机器管理，程序将自动同步节点表中的所有数据以节点地址去重后保存到机器表中，如果同一个节点地址出现多条数据（节点存在不同的工作空间）将跟进节点更新时间最新的为准\n\n插件端需要同步更新，否则节点状态、机器状态为：状态码错误\n\n如果更新当前版本后出现节点授权码错误：可能原因是之前同一个机器添加多个节点到不同的工作空间并且最后更新的节点中保存的授权信息是错误，导致数据自动同步后仍然是错误的授权信息\n\n----------------------------------------\n\n\n# 2.10.17 (2023-02-16)\n\n 1. 【server】新增 构建配置新增严格执行命令模式（判断命令执行状态码是否为0） （感谢@阿克苏市姑墨信息科技有限公司） gitee pr 169 ）\n 2. 【server】新增 节点分发新增 webhook 配置属性（感谢@酱总）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 构建产物配置单属性时，二次匹配不能匹配到文件问题 （感谢 @伤感的风铃草 gitee issues i6fets ）\n 2. 【server】优化 构建历史回滚输出相关操作日志（感谢@酱总）\n 3. 【server】修复 windows 容器构建无法上传文件到容器问题\n\n----------------------------------------\n\n\n# 2.10.16 (2023-02-14)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 docker 列表支持跨工作空间同步 （感谢 @清风柳絮ii号 gitee issues i6eoir ）\n 2. 【server】新增 构建历史保存构建环境变量（为回滚流程使用）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】优化 解压工具支持多种编码格式（gbk、utf8）（感谢@again... . ）\n 2. 【server】优化 在线构建新增配置文件环境变量测试（build_config_branch_name）(感谢@阿克苏市姑墨信息科技有限公司)\n 3. 【server】修复 节点分发回滚 npe （感谢@酱总）\n 4. 【server】优化 构建弹窗部分下拉支持手动刷新数据（感谢@张飞鸿）\n\n----------------------------------------\n\n\n# 2.10.15 (2023-02-13)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建 pull 流程之后新增 build_commit_id 变量\n 2. 【server】新增 执行脚本输出可用环境变量（服务端脚本、节点脚本、ssh 脚本、在线构建 pull 成功之后、构建事件脚本）\n 3. 【server】新增 构建确认弹窗新增配置构建环境变量\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 节点分发二级路径不能删除问题（感谢@张飞鸿）\n 2. 【agent】优化 服务端环境隐私变量字段传递到插件端（已经存在的插件端环境变量默认为隐私变量）\n 3. 【agent】修复 dsl 项目模式 status 事件写入日志编码格式跟随系统配置,避免编码格式不正确（已经存在的日志文件可能会乱码,可以删除文件解决）\n 4. 【server】优化 提前构建加载附加环境变量（startready 事件）\n 5. 【agent】优化 节点进程列表、内存、cpu、硬盘加载方式采用 oshi\n 6. 【server】优化 在线升级页面新版本检测支持本地网络检测\n\n\n# ⚠️ 注意\n\n插件端需要同步更新，否则节点首页进程列表数据将不能正常显示\n\n----------------------------------------\n\n\n# 2.10.14 (2023-02-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建状态新增构建中断（执行事件脚本返回中断构建）\n 2. 【server】新增 构建事件脚本支持返回指定关键词中断构建（需要执行事件脚本输出的最后一行，interrupt $type）\n 3. 【server】新增 构建触发器将请求参数传入构建环境变量（triggercontenttype、triggerbodydata）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 构建产物为文件夹打包位置优化（避免存放位置错乱）\n 2.  【server】修复 构建触发修改构建产物路径未验证 slip 问题\n 3.  【server】优化 本地构建产物模糊匹配（ant path）支持配置截取路径、合并文件\n 4.  【server】优化 构建日志输出信息（部分调整为中文、消息标签和级别）\n 5.  【server】优化 切换工作空间刷新菜单（感谢@ccx2480）\n 6.  【server】优化 用户密码提示改为弹窗并且可以快捷复制\n 7.  【agent】修复 保存 dsl 项目判断是否存在 status 节点,避免无法删除情况（感谢@张飞鸿）\n 8.  【agent】修复 节点项目修改路径移动文件不生效问题\n 9.  【agent】取消 编辑项目校验目录存在情况\n 10. 【server】优化 项目id、节点分发id 支持前端快捷生成\n 11. 【server】优化 构建执行事件脚本描述匹配支持 all 关键词 (匹配所有事件)\n 12. 【server】修复 执行脚本文件的换行符合跟随系统，避免 windows 中出现异常\n 13. 【server】优化 解绑操作提示弹窗更明确（减少误操作）（感谢@酱总）\n\n\n# ⚠️ 注意\n\n如果使用到产物模糊匹配的请关注是否需要重新调整匹配符。\n\n新版本匹配符支持配置三个属性：\n\n属性1:属性2[可选]:属性3[可选]\n\n属性1：为模糊匹配的表达式 ( ant-style )\n\n属性2：匹配到的文件保留方式，可用值：keep_dir、same_dir。（大小写均兼容、配置错误默认为 keep_dir）\n\nkeep_dir: 保留匹配到的文件的文件层级\n\nsame_dir: 将匹配到的文件均保留到同一个层级（合并到一个文件夹下）。慎用该方式，如果多目录存在相同的文件名会出现合并后只保留匹配到的最后一个文件\n\n属性3： 需要剔除匹配到多级文件夹的指定目录,(可以配置为空)。建议配合属性2的keep_dir使用。剔除目录可以理解为二次过滤前缀匹配文件\n\n# 🌰 举个栗子\n\n# 栗子1： /web*/**/*.html:keep_dir:/web2/\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\na.html\n/b/a.html\n\n\n1\n2\n\n\n# 栗子2： /web*/**/*.html:same_dir:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且合并文件到同一个目录，最后发布时候需要剔除 /web2/\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\nweb1.html\na.html\nt.html\n\n\n1\n2\n3\n\n\n# 栗子3： /web*/**/*.html:keep_dir:\n\n表示匹配执行构建后，对应目录下的：已 web 开头的目录下面的所有 html 文件，并且保留文件夹层级关系，最后发布时候按照原目录结构发布\n\n假设：目录下有如下文件\n\n/vue/vue.html\n/web/web1.html\n/a/b/t.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n5\n6\n\n\n执行匹配后的文件\n\n/web/web1.html\n/web2/a.html\n/web2/b/a.html\n/web1/aa/t.html\n\n\n1\n2\n3\n4\n\n\n----------------------------------------\n\n\n# 2.10.13 (2023-02-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 项目支持配置分组属性，方便项目列表筛选 （感谢 @hjk2008 gitee issues i63pen ）\n 2. 【server】新增 节点分发支持配置分组属性，方便列表筛选\n 3. 【agent】新增 dsl 项目支持配置自定义备份路径 （感谢 @陈旭 gitee issues i57zkj ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】修复 linux 无法正常安装 service （感谢@山上雪）\n 2. 【server】优化 构建的节点分发模式增加二级目录 （感谢 @爱琳琳真是太好了 gitee issues i6dnmx ）\n 3. 【server】优化 构建不保留产物时自动删除产物为目录时的压缩包文件\n 4. 【server】优化 构建状态等待节点分发完成（阻塞执行节点分发）\n 5. 【server】修复 构建选择节点分发并关闭保留产物，会导致分发失败。 （感谢 @爱琳琳真是太好了 gitee issues i6dii6 ）\n 6. 【server】修复 构建分发为节点分发，产物为文件时导致的不能回滚 （感谢 @smith gitee issues i6dnsm ）\n 7. 【server】优化 定时构建支持配置禁用表达式，方便临时关闭定时执行 （感谢 @阿超 gitee issues i6dnbw ）\n 8. 【server】修复 dsl 项目配置文件备份数量不生效问题\n\n\n# ⚠️ 注意\n\nlinux 环境 已经安装的需要手动更新一下服务管理脚本\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso service.sh https://gitee.com/dromara/jpom/raw/master/modules/server/src/main/bin/service.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso service.sh https://gitee.com/dromara/jpom/raw/master/modules/agent/src/main/bin/service.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.12 (2023-01-29)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 在线终端断开连接时提醒并支持重连\n 2. 【server】修复 线程同步器，避免任务过多造成线程数不可控（节点分发相关功能）\n 3. 【server】优化 前端打包取消 .map 文件，缩少发布包大小 （感谢 @金技 gitee issues i6ak0n ）\n 4. 【all】优化 分片上传文件名采用分片序号（伪装文件后缀）（感谢@冷月）\n 5. 【all】优化 分片上传文件签名由 sha1 改为 md5 提升效率\n 6. 【server】优化 构建历史页面鼠标移到名称下拉项显示文字 （感谢 @伤感的风铃草 gitee pr 167 ）\n 7. 【all】修复 日志监听器 catch 异常日志造成会话未自动删除问题 （感谢 @金技 gitee issues i6a5qw ）\n 8. 【server】修复 仓库地址 https 证书验证问题（自动忽略验证） （感谢 @arstercz github issues 32 ）\n\n\n# ⚠️ 注意\n\n 1. 插件端需要同步升级，否则不能正常使用节点上传文件相关功能\n\n----------------------------------------\n\n\n# 2.10.11 (2023-01-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 系统缓存新增分片操作数查看\n 2. 【server】新增 节点分片上传支持配置并发数：jpom.node.upload-file-concurrent\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 迁移数据添加更多日志输出\n 2. 【server】优化 分片上传解析文件数据采用分片形式，避免大文件造成浏览器奔溃\n 3. 【server】优化 插件端在线升级管理页面错误信息提示由弹窗改到对应节点\n 4. 【server】修复 迁移数据出现监控报警记录表字段不全问题 （感谢@loyal）\n 5. 【server】修复 迁移系统参数表中的 sync_trigger_token 数据重复问题（感谢@loyal）\n 6. 【server】优化 取消迁移数据忽略处理（避免默认工作空间名称不迁移）（感谢@loyal）\n 7. 【server】优化 获取项目运行状态失败弹窗提醒改为单条数据异常提醒\n 8. 【server】优化 服务端项目管理项目列表获取运行状态改为并发执行,缩短加载时间\n 9. 【server】优化 分片上传文件中文件选择器禁用\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消 监控记录实体中的 logid 字段 （感谢@loyal）\n 2. 【all】取消 启动时候判断重复启动\n\n----------------------------------------\n\n\n# 2.10.10 (2023-01-09)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 在线升级是否允许降级操作配置属性jpom.system.allowed-downgrade\n 2. 【server】新增 分发整体状态新增分发失败\n 3. 【server】新增 构建日志显示进度折叠率配置：jpom.build.log-reduce-progress-ratio\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 mysql 环境非allowmultiqueries初始化表结构失败（感谢@丿幼儿园逃犯）\n 2.  【server】修复 部分表字段缺失问题（strike）\n 3.  【server】优化 迁移数据到 mysql 字段大小写跟随实体（感谢@丿幼儿园逃犯）\n 4.  【server】修复 导入数据库备份文件目录不存在时报错（感谢@丿幼儿园逃犯）\n 5.  【all】优化 节点上传项目文件采用分片上传、并且支持进度显示\n 6.  【all】优化 在线升级上传项目包采用分片上传、并且支持进度显示\n 7.  【all】优化 在线升级，默认禁止降级操作\n 8.  【server】优化 节点分发上传文件采用分片上传、并且支持进度显示\n 9.  【server】优化 分发单项的状态信息存储于日志记录中（取消 json 字段存储）\n 10. 【server】优化 节点分发子项展示逻辑（同步改异步加载,避免长时间加载）\n 11. 【server】优化 构建日志输出各个流程耗时\n 12. 【server】优化 构建发布项目文件采用分片上传、并且支持进度显示\n 13. 【agent】优化 配置文件中上传文件大小限制由 1g 改为 10mb 节省插件端占用内存大小（采用分片代替）\n 14. 【server】优化 手动上传的节点分发文件将自动删除，节省存储空间\n 15. 【server】优化 节点分发日志支持显示进度信息\n\n\n# ⚠️ 注意\n\n 1. 插件端需要同步升级，否则节点分发项目无法显示项目名称\n 2. 插件端需要同步升级，否则会出现部分接口 404 或者参数不正确的情况\n 3. 建议升级验证上传项目文件无问题后，将插件端上传文件大小限制配置属性大改小\n 4. spring.servlet.multipart.max-file-size=5mb\n 5. spring.servlet.multipart.max-request-size=20mb\n\n如果需要使用 mysql 存储，则需要修改配置\n\n 1. 修改 jpom.db.mode 为 mysql\n 2. 修改 jpom.db.url 为您 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1: 3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false)\n 3. 修改 jpom.db.user-name 为对应 mysql 账户\n 4. 修改 jpom.db.user-pwd 为对应 mysql 密码\n\n如果您需要迁移之前 h2 数据库中的数据到 mysql（需要先将 mysql 的连接信息配置好后才能迁移）\n\nbash ./bin/server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n\n1\n2\n\n\n----------------------------------------\n\n\n# 2.10.9 (2023-01-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 服务端数据存储支持 mysql\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 在线编辑配置文件保存并修改数据库密码问题\n 2. 【server】三次修复 在线终端输入部分字符后自动断开连接问题\n 3. 【server】升级 svnkit 依赖版本\n 4. 【server】优化 docker 标签查询精准查询\n 5. 【server】更名 阅读文件更名为跟踪文件\n\n\n# ❌ 不兼容功能\n\n 1. 【server】删除 数据库中多个数据表中弃用字段\n\n\n# ⚠️ 注意\n\n如果需要使用 mysql 存储，则需要修改配置：\n\n 1. 修改 jpom.db.mode 为 mysql\n 2. 修改 jpom.db.url 为您 mysql 的 jdbc 地址( jdbc:mysql://127.0.0.1: 3306/jpom?useunicode=true&characterencoding=utf-8&usessl=false)\n 3. 修改 jpom.db.user-name 为对应 mysql 账户\n 4. 修改 jpom.db.user-pwd 为对应 mysql 密码\n\n如果您需要迁移之前 h2 数据库中的数据到 mysql（需要先将 mysql 的连接信息配置好后才能迁移）\n\nbash ./bin/server.sh restart -15 --h2-migrate-mysql --h2-user=jpom --h2-pass=jpom\n\n\n\n1\n2\n\n\n----------------------------------------\n\n\n# 2.10.8 (2023-01-05)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】优化 程序运行的 tmp 文件夹（java.io.tmpdir）跟随项目目录\n 2. 【all】优化 判断目录越级 checkslip 目录转义至 tmpdir，避免在用户目录生成空白文件夹\n\n\n# ❌ 不兼容功能\n\n 1. 【all】取消 程序启动写入全局临时信息\n 2. 【server】取消 服务端没有节点自动探测本地节点功能\n\n\n# ⚠️ 注意\n\nlinux、windows 环境 已经安装 2.10.0 ~ 2.10.7 的需要手动更新一下管理脚本\n\n> 建议先更新脚本再升级插件端或者服务端\n> \n> windows 用户需要自行下载脚本替换\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso server.sh https://gitee.com/dromara/jpom/raw/master/modules/server/src/main/bin/server.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso agent.sh https://gitee.com/dromara/jpom/raw/master/modules/agent/src/main/bin/agent.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.7 (2023-01-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 配置管理新增配置目录在线编辑功能\n 2. 【server】新增 容器构建新增 ubuntu-git 镜像\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 在线终端输入部分字符后自动端口连接问题（感谢 @again.... ）\n 2. 【server】修复 执行 ssh 脚本未正常加载环境变量问题\n 3. 【server】修复 快速安装(绑定)插件端的命令特殊字符转义问题 （感谢@张飞鸿）\n 4. 【server】优化 节点在线升级确认操作提醒要升级的目标版本号（感谢@木迷榖）\n 5. 【server】优化 modal 弹窗新增 destroyonclose , 优化页面卡顿和组件样式冲突\n 6. 【server】修复 windows nginx 配置文件编辑白名单路径非绝对路径时出现名称错误\n\n\n# ❌ 不兼容功能\n\n 1. 【server】下架 构建配置管理功能（请使用配置目录管理功能代替）\n\n----------------------------------------\n\n\n# 2.10.6 (2022-12-29)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 上传项目文件，下载远程文件 压缩包支持自动剔除文件夹\n 2. 【server】新增 节点分发新增手动取消分发任务功能 （感谢 @gxw gitee issues i61sbb ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 ssh 终端 jsch 新增日志实现，方便排查问题\n 2. 【agent】优化 部分下载接口取消返回值，避免控制台出现错误日志\n 3. 【server】优化 服务端代理插件端的 websocket 超时问题\n 4. 【server】修复 在线终端输入部分字符后自动端口连接问题（感谢 @again.... ）\n 5. 【server】修复 部分下拉框无法正常搜索文件（感谢 @again.... ）\n 6. 【agent】优化 同时上传相同的文件名时可能异常\n 7. 【server】优化 节点分发状态新增（等待分发、手动取消状态）\n 8. 【server】修复 状态为未分发时分发失败引起的状态错误\n\n----------------------------------------\n\n\n# 2.10.5 (2022-12-27)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 操作日志新增数据名称字段\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【agent】修复 项目文件夹不存在时不能下载远程文件\n 2.  【all】升级 fastjson 升级为 fastjson2\n 3.  【all】升级 springboot 2.7.7 、commons-compress\n 4.  【server】移除 空闲依赖 jaxb-api\n 5.  【all】优化 启动加载流程，保存顺序加载\n 6.  【all】修复 启动成功写入全局信息由于没有权限造成的异常 （感谢 @leonchen21 gitee issues i67c3c ）\n 7.  【server】优化 websocket 控制台操作日志记录\n 8.  【server】修复 超级管理的 websocket 操作日志记录工作空间不正确\n 9.  【agent】优化 插件端删除 spring-boot-starter-websocket 依赖\n 10. 【server】优化 服务端删除 java-websocket 依赖（采用统一模块管理）\n 11. 【server】修复 更新构建状态互斥，避免状态被异步更新冲突\n 12. 【server】优化 下载文件采用标签页面形式取消 blob\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消 兼容低版本插件端的 websocket 授权信息传输方式（低版本插件端请同步升级到最新）\n 2. 【server】取消 服务端取消向插件端传递操作人的用户名\n 3. 【server】取消 服务端数据库用户操作日志表对 reqid 字段兼容（2.9.1 以下）\n\n----------------------------------------\n\n\n# 2.10.4 (2022-12-23)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】修复 linux 管理脚本中的 pid 文件内容与真实进程不一致问题\n 2. 【all】恢复 linux 管理脚本支持创建服务管理\n\n\n# ⚠️ 注意\n\nlinux 环境 已经安装 2.10.3 ~ 2.10.0 的需要手动更新一下管理脚本\n\n> 需要创建服务来管理的需要更新后才能正常使用在线升级和保存配置并重启\n\n> 建议先更新脚本再升级插件端或者服务端\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso server.sh https://gitee.com/dromara/jpom/raw/master/modules/server/src/main/bin/server.sh\n\n\n1\n\n\ncurl -lfsso service.sh https://gitee.com/dromara/jpom/raw/master/modules/server/src/main/bin/service.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso agent.sh https://gitee.com/dromara/jpom/raw/master/modules/agent/src/main/bin/agent.sh\n\n\n1\n\n\ncurl -lfsso service.sh https://gitee.com/dromara/jpom/raw/master/modules/agent/src/main/bin/service.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.3 (2022-12-22)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 在线构建新增 packagefile 流程 编译 webhook 或者事件脚本调用\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 快速导入节点工作空间id undefined\n 2. 【server】修复 本地运行脚本默认找不到的情况\n 3. 【agent】优化 项目控制台日志文件默认编码格式判断系统 windows 默认 gbk,其他默认 utf-8 （感谢 @gf_666 gitee issues i66zzz ）\n 4. 【server】优化 在线构建 ssh 清空产物异常不标记发布异常\n\n\n# ⚠️ 注意\n\nlinux 环境 已经安装 2.10.2 ~ 2.10.0 的需要手动更新一下管理脚本，之前管理脚本存在部分场景日志输出错乱的问题\n\n> 建议先更新脚本再升级插件端或者服务端\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso server.sh https://gitee.com/dromara/jpom/raw/master/modules/server/src/main/bin/server.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso agent.sh https://gitee.com/dromara/jpom/raw/master/modules/agent/src/main/bin/agent.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.2 (2022-12-21)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】节点快速安装命令示例提供默认安装命令\n 2. 【server】修复 docker 插件未正常加载问题（感谢@顺子）\n 3. 【server】优化 本地构建命令执行方式由逐行改为脚本执行\n 4. 【server】修复 构建未配置 webhook 控制台报错\n 5. 【server】修复 构建未配置 webhook 不触发事件脚本\n\n\n# ❌ 不兼容功能\n\n 1. 【server】下架 ssh 上传文件安装插件端方式，采用快速安装命令代替\n 2. 【server】取消 构建命令和本地命令发布 不支持 #{} 变量替换\n 3. 【server】取消 ssh 命令模板 不支持 #{} 变量替换（仅支持 ${} 替换）\n\n----------------------------------------\n\n\n# 2.10.1 (2022-12-20)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 节点项目支持快速复制操作 （感谢@mt-mored gitee issues i653o3 ）\n 2. 【all】新增 节点项目、独立节点分发支持彻底删除\n 3. 【agent】新增 dsl 项目模式执行脚本支持节点环境变量 （感谢@苏生不语 gitee issues i66mnp ）\n 4. 【all】新增 构建项目发布、节点分发支持配置发布前先停止（避免 windows 环境文件被占用） （感谢 @yiziyu gitee issues i65ms1、@all-around-badass gitee issues i66pyu ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 节点分发菜单更名为项目管理\n 2. 【server】优化 节点分发添加项目限制数量由 2 调整为 1 （感谢@苏生不语 gitee issues i66r73 ）\n 3. 【server】修复 节点分发手动上传文件二级目录出现 undefined\n 4. 【agent】修复 默认项目模式执行命令存在 null 字符串\n 5. 【server】修复 初次安装服务端初始化数据库失败问题 （感谢@lg）\n 6. 【server】优化 日志显示组件（取消正则搜索），日志删除 ansi 颜色 （感谢@苏生不语 gitee issues i657jr ）\n 7. 【server】优化 编辑组件可能出现行错和内容错乱问题\n 8. 【server】优化 查看系统日志的多次切换内容返回错乱问题\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 dsl 项目脚本的 #{} 替换变量\n\n\n# ⚠️ 注意\n\nlinux 环境 已经安装 2.10.0 的需要手动更新一下管理脚本，2.10.0 管理脚本存在在线升级和在线重启日志输出重复问题\n\n> 建议先更新脚本再升级插件端或者服务端\n\n服务端：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso server.sh https://gitee.com/dromara/jpom/raw/master/modules/server/src/main/bin/server.sh\n\n\n1\n\n\n插件端 ：(需要到安装目录的 bin 下执行)\n\ncurl -lfsso agent.sh https://gitee.com/dromara/jpom/raw/master/modules/agent/src/main/bin/agent.sh\n\n\n1\n\n\n----------------------------------------\n\n\n# 2.10.0 (2022-12-19)\n\n\n# 🐣 新增功能\n\n 1. 【all】外置 logback 配置文件\n 2. 【server】服务端管理相关功能独立页面菜单\n 3. 【server】新增项目触发器用于管理项目状态\n 4. 【all】新增 构建项目发布支持配置发布到二级目录\n 5. 【server】新增 节点分发发布支持配置发布到二级目录\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】启动相关信息由控制台输出改为 logback\n 2. 【all】节点管理中 其他功能 菜单更名为 脚本管理\n 3. 【all】优化版本升级修改管理脚本里变量,采用文件记录方式\n 4. 【server】优化容器启动脚本，支持监听进程已经终端重启操作\n 5. 【server】修复 自动刷新页面已经关闭的标签页，后台仍然在发送请求 （感谢@苏生不语 gitee issues i664op ）\n 6. 【server】修正触发器说明错别字\n\n\n# ❌ 不兼容功能\n\n 1.  【server】取消支持 2.8.0 以下 json 文件转存数据库\n 2.  【all】下架 jdk 管理模块（请使用 dsl 项目模式代替）\n 3.  【all】下架 tomcat 管理模块（请使用 dsl 项目模式代替）\n 4.  【all】删除 项目内存监控页面\n 5.  【all】配置文件名称由 extconfig.yml 变更为 application.yml\n 6.  【all】调整项目打包目录结构\n 7.  【all】取消兼容低版本数据目录文件迁移（调试运行）\n 8.  【all】取消自动识别文件编码格式模块 auto-charset-jchardet\n 9.  【all】更新管理脚本，进程标识更新（已经存在的需要手动停止）\n 10. 【all】取消插件端配置化向服务端注册功能（采用快速导入方式替代）\n 11. 【server】取消服务端授权 token 配置\n 12. 【all】下架 节点脚本导入功能\n 13. 【server】取消限制创建用户最大数配置：user.maxcount\n 14. 【server】删除 node_info 表 cycle 字段\n 15. 【agent】删除项目回收记录功能\n\n\n# ❌ 不兼容的属性配置变更\n\n> 属性配置支持驼峰和下划线\n\n 1.  【agent】whitelistdirectory.checkstartswith -> jpom.whitelist-directory.check-starts-with\n 2.  【agent】project.stopwaittime -> jpom.project.statuswaittime\n 3.  【agent】project.* -> jpom.project.*\n 4.  【agent】修正拼写错误 log.*back* -> jpom.project.log.*backup*\n 5.  【agent】log.* -> jpom.project.log.*\n 6.  【agent】log.intireadline -> jpom.init-read-line\n 7.  【agent】 log.autobackconsolecron 不支持配置 none (none 使用 jpom.project.log.autobackuptofile 代替)\n 8.  【all】删除 consolelog.reqxss 、consolelog.reqresponse\n 9.  【all】consolelog.charset -> jpom.system.console-charset\n 10. 【server】node.uploadfiletimeout -> jpom.node.uploadfiletimeout\n 11. 【server】system.nodeheartsecond -> jpom.node.heartsecond\n 12. 【server】user.* -> jpom.user.*\n 13. 【server】jpom.authorize.expired -> jpom.user.tokenexpired\n 14. 【server】jpom.authorize.renewal -> jpom.user.tokenrenewal\n 15. 【server】jpom.authorize.key -> jpom.user.tokenjwtkey\n 16. 【server】jpom.webapitimeout -> jpom.web.api-timeout\n 17. 【server】删除 ssh.initenv\n 18. 【server】批量修正前端相关配置属性均修改到 jpom.web.*\n 19. 【server】db.* -> jpom.db.*\n 20. 【server】build.* -> jpom.build.*\n\n\n# ⚠️ 注意\n\n> 此版本为不兼容升级，需要手动升级修改相关配置才能正常使用\n\n# 简洁的升级流程\n\n 1. 停止正在运行的程序插件端或者服务端\n 2. 备份已经存在的插件端或者服务端的数据目录\n 3. 手动安装新版本 2.10.0+\n 4. 还原数据：将备份的数据目录迁移到新安装的数据目录（需要再未运行的状态下操作）\n 5. 重启程序\n\n详细的升级文档：https://jpom.top/pages/upgrade/2.9.x-to-2.10.x/\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2024/04/24, 00:47:48",lastUpdatedTimestamp:1713919668e3},{title:"2.11.x-beta",frontmatter:{title:"2.11.x-beta",date:"2023-12-29T09:24:53.000Z",permalink:"/pages/changelog/new-beta/",categories:["docs","更新日志","更新说明"],tags:["2.11.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/02.%E6%9C%80%E6%96%B0beta.html",relativePath:"日志&下载/01.更新日志/02.最新beta.md",key:"v-5204f37e",path:"/pages/changelog/new-beta/",headers:[{level:2,title:"2.11.12.1-beta (2025-07-30)",slug:"_2-11-12-1-beta-2025-07-30",normalizedTitle:"2.11.12.1-beta (2025-07-30)",charIndex:2},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.11.4-beta (2025-05-06)",slug:"_2-11-11-4-beta-2025-05-06",normalizedTitle:"2.11.11.4-beta (2025-05-06)",charIndex:471},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.11.3-beta (2025-01-10)",slug:"_2-11-11-3-beta-2025-01-10",normalizedTitle:"2.11.11.3-beta (2025-01-10)",charIndex:746},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.11.2-beta (2024-12-26)",slug:"_2-11-11-2-beta-2024-12-26",normalizedTitle:"2.11.11.2-beta (2024-12-26)",charIndex:1248},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.11.1-beta (2024-12-03)",slug:"_2-11-11-1-beta-2024-12-03",normalizedTitle:"2.11.11.1-beta (2024-12-03)",charIndex:1486},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:34},{level:2,title:"2.11.10.2-beta (2024-12-02)",slug:"_2-11-10-2-beta-2024-12-02",normalizedTitle:"2.11.10.2-beta (2024-12-02)",charIndex:1621},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.10.1-beta (2024-11-21)",slug:"_2-11-10-1-beta-2024-11-21",normalizedTitle:"2.11.10.1-beta (2024-11-21)",charIndex:1891},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-6",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.9.3-beta (2024-09-02)",slug:"_2-11-9-3-beta-2024-09-02",normalizedTitle:"2.11.9.3-beta (2024-09-02)",charIndex:2544},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-7",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.9.2-beta (2024-08-22)",slug:"_2-11-9-2-beta-2024-08-22",normalizedTitle:"2.11.9.2-beta (2024-08-22)",charIndex:3093},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-8",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.9.1-beta (2024-08-08)",slug:"_2-11-9-1-beta-2024-08-08",normalizedTitle:"2.11.9.1-beta (2024-08-08)",charIndex:3512},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-9",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.8.5-beta (2024-08-02)",slug:"_2-11-8-5-beta-2024-08-02",normalizedTitle:"2.11.8.5-beta (2024-08-02)",charIndex:3902},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-10",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.8.4-beta (2024-07-25)",slug:"_2-11-8-4-beta-2024-07-25",normalizedTitle:"2.11.8.4-beta (2024-07-25)",charIndex:4071},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-11",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.8.3-beta (2024-07-05)",slug:"_2-11-8-3-beta-2024-07-05",normalizedTitle:"2.11.8.3-beta (2024-07-05)",charIndex:4658},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-12",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.8.2-beta (2024-07-04)",slug:"_2-11-8-2-beta-2024-07-04",normalizedTitle:"2.11.8.2-beta (2024-07-04)",charIndex:4884},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-13",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.8.1-beta (2024-07-03)",slug:"_2-11-8-1-beta-2024-07-03",normalizedTitle:"2.11.8.1-beta (2024-07-03)",charIndex:5172},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-14",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.7.1-beta (2024-06-20)",slug:"_2-11-7-1-beta-2024-06-20",normalizedTitle:"2.11.7.1-beta (2024-06-20)",charIndex:5445},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-15",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.6.5-beta (2024-06-17)",slug:"_2-11-6-5-beta-2024-06-17",normalizedTitle:"2.11.6.5-beta (2024-06-17)",charIndex:5585},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-6",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-16",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:3,title:"⚠️ 注意",slug:"⚠️-注意",normalizedTitle:"⚠️ 注意",charIndex:5921},{level:2,title:"2.11.6.4-beta (2024-06-14)",slug:"_2-11-6-4-beta-2024-06-14",normalizedTitle:"2.11.6.4-beta (2024-06-14)",charIndex:6063},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-7",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-2",normalizedTitle:"⚠️ 注意",charIndex:5921},{level:4,title:"翻译进度",slug:"翻译进度",normalizedTitle:"翻译进度",charIndex:6155},{level:4,title:"使用程度",slug:"使用程度",normalizedTitle:"使用程度",charIndex:6198},{level:3,title:"🤝致谢",slug:"🤝致谢",normalizedTitle:"🤝致谢",charIndex:6264},{level:2,title:"2.11.6.3-beta (2024-06-14)",slug:"_2-11-6-3-beta-2024-06-14",normalizedTitle:"2.11.6.3-beta (2024-06-14)",charIndex:6366},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-8",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-17",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.6.2-beta (2024-06-06)",slug:"_2-11-6-2-beta-2024-06-06",normalizedTitle:"2.11.6.2-beta (2024-06-06)",charIndex:6577},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-18",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.6.1-beta (2024-06-04)",slug:"_2-11-6-1-beta-2024-06-04",normalizedTitle:"2.11.6.1-beta (2024-06-04)",charIndex:6840},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-9",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-19",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.5.2-beta (2024-05-30)",slug:"_2-11-5-2-beta-2024-05-30",normalizedTitle:"2.11.5.2-beta (2024-05-30)",charIndex:7274},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-10",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-20",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.5.1-beta (2024-04-30)",slug:"_2-11-5-1-beta-2024-04-30",normalizedTitle:"2.11.5.1-beta (2024-04-30)",charIndex:7526},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-11",normalizedTitle:"🐣 新增功能",charIndex:34},{level:2,title:"2.11.5.0-beta (2024-04-29)",slug:"_2-11-5-0-beta-2024-04-29",normalizedTitle:"2.11.5.0-beta (2024-04-29)",charIndex:7654},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-12",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-21",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.4.2-beta (2024-04-22)",slug:"_2-11-4-2-beta-2024-04-22",normalizedTitle:"2.11.4.2-beta (2024-04-22)",charIndex:8116},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-13",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-22",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.4.1 (2024-04-12)",slug:"_2-11-4-1-2024-04-12",normalizedTitle:"2.11.4.1 (2024-04-12)",charIndex:8654},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-23",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.4.0 (2024-04-12)",slug:"_2-11-4-0-2024-04-12",normalizedTitle:"2.11.4.0 (2024-04-12)",charIndex:8811},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-14",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-24",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.3.2 (2024-04-07)",slug:"_2-11-3-2-2024-04-07",normalizedTitle:"2.11.3.2 (2024-04-07)",charIndex:9261},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-15",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-25",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.3.1 (2024-04-02)",slug:"_2-11-3-1-2024-04-02",normalizedTitle:"2.11.3.1 (2024-04-02)",charIndex:9580},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-16",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-26",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.3.0 (2024-03-21)",slug:"_2-11-3-0-2024-03-21",normalizedTitle:"2.11.3.0 (2024-03-21)",charIndex:9984},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-17",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-27",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.2.3 (2024-02-29)",slug:"_2-11-2-3-2024-02-29",normalizedTitle:"2.11.2.3 (2024-02-29)",charIndex:10769},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-28",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.2.2 (2024-02-22)",slug:"_2-11-2-2-2024-02-22",normalizedTitle:"2.11.2.2 (2024-02-22)",charIndex:11201},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-29",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.2.1 (2024-02-19)",slug:"_2-11-2-1-2024-02-19",normalizedTitle:"2.11.2.1 (2024-02-19)",charIndex:11475},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-30",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:3,title:"🤝致谢",slug:"🤝致谢-2",normalizedTitle:"🤝致谢",charIndex:6264},{level:2,title:"2.11.2.0 (2024-01-22)",slug:"_2-11-2-0-2024-01-22",normalizedTitle:"2.11.2.0 (2024-01-22)",charIndex:12498},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-31",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.1.5 (2024-01-18)",slug:"_2-11-1-5-2024-01-18",normalizedTitle:"2.11.1.5 (2024-01-18)",charIndex:12941},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-32",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.1.3/4-beta (2024-01-17)",slug:"_2-11-1-3-4-beta-2024-01-17",normalizedTitle:"2.11.1.3/4-beta (2024-01-17)",charIndex:13107},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-33",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.1.2-beta (2024-01-17)",slug:"_2-11-1-2-beta-2024-01-17",normalizedTitle:"2.11.1.2-beta (2024-01-17)",charIndex:13229},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-18",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-34",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.1.1-beta (2024-01-16)",slug:"_2-11-1-1-beta-2024-01-16",normalizedTitle:"2.11.1.1-beta (2024-01-16)",charIndex:13577},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-35",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.1.0-beta (2024-01-15)",slug:"_2-11-1-0-beta-2024-01-15",normalizedTitle:"2.11.1.0-beta (2024-01-15)",charIndex:13863},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-36",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.13-beta (2024-01-12)",slug:"_2-11-0-13-beta-2024-01-12",normalizedTitle:"2.11.0.13-beta (2024-01-12)",charIndex:14148},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-37",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.12-beta (2024-01-12)",slug:"_2-11-0-12-beta-2024-01-12",normalizedTitle:"2.11.0.12-beta (2024-01-12)",charIndex:14393},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-19",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-38",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.11-beta (2024-01-11)",slug:"_2-11-0-11-beta-2024-01-11",normalizedTitle:"2.11.0.11-beta (2024-01-11)",charIndex:14730},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-39",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.10-beta (2024-01-10)",slug:"_2-11-0-10-beta-2024-01-10",normalizedTitle:"2.11.0.10-beta (2024-01-10)",charIndex:15e3},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-20",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-40",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.9-beta (2024-01-10)",slug:"_2-11-0-9-beta-2024-01-10",normalizedTitle:"2.11.0.9-beta (2024-01-10)",charIndex:15379},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-21",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-41",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.8-beta (2024-01-09)",slug:"_2-11-0-8-beta-2024-01-09",normalizedTitle:"2.11.0.8-beta (2024-01-09)",charIndex:15770},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-22",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-42",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.7-beta (2024-01-08)",slug:"_2-11-0-7-beta-2024-01-08",normalizedTitle:"2.11.0.7-beta (2024-01-08)",charIndex:15986},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-43",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-3",normalizedTitle:"⚠️ 注意",charIndex:5921},{level:2,title:"2.11.0.6-beta (2024-01-05)",slug:"_2-11-0-6-beta-2024-01-05",normalizedTitle:"2.11.0.6-beta (2024-01-05)",charIndex:16422},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-44",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.5-beta (2024-01-04)",slug:"_2-11-0-5-beta-2024-01-04",normalizedTitle:"2.11.0.5-beta (2024-01-04)",charIndex:16644},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-23",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-45",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.4-beta (2024-01-03)",slug:"_2-11-0-4-beta-2024-01-03",normalizedTitle:"2.11.0.4-beta (2024-01-03)",charIndex:16927},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-46",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-4",normalizedTitle:"⚠️ 注意",charIndex:5921},{level:2,title:"2.11.0.3-beta (2024-01-02)",slug:"_2-11-0-3-beta-2024-01-02",normalizedTitle:"2.11.0.3-beta (2024-01-02)",charIndex:17329},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-47",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.2-beta (2024-01-02)",slug:"_2-11-0-2-beta-2024-01-02",normalizedTitle:"2.11.0.2-beta (2024-01-02)",charIndex:17448},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-48",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:2,title:"2.11.0.1-beta (2024-01-02)",slug:"_2-11-0-1-beta-2024-01-02",normalizedTitle:"2.11.0.1-beta (2024-01-02)",charIndex:17568},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-24",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-49",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-5",normalizedTitle:"⚠️ 注意",charIndex:5921},{level:2,title:"2.11.0.0-beta (2023-12-29)",slug:"_2-11-0-0-beta-2023-12-29",normalizedTitle:"2.11.0.0-beta (2023-12-29)",charIndex:18316},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-25",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-50",normalizedTitle:"🐞 解决bug、优化功能",charIndex:132},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-6",normalizedTitle:"⚠️ 注意",charIndex:5921}],headersStr:"2.11.12.1-beta (2025-07-30) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.11.4-beta (2025-05-06) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.11.3-beta (2025-01-10) 🐞 解决BUG、优化功能 2.11.11.2-beta (2024-12-26) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.11.1-beta (2024-12-03) 🐣 新增功能 2.11.10.2-beta (2024-12-02) 🐞 解决BUG、优化功能 2.11.10.1-beta (2024-11-21) 🐞 解决BUG、优化功能 2.11.9.3-beta (2024-09-02) 🐞 解决BUG、优化功能 2.11.9.2-beta (2024-08-22) 🐞 解决BUG、优化功能 2.11.9.1-beta (2024-08-08) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.8.5-beta (2024-08-02) 🐞 解决BUG、优化功能 2.11.8.4-beta (2024-07-25) 🐞 解决BUG、优化功能 2.11.8.3-beta (2024-07-05) 🐞 解决BUG、优化功能 2.11.8.2-beta (2024-07-04) 🐞 解决BUG、优化功能 2.11.8.1-beta (2024-07-03) 🐞 解决BUG、优化功能 2.11.7.1-beta (2024-06-20) 🐞 解决BUG、优化功能 2.11.6.5-beta (2024-06-17) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.11.6.4-beta (2024-06-14) 🐣 新增功能 ⚠️ 注意 翻译进度 使用程度 🤝致谢 2.11.6.3-beta (2024-06-14) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.6.2-beta (2024-06-06) 🐞 解决BUG、优化功能 2.11.6.1-beta (2024-06-04) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.5.2-beta (2024-05-30) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.5.1-beta (2024-04-30) 🐣 新增功能 2.11.5.0-beta (2024-04-29) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.4.2-beta (2024-04-22) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.4.1 (2024-04-12) 🐞 解决BUG、优化功能 2.11.4.0 (2024-04-12) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.3.2 (2024-04-07) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.3.1 (2024-04-02) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.3.0 (2024-03-21) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.2.3 (2024-02-29) 🐞 解决BUG、优化功能 2.11.2.2 (2024-02-22) 🐞 解决BUG、优化功能 2.11.2.1 (2024-02-19) 🐞 解决BUG、优化功能 🤝致谢 2.11.2.0 (2024-01-22) 🐞 解决BUG、优化功能 2.11.1.5 (2024-01-18) 🐞 解决BUG、优化功能 2.11.1.3/4-beta (2024-01-17) 🐞 解决BUG、优化功能 2.11.1.2-beta (2024-01-17) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.1.1-beta (2024-01-16) 🐞 解决BUG、优化功能 2.11.1.0-beta (2024-01-15) 🐞 解决BUG、优化功能 2.11.0.13-beta (2024-01-12) 🐞 解决BUG、优化功能 2.11.0.12-beta (2024-01-12) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.0.11-beta (2024-01-11) 🐞 解决BUG、优化功能 2.11.0.10-beta (2024-01-10) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.0.9-beta (2024-01-10) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.0.8-beta (2024-01-09) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.0.7-beta (2024-01-08) 🐞 解决BUG、优化功能 ⚠️ 注意 2.11.0.6-beta (2024-01-05) 🐞 解决BUG、优化功能 2.11.0.5-beta (2024-01-04) 🐣 新增功能 🐞 解决BUG、优化功能 2.11.0.4-beta (2024-01-03) 🐞 解决BUG、优化功能 ⚠️ 注意 2.11.0.3-beta (2024-01-02) 🐞 解决BUG、优化功能 2.11.0.2-beta (2024-01-02) 🐞 解决BUG、优化功能 2.11.0.1-beta (2024-01-02) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.11.0.0-beta (2023-12-29) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意",content:'# 2.11.12.1-beta (2025-07-30)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持使用达梦数据库（感谢@wxyShine ）\n 2. 【server】新增 FTP 管理，文件查看和构建发布方式新增 FTP 支持\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 数据库表支持配置前缀 jpom.db.table-prefix （感谢@ccx2480）\n 2. 【server】修复 终端输入命令，按Backspace 会退出终端（感谢@dgs Gitee issues ICA57K ）\n 3. 【server】优化 脚本日志和 SSH 命令日志支持批量删除（感谢@lin_yeqi Gitee issues IBIM6W ）\n 4. 【server】修复 表格自定义列在部分字段不生效情况\n 5. 【server】优化 构建发布方式中 Docker 镜像支持配置网络模式（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.11.11.4-beta (2025-05-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 远程安装时的授权码支持（感谢@奇奇）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 SSH控制台输入Control + R后无法记录日志的问题\n 2. 【server】优化 容器构建镜像新增 毫秒镜像 临时仓库\n 3. 【all】优化 修改 tomcat版本到9.0.99安全版本 （感谢@龙猫 Gitee pr 292）\n\n----------------------------------------\n\n\n# 2.11.11.3-beta (2025-01-10)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建页面保存按钮使用 loading （感谢@hhh Gitee issues IBD8WF ）\n 2. 【server】优化 SSH 文件列表支持跟随目录排序\n 3. 【server】优化 用户操作日志记录表中用户 id 长度不够照成登录失败问题（感谢@Halo Gitee issues IBFNKE ）\n 4. 【agent】优化 DSL 项目备份支持配置开启或者关闭差异备份（默认使用差异备份：仅备份变动过的文件）（感谢@ercats Gitee issues IBF73J ）\n 5. 【server】优化 构建 webhook 新增 git 的提交id和提交信息参数（感谢@皮儿卡啦没有丘 Gitee issues IBDEU0 ）\n 6. 【server】优化 文件中心发布文件支持保存为模板方便后续使用（感谢@lin_yeqi Gitee issues IB2FRF ）\n\n----------------------------------------\n\n\n# 2.11.11.2-beta (2024-12-26)\n\n\n# 🐣 新增功能\n\n 1. 【all】升级 hutool 版本\n 2. 【server】新增 服务端在线升级页面支持配置下载授权码，方便国内用户使用全速 CDN\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 ssh文件管理显示错位（感谢@lin_yeqi Gitee issues IB98AU ）\n\n----------------------------------------\n\n\n# 2.11.11.1-beta (2024-12-03)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持使用 TOPIAM 企业数字身份管控平台登录（oauth2）\n\n----------------------------------------\n\n\n# 2.11.10.2-beta (2024-12-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 容器构建自定义插件，环境变量不匹配问题（感谢@杨晓龙 Gitee pr 285 ）\n 2. 【agent】优化 项目日志文件编码格式支持独立配置（感谢@不渡 Gitee issues IB3DCP ）\n 3. 【all】优化 使用默认语言时增加判断所在时区来识别中文环境\n 4. 【all】升级 fastjson 依赖版本\n\n----------------------------------------\n\n\n# 2.11.10.1-beta (2024-11-21)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】升级 docker-java 版本到 3.4.0\n 2. 【server】优化 数据库备份支持外部调用触发器来实现自定义备份周期（感谢@刘志远）\n 3. 【server】优化 SSH、项目 文件管理树加载 loading 避免网络卡顿影响树渲染错误（感谢@Bo）\n 4. 【server】优化 SSH、项目 文件管理树支持横向滚动条\n 5. 【server】优化 构建记录存储最后 commitId commitMsg 信息（感谢@program）\n 6. 【server】优化 引用脚本库时出现 ${xxxx} 出现引用失败：No group with name {xxxx} （感谢@foot_print Gitee issues IAW413 ）\n 7. 【server】优化 构建环境变量自动识别系统变量密文相关关键词：pwd、pass、password、token 为隐私变量（感谢@lin_yeqi Gitee issues IB34L9 ）\n 8. 【agent】优化 项目状态触发器 result 参数返回 json 类型，DSL 项目重启成功返回 pid（感谢@新）\n 9. 【server】优化 日志查看器中行号增加无法选中样式（感谢@ning Gitee pr 284 ）\n\n----------------------------------------\n\n\n# 2.11.9.3-beta (2024-09-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建 webhook 携带工作空间和集群id参数（workspaceId、clusterInfoId、workspaceName）（感谢@🦁子）\n 2. 【server】修复 构建命令引用脚本时相关脚本引用脚本库未生效问题（感谢@木迷榖）\n 3. 【server】优化 构建命令、本地发布命令支持直接引起脚本库（G@("xx") xx 为脚本标记）\n 4. 【server】修复 构建时日志记录器异常关闭未提示并且构建状态未修改（感谢@陈晨🍊）\n 5. 【server】优化 构建日志弹窗支持查看可用环境变量\n 6. 【server】优化 构建支持查看可用环境变量（感谢@慌i Gitee issues IALAUW ）\n 7. 【server】升级 mysql 驱动版本到 8.2.0\n 8. 【server】优化 ssh docker 独立配置是否需要 sudo 执行\n 9. 【server】修复 ssh docker 选型固定只有最新 10 条调整为搜索下拉（@山上雪）\n\n----------------------------------------\n\n\n# 2.11.9.2-beta (2024-08-22)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 git仓库账号/密码包含特殊符号导致系统Git工具无法成功认证的问题（感谢@🇩）\n 2. 【server】修复 SSH 分片上传极大概率上传失败问题（感谢@勤思·、@张飞鸿）\n 3. 【all】升级 hutool、logback、tomcat 版本\n 4. 【server】优化 时长格式化工具支持 i18n 国际化\n 5. 【server】修复 终端日志处理字节\'7\'导致的日志补全记录不全 （感谢@adao Github issues 91 ）\n 6. 【server】升级 spring 包到 5.3.39 修复漏洞 CVE-2024-38808，CVE-2024-38809（感谢@龙猫）Gitee Pr 281\n\n----------------------------------------\n\n\n# 2.11.9.1-beta (2024-08-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 项目监控新增沉默时间配置，避免报警后不再触发报警\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】修复 多会话使用文件跟踪器可能出现多个线程未关闭问题（感谢@沐剑屏 Gitee issues IAI0I1 ）\n 2. 【all】修复 windows 管理脚本在 JDK 1.8 无法正常启动（感谢@流浪的墨染青衫、@LL）\n 3. 【server】修复 多个工作空间分组后子工作空间层级异常造成不能正常使用\n 4. 【server】修复 监控日志标题字段长度太短在英语模式下字段异常（感谢@Deer）\n 5. 【server】优化 监控新增使用语言来实现通知消息国际化\n\n----------------------------------------\n\n\n# 2.11.8.5-beta (2024-08-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 更多组件的页面层级问题，避免层级错乱无法正常使用页面相关功能\n 2. 【server】修复 容器构建 DSL 配置示例错乱\n\n----------------------------------------\n\n\n# 2.11.8.4-beta (2024-07-25)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 登录验证码去除易混淆字母（oO0、lL1、q9Q、pP）\n 2. 【server】修复 批量构建引起环境变量丢失问题（感谢@xieliangza Github issues 88 ）\n 3. 【all】优化 解析 HTTP Accept-Language 请求头支持多语言最高优先级\n 4. 【server】修复 页面未刷新情况下打开弹窗次数过多不能提示窗口层级太低（感谢@lin_yeqi Gitee issues IAEBUZ ）\n 5. 【server】优化 分发日志显示关联数据信息（感谢@pumpkinor Gitee issues IAF7IV ）\n 6. 【server】优化 分发文件使用文件中心或者静态文件上传至节点使用实际文件名（感谢@pumpkinor Gitee issues IAF7GD ）\n 7. 【server】优化 SSH 文件管理支持浏览器分片上传（感谢@超人那个超i Gitee issues IAD9W4 ）\n 8. 【all】优化 管理脚本判断 JDK9+ 自动添加解除限制反射参数：--add-opens=xxxx\n\n----------------------------------------\n\n\n# 2.11.8.3-beta (2024-07-05)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 淘汰javax.security.cert.X509Certificate（感谢@Jie Github issues 84 ）\n 2. 【all】优化 启动控制台日志完善 i18n\n 3. 【server】修复 证书删除后弹窗未正常关闭\n\n----------------------------------------\n\n\n# 2.11.8.2-beta (2024-07-04)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 非管理员用户无法使用脚本库数据（感谢@丁炳坤 Gitee issues IA8ZKP ）\n 2. 【server】修复 构建编辑页面未输入构建命令提示错误（感谢@yt Gitee issues IAAI8D ）\n 3. 【server】优化 构建容器镜像支持推送到远程仓库后自动删除本地镜像（感谢 @爱琳琳真是太好了 Gitee issues IA6UBO ）\n\n----------------------------------------\n\n\n# 2.11.8.1-beta (2024-07-03)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 静态文件扫描到空时更新数据库异常（感谢@blackcat Gitee issues IA6UO0 ）\n 2. 【server】修复 SSH命令行操作日志支持更全展示（感谢@beens Gitee issues IA6P3J ）\n 3. 【all】优化 升级 hutool、oshi、mwiede-jsch、fastjson2 版本\n\n----------------------------------------\n\n\n# 2.11.7.1-beta (2024-06-20)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 操作确认交互弹窗层级过低无法正常显示使用（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.6.5-beta (2024-06-17)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 服务端脚本、SSH 脚本支持引用全局脚本库（G@("xx") xx 为脚本标记）\n 2. 【agent】新增 节点脚本支持引用全局脚本库（G@("xx") xx 为脚本标记）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】修复 不同工作空间下同一个机器节点相同的项目ID的项目数据被覆盖（感谢@小朱）\n 2. 【agent】优化 DSL 项目支持引用脚本库中的脚本（G@xxxx）xxxx 为脚本标记\n 3. 【all】优化 新增系统语言配置 jpom.system.lang\n 4. 【server】优化 前端紧凑模式在浅色模式下也生效\n\n\n# ⚠️ 注意\n\n * 前端国际化翻译程度：90%\n * 后端已翻译语言可以度：80%（部分异步执行日志等目前未支持）\n\n后端日志国际化需要新增或者修改 jpom.system.lang 配置项\n\n----------------------------------------\n\n\n# 2.11.6.4-beta (2024-06-14)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 支持 i18n 语言国际化（zh-CN、en-US）\n\n\n# ⚠️ 注意\n\n# 翻译进度\n\n * 前端国际化翻译程度：80%\n * 后端国际化翻译程度：90%\n\n# 使用程度\n\n * 前端已翻译语言可以度：100%\n * 后端已翻译语言可以度：60%（后端日志、异步执行日志等目前未支持）\n\n\n# 🤝致谢\n\n感谢 @a20070322 / Controllers 大佬贡献 Jpom 前端 i18n 工具。\n\n----------------------------------------\n\n\n# 2.11.6.3-beta (2024-06-14)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 全局脚本库（DSL 项目可引用）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 gogs 仓库令牌导入异常（感谢@张飞鸿）\n 2. 【server】修复 自定义仓库令牌导入后页面异常（感谢@张飞鸿）\n\n----------------------------------------\n\n\n# 2.11.6.2-beta (2024-06-06)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 没有端口的容器重建页面异常（感谢@冰淇淋还是冰激凌）\n 2. 【server】修复 工作空间菜单配置错误（感谢@Again... .）\n 3. 【server】优化 ssh 管理独立 tab 页面使用默认的字符串排序\n 4. 【server】修复 服务端脚本无法执行、参数值描述不对应（感谢@冰淇淋还是冰激凌）\n\n----------------------------------------\n\n\n# 2.11.6.1-beta (2024-06-04)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目文件支持快捷复制到当前文件夹\n 2. 【agent】新增 项目文件夹支持快捷压缩（感谢@yiziyu Gitee issues I9737L ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 部分参数、环境变量配置交互优化取消文本输入框采用标签模式（感谢@湘江夜色）\n 2. 【server】修复 部分页面中文描述未正常显示\n 3. 【server】优化 文件发布支持选择脚本模板（感谢@linCodeTest Gitee issues I9P0EU ）\n 4. 【server】优化 升级 postgresql 版本（感谢@ʟᴊx💎💎）\n 5. 【server】修复 机器相关授权配置文件后缀输入框未正常显示（@感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.5.2-beta (2024-05-30)\n\n\n# 🐣 新增功能\n\n 1. 【all】升级 tomcat、yaml 版本（感谢@佳驰）\n 2. 【all】升级 bcprov-jdk18on 版本\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 自动续签采用无感模式（感谢@湘江夜色）\n 2. 【server】优化 容器构建执行配置自定义 host 参数（感谢@冰淇淋还是冰激凌）\n\n----------------------------------------\n\n\n# 2.11.5.1-beta (2024-04-30)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目支持配置禁止扫描目录避免大目录页面超时（感谢@我）\n\n----------------------------------------\n\n\n# 2.11.5.0-beta (2024-04-29)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 自由脚本方便调试机器节点\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 资产管理 SSH 配置禁用命令无法回显（感谢@zhangw）\n 2. 【server】修复 资产管理 SSH 未配置授权目录时 NPE （感谢@Anley Gitee issues I9J17G ）\n 3. 【agent】优化 监控机器网络流程支持配置排除网卡或者仅统计对应的网卡\n 4. 【server】修复 退出登录时页面会提示需要登录相关信息\n 5. 【server】优化 页面检测新版本判断是否加入 beta\n 6. 【agent】优化 添加数据记录修改人（感谢@陈旭 Gitee issues I9JSY7 ）\n 7. 【server】优化 插件端注册到服务端，网络测试支持 ping + telnet （感谢@泊凉青川）\n\n----------------------------------------\n\n\n# 2.11.4.2-beta (2024-04-22)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 发布系统公告\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】升级 前端组件版本\n 2.  【all】优化 管理脚本删除 -XX:-UseBiasedLocking 使其能在高版本 jdk 运行\n 3.  【server】修复 构建列表卡片模式按钮文字错乱\n 4.  【server】修复 项目列表和逻辑节点卡片视图冲突\n 5.  【server】修复 docker管理新增docker选择证书界面权重异常 （感谢@伤感的风铃草 Gitee issues I9GYVA ）\n 6.  【server】修复 系统管理中用户管理中登录日志无法筛选\n 7.  【server】优化 用户登录记录操作日志（保证操作监控能记录）\n 8.  【server】修复 系统管理中用户登录日志无法分页\n 9.  【server】优化 Oauth2 支持配置创建账号配置权限组\n 10. 【server】修复 文件发布权限为执行权限、文件发布记录删除无记录日志 （感谢@蓝枫）\n\n----------------------------------------\n\n\n# 2.11.4.1 (2024-04-12)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建相关页面无法正常打开\n 2. 【server】优化 Git 仓库地址不正确相关提示更准确（感谢@易自玉）\n\n----------------------------------------\n\n\n# 2.11.4.0 (2024-04-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 Oauth2 新增【飞书账号】、【自建 Gitlab】登录（感谢@鸡皮蒜毛与鸡毛蒜皮 Gitee issues I9ELGS ）\n 2. 【server】新增 Oauth2 新增企业微信登录\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 oauth2 第三方平台登录解析用户名将依次尝试：平台用户名、邮箱、uuid\n 2. 【server】修复 无法查询到分组信息（页面下拉框）（感谢@Robot Gitee issues I9FN9U ）\n 3. 【all】升级 hutool 版本\n 4. 【server】修复 修复孤独数据描述错别字（感谢@cuiyongsheng Github issues 77 ）\n 5. 【server】修复 前端地址栏输入二级路径 404 页面卡死问题\n\n----------------------------------------\n\n\n# 2.11.3.2 (2024-04-07)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 Oauth2 新增钉钉扫码登录\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】优化 DSL 项目支持配置在特定目录执行脚本（run.execPath）\n 2. 【agent】优化 管理脚本 -Xss 默认值修改为 512k（感谢@Again... ）\n 3. 【server】优化 管理脚本 -Xss 默认值修改为 1024k（感谢@Again... ）\n 4. 【server】优化 声明使用开源软件列表、增加本软件开源协议声明\n\n----------------------------------------\n\n\n# 2.11.3.1 (2024-04-02)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持 mariadb\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 无法查询到分组信息（页面下拉框）（感谢@猫猫向钱跑）\n 2. 【server】修复 【项目文件管理远程下载】、【镜像创建容器】确认按钮无法使用（感谢@猫猫向钱跑）\n 3. 【server】修改 资产管理机器管理删除按钮无法正常使用（感谢@🇩）\n 4. 【server】修复 SSH 面板文件管理无法正常切换（感谢@勤思·）\n 5. 【server】优化 部分页面在火狐浏览器无法正常打开（感谢@sparkarvin Gitee issues I96IOA ） （感谢@a20070322 Gitee Pr 221 ）\n\n----------------------------------------\n\n\n# 2.11.3.0 (2024-03-21)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持 postgresql （感谢@王先生）Gitee Pr 223\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【all】优化 新增 jpom.system.command-use-sudo 配置属性控制是否使用 sudo 执行部分系统命令\n 2.  【server】优化 前端页面 keep-alive 可能导致的内存泄漏问题（感谢@a20070322 Gitee issues I9510M ）\n 3.  【server】修复 部分弹窗不生效问题（感谢@a20070322 Gitee Pr 215 ）\n 4.  【server】优化 前端 ES lint 配置规范前端代码（感谢@a20070322 Gitee Pr 214 / Gitee Pr 215 / Gitee Pr 217 ）\n 5.  【server】修复 docker 控制台网络选项卡页面空白（感谢@破冰）\n 6.  【server】修复 节点历史监控统计图表时间查询不生效（感谢@九問）\n 7.  【server】优化 SSH 脚本触发器支持传入参数当环境变量（感谢@小朱）\n 8.  【server】修复 h2迁移其它数据库时部分数据丢失（感谢@王先生）Gitee issues I9977K\n 9.  【server】优化 逐步引入新版表格（构建、项目、节点、资产机器）（感谢@a20070322 Gitee Pr 218 / Gitee Pr 220 / Gitee Pr 222 ）\n 10. 【server】优化 工作空间概括构建日志支持快速查看详情（感谢@Roger.cao）\n\n----------------------------------------\n\n\n# 2.11.2.3 (2024-02-29)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 系统文件占用空间统计周期调整为每天2次（感谢@singlethread Gitee issues I9302U ）\n 2. 【server】优化 支持配置前端所有参数编码来规避部分安全规则检查（感谢@zhaozxc2010 Gitee issues I8Z1VJ ）\n 3. 【server】优化 上传文件空文件提示文件路径（感谢@SchuckBate Gitee issues I93FI6 ）\n 4. 【server】优化 监听日志文件消息发送失败后自动移除会话（感谢@singlethread Gitee issues I93ZFX ）\n 5. 【server】优化 容器构建产物为文件时保存路径层级错误（感谢@vfhky）Github Pr 71 ）\n\n----------------------------------------\n\n\n# 2.11.2.2 (2024-02-22)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 升级 docker-java、jgit 版本\n 2. 【all】优化 升级 commons-compress 版本\n 3. 【agent】优化 升级 oshi 版本\n 4. 【server】优化 新增配置节点 websocket 通讯消息大小限制（jpom.node.web-socket-message-size-limit）（感谢@长弘）\n\n----------------------------------------\n\n\n# 2.11.2.1 (2024-02-19)\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 构建代码未变动流程打断触发器未传入原因（statusMsg）（感谢@烛孩）\n 2.  【server】修复 项目控制台日志删除弹窗未能正常关闭（感谢@%）\n 3.  【server】修复 脚本日志时间筛选不生效（感谢@zhaozxc2010 Gitee issues I8ZNKL ）\n 4.  【server】优化 页面左侧菜单固定悬浮不跟随屏幕滚动条滚动（感谢@a20070322 Gitee issues I8ZOOB / Gitee Pr 201 ）\n 5.  【server】优化 新增机器节点提示未选择协议（感谢@a20070322 Gitee issues I8ZDZT / Gitee Pr 202 ）\n 6.  【server】修复 SSH 资产硬盘信息显示错误（感谢@a20070322 Gitee issues I8ZY7K ）\n 7.  【server】优化 表格搜索区域小屏幕适配 （感谢@a20070322 Gitee issues I8ZY0B ）\n 8.  【server】优化 SSH 文件管理树操作优化 （感谢@a20070322 Gitee issues I9054L / Gitee issues I5DMKG ）\n 9.  【server】优化 整体页面顶部菜单吸顶效果（感谢@a20070322 Gitee issues I907Y8 ）\n 10. 【server】优化 资产监控线程池独立管理（感谢@singlethread Gitee issues I918AB ）\n 11. 【server】优化 构建回滚使用构建独立线程池\n 12. 【all】优化 升级 hutool 版本（主要解决版本号排序异常）（感谢 @Tom Xin Gitee issues I8Z3TI / Hutool issues I8Z3VE）\n 13. 【all】优化 升级 fastjson 版本\n 14. 【server】优化 页面整体滚动条兼容高版本浏览器（感谢@Controllers）\n\n\n# 🤝致谢\n\n感谢 @a20070322 / Controllers 大佬帮助优化 Jpom 前端部分老大难问题。\n\n----------------------------------------\n\n\n# 2.11.2.0 (2024-01-22)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】修复 修改项目日志路径如果文件夹不存在报错（感谢@长弘）\n 2. 【server】修复 节点机器日志无法下载（感谢@Again...）\n 3. 【all】升级 hutool 版本\n 4. 【agent】升级 oshi 版本\n 5. 【server】升级 mwiede、apache-sshd 版本（感谢@*斌）\n 6. 【server】优化 项目列表 file 类型正常排序（不再排序到最后）（感谢@pal865 Gitee issues I8XU32 ）\n 7. 【all】修复 windows 环境保存配置并重启失败（感谢@Robot Gitee issues I8Y01T ）\n 8. 【server】修复 新版本页面部分分页切换失效（构建详情、资产机器、逻辑节点）（感谢@zac）\n\n----------------------------------------\n\n\n# 2.11.1.5 (2024-01-18)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】修复 插件端非默认工作空间项目重启后变为孤独数据（感谢@ccx2480）\n 2. 【server】修复 新增节点分发项目数据为孤独数据\n\n----------------------------------------\n\n\n# 2.11.1.3/4-beta (2024-01-17)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 修复页面打包页面底部白屏\n\n----------------------------------------\n\n\n# 2.11.1.2-beta (2024-01-17)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 触发器调用次数统计、触发器统一管理\n 2. 【server】新增 本地构建命令执行支持配置多线程方式（多线程接收输出流，避免极端情况卡死）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】优化 机器状态新增：资源监控异常（资源监控异常不影响功能使用）\n 2. 【server】优化 取消登录页动态背景图\n 3. 【server】修复 节点分发文件中心、静态文件后文件自动被删除（感谢@九問）\n 4. 【server】优化 容器构建支持配置容器资源（HostConfig）（感谢@珂儿）\n\n----------------------------------------\n\n\n# 2.11.1.1-beta (2024-01-16)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 静态文件名太短（100个字符）（感谢@*斌）\n 2. 【server】修复 还原数据库弹窗内容提示为空（感谢@伤感的风铃草🌿）\n 3. 【server】优化 echarts 支持跟随深色模式\n 4. 【server】修复 编辑节点分发服务端脚本弹窗被挡住（感谢@🇩）\n 5. 【server】优化 前端打包（缩减首屏加载时间）（感谢@曾梦想仗剑走天涯）\n\n----------------------------------------\n\n\n# 2.11.1.0-beta (2024-01-15)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 docker TLS 证书无法查看全部、证书无法编辑（新版遗漏）\n 2. 【server】优化 docker 资产监控支持自定义配置 cron jpom.assets.docker.monitor-cron\n 3. 【server】修复 容器终端、容器日志无法正常使用\n 4. 【server】修复 新版本页面多处无法正常使用相关问题（优化部分提示说明）\n\n----------------------------------------\n\n\n# 2.11.0.13-beta (2024-01-12)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 部分 mysql 存储创建索引异常\n 2. 【agent】优化 插件端自由脚本（分发文件脚本）大小限制调整为 5M（感谢@九問）\n 3. 【server】修复 新版本 UI 部分错别字、日志阅读查看无法正常使用等\n 4. 【server】优化 编辑器样式、DSL 配置样式\n\n----------------------------------------\n\n\n# 2.11.0.12-beta (2024-01-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产总览统计\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 mysql 存储使用游标查询报错（不使用游标）（感谢@🇩）\n 2. 【server】修复 新版 UI 下拉框搜索不生效\n 3. 【server】优化 添加关键词替换为新增\n 4. 【server】优化 部分页面无数据提示\n 5. 【server】修复 节点分发构建产物选择构建历史为匹配对应构建\n 6. 【server】修复 部分操作构建环境变量丢失（保存并构建、后台构建、直接构建）\n\n----------------------------------------\n\n\n# 2.11.0.11-beta (2024-01-11)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 编辑器无法加载样式\n 2. 【server】优化 本地 git 联动严格执行开关\n 3. 【server】修复 打包后终端弹窗样式错乱（感谢@🇩）\n 4. 【server】修复 切换账户、退出登录菜单未刷新问题（感谢@ccx2480）\n 5. 【server】修复 登录账户未跳转配置的第一个工作空间（未遵循自定义配置）\n\n----------------------------------------\n\n\n# 2.11.0.10-beta (2024-01-10)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 系统Git拉取代码时，强制云端最新代码覆盖本地代码\n 2. 【server】修复 升级页面更新日志样式错乱\n 3. 【server】修复 切换账户后用户信息未自动刷新\n 4. 【agent】修复 部分操作引起项目节点分发属性丢失问题\n 5. 【server】修复 无法新增项目（权限判断异常）（感谢@群友）\n 6. 【agent】修复 插件端环境变量值获取异常\n 7. 【agent】优化 插件端 java 项目启动支持读取环境变量\n 8. 【server】修复 项目列表选择错乱、批量操作无法正常使用（感谢@🇩）\n\n----------------------------------------\n\n\n# 2.11.0.9-beta (2024-01-10)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 孤独数据管理（查看孤独数据、修正孤独数据）（感谢@陈旭 Gitee issues I8UNXZ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 上传文件前解析文件信息采用全局 loading\n 2. 【server】优化 构建流程交互（采用步骤条）\n 3. 【server】修复 部分 icon 未更新、部分弹窗列表数据不能正常显示\n 4. 【server】修复 docker-compose 容器状态无非正确显示\n 5. 【agent】修复 低版本项目数据未存储节点ID\n 6. 【server】优化 节点项目、节点脚本操作鉴权（需要服务端缓存中有对应的数据）\n\n----------------------------------------\n\n\n# 2.11.0.8-beta (2024-01-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 前端 UI 支持配置浅色、深色主题、左边菜单主题\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 容器构建 DSL 未回显任何内容\n 2. 【server】修复 登录页面禁用验证码失效（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.0.7-beta (2024-01-08)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】升级 页面 UI 组件、VUE 版本升级到最新\n 2. 【server】修复 部分低频功能无法正常使用（项目备份文件管理等）\n 3. 【server】修复 部分执行异常未输出到操作日志文件中（感谢@闫淼淼）\n\n\n# ⚠️ 注意\n\n 1. 取消全局 loading（局部loading）\n 2. 编辑器延迟 1 秒加载（避免样式错乱）\n 3. 所有快捷复制区域变小为一个点击复制图标\n 4. 弹窗、抽屉样式变动\n 5. 取消操作引导（临时）\n 6. 表格将跟随列内容长度自动拉伸出现横向滚动（不会折叠）\n 7. 个性化配置取消：【页面自动撑开、滚动条显示、页面导航】\n 8. 新版本前端 node 版本推荐：18.19.0\n 9. json viewer 还未实现\n\n----------------------------------------\n\n\n# 2.11.0.6-beta (2024-01-05)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】优化 日志记录器提升日志记录性能\n 2. 【server】优化 取消/停止构建采用异常来打断子进程\n 3. 【server】修复 本地构建无法取消\n 4. 【server】修复 服务端脚本触发器、节点脚本触发器提示找不到用户（感谢@LYY）\n\n----------------------------------------\n\n\n# 2.11.0.5-beta (2024-01-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 工作空间管理中新增概括总览页面\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 支持批量删除构建信息（感谢@奇奇）\n 2. 【server】修复 删除项目、删除分发检查关联构建失败问题\n 3. 【all】优化 关闭 Process 方式\n 4. 【server】优化 节点分发相关页面问题（感谢@陈旭 Gitee issues I8TMDW）\n\n----------------------------------------\n\n\n# 2.11.0.4-beta (2024-01-03)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 工作空间菜单配置无法使用（感谢@新）\n 2. 【server】优化 重新同步节点项目、节点脚本缓存交互\n 3. 【server】优化 SSH 脚本执行模板独立（/exec/template.sh -> /ssh/template.sh）\n 4. 【server】优化 服务端脚本支持加载脚本模板来实现自动加载部分环境变量\n\n\n# ⚠️ 注意\n\n如果您自定义过 SSH 脚本默认那么您需要重新同步一下脚本模板/exec/template.sh -> /ssh/template.sh\n\n新版本 /exec/template.sh 中仅在服务端中生效（本地构建脚本、服务端脚本、本地发布脚本）\n\n----------------------------------------\n\n\n# 2.11.0.3-beta (2024-01-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 没有对应的工作空间权限\n\n----------------------------------------\n\n\n# 2.11.0.2-beta (2024-01-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】修复 环境变量为 null 是未忽略\n\n----------------------------------------\n\n\n# 2.11.0.1-beta (2024-01-02)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 项目支持软链其他项目（代替项目副本）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 新版页面漏掉项目复制按钮\n 2.  【server】优化 逻辑节点中项目数和脚本数仅显示当前工作空间数量\n 3.  【server】优化 项目编辑和节点分发页面支持快捷配置授权目录\n 4.  【server】优化 项目编辑支持切换节点（快速同步其他节点项目）\n 5.  【server】修复 没有工作空间权限时页面循环跳转（感谢@王先生 Gitee issues I8RR01）\n 6.  【all】优化 授权目录判断逻辑\n 7.  【agent】取消 插件端授权目录关闭包含判断(jpom.whitelist.check-starts-with)\n 8.  【server】优化 触发器清理优化、删除用户主动删除关联触发器\n 9.  【server】优化 DSL 项目控制台支持快捷编辑节点脚本（查看流程信息）\n 10. 【server】修复 项目触发器无法调用\n\n\n# ⚠️ 注意\n\n 1. 如果您配置了授权目录但是保存项目报错您可以尝试重新报错一下授权目录来自动修复授权目录配置数据\n 2. 项目控制台日志默认路径调整为插件端数据目录下project-log/${projectId}/${projectId}.log\n 3. 项目控制台日志备份默认路径调整为插件端数据目录下project-log/${projectId}/back/${projectId}-xxxxxxx.log\n\n----------------------------------------\n\n\n# 2.11.0.0-beta (2023-12-29)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 节点分发可以指定构建历史产物发布\n 2. 【server】新增 节点分发可以指定文件中心发布\n 3. 【server】新增 DSL 项目新增 reload 事件（可以开启文件变动触发）\n 4. 【server】新增 静态文件授权服务端指定目录到工作空间来管理（分发）(感谢@*斌)\n 5. 【server】新增 节点分发可以指定静态文件发布\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】修复 项目列表批量操作弹窗定时刷新引起异常（感谢@曾梦想仗剑走天涯）\n 2.  【all】下架 全面下架项目副本功能（请使用 DSL 模式代替）\n 3.  【all】下架 全面节点证书管理功能（请使用工作空间证书代替）\n 4.  【all】下架 全面架节点 NGINX 管理功能（请使用 DSL 模式代替）\n 5.  【server】优化 节点管理仅保留项目管理、脚本管理、脚本日志（其他功能迁移到机器资产管理）\n 6.  【server】修复 项目复制按钮点击无响应\n 7.  【all】优化 查看插件端和服务端的系统日志 websocket 地址\n 8.  【server】优化 监控机器系统负载保留2位小数\n 9.  【server】下架 取消节点管理员权限\n 10. 【server】修复 文件变动触发器不生效的问题\n 11. 【all】优化 项目操作接口合并（4 合 1）\n 12. 【server】优化 配置授权目录需要使用到绝对路径\n\n\n# ⚠️ 注意\n\n 1. 全面下架项目副本功能（请使用 DSL 模式代替）如果您当前使用到此功能请先手动备份相关数据\n 2. 升级后项目副本数据会被人工或者系统更新项目数据自动删除（请一定提前做好备份操作）\n 3. 全面下架节点证书管理功能（请使用工作空间证书代替）如果您当前使用到此功能请先手动备份相关数据\n 4. 全面下架全下架节点 NGINX 管理功能（请使用 DSL 模式代替）如果您当前使用到此功能请先手动备份相关数据\n\n> ❓ 为什么要下架上述功能：由于版本迭代已经有更好的新功能可以代替之前旧功能，并且新功能从另一种角度更方便。下架也是为了我们后续版本维护迭代更高效\n\n * 【白名单】关键词统一调整为【授权】\n * 【黑名单】关键词统一调整为【禁止】\n\n----------------------------------------',normalizedContent:'# 2.11.12.1-beta (2025-07-30)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持使用达梦数据库（感谢@wxyshine ）\n 2. 【server】新增 ftp 管理，文件查看和构建发布方式新增 ftp 支持\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 数据库表支持配置前缀 jpom.db.table-prefix （感谢@ccx2480）\n 2. 【server】修复 终端输入命令，按backspace 会退出终端（感谢@dgs gitee issues ica57k ）\n 3. 【server】优化 脚本日志和 ssh 命令日志支持批量删除（感谢@lin_yeqi gitee issues ibim6w ）\n 4. 【server】修复 表格自定义列在部分字段不生效情况\n 5. 【server】优化 构建发布方式中 docker 镜像支持配置网络模式（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.11.11.4-beta (2025-05-06)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 远程安装时的授权码支持（感谢@奇奇）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 ssh控制台输入control + r后无法记录日志的问题\n 2. 【server】优化 容器构建镜像新增 毫秒镜像 临时仓库\n 3. 【all】优化 修改 tomcat版本到9.0.99安全版本 （感谢@龙猫 gitee pr 292）\n\n----------------------------------------\n\n\n# 2.11.11.3-beta (2025-01-10)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建页面保存按钮使用 loading （感谢@hhh gitee issues ibd8wf ）\n 2. 【server】优化 ssh 文件列表支持跟随目录排序\n 3. 【server】优化 用户操作日志记录表中用户 id 长度不够照成登录失败问题（感谢@halo gitee issues ibfnke ）\n 4. 【agent】优化 dsl 项目备份支持配置开启或者关闭差异备份（默认使用差异备份：仅备份变动过的文件）（感谢@ercats gitee issues ibf73j ）\n 5. 【server】优化 构建 webhook 新增 git 的提交id和提交信息参数（感谢@皮儿卡啦没有丘 gitee issues ibdeu0 ）\n 6. 【server】优化 文件中心发布文件支持保存为模板方便后续使用（感谢@lin_yeqi gitee issues ib2frf ）\n\n----------------------------------------\n\n\n# 2.11.11.2-beta (2024-12-26)\n\n\n# 🐣 新增功能\n\n 1. 【all】升级 hutool 版本\n 2. 【server】新增 服务端在线升级页面支持配置下载授权码，方便国内用户使用全速 cdn\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 ssh文件管理显示错位（感谢@lin_yeqi gitee issues ib98au ）\n\n----------------------------------------\n\n\n# 2.11.11.1-beta (2024-12-03)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持使用 topiam 企业数字身份管控平台登录（oauth2）\n\n----------------------------------------\n\n\n# 2.11.10.2-beta (2024-12-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 容器构建自定义插件，环境变量不匹配问题（感谢@杨晓龙 gitee pr 285 ）\n 2. 【agent】优化 项目日志文件编码格式支持独立配置（感谢@不渡 gitee issues ib3dcp ）\n 3. 【all】优化 使用默认语言时增加判断所在时区来识别中文环境\n 4. 【all】升级 fastjson 依赖版本\n\n----------------------------------------\n\n\n# 2.11.10.1-beta (2024-11-21)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】升级 docker-java 版本到 3.4.0\n 2. 【server】优化 数据库备份支持外部调用触发器来实现自定义备份周期（感谢@刘志远）\n 3. 【server】优化 ssh、项目 文件管理树加载 loading 避免网络卡顿影响树渲染错误（感谢@bo）\n 4. 【server】优化 ssh、项目 文件管理树支持横向滚动条\n 5. 【server】优化 构建记录存储最后 commitid commitmsg 信息（感谢@program）\n 6. 【server】优化 引用脚本库时出现 ${xxxx} 出现引用失败：no group with name {xxxx} （感谢@foot_print gitee issues iaw413 ）\n 7. 【server】优化 构建环境变量自动识别系统变量密文相关关键词：pwd、pass、password、token 为隐私变量（感谢@lin_yeqi gitee issues ib34l9 ）\n 8. 【agent】优化 项目状态触发器 result 参数返回 json 类型，dsl 项目重启成功返回 pid（感谢@新）\n 9. 【server】优化 日志查看器中行号增加无法选中样式（感谢@ning gitee pr 284 ）\n\n----------------------------------------\n\n\n# 2.11.9.3-beta (2024-09-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建 webhook 携带工作空间和集群id参数（workspaceid、clusterinfoid、workspacename）（感谢@🦁子）\n 2. 【server】修复 构建命令引用脚本时相关脚本引用脚本库未生效问题（感谢@木迷榖）\n 3. 【server】优化 构建命令、本地发布命令支持直接引起脚本库（g@("xx") xx 为脚本标记）\n 4. 【server】修复 构建时日志记录器异常关闭未提示并且构建状态未修改（感谢@陈晨🍊）\n 5. 【server】优化 构建日志弹窗支持查看可用环境变量\n 6. 【server】优化 构建支持查看可用环境变量（感谢@慌i gitee issues ialauw ）\n 7. 【server】升级 mysql 驱动版本到 8.2.0\n 8. 【server】优化 ssh docker 独立配置是否需要 sudo 执行\n 9. 【server】修复 ssh docker 选型固定只有最新 10 条调整为搜索下拉（@山上雪）\n\n----------------------------------------\n\n\n# 2.11.9.2-beta (2024-08-22)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 git仓库账号/密码包含特殊符号导致系统git工具无法成功认证的问题（感谢@🇩）\n 2. 【server】修复 ssh 分片上传极大概率上传失败问题（感谢@勤思·、@张飞鸿）\n 3. 【all】升级 hutool、logback、tomcat 版本\n 4. 【server】优化 时长格式化工具支持 i18n 国际化\n 5. 【server】修复 终端日志处理字节\'7\'导致的日志补全记录不全 （感谢@adao github issues 91 ）\n 6. 【server】升级 spring 包到 5.3.39 修复漏洞 cve-2024-38808，cve-2024-38809（感谢@龙猫）gitee pr 281\n\n----------------------------------------\n\n\n# 2.11.9.1-beta (2024-08-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 项目监控新增沉默时间配置，避免报警后不再触发报警\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】修复 多会话使用文件跟踪器可能出现多个线程未关闭问题（感谢@沐剑屏 gitee issues iai0i1 ）\n 2. 【all】修复 windows 管理脚本在 jdk 1.8 无法正常启动（感谢@流浪的墨染青衫、@ll）\n 3. 【server】修复 多个工作空间分组后子工作空间层级异常造成不能正常使用\n 4. 【server】修复 监控日志标题字段长度太短在英语模式下字段异常（感谢@deer）\n 5. 【server】优化 监控新增使用语言来实现通知消息国际化\n\n----------------------------------------\n\n\n# 2.11.8.5-beta (2024-08-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 更多组件的页面层级问题，避免层级错乱无法正常使用页面相关功能\n 2. 【server】修复 容器构建 dsl 配置示例错乱\n\n----------------------------------------\n\n\n# 2.11.8.4-beta (2024-07-25)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 登录验证码去除易混淆字母（oo0、ll1、q9q、pp）\n 2. 【server】修复 批量构建引起环境变量丢失问题（感谢@xieliangza github issues 88 ）\n 3. 【all】优化 解析 http accept-language 请求头支持多语言最高优先级\n 4. 【server】修复 页面未刷新情况下打开弹窗次数过多不能提示窗口层级太低（感谢@lin_yeqi gitee issues iaebuz ）\n 5. 【server】优化 分发日志显示关联数据信息（感谢@pumpkinor gitee issues iaf7iv ）\n 6. 【server】优化 分发文件使用文件中心或者静态文件上传至节点使用实际文件名（感谢@pumpkinor gitee issues iaf7gd ）\n 7. 【server】优化 ssh 文件管理支持浏览器分片上传（感谢@超人那个超i gitee issues iad9w4 ）\n 8. 【all】优化 管理脚本判断 jdk9+ 自动添加解除限制反射参数：--add-opens=xxxx\n\n----------------------------------------\n\n\n# 2.11.8.3-beta (2024-07-05)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 淘汰javax.security.cert.x509certificate（感谢@jie github issues 84 ）\n 2. 【all】优化 启动控制台日志完善 i18n\n 3. 【server】修复 证书删除后弹窗未正常关闭\n\n----------------------------------------\n\n\n# 2.11.8.2-beta (2024-07-04)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 非管理员用户无法使用脚本库数据（感谢@丁炳坤 gitee issues ia8zkp ）\n 2. 【server】修复 构建编辑页面未输入构建命令提示错误（感谢@yt gitee issues iaai8d ）\n 3. 【server】优化 构建容器镜像支持推送到远程仓库后自动删除本地镜像（感谢 @爱琳琳真是太好了 gitee issues ia6ubo ）\n\n----------------------------------------\n\n\n# 2.11.8.1-beta (2024-07-03)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 静态文件扫描到空时更新数据库异常（感谢@blackcat gitee issues ia6uo0 ）\n 2. 【server】修复 ssh命令行操作日志支持更全展示（感谢@beens gitee issues ia6p3j ）\n 3. 【all】优化 升级 hutool、oshi、mwiede-jsch、fastjson2 版本\n\n----------------------------------------\n\n\n# 2.11.7.1-beta (2024-06-20)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 操作确认交互弹窗层级过低无法正常显示使用（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.6.5-beta (2024-06-17)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 服务端脚本、ssh 脚本支持引用全局脚本库（g@("xx") xx 为脚本标记）\n 2. 【agent】新增 节点脚本支持引用全局脚本库（g@("xx") xx 为脚本标记）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】修复 不同工作空间下同一个机器节点相同的项目id的项目数据被覆盖（感谢@小朱）\n 2. 【agent】优化 dsl 项目支持引用脚本库中的脚本（g@xxxx）xxxx 为脚本标记\n 3. 【all】优化 新增系统语言配置 jpom.system.lang\n 4. 【server】优化 前端紧凑模式在浅色模式下也生效\n\n\n# ⚠️ 注意\n\n * 前端国际化翻译程度：90%\n * 后端已翻译语言可以度：80%（部分异步执行日志等目前未支持）\n\n后端日志国际化需要新增或者修改 jpom.system.lang 配置项\n\n----------------------------------------\n\n\n# 2.11.6.4-beta (2024-06-14)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 支持 i18n 语言国际化（zh-cn、en-us）\n\n\n# ⚠️ 注意\n\n# 翻译进度\n\n * 前端国际化翻译程度：80%\n * 后端国际化翻译程度：90%\n\n# 使用程度\n\n * 前端已翻译语言可以度：100%\n * 后端已翻译语言可以度：60%（后端日志、异步执行日志等目前未支持）\n\n\n# 🤝致谢\n\n感谢 @a20070322 / controllers 大佬贡献 jpom 前端 i18n 工具。\n\n----------------------------------------\n\n\n# 2.11.6.3-beta (2024-06-14)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 全局脚本库（dsl 项目可引用）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 gogs 仓库令牌导入异常（感谢@张飞鸿）\n 2. 【server】修复 自定义仓库令牌导入后页面异常（感谢@张飞鸿）\n\n----------------------------------------\n\n\n# 2.11.6.2-beta (2024-06-06)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 没有端口的容器重建页面异常（感谢@冰淇淋还是冰激凌）\n 2. 【server】修复 工作空间菜单配置错误（感谢@again... .）\n 3. 【server】优化 ssh 管理独立 tab 页面使用默认的字符串排序\n 4. 【server】修复 服务端脚本无法执行、参数值描述不对应（感谢@冰淇淋还是冰激凌）\n\n----------------------------------------\n\n\n# 2.11.6.1-beta (2024-06-04)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目文件支持快捷复制到当前文件夹\n 2. 【agent】新增 项目文件夹支持快捷压缩（感谢@yiziyu gitee issues i9737l ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 部分参数、环境变量配置交互优化取消文本输入框采用标签模式（感谢@湘江夜色）\n 2. 【server】修复 部分页面中文描述未正常显示\n 3. 【server】优化 文件发布支持选择脚本模板（感谢@lincodetest gitee issues i9p0eu ）\n 4. 【server】优化 升级 postgresql 版本（感谢@ʟᴊx💎💎）\n 5. 【server】修复 机器相关授权配置文件后缀输入框未正常显示（@感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.5.2-beta (2024-05-30)\n\n\n# 🐣 新增功能\n\n 1. 【all】升级 tomcat、yaml 版本（感谢@佳驰）\n 2. 【all】升级 bcprov-jdk18on 版本\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 自动续签采用无感模式（感谢@湘江夜色）\n 2. 【server】优化 容器构建执行配置自定义 host 参数（感谢@冰淇淋还是冰激凌）\n\n----------------------------------------\n\n\n# 2.11.5.1-beta (2024-04-30)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 项目支持配置禁止扫描目录避免大目录页面超时（感谢@我）\n\n----------------------------------------\n\n\n# 2.11.5.0-beta (2024-04-29)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 自由脚本方便调试机器节点\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 资产管理 ssh 配置禁用命令无法回显（感谢@zhangw）\n 2. 【server】修复 资产管理 ssh 未配置授权目录时 npe （感谢@anley gitee issues i9j17g ）\n 3. 【agent】优化 监控机器网络流程支持配置排除网卡或者仅统计对应的网卡\n 4. 【server】修复 退出登录时页面会提示需要登录相关信息\n 5. 【server】优化 页面检测新版本判断是否加入 beta\n 6. 【agent】优化 添加数据记录修改人（感谢@陈旭 gitee issues i9jsy7 ）\n 7. 【server】优化 插件端注册到服务端，网络测试支持 ping + telnet （感谢@泊凉青川）\n\n----------------------------------------\n\n\n# 2.11.4.2-beta (2024-04-22)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 发布系统公告\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】升级 前端组件版本\n 2.  【all】优化 管理脚本删除 -xx:-usebiasedlocking 使其能在高版本 jdk 运行\n 3.  【server】修复 构建列表卡片模式按钮文字错乱\n 4.  【server】修复 项目列表和逻辑节点卡片视图冲突\n 5.  【server】修复 docker管理新增docker选择证书界面权重异常 （感谢@伤感的风铃草 gitee issues i9gyva ）\n 6.  【server】修复 系统管理中用户管理中登录日志无法筛选\n 7.  【server】优化 用户登录记录操作日志（保证操作监控能记录）\n 8.  【server】修复 系统管理中用户登录日志无法分页\n 9.  【server】优化 oauth2 支持配置创建账号配置权限组\n 10. 【server】修复 文件发布权限为执行权限、文件发布记录删除无记录日志 （感谢@蓝枫）\n\n----------------------------------------\n\n\n# 2.11.4.1 (2024-04-12)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建相关页面无法正常打开\n 2. 【server】优化 git 仓库地址不正确相关提示更准确（感谢@易自玉）\n\n----------------------------------------\n\n\n# 2.11.4.0 (2024-04-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 oauth2 新增【飞书账号】、【自建 gitlab】登录（感谢@鸡皮蒜毛与鸡毛蒜皮 gitee issues i9elgs ）\n 2. 【server】新增 oauth2 新增企业微信登录\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 oauth2 第三方平台登录解析用户名将依次尝试：平台用户名、邮箱、uuid\n 2. 【server】修复 无法查询到分组信息（页面下拉框）（感谢@robot gitee issues i9fn9u ）\n 3. 【all】升级 hutool 版本\n 4. 【server】修复 修复孤独数据描述错别字（感谢@cuiyongsheng github issues 77 ）\n 5. 【server】修复 前端地址栏输入二级路径 404 页面卡死问题\n\n----------------------------------------\n\n\n# 2.11.3.2 (2024-04-07)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 oauth2 新增钉钉扫码登录\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】优化 dsl 项目支持配置在特定目录执行脚本（run.execpath）\n 2. 【agent】优化 管理脚本 -xss 默认值修改为 512k（感谢@again... ）\n 3. 【server】优化 管理脚本 -xss 默认值修改为 1024k（感谢@again... ）\n 4. 【server】优化 声明使用开源软件列表、增加本软件开源协议声明\n\n----------------------------------------\n\n\n# 2.11.3.1 (2024-04-02)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持 mariadb\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 无法查询到分组信息（页面下拉框）（感谢@猫猫向钱跑）\n 2. 【server】修复 【项目文件管理远程下载】、【镜像创建容器】确认按钮无法使用（感谢@猫猫向钱跑）\n 3. 【server】修改 资产管理机器管理删除按钮无法正常使用（感谢@🇩）\n 4. 【server】修复 ssh 面板文件管理无法正常切换（感谢@勤思·）\n 5. 【server】优化 部分页面在火狐浏览器无法正常打开（感谢@sparkarvin gitee issues i96ioa ） （感谢@a20070322 gitee pr 221 ）\n\n----------------------------------------\n\n\n# 2.11.3.0 (2024-03-21)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 数据库支持 postgresql （感谢@王先生）gitee pr 223\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【all】优化 新增 jpom.system.command-use-sudo 配置属性控制是否使用 sudo 执行部分系统命令\n 2.  【server】优化 前端页面 keep-alive 可能导致的内存泄漏问题（感谢@a20070322 gitee issues i9510m ）\n 3.  【server】修复 部分弹窗不生效问题（感谢@a20070322 gitee pr 215 ）\n 4.  【server】优化 前端 es lint 配置规范前端代码（感谢@a20070322 gitee pr 214 / gitee pr 215 / gitee pr 217 ）\n 5.  【server】修复 docker 控制台网络选项卡页面空白（感谢@破冰）\n 6.  【server】修复 节点历史监控统计图表时间查询不生效（感谢@九問）\n 7.  【server】优化 ssh 脚本触发器支持传入参数当环境变量（感谢@小朱）\n 8.  【server】修复 h2迁移其它数据库时部分数据丢失（感谢@王先生）gitee issues i9977k\n 9.  【server】优化 逐步引入新版表格（构建、项目、节点、资产机器）（感谢@a20070322 gitee pr 218 / gitee pr 220 / gitee pr 222 ）\n 10. 【server】优化 工作空间概括构建日志支持快速查看详情（感谢@roger.cao）\n\n----------------------------------------\n\n\n# 2.11.2.3 (2024-02-29)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 系统文件占用空间统计周期调整为每天2次（感谢@singlethread gitee issues i9302u ）\n 2. 【server】优化 支持配置前端所有参数编码来规避部分安全规则检查（感谢@zhaozxc2010 gitee issues i8z1vj ）\n 3. 【server】优化 上传文件空文件提示文件路径（感谢@schuckbate gitee issues i93fi6 ）\n 4. 【server】优化 监听日志文件消息发送失败后自动移除会话（感谢@singlethread gitee issues i93zfx ）\n 5. 【server】优化 容器构建产物为文件时保存路径层级错误（感谢@vfhky）github pr 71 ）\n\n----------------------------------------\n\n\n# 2.11.2.2 (2024-02-22)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 升级 docker-java、jgit 版本\n 2. 【all】优化 升级 commons-compress 版本\n 3. 【agent】优化 升级 oshi 版本\n 4. 【server】优化 新增配置节点 websocket 通讯消息大小限制（jpom.node.web-socket-message-size-limit）（感谢@长弘）\n\n----------------------------------------\n\n\n# 2.11.2.1 (2024-02-19)\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 构建代码未变动流程打断触发器未传入原因（statusmsg）（感谢@烛孩）\n 2.  【server】修复 项目控制台日志删除弹窗未能正常关闭（感谢@%）\n 3.  【server】修复 脚本日志时间筛选不生效（感谢@zhaozxc2010 gitee issues i8znkl ）\n 4.  【server】优化 页面左侧菜单固定悬浮不跟随屏幕滚动条滚动（感谢@a20070322 gitee issues i8zoob / gitee pr 201 ）\n 5.  【server】优化 新增机器节点提示未选择协议（感谢@a20070322 gitee issues i8zdzt / gitee pr 202 ）\n 6.  【server】修复 ssh 资产硬盘信息显示错误（感谢@a20070322 gitee issues i8zy7k ）\n 7.  【server】优化 表格搜索区域小屏幕适配 （感谢@a20070322 gitee issues i8zy0b ）\n 8.  【server】优化 ssh 文件管理树操作优化 （感谢@a20070322 gitee issues i9054l / gitee issues i5dmkg ）\n 9.  【server】优化 整体页面顶部菜单吸顶效果（感谢@a20070322 gitee issues i907y8 ）\n 10. 【server】优化 资产监控线程池独立管理（感谢@singlethread gitee issues i918ab ）\n 11. 【server】优化 构建回滚使用构建独立线程池\n 12. 【all】优化 升级 hutool 版本（主要解决版本号排序异常）（感谢 @tom xin gitee issues i8z3ti / hutool issues i8z3ve）\n 13. 【all】优化 升级 fastjson 版本\n 14. 【server】优化 页面整体滚动条兼容高版本浏览器（感谢@controllers）\n\n\n# 🤝致谢\n\n感谢 @a20070322 / controllers 大佬帮助优化 jpom 前端部分老大难问题。\n\n----------------------------------------\n\n\n# 2.11.2.0 (2024-01-22)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】修复 修改项目日志路径如果文件夹不存在报错（感谢@长弘）\n 2. 【server】修复 节点机器日志无法下载（感谢@again...）\n 3. 【all】升级 hutool 版本\n 4. 【agent】升级 oshi 版本\n 5. 【server】升级 mwiede、apache-sshd 版本（感谢@*斌）\n 6. 【server】优化 项目列表 file 类型正常排序（不再排序到最后）（感谢@pal865 gitee issues i8xu32 ）\n 7. 【all】修复 windows 环境保存配置并重启失败（感谢@robot gitee issues i8y01t ）\n 8. 【server】修复 新版本页面部分分页切换失效（构建详情、资产机器、逻辑节点）（感谢@zac）\n\n----------------------------------------\n\n\n# 2.11.1.5 (2024-01-18)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】修复 插件端非默认工作空间项目重启后变为孤独数据（感谢@ccx2480）\n 2. 【server】修复 新增节点分发项目数据为孤独数据\n\n----------------------------------------\n\n\n# 2.11.1.3/4-beta (2024-01-17)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 修复页面打包页面底部白屏\n\n----------------------------------------\n\n\n# 2.11.1.2-beta (2024-01-17)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 触发器调用次数统计、触发器统一管理\n 2. 【server】新增 本地构建命令执行支持配置多线程方式（多线程接收输出流，避免极端情况卡死）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】优化 机器状态新增：资源监控异常（资源监控异常不影响功能使用）\n 2. 【server】优化 取消登录页动态背景图\n 3. 【server】修复 节点分发文件中心、静态文件后文件自动被删除（感谢@九問）\n 4. 【server】优化 容器构建支持配置容器资源（hostconfig）（感谢@珂儿）\n\n----------------------------------------\n\n\n# 2.11.1.1-beta (2024-01-16)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 静态文件名太短（100个字符）（感谢@*斌）\n 2. 【server】修复 还原数据库弹窗内容提示为空（感谢@伤感的风铃草🌿）\n 3. 【server】优化 echarts 支持跟随深色模式\n 4. 【server】修复 编辑节点分发服务端脚本弹窗被挡住（感谢@🇩）\n 5. 【server】优化 前端打包（缩减首屏加载时间）（感谢@曾梦想仗剑走天涯）\n\n----------------------------------------\n\n\n# 2.11.1.0-beta (2024-01-15)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 docker tls 证书无法查看全部、证书无法编辑（新版遗漏）\n 2. 【server】优化 docker 资产监控支持自定义配置 cron jpom.assets.docker.monitor-cron\n 3. 【server】修复 容器终端、容器日志无法正常使用\n 4. 【server】修复 新版本页面多处无法正常使用相关问题（优化部分提示说明）\n\n----------------------------------------\n\n\n# 2.11.0.13-beta (2024-01-12)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 部分 mysql 存储创建索引异常\n 2. 【agent】优化 插件端自由脚本（分发文件脚本）大小限制调整为 5m（感谢@九問）\n 3. 【server】修复 新版本 ui 部分错别字、日志阅读查看无法正常使用等\n 4. 【server】优化 编辑器样式、dsl 配置样式\n\n----------------------------------------\n\n\n# 2.11.0.12-beta (2024-01-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产总览统计\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 mysql 存储使用游标查询报错（不使用游标）（感谢@🇩）\n 2. 【server】修复 新版 ui 下拉框搜索不生效\n 3. 【server】优化 添加关键词替换为新增\n 4. 【server】优化 部分页面无数据提示\n 5. 【server】修复 节点分发构建产物选择构建历史为匹配对应构建\n 6. 【server】修复 部分操作构建环境变量丢失（保存并构建、后台构建、直接构建）\n\n----------------------------------------\n\n\n# 2.11.0.11-beta (2024-01-11)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 编辑器无法加载样式\n 2. 【server】优化 本地 git 联动严格执行开关\n 3. 【server】修复 打包后终端弹窗样式错乱（感谢@🇩）\n 4. 【server】修复 切换账户、退出登录菜单未刷新问题（感谢@ccx2480）\n 5. 【server】修复 登录账户未跳转配置的第一个工作空间（未遵循自定义配置）\n\n----------------------------------------\n\n\n# 2.11.0.10-beta (2024-01-10)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 系统git拉取代码时，强制云端最新代码覆盖本地代码\n 2. 【server】修复 升级页面更新日志样式错乱\n 3. 【server】修复 切换账户后用户信息未自动刷新\n 4. 【agent】修复 部分操作引起项目节点分发属性丢失问题\n 5. 【server】修复 无法新增项目（权限判断异常）（感谢@群友）\n 6. 【agent】修复 插件端环境变量值获取异常\n 7. 【agent】优化 插件端 java 项目启动支持读取环境变量\n 8. 【server】修复 项目列表选择错乱、批量操作无法正常使用（感谢@🇩）\n\n----------------------------------------\n\n\n# 2.11.0.9-beta (2024-01-10)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 孤独数据管理（查看孤独数据、修正孤独数据）（感谢@陈旭 gitee issues i8unxz）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 上传文件前解析文件信息采用全局 loading\n 2. 【server】优化 构建流程交互（采用步骤条）\n 3. 【server】修复 部分 icon 未更新、部分弹窗列表数据不能正常显示\n 4. 【server】修复 docker-compose 容器状态无非正确显示\n 5. 【agent】修复 低版本项目数据未存储节点id\n 6. 【server】优化 节点项目、节点脚本操作鉴权（需要服务端缓存中有对应的数据）\n\n----------------------------------------\n\n\n# 2.11.0.8-beta (2024-01-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 前端 ui 支持配置浅色、深色主题、左边菜单主题\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 容器构建 dsl 未回显任何内容\n 2. 【server】修复 登录页面禁用验证码失效（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.11.0.7-beta (2024-01-08)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】升级 页面 ui 组件、vue 版本升级到最新\n 2. 【server】修复 部分低频功能无法正常使用（项目备份文件管理等）\n 3. 【server】修复 部分执行异常未输出到操作日志文件中（感谢@闫淼淼）\n\n\n# ⚠️ 注意\n\n 1. 取消全局 loading（局部loading）\n 2. 编辑器延迟 1 秒加载（避免样式错乱）\n 3. 所有快捷复制区域变小为一个点击复制图标\n 4. 弹窗、抽屉样式变动\n 5. 取消操作引导（临时）\n 6. 表格将跟随列内容长度自动拉伸出现横向滚动（不会折叠）\n 7. 个性化配置取消：【页面自动撑开、滚动条显示、页面导航】\n 8. 新版本前端 node 版本推荐：18.19.0\n 9. json viewer 还未实现\n\n----------------------------------------\n\n\n# 2.11.0.6-beta (2024-01-05)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】优化 日志记录器提升日志记录性能\n 2. 【server】优化 取消/停止构建采用异常来打断子进程\n 3. 【server】修复 本地构建无法取消\n 4. 【server】修复 服务端脚本触发器、节点脚本触发器提示找不到用户（感谢@lyy）\n\n----------------------------------------\n\n\n# 2.11.0.5-beta (2024-01-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 工作空间管理中新增概括总览页面\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 支持批量删除构建信息（感谢@奇奇）\n 2. 【server】修复 删除项目、删除分发检查关联构建失败问题\n 3. 【all】优化 关闭 process 方式\n 4. 【server】优化 节点分发相关页面问题（感谢@陈旭 gitee issues i8tmdw）\n\n----------------------------------------\n\n\n# 2.11.0.4-beta (2024-01-03)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 工作空间菜单配置无法使用（感谢@新）\n 2. 【server】优化 重新同步节点项目、节点脚本缓存交互\n 3. 【server】优化 ssh 脚本执行模板独立（/exec/template.sh -> /ssh/template.sh）\n 4. 【server】优化 服务端脚本支持加载脚本模板来实现自动加载部分环境变量\n\n\n# ⚠️ 注意\n\n如果您自定义过 ssh 脚本默认那么您需要重新同步一下脚本模板/exec/template.sh -> /ssh/template.sh\n\n新版本 /exec/template.sh 中仅在服务端中生效（本地构建脚本、服务端脚本、本地发布脚本）\n\n----------------------------------------\n\n\n# 2.11.0.3-beta (2024-01-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 没有对应的工作空间权限\n\n----------------------------------------\n\n\n# 2.11.0.2-beta (2024-01-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】修复 环境变量为 null 是未忽略\n\n----------------------------------------\n\n\n# 2.11.0.1-beta (2024-01-02)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 项目支持软链其他项目（代替项目副本）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 新版页面漏掉项目复制按钮\n 2.  【server】优化 逻辑节点中项目数和脚本数仅显示当前工作空间数量\n 3.  【server】优化 项目编辑和节点分发页面支持快捷配置授权目录\n 4.  【server】优化 项目编辑支持切换节点（快速同步其他节点项目）\n 5.  【server】修复 没有工作空间权限时页面循环跳转（感谢@王先生 gitee issues i8rr01）\n 6.  【all】优化 授权目录判断逻辑\n 7.  【agent】取消 插件端授权目录关闭包含判断(jpom.whitelist.check-starts-with)\n 8.  【server】优化 触发器清理优化、删除用户主动删除关联触发器\n 9.  【server】优化 dsl 项目控制台支持快捷编辑节点脚本（查看流程信息）\n 10. 【server】修复 项目触发器无法调用\n\n\n# ⚠️ 注意\n\n 1. 如果您配置了授权目录但是保存项目报错您可以尝试重新报错一下授权目录来自动修复授权目录配置数据\n 2. 项目控制台日志默认路径调整为插件端数据目录下project-log/${projectid}/${projectid}.log\n 3. 项目控制台日志备份默认路径调整为插件端数据目录下project-log/${projectid}/back/${projectid}-xxxxxxx.log\n\n----------------------------------------\n\n\n# 2.11.0.0-beta (2023-12-29)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 节点分发可以指定构建历史产物发布\n 2. 【server】新增 节点分发可以指定文件中心发布\n 3. 【server】新增 dsl 项目新增 reload 事件（可以开启文件变动触发）\n 4. 【server】新增 静态文件授权服务端指定目录到工作空间来管理（分发）(感谢@*斌)\n 5. 【server】新增 节点分发可以指定静态文件发布\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】修复 项目列表批量操作弹窗定时刷新引起异常（感谢@曾梦想仗剑走天涯）\n 2.  【all】下架 全面下架项目副本功能（请使用 dsl 模式代替）\n 3.  【all】下架 全面节点证书管理功能（请使用工作空间证书代替）\n 4.  【all】下架 全面架节点 nginx 管理功能（请使用 dsl 模式代替）\n 5.  【server】优化 节点管理仅保留项目管理、脚本管理、脚本日志（其他功能迁移到机器资产管理）\n 6.  【server】修复 项目复制按钮点击无响应\n 7.  【all】优化 查看插件端和服务端的系统日志 websocket 地址\n 8.  【server】优化 监控机器系统负载保留2位小数\n 9.  【server】下架 取消节点管理员权限\n 10. 【server】修复 文件变动触发器不生效的问题\n 11. 【all】优化 项目操作接口合并（4 合 1）\n 12. 【server】优化 配置授权目录需要使用到绝对路径\n\n\n# ⚠️ 注意\n\n 1. 全面下架项目副本功能（请使用 dsl 模式代替）如果您当前使用到此功能请先手动备份相关数据\n 2. 升级后项目副本数据会被人工或者系统更新项目数据自动删除（请一定提前做好备份操作）\n 3. 全面下架节点证书管理功能（请使用工作空间证书代替）如果您当前使用到此功能请先手动备份相关数据\n 4. 全面下架全下架节点 nginx 管理功能（请使用 dsl 模式代替）如果您当前使用到此功能请先手动备份相关数据\n\n> ❓ 为什么要下架上述功能：由于版本迭代已经有更好的新功能可以代替之前旧功能，并且新功能从另一种角度更方便。下架也是为了我们后续版本维护迭代更高效\n\n * 【白名单】关键词统一调整为【授权】\n * 【黑名单】关键词统一调整为【禁止】\n\n----------------------------------------',charsets:{cjk:!0},lastUpdated:"2025/07/30, 12:04:27",lastUpdatedTimestamp:1753877067e3},{title:"2.10.x-beta",frontmatter:{title:"2.10.x-beta",date:"2023-03-23T12:32:45.000Z",permalink:"/pages/cc9ffc/",categories:["docs","文档","更新日志","更新说明"],tags:["2.10.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/1181.2.10.x-beta.html",relativePath:"日志&下载/01.更新日志/1181.2.10.x-beta.md",key:"v-3ae37d31",path:"/pages/cc9ffc/",headers:[{level:2,title:"2.10.47.7-beta (2023-12-25)",slug:"_2-10-47-7-beta-2023-12-25",normalizedTitle:"2.10.47.7-beta (2023-12-25)",charIndex:2},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.47.6-beta (2023-12-25)",slug:"_2-10-47-6-beta-2023-12-25",normalizedTitle:"2.10.47.6-beta (2023-12-25)",charIndex:414},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.47.5-beta (2023-12-22)",slug:"_2-10-47-5-beta-2023-12-22",normalizedTitle:"2.10.47.5-beta (2023-12-22)",charIndex:764},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.47.4-beta (2023-12-22)",slug:"_2-10-47-4-beta-2023-12-22",normalizedTitle:"2.10.47.4-beta (2023-12-22)",charIndex:966},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.47.3-beta (2023-12-22)",slug:"_2-10-47-3-beta-2023-12-22",normalizedTitle:"2.10.47.3-beta (2023-12-22)",charIndex:1131},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.47.2-beta (2023-12-21)",slug:"_2-10-47-2-beta-2023-12-21",normalizedTitle:"2.10.47.2-beta (2023-12-21)",charIndex:1495},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-6",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.47.1-beta (2023-12-19)",slug:"_2-10-47-1-beta-2023-12-19",normalizedTitle:"2.10.47.1-beta (2023-12-19)",charIndex:1864},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-7",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:3,title:"⚠️ 注意",slug:"⚠️-注意",normalizedTitle:"⚠️ 注意",charIndex:2190},{level:2,title:"2.10.46.2-beta (2023-12-15)",slug:"_2-10-46-2-beta-2023-12-15",normalizedTitle:"2.10.46.2-beta (2023-12-15)",charIndex:2593},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-8",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.46.1-beta (2023-10-20)",slug:"_2-10-46-1-beta-2023-10-20",normalizedTitle:"2.10.46.1-beta (2023-10-20)",charIndex:3060},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-9",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.45.3-beta (2023-10-17)",slug:"_2-10-45-3-beta-2023-10-17",normalizedTitle:"2.10.45.3-beta (2023-10-17)",charIndex:3200},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-10",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.45.2-beta (2023-09-18)",slug:"_2-10-45-2-beta-2023-09-18",normalizedTitle:"2.10.45.2-beta (2023-09-18)",charIndex:3491},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-11",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.45.1-beta (2023-09-15)",slug:"_2-10-45-1-beta-2023-09-15",normalizedTitle:"2.10.45.1-beta (2023-09-15)",charIndex:3715},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-12",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.44.4-beta (2023-09-02)",slug:"_2-10-44-4-beta-2023-09-02",normalizedTitle:"2.10.44.4-beta (2023-09-02)",charIndex:4191},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-13",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.44.3-beta (2023-08-31)",slug:"_2-10-44-3-beta-2023-08-31",normalizedTitle:"2.10.44.3-beta (2023-08-31)",charIndex:4375},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-14",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.44.2-beta (2023-08-30)",slug:"_2-10-44-2-beta-2023-08-30",normalizedTitle:"2.10.44.2-beta (2023-08-30)",charIndex:4498},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-15",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.44.1-beta (2023-08-29)",slug:"_2-10-44-1-beta-2023-08-29",normalizedTitle:"2.10.44.1-beta (2023-08-29)",charIndex:4649},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-6",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-16",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.42.6-beta (2023-08-23)",slug:"_2-10-42-6-beta-2023-08-23",normalizedTitle:"2.10.42.6-beta (2023-08-23)",charIndex:5002},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-17",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.42.5-beta (2023-08-23)",slug:"_2-10-42-5-beta-2023-08-23",normalizedTitle:"2.10.42.5-beta (2023-08-23)",charIndex:5139},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-7",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-18",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.42.4-beta (2023-08-19)",slug:"_2-10-42-4-beta-2023-08-19",normalizedTitle:"2.10.42.4-beta (2023-08-19)",charIndex:5448},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-8",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-19",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.42.3-beta (2023-08-04)",slug:"_2-10-42-3-beta-2023-08-04",normalizedTitle:"2.10.42.3-beta (2023-08-04)",charIndex:5823},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-9",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-20",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.42.2-beta (2023-07-04)",slug:"_2-10-42-2-beta-2023-07-04",normalizedTitle:"2.10.42.2-beta (2023-07-04)",charIndex:6113},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-10",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-21",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.42.1-beta (2023-06-26)",slug:"_2-10-42-1-beta-2023-06-26",normalizedTitle:"2.10.42.1-beta (2023-06-26)",charIndex:6480},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-11",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-22",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.41.3-beta (2023-06-12)",slug:"_2-10-41-3-beta-2023-06-12",normalizedTitle:"2.10.41.3-beta (2023-06-12)",charIndex:7044},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-12",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-23",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-2",normalizedTitle:"⚠️ 注意",charIndex:2190},{level:2,title:"2.10.41.2-beta (2023-06-09)",slug:"_2-10-41-2-beta-2023-06-09",normalizedTitle:"2.10.41.2-beta (2023-06-09)",charIndex:7612},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-13",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-24",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.41.1-beta (2023-05-15)",slug:"_2-10-41-1-beta-2023-05-15",normalizedTitle:"2.10.41.1-beta (2023-05-15)",charIndex:7942},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-14",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-25",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.40.8-beta (2023-04-19)",slug:"_2-10-40-8-beta-2023-04-19",normalizedTitle:"2.10.40.8-beta (2023-04-19)",charIndex:8358},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-26",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.40.6-beta (2023-04-14)",slug:"_2-10-40-6-beta-2023-04-14",normalizedTitle:"2.10.40.6-beta (2023-04-14)",charIndex:8588},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-15",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-27",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.40.5-beta (2023-04-12)",slug:"_2-10-40-5-beta-2023-04-12",normalizedTitle:"2.10.40.5-beta (2023-04-12)",charIndex:9023},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-28",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.40.4-beta (2023-04-07)",slug:"_2-10-40-4-beta-2023-04-07",normalizedTitle:"2.10.40.4-beta (2023-04-07)",charIndex:9259},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-29",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.40.3-beta (2023-04-06)",slug:"_2-10-40-3-beta-2023-04-06",normalizedTitle:"2.10.40.3-beta (2023-04-06)",charIndex:9391},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-30",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.40.2-beta (2023-04-04)",slug:"_2-10-40-2-beta-2023-04-04",normalizedTitle:"2.10.40.2-beta (2023-04-04)",charIndex:9814},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-31",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.40.1-beta (2023-04-04)",slug:"_2-10-40-1-beta-2023-04-04",normalizedTitle:"2.10.40.1-beta (2023-04-04)",charIndex:10021},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-32",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.39.4-beta (2023-04-03)",slug:"_2-10-39-4-beta-2023-04-03",normalizedTitle:"2.10.39.4-beta (2023-04-03)",charIndex:10157},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-33",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.39.3-beta (2023-04-03)",slug:"_2-10-39-3-beta-2023-04-03",normalizedTitle:"2.10.39.3-beta (2023-04-03)",charIndex:10309},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-34",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.39.2-beta (2023-03-31)",slug:"_2-10-39-2-beta-2023-03-31",normalizedTitle:"2.10.39.2-beta (2023-03-31)",charIndex:10625},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-35",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.39.1-beta (2023-03-31)",slug:"_2-10-39-1-beta-2023-03-31",normalizedTitle:"2.10.39.1-beta (2023-03-31)",charIndex:10754},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-16",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-36",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.11-beta (2023-03-31)",slug:"_2-10-38-11-beta-2023-03-31",normalizedTitle:"2.10.38.11-beta (2023-03-31)",charIndex:11054},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-17",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-37",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.10-beta (2023-03-30)",slug:"_2-10-38-10-beta-2023-03-30",normalizedTitle:"2.10.38.10-beta (2023-03-30)",charIndex:11243},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-38",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.9-beta (2023-03-30)",slug:"_2-10-38-9-beta-2023-03-30",normalizedTitle:"2.10.38.9-beta (2023-03-30)",charIndex:11463},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-18",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-39",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.8-beta (2023-03-30)",slug:"_2-10-38-8-beta-2023-03-30",normalizedTitle:"2.10.38.8-beta (2023-03-30)",charIndex:11776},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-40",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.7-beta (2023-03-29)",slug:"_2-10-38-7-beta-2023-03-29",normalizedTitle:"2.10.38.7-beta (2023-03-29)",charIndex:11911},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-19",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-41",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.6-beta (2023-03-29)",slug:"_2-10-38-6-beta-2023-03-29",normalizedTitle:"2.10.38.6-beta (2023-03-29)",charIndex:12167},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-42",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.5-beta (2023-03-29)",slug:"_2-10-38-5-beta-2023-03-29",normalizedTitle:"2.10.38.5-beta (2023-03-29)",charIndex:12375},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-43",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-3",normalizedTitle:"⚠️ 注意",charIndex:2190},{level:2,title:"2.10.38.4-beta (2023-03-28)",slug:"_2-10-38-4-beta-2023-03-28",normalizedTitle:"2.10.38.4-beta (2023-03-28)",charIndex:12791},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-20",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-44",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.3-beta (2023-03-27)",slug:"_2-10-38-3-beta-2023-03-27",normalizedTitle:"2.10.38.3-beta (2023-03-27)",charIndex:13003},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-21",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-45",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.2-beta (2023-03-27)",slug:"_2-10-38-2-beta-2023-03-27",normalizedTitle:"2.10.38.2-beta (2023-03-27)",charIndex:13232},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-22",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-46",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:2,title:"2.10.38.1-beta (2023-03-23)",slug:"_2-10-38-1-beta-2023-03-23",normalizedTitle:"2.10.38.1-beta (2023-03-23)",charIndex:13828},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-23",normalizedTitle:"🐣 新增功能",charIndex:34},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-47",normalizedTitle:"🐞 解决bug、优化功能",charIndex:205},{level:3,title:"⚠️ 注意",slug:"⚠️-注意-4",normalizedTitle:"⚠️ 注意",charIndex:2190},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能",normalizedTitle:"❌ 不兼容功能",charIndex:14486}],headersStr:"2.10.47.7-beta (2023-12-25) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.47.6-beta (2023-12-25) 🐞 解决BUG、优化功能 2.10.47.5-beta (2023-12-22) 🐞 解决BUG、优化功能 2.10.47.4-beta (2023-12-22) 🐞 解决BUG、优化功能 2.10.47.3-beta (2023-12-22) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.47.2-beta (2023-12-21) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.47.1-beta (2023-12-19) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.46.2-beta (2023-12-15) 🐞 解决BUG、优化功能 2.10.46.1-beta (2023-10-20) 🐞 解决BUG、优化功能 2.10.45.3-beta (2023-10-17) 🐞 解决BUG、优化功能 2.10.45.2-beta (2023-09-18) 🐞 解决BUG、优化功能 2.10.45.1-beta (2023-09-15) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.44.4-beta (2023-09-02) 🐞 解决BUG、优化功能 2.10.44.3-beta (2023-08-31) 🐞 解决BUG、优化功能 2.10.44.2-beta (2023-08-30) 🐞 解决BUG、优化功能 2.10.44.1-beta (2023-08-29) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.42.6-beta (2023-08-23) 🐞 解决BUG、优化功能 2.10.42.5-beta (2023-08-23) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.42.4-beta (2023-08-19) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.42.3-beta (2023-08-04) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.42.2-beta (2023-07-04) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.42.1-beta (2023-06-26) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.41.3-beta (2023-06-12) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.41.2-beta (2023-06-09) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.41.1-beta (2023-05-15) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.40.8-beta (2023-04-19) 🐞 解决BUG、优化功能 2.10.40.6-beta (2023-04-14) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.40.5-beta (2023-04-12) 🐞 解决BUG、优化功能 2.10.40.4-beta (2023-04-07) 🐞 解决BUG、优化功能 2.10.40.3-beta (2023-04-06) 🐞 解决BUG、优化功能 2.10.40.2-beta (2023-04-04) 🐞 解决BUG、优化功能 2.10.40.1-beta (2023-04-04) 🐞 解决BUG、优化功能 2.10.39.4-beta (2023-04-03) 🐞 解决BUG、优化功能 2.10.39.3-beta (2023-04-03) 🐞 解决BUG、优化功能 2.10.39.2-beta (2023-03-31) 🐞 解决BUG、优化功能 2.10.39.1-beta (2023-03-31) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.38.11-beta (2023-03-31) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.38.10-beta (2023-03-30) 🐞 解决BUG、优化功能 2.10.38.9-beta (2023-03-30) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.38.8-beta (2023-03-30) 🐞 解决BUG、优化功能 2.10.38.7-beta (2023-03-29) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.38.6-beta (2023-03-29) 🐞 解决BUG、优化功能 2.10.38.5-beta (2023-03-29) 🐞 解决BUG、优化功能 ⚠️ 注意 2.10.38.4-beta (2023-03-28) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.38.3-beta (2023-03-27) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.38.2-beta (2023-03-27) 🐣 新增功能 🐞 解决BUG、优化功能 2.10.38.1-beta (2023-03-23) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意 ❌ 不兼容功能",content:"# 2.10.47.7-beta (2023-12-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理 SSH 支持配置禁用监控（避免频繁登录）jpom.assets.ssh.disable-monitor-group-name（感谢@Again...）\n 2. 【server】新增 资产管理 SSH 支持配置监控周期：jpom.assets.ssh.monitor-cron\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 导入 SSH、项目 CSV 数据自动识别编码格式\n 2. 【server】优化 执行 SSH 脚本获取流异常：getInputStream() should be called before connect()\n 3. 【server】升级 mwiede 依赖版本\n\n----------------------------------------\n\n\n# 2.10.47.6-beta (2023-12-25)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 系统日志页面空白\n 2. 【server】优化 资产机器卡片试图部分场景未对齐问题\n 3. 【server】优化 部分页面在小屏兼容（资产 Docker、节点分发）\n 4. 【server】优化 节点脚本支持解绑（避免无非使用的服务器无非删除脚本）\n 5. 【server】优化 白名单配置提示 nginx、证书功能将下线\n 6. 【all】移除 插件端配置远程下载 host 输入框\n 7. 【server】修复 项目、脚本、发布任务、日志阅读控制台无法正常使用问题（感谢@奇奇）\n\n----------------------------------------\n\n\n# 2.10.47.5-beta (2023-12-22)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 迁移项目关联构建关联的全局仓库无法完整迁移问题（感谢@奇奇）\n 2. 【server】优化 仓库支持查看关联的构建\n 3. 【server】修复 删除服务端脚本日志如果脚本不存在不能删除\n\n----------------------------------------\n\n\n# 2.10.47.4-beta (2023-12-22)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】升级 web axios 版本\n 2. 【server】修复 迁移项目判断条件不充足（同一个工作空间不迁移仓库和构建）\n\n----------------------------------------\n\n\n# 2.10.47.3-beta (2023-12-22)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 部分项目支持迁移工作空间和逻辑节点（感谢@奇奇）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 逻辑节点节目取消全局 loading（感谢@小菜鸡）\n 2. 【server】优化 新增个性化配置全屏打开日志弹窗（构建、SSH、脚本、Docker等日志）（感谢@张飞鸿）\n 3. 【server】修复 项目副本无法保存（修改中不能删除副本集、请到副本集中删除）\n 4. 【server】优化 服务端中可以支持创建编辑项目、创建节点脚本啦！！！\n 5. 【server】优化 项目列表支持删除项目、自动刷新项目\n\n----------------------------------------\n\n\n# 2.10.47.2-beta (2023-12-21)\n\n\n# 🐣 新增功能\n\n 1. 【server】优化 容器日志、集群任务日志支持下载（感谢@在时间里流浪）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】删除 项目副本中弃用兼容字段 parendId\n 2. 【server】优化 Docker 集群任务日志支持筛选行数、是否显示时间戳（感谢@在时间里流浪）\n 3. 【server】优化 修复容器构建中 cache 插件异常、默认插件无法正常使用问题（感谢@张飞鸿）\n 4. 【server】优化 项目控制台日志输出 N 人查看改为 N 个会话（@冬）\n 5. 【server】优化 添加超级管理员账号提醒勿使用常用账号\n\n----------------------------------------\n\n\n# 2.10.47.1-beta (2023-12-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建支持自定义插件（感谢@远方 Gitee issues I8PEWI）\n 2. 【server】新增 容器管理新增导出、导入镜像\n 3. 【server】新增 环境变量支持触发器获取、修改\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】升级 数据库 h2 版本\n 2. 【server】修复 构建事件脚本未修改执行状态和退出码问题\n 3. 【server】优化 构建事件脚本支持多选（顺序执行其中有一个中断将结束执行后续脚本）（感谢@loyal）\n 4. 【server】优化 服务端脚本触发类型新增构建事件\n\n\n# ⚠️ 注意\n\n新增容器构建自定义插件说明：\n\n 1. 到 【系统管理】->【配置管理】->【系统配置目录】 中找到 docker/uses 目录\n 2. 添加插件配置文件 /docker/uses/java8/install.sh 其中 java8 为新增的插件名\n 3. 注意脚本中需要自行控制插件相关依赖的文件，需要将最新的文件保持到 /opt/${name}/ 目录下，其中 ${name} 为插件名\n 4. 辅助说明1：插件支持自定义环境变量\n 5. 辅助说明2：自定义环境变量中需要引用插件目录请使用 ${JPOM_PLUGIN_PATH}\n 6. 系统默认集成了：java、maven、node、go、python3、gradle 默认插件有依赖版本检查如果您的网络不通建议自行创建插件来规避默认检查\n\n----------------------------------------\n\n\n# 2.10.46.2-beta (2023-12-15)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【all】优化 ConcurrentHashMap 修改为线程安全的 hutoll[SafeConcurrentHashMap]（感谢@在时间里流浪）\n 2. 【all】升级 mwiede.jsch、oshi、fastjson、hutool、spring-boot、docker-java\n 3. 【server】优化 SSH 脚本在部分场景阻塞卡死（ChannelType.EXEC 不添加超时时间）\n 4. 【server】优化 SSH 脚本执行输出退出码\n 5. 【server】优化 解决构建流程,环境变量env里出现value==null出现null报错 （感谢 @周冰 Gitee pr 197 ）\n 6. 【server】优化 SSH 脚本执行记录退出码\n 7. 【server】优化 服务端脚本执行记录新增执行状态和退出码\n\n----------------------------------------\n\n\n# 2.10.46.1-beta (2023-10-20)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 容器构建下载产物未关闭文件流占用句柄问题（感谢@在时间里流浪）\n\n----------------------------------------\n\n\n# 2.10.45.3-beta (2023-10-17)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建产物同步到文件中心支持独立配置保留天数（感谢@zhangxin2477 Gitee issues I82G2F）\n 2. 【server】优化 不能删除超级管理员账号\n 3. 【agent】修复 Agent.sh 脚本的缺少方法问题（感谢@Siwen Yu Github issues 64）\n 4. 【server】优化 系统管理查看操作日志显示全部工作空间\n\n----------------------------------------\n\n\n# 2.10.45.2-beta (2023-09-18)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 容器构建判断构建异常（严格模式异常中断构建）（感谢@在时间里流浪）\n 2. 【server】修复 构建流程中断触发 success 事件（感谢@在时间里流浪）\n 3. 【server】优化 SSH 独立管理面板支持快捷使用文件管理\n\n----------------------------------------\n\n\n# 2.10.45.1-beta (2023-09-15)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 SSH 新增独立管理面板（感谢@超人那个超i Gitee issues I7UFEX）\n 2. 【agent】新增 DSL 项目支持配置脚本环境变量（感谢@陈旭 Gitee issues I80PTK）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建详情页面支持快捷回滚、查看构建日志（感谢@縁來只爲伱 Gitee issues I7YSNH）\n 2. 【all】升级 hutool、commons-compress\n 3. 【agent】修复 重启项目偶发 NPE（监听日志关闭事件）（感谢@caiqy Gitee issues I7Z2U6）\n 4. 【server】优化 构建支持配置环境变量实现产物打包为 tar.gz (USE_TAR_GZ=1)\n 5. 【server】修复 文件管理偶发无法查看发片下载地址\n\n----------------------------------------\n\n\n# 2.10.44.4-beta (2023-09-02)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 资产管理共享仓库新建归属到工作空间问题（感谢@沈钊）\n 2. 【server】升级 springboot 、oshi、docker-java、jgit\n\n----------------------------------------\n\n\n# 2.10.44.3-beta (2023-08-31)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】升级 mwiede.jsch 版本\n\n----------------------------------------\n\n\n# 2.10.44.2-beta (2023-08-30)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建回滚创建新的构建记录（感谢@Smith Gitee issues I7VEJA）\n\n----------------------------------------\n\n\n# 2.10.44.1-beta (2023-08-29)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持 git submodules （感谢 @Croce Gitee pr 195 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 新增资产无法正常监控问题（感谢@乔、@MichelleChung、@Pluto）\n 2. 【server】优化 编辑集群地址不验证，调整到心跳检测验证（感谢@黄纲）\n 3. 【server】优化 构建新增环境变量：BUILD_ORIGINAL_RESULT_DIR_FILE、BUILD_RESULT_DIR_FILE（发布流程）(感谢@黄纲)\n\n----------------------------------------\n\n\n# 2.10.42.6-beta (2023-08-23)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 未配置集群地址时无法切换工作空间（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.10.42.5-beta (2023-08-23)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 集群化管理工作空间（感谢@定格、@paobu Gitee issues I7UG5V）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 资产管理 SSH 管理系统名称显示未知问题（感谢@勤思·）\n 2. 【server】优化 资产管理 Docker 管理支持配置分组\n 3. 【server】优化 仓库管理支持配置分组\n 4. 【server】优化 SSH 文件夹支持前端排序（感谢@勤思·）\n\n----------------------------------------\n\n\n# 2.10.42.4-beta (2023-08-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】优化 ssh 相关功能支持 openssh8+ （感谢 @孤城落寞 Gitee pr 193 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 仓库账号、 SSH 证书密码支持选择环境变量\n 2. 【all】升级 commons-compress、fastjson、hutool 版本\n 3. 【server】优化 maven 依赖冲突\n 4. 【server】优化 文件发布-节点发布文件名使用真实名称（感谢@勤思·）\n 5. 【server】优化 文件发布-ssh发布新增变量：FILE_NAME、FILE_EXT_NAME\n\n----------------------------------------\n\n\n# 2.10.42.3-beta (2023-08-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 SSH 文件管理修改文件权限功能（感谢 @MichelleChung Gitee issues I6VDXS ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】升级 h2、SpringBoot 版本\n 2. 【server】使用系统git时，无法克隆tag问题优化 （感谢@唐明）\n 3. 【server】优化 SSH 和 代码仓库的密码从工作空间变量中读取\n\n----------------------------------------\n\n\n# 2.10.42.2-beta (2023-07-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 Docker 容器重建功能，即删除原有的容器，重新创建一个新的容器\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 删除工作空间前预检查关联数据存在情况（感谢 @陈旭 Gitee issues I7F0ZN ）\n 2. 【server】优化 退出登录支持彻底退出、切换账号退出（感谢 @wangfubiao Gitee issues I7GA5Q ）\n 3. 【server】优化 IP 白名单验证忽略 IPV6 情况\n 4. 【server】优化 服务端缓存管理支持查看黑名单 IP 详细信息（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.42.1-beta (2023-06-26)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 Docker 管理增加 SSH 连接\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 SSH 编辑输入框出现部分关键词时保持报错（感谢 @一只羊 Gitee issues I7E3UG ）\n 2. 【server】优化 日志组件支持显示 \\t 制表符、清空缓冲区滚动到顶部\n 3. 【server】修复 彻底删除节点分发时未自动删除关联日志（感谢@ccx2480）\n 4. 【server】修复 节点管理中脚本模板翻页无效（感谢 @wangfubiao Gitee issues I7F0RS ）\n 5. 【server】优化 工作空间配置页面中新增节点分发白名单配置入口（感谢 @陈旭 Gitee issues I7F0W0 ）\n 6. 【server】优化 构建附加环境变量支持解析 URL 参数格式 （感谢 @爱琳琳真是太好了 Gitee issues I7FROG ）\n 7. 【server】优化 构建支持单个配置保留天数和保留个数 （感谢 @阿超 Gitee issues I7FOG2 ）\n\n----------------------------------------\n\n\n# 2.10.41.3-beta (2023-06-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 SSH 列表支持显示 docker 版本信息\n 2. 【server】优化 Docker 镜像增加批量删除（已经被容器使用的镜像不会删除）\n 3. 【server】优化 启用 Jpom 新版专属 logo\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 查看 docker 容器日志 web socket 线程被阻塞问题\n 2. 【server】优化 日志组件显示高亮、滚动条样式优化\n 3. 【server】优化 web socket 会话关闭显示分类\n 4. 【server】优化 页面滚动条样式\n 5. 【server】优化 编辑关联分发，选择项目下拉框不能显示项目全名称（tooltip）（感谢@LYY）\n 6. 【server】优化 监听页面关闭事件，主动关闭 websocket\n 7. 【server】修复 批量构建触发器无法正常使用（感谢 @botboy Github issues 48 ）\n\n\n# ⚠️ 注意\n\n 1. 如果自定义过 SSH 监控脚本需要自行同步获取 docker 信息脚本\n\n----------------------------------------\n\n\n# 2.10.41.2-beta (2023-06-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 工作空间新增分组字段（存在多个分组时页面切换将使用二级选择）（感谢@酱总）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 页面关闭 docker 终端未主动关闭后台终端进程问题\n 2. 【server】优化 docker 终端页面缓冲区大小自动适应\n 3. 【server】优化 项目列表可以查看项目日志（避免控制台卡顿无法操作下载日志）(感谢@阿超)\n 4. 【server】优化 日志组件采用虚拟滚动渲染，避免日志过多浏览器卡死\n\n----------------------------------------\n\n\n# 2.10.41.1-beta (2023-05-15)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 仓库支持导入导出\n 2. 【server】新增 镜像创建容器支持配置 hostname、集群服务支持配置 hostname（感谢@心光）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 资产管理支持管理共享仓库\n 2. 【server】优化 增大验证码检测功能异常捕捉范围\n 3. 【server】修复 令牌导入仓库令牌长度不足问题（感谢 @Sherman Chu Github issues 45 ）\n 4. 【server】修复 分发列表配置功能无法使用（感谢 @Free Gitee issues I716UI ）\n 5. 【server】修复 构建卡片布局、构建详情中构建方式显示不正确（感谢@A）\n\n----------------------------------------\n\n\n# 2.10.40.8-beta (2023-04-19)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 仓库编辑清除密码按钮弹窗层级问题（感谢 @轩辕豆豆 Gitee issues I6VSCR ）\n 2. 【server】修复 优化构建列表卡片布局存在未构建数据布局错乱问题（感谢 @lin_yeqi Gitee issues I6VUB7 ）\n\n----------------------------------------\n\n\n# 2.10.40.6-beta (2023-04-14)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建中对 gradle 插件的支持（感谢 @xiaozhi Gitee pr 188 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 构建 SSH 发布命令支持 SSH_RELEASE_PATH 环境变量（感谢@定格）\n 2. 【server】修复 全屏终端无法打开文件管理（感谢@Pluto）\n 3. 【server】优化 自动探测服务端登录验证码是否可用\n 4. 【all】优化 文件编辑后缀识别支持配置文件名或者正则表达式（感谢@MichelleChung）\n 5. 【server】优化 支持自动执行触发器清理\n 6. 【server】优化 重新登录未加载管理员菜单（@A）\n 7. 【server】修复 第三方登录跳转测试丢失\n\n----------------------------------------\n\n\n# 2.10.40.5-beta (2023-04-12)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 清空浏览器缓存未跳转到登录页面\n 2. 【server】优化 构建拉取 git 仓库支持使用服务器中的 git 插件，实现配置克隆深度参数\n 3. 【server】修复 删除节点脚本报错（感谢 @xiaozhi Gitee issues I6USMY ）\n\n----------------------------------------\n\n\n# 2.10.40.4-beta (2023-04-07)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】修复 获取项目状态部分情况出现 NPE （感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.40.3-beta (2023-04-06)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 编辑构建无法重置已经选择的事件脚本 （感谢@左手生活，右手浪漫）\n 2. 【server】优化 登录页面切换验证码自动清空验证码输入框（感谢@TrouBles）\n 3. 【server】修复 docker 集群日志查看后未自动关闭造成日志文件继续增长的问题（@无味。）\n 4. 【server】优化 服务端缓存项目信息的创建时间和修改时间同步为节点中的数据创建、修改时间\n 5. 【server】优化 文件管理支持批量删除（感谢@左手生活，右手浪漫）\n 6. 【agent】优化 取消 agent hutool-cache 包依赖\n 7. 【server】优化 JustAuth fastjson 依赖配置为 fastjson2\n\n----------------------------------------\n\n\n# 2.10.40.2-beta (2023-04-04)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 项目文件跟踪控制台无法正常使用（感谢@左手生活，右手浪漫）\n 2. 【server】修复 插件端日志无法正常差异\n 3. 【server】修复 docker 拉取镜像不能识别私有仓库地址（@章强）\n\n----------------------------------------\n\n\n# 2.10.40.1-beta (2023-04-04)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 日志搜索控制台无法正常使用（感谢@左手生活，右手浪漫）\n\n----------------------------------------\n\n\n# 2.10.39.4-beta (2023-04-03)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 查看文件发布详情节点名称未显示\n 2. 【server】优化 发布记录重建不能选中节点\n\n----------------------------------------\n\n\n# 2.10.39.3-beta (2023-04-03)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 资产管理机器管理单个分配工作空间无法正常使用（感谢@咻咻咻秀啊）\n 2. 【server】修复 资产管理相关权限、操作日志无法记录问题（感谢@咻咻咻秀啊）\n 3. 【server】修复 docker 控制台 、日志无法正常使用\n 4. 【server】优化 docker 控制台页面布局优化，支持单独查看 docker-compose\n 5. 【server】优化 docker 实时查看日志支持配置是否显示时间戳\n\n----------------------------------------\n\n\n# 2.10.39.2-beta (2023-03-31)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 构建同步到文件管理中心失败（感谢@破冰）\n\n----------------------------------------\n\n\n# 2.10.39.1-beta (2023-03-31)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 登录成功主动刷新菜单缓存、切换账号登录工作空间无权限页面白屏（感谢@A、@零壹）\n 2. 【all】更名 变更包名为 org.dromara.jpom\n 3. 【server】修复 编辑 docker 导入证书弹窗无法正常显示问题（感谢@左手生活，右手浪漫）\n 4. 【server】修复 工作空间中资产管理相关页面搜索无数据时出现操作引导提示（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.11-beta (2023-03-31)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 oauth2 新增 gitee、github 平台（感谢@A）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 规范 oauth2 登录接口和回调地址\n\n----------------------------------------\n\n\n# 2.10.38.10-beta (2023-03-30)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 节点脚本支持全局共享同步节点、节点管理查看脚本重复问题（感谢@奇奇）\n 2. 【server】修复 创建构建选择命令模板无法修改（感谢@定格）\n 3. 【server】优化 构建新增配置是否发布隐藏文件属性（感谢@简单）\n\n----------------------------------------\n\n\n# 2.10.38.9-beta (2023-03-30)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 节点脚本支持全局共享（感谢@奇奇）\n 2. 【server】新增 构建状态新增队列等待，用于标记当前构建存于线程排队中（感谢@酱总）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 SSH 终端无法正常使用的问题（感谢@左手生活，右手浪漫）\n 2. 【server】修复 缓存中的工作空间 ID 和路由工作空间 ID 不一致问题\n 3. 【server】修复 超出构建队列数取消任务不生效问题（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.8-beta (2023-03-30)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 节点脚本、项目控制台无法正常使用的问题（感谢@奇奇）\n\n----------------------------------------\n\n\n# 2.10.38.7-beta (2023-03-29)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建新增配置排除发布目录表达式（感谢@毛毛虫）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 修改节点未填写密码不能保存\n 2. 【server】修复 服务端脚本非共享脚本不能执行问题\n 3. 【server】优化 构建命令支持引用脚本模板内容（便于复杂构建命令管理）（感谢@毛毛虫）\n\n----------------------------------------\n\n\n# 2.10.38.6-beta (2023-03-29)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 SSH 分组无法正常搜索、排序异常（感谢@A）\n 2. 【server】修复 编辑构建分组、保存并构建按钮无效（感谢@酱总）\n 3. 【server】修复 全局共享脚本日志无法查看问题（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.5-beta (2023-03-29)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 证书管理支持使用文件管理部署\n 2. 【server】优化 节点管理中项目管理和脚本管理菜单合并为一个菜单\n 3. 【server】修复 节点分发构建确认弹窗筛选项目不生效问题\n 4. 【server】修复 无法使用添加构建功能\n 5. 【server】修复 资产管理 ssh 分组不生效问题（感谢@A）\n 6. 【server】优化 构建详情页面布局（构建触发器、查看构建历史）\n 7. 【server】优化 新增构建状态描述来记录构建异常信息\n 8. 【server】优化 构建页面新增卡片布局方式\n\n\n# ⚠️ 注意\n\n构建触发器变动，发生异常时 type 为 error,并且新增：statusMsg 字段\n\n----------------------------------------\n\n\n# 2.10.38.4-beta (2023-03-28)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 文件管理发布支持发布到节点指定目录\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 无法正常使用下载功能\n 2. 【all】升级 springboot、hutool、fastjson2、svnkit 版本\n\n----------------------------------------\n\n\n# 2.10.38.3-beta (2023-03-27)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 删除管理脚本中的 -XX:+AggressiveOpts 参数 （感谢 @牛孝祖 Gitee issues I6PUNM ）\n 2. 【server】修复 兼容 oauth2 登录没有 state 场景（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.2-beta (2023-03-27)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持 oauth2 登录 （感谢 @MaxKeyTop Gitee pr 183 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 在线构建仓库支持全局共享（避免同一个仓库频繁创建）（感谢@酱总）\n 2.  【server】修复 开启 beta 计划快速安装命令不是 beta 版本（感谢@酱总）\n 3.  【server】修复 批量构建任务等待中没有日志输出问题（感谢@酱总）\n 4.  【server】优化 构建支持批量取消（感谢@酱总）\n 5.  【server】优化 取消构建时候主动删除构建容器\n 6.  【server】优化 构建触发器新增微队列，避免同一时间提交构建任务被拒绝（服务重启队列任务将丢失）（感谢@轩辕豆豆）\n 7.  【server】优化 任务环境页面支持查看间隔任务统计信息\n 8.  【server】优化 令牌导入仓库模块统一调整为模板配置（部分方式不支持搜索）（感谢@魏宏斌）\n 9.  【agent】优化 DSL 项目报警内容添加状态消息（感谢@核桃）\n 10. 【server】优化 服务端脚本支持配置全局共享（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.1-beta (2023-03-23)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 证书管理全部迁移到服务端统一导入 （感谢@.）\n 2. 【server】新增 节点项目支持导入，导出（感谢@酱总）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化 清理单项构建历史保留个数只判断（构建结束、发布中、发布失败、发布失败）有效构建状态，避免无法保留有效构建历史（感谢@张飞鸿）\n 2. 【server】优化 节点监控超时时间调整为 30 秒（避免 windows 服务器频繁超时）（感谢@波比）\n 3. 【server】优化 打开节点管理页面不刷新节点列表\n 4. 【agent】修复 未配置节点白名单时直接创建分发项目报错（感谢@奋起的大牛）\n 5. 【server】修复 SSH 关联工作空间的授权目录无法取消\n 6. 【server】优化 查看分发项目状态取消折叠 table，调整为独立页面\n 7. 【server】优化 逻辑节点没有显示快速安装按钮问题（感谢@酱总）\n 8. 【server】优化 docker TLS 证书全部迁移到证书管理，配置证书支持快捷选择 （感谢@.）\n 9. 【server】修复 仓库 ssh 协议配置超时时间无法正常拉取代码（感谢@毛毛虫）\n\n\n# ⚠️ 注意\n\n 1. 如果节点已经配置过项目文件下载远程地址白名单需要统一配置到服务端的工作空间的白名单。\n 2. 已经配置节点项目远程下载白名单将保留只读，不做实际判断\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 节点管理证书管理取消上传编辑功能（保留查询删除功能）\n 2. 【agent】取消 节点白名单配置取消 ssl 证书路径配置\n 3. 【agent】取消 节点项目文件下载远程文件白名单统一调整到服务端白名单配置\n\n----------------------------------------",normalizedContent:"# 2.10.47.7-beta (2023-12-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 资产管理 ssh 支持配置禁用监控（避免频繁登录）jpom.assets.ssh.disable-monitor-group-name（感谢@again...）\n 2. 【server】新增 资产管理 ssh 支持配置监控周期：jpom.assets.ssh.monitor-cron\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 导入 ssh、项目 csv 数据自动识别编码格式\n 2. 【server】优化 执行 ssh 脚本获取流异常：getinputstream() should be called before connect()\n 3. 【server】升级 mwiede 依赖版本\n\n----------------------------------------\n\n\n# 2.10.47.6-beta (2023-12-25)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 系统日志页面空白\n 2. 【server】优化 资产机器卡片试图部分场景未对齐问题\n 3. 【server】优化 部分页面在小屏兼容（资产 docker、节点分发）\n 4. 【server】优化 节点脚本支持解绑（避免无非使用的服务器无非删除脚本）\n 5. 【server】优化 白名单配置提示 nginx、证书功能将下线\n 6. 【all】移除 插件端配置远程下载 host 输入框\n 7. 【server】修复 项目、脚本、发布任务、日志阅读控制台无法正常使用问题（感谢@奇奇）\n\n----------------------------------------\n\n\n# 2.10.47.5-beta (2023-12-22)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 迁移项目关联构建关联的全局仓库无法完整迁移问题（感谢@奇奇）\n 2. 【server】优化 仓库支持查看关联的构建\n 3. 【server】修复 删除服务端脚本日志如果脚本不存在不能删除\n\n----------------------------------------\n\n\n# 2.10.47.4-beta (2023-12-22)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】升级 web axios 版本\n 2. 【server】修复 迁移项目判断条件不充足（同一个工作空间不迁移仓库和构建）\n\n----------------------------------------\n\n\n# 2.10.47.3-beta (2023-12-22)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 部分项目支持迁移工作空间和逻辑节点（感谢@奇奇）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 逻辑节点节目取消全局 loading（感谢@小菜鸡）\n 2. 【server】优化 新增个性化配置全屏打开日志弹窗（构建、ssh、脚本、docker等日志）（感谢@张飞鸿）\n 3. 【server】修复 项目副本无法保存（修改中不能删除副本集、请到副本集中删除）\n 4. 【server】优化 服务端中可以支持创建编辑项目、创建节点脚本啦！！！\n 5. 【server】优化 项目列表支持删除项目、自动刷新项目\n\n----------------------------------------\n\n\n# 2.10.47.2-beta (2023-12-21)\n\n\n# 🐣 新增功能\n\n 1. 【server】优化 容器日志、集群任务日志支持下载（感谢@在时间里流浪）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】删除 项目副本中弃用兼容字段 parendid\n 2. 【server】优化 docker 集群任务日志支持筛选行数、是否显示时间戳（感谢@在时间里流浪）\n 3. 【server】优化 修复容器构建中 cache 插件异常、默认插件无法正常使用问题（感谢@张飞鸿）\n 4. 【server】优化 项目控制台日志输出 n 人查看改为 n 个会话（@冬）\n 5. 【server】优化 添加超级管理员账号提醒勿使用常用账号\n\n----------------------------------------\n\n\n# 2.10.47.1-beta (2023-12-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建支持自定义插件（感谢@远方 gitee issues i8pewi）\n 2. 【server】新增 容器管理新增导出、导入镜像\n 3. 【server】新增 环境变量支持触发器获取、修改\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】升级 数据库 h2 版本\n 2. 【server】修复 构建事件脚本未修改执行状态和退出码问题\n 3. 【server】优化 构建事件脚本支持多选（顺序执行其中有一个中断将结束执行后续脚本）（感谢@loyal）\n 4. 【server】优化 服务端脚本触发类型新增构建事件\n\n\n# ⚠️ 注意\n\n新增容器构建自定义插件说明：\n\n 1. 到 【系统管理】->【配置管理】->【系统配置目录】 中找到 docker/uses 目录\n 2. 添加插件配置文件 /docker/uses/java8/install.sh 其中 java8 为新增的插件名\n 3. 注意脚本中需要自行控制插件相关依赖的文件，需要将最新的文件保持到 /opt/${name}/ 目录下，其中 ${name} 为插件名\n 4. 辅助说明1：插件支持自定义环境变量\n 5. 辅助说明2：自定义环境变量中需要引用插件目录请使用 ${jpom_plugin_path}\n 6. 系统默认集成了：java、maven、node、go、python3、gradle 默认插件有依赖版本检查如果您的网络不通建议自行创建插件来规避默认检查\n\n----------------------------------------\n\n\n# 2.10.46.2-beta (2023-12-15)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【all】优化 concurrenthashmap 修改为线程安全的 hutoll[safeconcurrenthashmap]（感谢@在时间里流浪）\n 2. 【all】升级 mwiede.jsch、oshi、fastjson、hutool、spring-boot、docker-java\n 3. 【server】优化 ssh 脚本在部分场景阻塞卡死（channeltype.exec 不添加超时时间）\n 4. 【server】优化 ssh 脚本执行输出退出码\n 5. 【server】优化 解决构建流程,环境变量env里出现value==null出现null报错 （感谢 @周冰 gitee pr 197 ）\n 6. 【server】优化 ssh 脚本执行记录退出码\n 7. 【server】优化 服务端脚本执行记录新增执行状态和退出码\n\n----------------------------------------\n\n\n# 2.10.46.1-beta (2023-10-20)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 容器构建下载产物未关闭文件流占用句柄问题（感谢@在时间里流浪）\n\n----------------------------------------\n\n\n# 2.10.45.3-beta (2023-10-17)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建产物同步到文件中心支持独立配置保留天数（感谢@zhangxin2477 gitee issues i82g2f）\n 2. 【server】优化 不能删除超级管理员账号\n 3. 【agent】修复 agent.sh 脚本的缺少方法问题（感谢@siwen yu github issues 64）\n 4. 【server】优化 系统管理查看操作日志显示全部工作空间\n\n----------------------------------------\n\n\n# 2.10.45.2-beta (2023-09-18)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 容器构建判断构建异常（严格模式异常中断构建）（感谢@在时间里流浪）\n 2. 【server】修复 构建流程中断触发 success 事件（感谢@在时间里流浪）\n 3. 【server】优化 ssh 独立管理面板支持快捷使用文件管理\n\n----------------------------------------\n\n\n# 2.10.45.1-beta (2023-09-15)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 ssh 新增独立管理面板（感谢@超人那个超i gitee issues i7ufex）\n 2. 【agent】新增 dsl 项目支持配置脚本环境变量（感谢@陈旭 gitee issues i80ptk）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建详情页面支持快捷回滚、查看构建日志（感谢@縁來只爲伱 gitee issues i7ysnh）\n 2. 【all】升级 hutool、commons-compress\n 3. 【agent】修复 重启项目偶发 npe（监听日志关闭事件）（感谢@caiqy gitee issues i7z2u6）\n 4. 【server】优化 构建支持配置环境变量实现产物打包为 tar.gz (use_tar_gz=1)\n 5. 【server】修复 文件管理偶发无法查看发片下载地址\n\n----------------------------------------\n\n\n# 2.10.44.4-beta (2023-09-02)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 资产管理共享仓库新建归属到工作空间问题（感谢@沈钊）\n 2. 【server】升级 springboot 、oshi、docker-java、jgit\n\n----------------------------------------\n\n\n# 2.10.44.3-beta (2023-08-31)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】升级 mwiede.jsch 版本\n\n----------------------------------------\n\n\n# 2.10.44.2-beta (2023-08-30)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建回滚创建新的构建记录（感谢@smith gitee issues i7veja）\n\n----------------------------------------\n\n\n# 2.10.44.1-beta (2023-08-29)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持 git submodules （感谢 @croce gitee pr 195 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 新增资产无法正常监控问题（感谢@乔、@michellechung、@pluto）\n 2. 【server】优化 编辑集群地址不验证，调整到心跳检测验证（感谢@黄纲）\n 3. 【server】优化 构建新增环境变量：build_original_result_dir_file、build_result_dir_file（发布流程）(感谢@黄纲)\n\n----------------------------------------\n\n\n# 2.10.42.6-beta (2023-08-23)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 未配置集群地址时无法切换工作空间（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.10.42.5-beta (2023-08-23)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 集群化管理工作空间（感谢@定格、@paobu gitee issues i7ug5v）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 资产管理 ssh 管理系统名称显示未知问题（感谢@勤思·）\n 2. 【server】优化 资产管理 docker 管理支持配置分组\n 3. 【server】优化 仓库管理支持配置分组\n 4. 【server】优化 ssh 文件夹支持前端排序（感谢@勤思·）\n\n----------------------------------------\n\n\n# 2.10.42.4-beta (2023-08-19)\n\n\n# 🐣 新增功能\n\n 1. 【server】优化 ssh 相关功能支持 openssh8+ （感谢 @孤城落寞 gitee pr 193 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 仓库账号、 ssh 证书密码支持选择环境变量\n 2. 【all】升级 commons-compress、fastjson、hutool 版本\n 3. 【server】优化 maven 依赖冲突\n 4. 【server】优化 文件发布-节点发布文件名使用真实名称（感谢@勤思·）\n 5. 【server】优化 文件发布-ssh发布新增变量：file_name、file_ext_name\n\n----------------------------------------\n\n\n# 2.10.42.3-beta (2023-08-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 ssh 文件管理修改文件权限功能（感谢 @michellechung gitee issues i6vdxs ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】升级 h2、springboot 版本\n 2. 【server】使用系统git时，无法克隆tag问题优化 （感谢@唐明）\n 3. 【server】优化 ssh 和 代码仓库的密码从工作空间变量中读取\n\n----------------------------------------\n\n\n# 2.10.42.2-beta (2023-07-04)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 docker 容器重建功能，即删除原有的容器，重新创建一个新的容器\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 删除工作空间前预检查关联数据存在情况（感谢 @陈旭 gitee issues i7f0zn ）\n 2. 【server】优化 退出登录支持彻底退出、切换账号退出（感谢 @wangfubiao gitee issues i7ga5q ）\n 3. 【server】优化 ip 白名单验证忽略 ipv6 情况\n 4. 【server】优化 服务端缓存管理支持查看黑名单 ip 详细信息（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.42.1-beta (2023-06-26)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 docker 管理增加 ssh 连接\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 ssh 编辑输入框出现部分关键词时保持报错（感谢 @一只羊 gitee issues i7e3ug ）\n 2. 【server】优化 日志组件支持显示 \\t 制表符、清空缓冲区滚动到顶部\n 3. 【server】修复 彻底删除节点分发时未自动删除关联日志（感谢@ccx2480）\n 4. 【server】修复 节点管理中脚本模板翻页无效（感谢 @wangfubiao gitee issues i7f0rs ）\n 5. 【server】优化 工作空间配置页面中新增节点分发白名单配置入口（感谢 @陈旭 gitee issues i7f0w0 ）\n 6. 【server】优化 构建附加环境变量支持解析 url 参数格式 （感谢 @爱琳琳真是太好了 gitee issues i7frog ）\n 7. 【server】优化 构建支持单个配置保留天数和保留个数 （感谢 @阿超 gitee issues i7fog2 ）\n\n----------------------------------------\n\n\n# 2.10.41.3-beta (2023-06-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 ssh 列表支持显示 docker 版本信息\n 2. 【server】优化 docker 镜像增加批量删除（已经被容器使用的镜像不会删除）\n 3. 【server】优化 启用 jpom 新版专属 logo\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 查看 docker 容器日志 web socket 线程被阻塞问题\n 2. 【server】优化 日志组件显示高亮、滚动条样式优化\n 3. 【server】优化 web socket 会话关闭显示分类\n 4. 【server】优化 页面滚动条样式\n 5. 【server】优化 编辑关联分发，选择项目下拉框不能显示项目全名称（tooltip）（感谢@lyy）\n 6. 【server】优化 监听页面关闭事件，主动关闭 websocket\n 7. 【server】修复 批量构建触发器无法正常使用（感谢 @botboy github issues 48 ）\n\n\n# ⚠️ 注意\n\n 1. 如果自定义过 ssh 监控脚本需要自行同步获取 docker 信息脚本\n\n----------------------------------------\n\n\n# 2.10.41.2-beta (2023-06-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 工作空间新增分组字段（存在多个分组时页面切换将使用二级选择）（感谢@酱总）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 页面关闭 docker 终端未主动关闭后台终端进程问题\n 2. 【server】优化 docker 终端页面缓冲区大小自动适应\n 3. 【server】优化 项目列表可以查看项目日志（避免控制台卡顿无法操作下载日志）(感谢@阿超)\n 4. 【server】优化 日志组件采用虚拟滚动渲染，避免日志过多浏览器卡死\n\n----------------------------------------\n\n\n# 2.10.41.1-beta (2023-05-15)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 仓库支持导入导出\n 2. 【server】新增 镜像创建容器支持配置 hostname、集群服务支持配置 hostname（感谢@心光）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 资产管理支持管理共享仓库\n 2. 【server】优化 增大验证码检测功能异常捕捉范围\n 3. 【server】修复 令牌导入仓库令牌长度不足问题（感谢 @sherman chu github issues 45 ）\n 4. 【server】修复 分发列表配置功能无法使用（感谢 @free gitee issues i716ui ）\n 5. 【server】修复 构建卡片布局、构建详情中构建方式显示不正确（感谢@a）\n\n----------------------------------------\n\n\n# 2.10.40.8-beta (2023-04-19)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 仓库编辑清除密码按钮弹窗层级问题（感谢 @轩辕豆豆 gitee issues i6vscr ）\n 2. 【server】修复 优化构建列表卡片布局存在未构建数据布局错乱问题（感谢 @lin_yeqi gitee issues i6vub7 ）\n\n----------------------------------------\n\n\n# 2.10.40.6-beta (2023-04-14)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 容器构建中对 gradle 插件的支持（感谢 @xiaozhi gitee pr 188 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 构建 ssh 发布命令支持 ssh_release_path 环境变量（感谢@定格）\n 2. 【server】修复 全屏终端无法打开文件管理（感谢@pluto）\n 3. 【server】优化 自动探测服务端登录验证码是否可用\n 4. 【all】优化 文件编辑后缀识别支持配置文件名或者正则表达式（感谢@michellechung）\n 5. 【server】优化 支持自动执行触发器清理\n 6. 【server】优化 重新登录未加载管理员菜单（@a）\n 7. 【server】修复 第三方登录跳转测试丢失\n\n----------------------------------------\n\n\n# 2.10.40.5-beta (2023-04-12)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 清空浏览器缓存未跳转到登录页面\n 2. 【server】优化 构建拉取 git 仓库支持使用服务器中的 git 插件，实现配置克隆深度参数\n 3. 【server】修复 删除节点脚本报错（感谢 @xiaozhi gitee issues i6usmy ）\n\n----------------------------------------\n\n\n# 2.10.40.4-beta (2023-04-07)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】修复 获取项目状态部分情况出现 npe （感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.40.3-beta (2023-04-06)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 编辑构建无法重置已经选择的事件脚本 （感谢@左手生活，右手浪漫）\n 2. 【server】优化 登录页面切换验证码自动清空验证码输入框（感谢@troubles）\n 3. 【server】修复 docker 集群日志查看后未自动关闭造成日志文件继续增长的问题（@无味。）\n 4. 【server】优化 服务端缓存项目信息的创建时间和修改时间同步为节点中的数据创建、修改时间\n 5. 【server】优化 文件管理支持批量删除（感谢@左手生活，右手浪漫）\n 6. 【agent】优化 取消 agent hutool-cache 包依赖\n 7. 【server】优化 justauth fastjson 依赖配置为 fastjson2\n\n----------------------------------------\n\n\n# 2.10.40.2-beta (2023-04-04)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 项目文件跟踪控制台无法正常使用（感谢@左手生活，右手浪漫）\n 2. 【server】修复 插件端日志无法正常差异\n 3. 【server】修复 docker 拉取镜像不能识别私有仓库地址（@章强）\n\n----------------------------------------\n\n\n# 2.10.40.1-beta (2023-04-04)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 日志搜索控制台无法正常使用（感谢@左手生活，右手浪漫）\n\n----------------------------------------\n\n\n# 2.10.39.4-beta (2023-04-03)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 查看文件发布详情节点名称未显示\n 2. 【server】优化 发布记录重建不能选中节点\n\n----------------------------------------\n\n\n# 2.10.39.3-beta (2023-04-03)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 资产管理机器管理单个分配工作空间无法正常使用（感谢@咻咻咻秀啊）\n 2. 【server】修复 资产管理相关权限、操作日志无法记录问题（感谢@咻咻咻秀啊）\n 3. 【server】修复 docker 控制台 、日志无法正常使用\n 4. 【server】优化 docker 控制台页面布局优化，支持单独查看 docker-compose\n 5. 【server】优化 docker 实时查看日志支持配置是否显示时间戳\n\n----------------------------------------\n\n\n# 2.10.39.2-beta (2023-03-31)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 构建同步到文件管理中心失败（感谢@破冰）\n\n----------------------------------------\n\n\n# 2.10.39.1-beta (2023-03-31)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 登录成功主动刷新菜单缓存、切换账号登录工作空间无权限页面白屏（感谢@a、@零壹）\n 2. 【all】更名 变更包名为 org.dromara.jpom\n 3. 【server】修复 编辑 docker 导入证书弹窗无法正常显示问题（感谢@左手生活，右手浪漫）\n 4. 【server】修复 工作空间中资产管理相关页面搜索无数据时出现操作引导提示（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.11-beta (2023-03-31)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 oauth2 新增 gitee、github 平台（感谢@a）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 规范 oauth2 登录接口和回调地址\n\n----------------------------------------\n\n\n# 2.10.38.10-beta (2023-03-30)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 节点脚本支持全局共享同步节点、节点管理查看脚本重复问题（感谢@奇奇）\n 2. 【server】修复 创建构建选择命令模板无法修改（感谢@定格）\n 3. 【server】优化 构建新增配置是否发布隐藏文件属性（感谢@简单）\n\n----------------------------------------\n\n\n# 2.10.38.9-beta (2023-03-30)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 节点脚本支持全局共享（感谢@奇奇）\n 2. 【server】新增 构建状态新增队列等待，用于标记当前构建存于线程排队中（感谢@酱总）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 ssh 终端无法正常使用的问题（感谢@左手生活，右手浪漫）\n 2. 【server】修复 缓存中的工作空间 id 和路由工作空间 id 不一致问题\n 3. 【server】修复 超出构建队列数取消任务不生效问题（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.8-beta (2023-03-30)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 节点脚本、项目控制台无法正常使用的问题（感谢@奇奇）\n\n----------------------------------------\n\n\n# 2.10.38.7-beta (2023-03-29)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 构建新增配置排除发布目录表达式（感谢@毛毛虫）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 修改节点未填写密码不能保存\n 2. 【server】修复 服务端脚本非共享脚本不能执行问题\n 3. 【server】优化 构建命令支持引用脚本模板内容（便于复杂构建命令管理）（感谢@毛毛虫）\n\n----------------------------------------\n\n\n# 2.10.38.6-beta (2023-03-29)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 ssh 分组无法正常搜索、排序异常（感谢@a）\n 2. 【server】修复 编辑构建分组、保存并构建按钮无效（感谢@酱总）\n 3. 【server】修复 全局共享脚本日志无法查看问题（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.5-beta (2023-03-29)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 证书管理支持使用文件管理部署\n 2. 【server】优化 节点管理中项目管理和脚本管理菜单合并为一个菜单\n 3. 【server】修复 节点分发构建确认弹窗筛选项目不生效问题\n 4. 【server】修复 无法使用添加构建功能\n 5. 【server】修复 资产管理 ssh 分组不生效问题（感谢@a）\n 6. 【server】优化 构建详情页面布局（构建触发器、查看构建历史）\n 7. 【server】优化 新增构建状态描述来记录构建异常信息\n 8. 【server】优化 构建页面新增卡片布局方式\n\n\n# ⚠️ 注意\n\n构建触发器变动，发生异常时 type 为 error,并且新增：statusmsg 字段\n\n----------------------------------------\n\n\n# 2.10.38.4-beta (2023-03-28)\n\n\n# 🐣 新增功能\n\n 1. 【all】新增 文件管理发布支持发布到节点指定目录\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 无法正常使用下载功能\n 2. 【all】升级 springboot、hutool、fastjson2、svnkit 版本\n\n----------------------------------------\n\n\n# 2.10.38.3-beta (2023-03-27)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 删除管理脚本中的 -xx:+aggressiveopts 参数 （感谢 @牛孝祖 gitee issues i6punm ）\n 2. 【server】修复 兼容 oauth2 登录没有 state 场景（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.2-beta (2023-03-27)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 支持 oauth2 登录 （感谢 @maxkeytop gitee pr 183 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 在线构建仓库支持全局共享（避免同一个仓库频繁创建）（感谢@酱总）\n 2.  【server】修复 开启 beta 计划快速安装命令不是 beta 版本（感谢@酱总）\n 3.  【server】修复 批量构建任务等待中没有日志输出问题（感谢@酱总）\n 4.  【server】优化 构建支持批量取消（感谢@酱总）\n 5.  【server】优化 取消构建时候主动删除构建容器\n 6.  【server】优化 构建触发器新增微队列，避免同一时间提交构建任务被拒绝（服务重启队列任务将丢失）（感谢@轩辕豆豆）\n 7.  【server】优化 任务环境页面支持查看间隔任务统计信息\n 8.  【server】优化 令牌导入仓库模块统一调整为模板配置（部分方式不支持搜索）（感谢@魏宏斌）\n 9.  【agent】优化 dsl 项目报警内容添加状态消息（感谢@核桃）\n 10. 【server】优化 服务端脚本支持配置全局共享（感谢@酱总）\n\n----------------------------------------\n\n\n# 2.10.38.1-beta (2023-03-23)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 证书管理全部迁移到服务端统一导入 （感谢@.）\n 2. 【server】新增 节点项目支持导入，导出（感谢@酱总）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化 清理单项构建历史保留个数只判断（构建结束、发布中、发布失败、发布失败）有效构建状态，避免无法保留有效构建历史（感谢@张飞鸿）\n 2. 【server】优化 节点监控超时时间调整为 30 秒（避免 windows 服务器频繁超时）（感谢@波比）\n 3. 【server】优化 打开节点管理页面不刷新节点列表\n 4. 【agent】修复 未配置节点白名单时直接创建分发项目报错（感谢@奋起的大牛）\n 5. 【server】修复 ssh 关联工作空间的授权目录无法取消\n 6. 【server】优化 查看分发项目状态取消折叠 table，调整为独立页面\n 7. 【server】优化 逻辑节点没有显示快速安装按钮问题（感谢@酱总）\n 8. 【server】优化 docker tls 证书全部迁移到证书管理，配置证书支持快捷选择 （感谢@.）\n 9. 【server】修复 仓库 ssh 协议配置超时时间无法正常拉取代码（感谢@毛毛虫）\n\n\n# ⚠️ 注意\n\n 1. 如果节点已经配置过项目文件下载远程地址白名单需要统一配置到服务端的工作空间的白名单。\n 2. 已经配置节点项目远程下载白名单将保留只读，不做实际判断\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 节点管理证书管理取消上传编辑功能（保留查询删除功能）\n 2. 【agent】取消 节点白名单配置取消 ssl 证书路径配置\n 3. 【agent】取消 节点项目文件下载远程文件白名单统一调整到服务端白名单配置\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2024/01/12, 07:31:30",lastUpdatedTimestamp:170504469e4},{title:"2.9.x ~ 2.9.21",frontmatter:{title:"2.9.x ~ 2.9.21",date:"2022-06-11T17:27:47.000Z",permalink:"/pages/changelog/2.9.x/",tags:["2.9.x"],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/1191.2.9.x.html",relativePath:"日志&下载/01.更新日志/1191.2.9.x.md",key:"v-b6de4cd6",path:"/pages/changelog/2.9.x/",headers:[{level:2,title:"2.9.21 (2022-12-08)",slug:"_2-9-21-2022-12-08",normalizedTitle:"2.9.21 (2022-12-08)",charIndex:2},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能",normalizedTitle:"❌ 不兼容功能",charIndex:153},{level:2,title:"2.9.20 (2022-12-06)",slug:"_2-9-20-2022-12-06",normalizedTitle:"2.9.20 (2022-12-06)",charIndex:245},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.19 (2022-12-05)",slug:"_2-9-19-2022-12-05",normalizedTitle:"2.9.19 (2022-12-05)",charIndex:813},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-2",normalizedTitle:"❌ 不兼容功能",charIndex:153},{level:2,title:"2.9.18 (2022-12-01)",slug:"_2-9-18-2022-12-01",normalizedTitle:"2.9.18 (2022-12-01)",charIndex:1643},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.17 (2022-11-28)",slug:"_2-9-17-2022-11-28",normalizedTitle:"2.9.17 (2022-11-28)",charIndex:2351},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-3",normalizedTitle:"❌ 不兼容功能",charIndex:153},{level:2,title:"2.9.16 (2022-11-25)",slug:"_2-9-16-2022-11-25",normalizedTitle:"2.9.16 (2022-11-25)",charIndex:2939},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-6",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"❌ 不兼容功能",slug:"❌-不兼容功能-4",normalizedTitle:"❌ 不兼容功能",charIndex:153},{level:2,title:"2.9.15 (2022-11-17)",slug:"_2-9-15-2022-11-17",normalizedTitle:"2.9.15 (2022-11-17)",charIndex:3686},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-7",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.14 (2022-11-08)",slug:"_2-9-14-2022-11-08",normalizedTitle:"2.9.14 (2022-11-08)",charIndex:3978},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-8",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.13 (2022-10-20)",slug:"_2-9-13-2022-10-20",normalizedTitle:"2.9.13 (2022-10-20)",charIndex:4285},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-9",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.12 (2022-10-10)",slug:"_2-9-12-2022-10-10",normalizedTitle:"2.9.12 (2022-10-10)",charIndex:4450},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-10",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.11 (2022-09-09)",slug:"_2-9-11-2022-09-09",normalizedTitle:"2.9.11 (2022-09-09)",charIndex:4607},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-11",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.10 (2022-09-07)",slug:"_2-9-10-2022-09-07",normalizedTitle:"2.9.10 (2022-09-07)",charIndex:4867},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-12",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.9 (2022-08-22)",slug:"_2-9-9-2022-08-22",normalizedTitle:"2.9.9 (2022-08-22)",charIndex:5226},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-6",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-13",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.8 (2022-08-10)",slug:"_2-9-8-2022-08-10",normalizedTitle:"2.9.8 (2022-08-10)",charIndex:5711},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-14",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"特别感谢",slug:"特别感谢",normalizedTitle:"特别感谢",charIndex:6005},{level:2,title:"2.9.7 (2022-08-08)",slug:"_2-9-7-2022-08-08",normalizedTitle:"2.9.7 (2022-08-08)",charIndex:6099},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-7",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-15",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"⚠️ 注意事项",slug:"⚠️-注意事项",normalizedTitle:"⚠️ 注意事项",charIndex:6888},{level:2,title:"2.9.6 (2022-07-27)",slug:"_2-9-6-2022-07-27",normalizedTitle:"2.9.6 (2022-07-27)",charIndex:7009},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-16",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.5 (2022-07-26)",slug:"_2-9-5-2022-07-26",normalizedTitle:"2.9.5 (2022-07-26)",charIndex:7212},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-8",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-17",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.4 (2022-07-12)",slug:"_2-9-4-2022-07-12",normalizedTitle:"2.9.4 (2022-07-12)",charIndex:7809},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-9",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-18",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.3 (2022-07-08)",slug:"_2-9-3-2022-07-08",normalizedTitle:"2.9.3 (2022-07-08)",charIndex:8042},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-10",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-19",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.2 (2022-06-27)",slug:"_2-9-2-2022-06-27",normalizedTitle:"2.9.2 (2022-06-27)",charIndex:8954},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-11",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-20",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.1 (2022-06-16)",slug:"_2-9-1-2022-06-16",normalizedTitle:"2.9.1 (2022-06-16)",charIndex:9794},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-12",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-21",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.9.0 (2022-06-13)",slug:"_2-9-0-2022-06-13",normalizedTitle:"2.9.0 (2022-06-13)",charIndex:10216},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-13",normalizedTitle:"🐣 新增功能",charIndex:837},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-22",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"⚠️ 注意",slug:"⚠️-注意",normalizedTitle:"⚠️ 注意",charIndex:6888}],headersStr:"2.9.21 (2022-12-08) 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.9.20 (2022-12-06) 🐞 解决BUG、优化功能 2.9.19 (2022-12-05) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.9.18 (2022-12-01) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.17 (2022-11-28) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.9.16 (2022-11-25) 🐣 新增功能 🐞 解决BUG、优化功能 ❌ 不兼容功能 2.9.15 (2022-11-17) 🐞 解决BUG、优化功能 2.9.14 (2022-11-08) 🐞 解决BUG、优化功能 2.9.13 (2022-10-20) 🐞 解决BUG、优化功能 2.9.12 (2022-10-10) 🐞 解决BUG、优化功能 2.9.11 (2022-09-09) 🐞 解决BUG、优化功能 2.9.10 (2022-09-07) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.9 (2022-08-22) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.8 (2022-08-10) 🐞 解决BUG、优化功能 特别感谢 2.9.7 (2022-08-08) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意事项 2.9.6 (2022-07-27) 🐞 解决BUG、优化功能 2.9.5 (2022-07-26) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.4 (2022-07-12) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.3 (2022-07-08) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.2 (2022-06-27) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.1 (2022-06-16) 🐣 新增功能 🐞 解决BUG、优化功能 2.9.0 (2022-06-13) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 注意",content:"# 2.9.21 (2022-12-08)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 不能在线保存服务端配置（@迷了鹿）\n 2. 【all】修复 服务端脚本分发节点工作空间错乱问题，需要再次保存自动修正（感谢@mt-mored Gitee issues I65B19 ）\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 对 2.4.3 以下的项目白名单目录修复支持\n\n----------------------------------------\n\n\n# 2.9.20 (2022-12-06)\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化 服务端脚本触发器传入参数添加为执行环境变量（变量名自动转下划线并且添加 trigger_ 前缀）（感谢@李中原）\n 2.  【agent】优化 插件端脚本触发器传入参数添加为执行环境变量（变量名自动转下划线并且添加 trigger_ 前缀）（感谢@李中原）\n 3.  【server】优化 构建确认弹窗支持选择差异构建\n 4.  【server】优化 修剪 docker 镜像支持选择悬空\n 5.  【server】优化 git 仓库标签拉取支持差异构建判断（感谢@M⃰í⃰n⃰g⃰ z⃰á⃰i⃰、@阿超）\n 6.  【server】优化 提醒 MFA 绑定取消 esc 关闭弹窗\n 7.  【server】优化 添加构建时未选择分支表单一致验证失败问题\n 8.  【agent】修复 上传文件并重启不能正常重启（节点分发完整顺序重启、顺序重启）\n 9.  【server】优化 节点分发列表显示更多字段\n 10. 【server】优化 日志阅读不可以阅读文件不能选择\n 11. 【server】优化 节点分发支持调整到实时阅读页面\n\n----------------------------------------\n\n\n# 2.9.19 (2022-12-05)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 在线构建新增附加环境变量配置 来实现定义构建运行环境变量\n 2. 【server】新增 构建发布 docker 镜像新增构建参数,使构建镜像更灵活 （感谢@loyal）\n 3. 【server】新增 构建发布 docker 镜像新增镜像标签、no-cache、更新镜像配置\n 4. 【server】新增 修剪 docker 相关资源功能\n 5. 【server】新增 单 IP 登录失败指定次数将锁定对应 IP，默认 10 次 user.alwaysIpLoginError\n 6. 【server】新增 镜像创建容器支持配置 label 属性\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 在线构建仓库文件存在.env文件时带来构建结果异常问题（感谢@蹉跎岁月）\n 2. 【agent】优化 项目清空上传文件等待文件上传完成后再清空、上传文件优先到临时目录完成后再移动至项目目录（感谢@tiv-cloud_0 Gitee issues I649NU ）\n 3. 【server】修复 docker 创建容器部分场景端口无法正常暴露问题（感谢@李中原）\n 4. 【server】优化 docker 控制台刷新页面自动打开控制台\n 5. 【server】优化 docker java 依赖包\n 6. 【all】优化 取消 hutool-all 包，采用 bom 方式引入\n\n\n# ❌ 不兼容功能\n\n 1. 【server】在线构建本地构建、本地发布、docker 镜像取消默认读取 .env文件,需要手动配置\n 2. 【server】取消 user.ipErrorLockTime 属性表达式支持，改为 Duration 风格，转换异常默认值为 5h\n\n----------------------------------------\n\n\n# 2.9.18 (2022-12-01)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 DSL 项目运行脚本环境变量配置（run.start.scriptEnv）\n 2. 【agent】新增 DSL 项目自定义 restart 流程 （run.restart）\n 3. 【agent】新增项目状态检测间隔时间配置属性：project.statusDetectionInterval （感谢@项勇祥）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【agent】修复 DSL 项目重启操作被偶发异常（自动）关闭问题\n 2.  【agent】优化 DSL 项目控制台日志输出格式\n 3.  【all】优化日志监听器：控制台支持自动重定向、第一次启动项目自动重新 showlog\n 4.  【server】节点超时时间配置为 0 失效问题\n 5.  【agent】修复进程列表在部分场景下进程号数字转换异常（感谢@易自玉）\n 6.  【agent】优化启动、停止、重启响应结果输出\n 7.  【agent】修复 windows DSL 模式：另一个程序正在使用此文件，进程无法访问。 问题\n 8.  【agent】修复节点脚本模板在一定情况下出现：另一个程序正在使用此文件，进程无法访问。 问题（感谢@易自玉）\n 9.  【server】修复服务端脚本模板在一定情况下出现：另一个程序正在使用此文件，进程无法访问。 问题\n 10. 【server】修复节点分发无法正常使用控制台、项目文件管理功能（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.9.17 (2022-11-28)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增强制提示用户开启 MFA 认证,新增配置属性：user.forceMfa（感谢@长风 Gitee issues I5ZBFU ）\n 2. 【server】新增镜像创建容器支持配置网络模式属性、--privileged、重启策略属性\n 3. 【server】新增自动探测本地 docker 按钮\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化系统已经初始化过进入初始化页面提示信息（感谢@说一 Gitee issues I61LQH ）\n 2. 【server】优化构建流程状态，不存在产物构建状态标记为构建失败\n 3. 【agent】修复未配置 nginx 路径时 reload 报错\n 4. 【server】优化在线构建根据标签拉取代码（感谢@Tʀᴜsᴛ¹⁹⁹¹）\n 5. 【server】优化克隆 git 仓库仅显示少量日志\n 6. 【server】优化升级页面 loading 效果、全局 loading 关闭事件\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消启动自动加载本地 docker\n 2. 【server】在线构建选择标签构建后，不能切换分支\n\n----------------------------------------\n\n\n# 2.9.16 (2022-11-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】节点分发列表自动刷新数据\n 2. 【server】容器安装的服务端不能使用本地构建\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化节点转发超时时间计算方法\n 2.  【server】优化构建项目上传文件、节点分发上传文件超时时间\n 3.  【server】修复 Docker 检查 URL 是否正确引起的 NPE （感谢@～）\n 4.  【server】修复节点分发列表在部分场景出现错误数据行\n 5.  【server】优化节点分发结果添加执行耗时、上传文件大小信息\n 6.  优化安装脚本支持 Ubuntu 系统快速安装 （感谢@阿超）\n 7.  【server】修复节点分发日志未存储到对应的工作空间问题\n 8.  【server】H2 缓存大小配置调整为 50MB，已经安装的版本需要手动修改配置：db.cacheSize\n 9.  【server】修复编辑关联分发项目删除项目数据错乱问题（感谢@DreamAgo Gitee issues I631K2 ）\n 10. 【agent】修复 DSL 模式未运行的项目在部分场景下控制台按钮状态不正确（感谢@项勇祥）\n 11. 【server】优化编辑在线构建弹窗默认不加载仓库分支 （感谢@阿超）\n 12. 【server】优化构建切换分支时自动重新拉取仓库\n 13. 【server】优化构建自动放弃本地修改避免构建引起文件变动冲突（感谢@阿超）\n\n\n# ❌ 不兼容功能\n\n 1. 【server】已经创建的构建不支持切换构建方式\n\n----------------------------------------\n\n\n# 2.9.15 (2022-11-17)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复监控报警无法触发 webhook 类型的通知（感谢@项勇祥 Gitee issues I61KRV ）\n 2. 优化获取程序实参的方法（main 方法参数、使用 SimpleCommandLinePropertySource）\n 3. 【server】修复构建切换分支冲突后，手动清除代码(构建缓存)时文件被占用问题（感谢@xuejun84 Gitee issues I61ANL ）\n\n----------------------------------------\n\n\n# 2.9.14 (2022-11-08)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】更新 Server.sh JVM 参数 -XX:+UnlockExperimentalVMOptions：该参数为解锁 JVM 实验性参数\n 2. 【agent】更新 Server.sh JVM 参数 -XX:+UnlockExperimentalVMOptions：该参数为解锁 JVM 实验性参数\n 3. 【server】修复脚本执行日志名称搜索异常（感谢@伤感的风铃草 Gitee issues I600OE ）\n\n----------------------------------------\n\n\n# 2.9.13 (2022-10-20)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复 SSH管理 中的编辑命令出现内容错乱问题\n 2. 【server】修复构建历史回滚无法正常使用问题（感谢@rs、@Aholic）\n\n----------------------------------------\n\n\n# 2.9.12 (2022-10-10)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修正错别字传入 （感谢@fangdan）\n 2. 【server】修复下拉框组件在弹窗中不能完整显示问题（感谢@冷月）\n\n----------------------------------------\n\n\n# 2.9.11 (2022-09-09)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复全局变量未自动加载列表\n 2. 【server】修复全局变量编辑中不能选择分发节点\n 3. 【server】修复跨工作空间同步数据不能正常使用问题（感谢@ccx2480）\n 4. 【server】修复 SVN 仓库无法构建问题（感谢@Tʀᴜsᴛ¹⁹⁹¹）\n 5. 【server】修复全局变量和工作空间变量可能冲突的问题\n\n----------------------------------------\n\n\n# 2.9.10 (2022-09-07)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增全局工作空间变量\n 2. 【server】构建仓库中密码支持引用工作空间变量值（统一配置账号密码）（感谢 @G、 @hjk2008 Gitee issues I4SH8V ）\n 3. 【server】ssh 账号密码支持引用工作空间变量值\n 4. 【server】构建列表新增下载最新产物方式（感谢@奇奇）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复下拉框组件在弹窗中不能完整显示问题（感谢@飞儿、@冷月、@ccx2480）\n 2. 【server】取消下拉菜单、下拉框跟随页面滚动（from 2.9.2）\n\n----------------------------------------\n\n\n# 2.9.9 (2022-08-22)\n\n\n# 🐣 新增功能\n\n1.【agent】DSL 项目新增支持单独配置是否开启日志文件备份属性（感谢@ccx2480）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】容器构建 cache 插件支持使用环境变量替换值\n 2. 【agent】优化检查 jps 异常,调整为实时检查（感谢@傲梅科技 Gitee issues I5MTA4 ）\n 3. 【server】修复登录后跳转到上次使用到工作空间中问题 （感谢@木迷榖）\n 4. 【server】缓存日志弹窗相关操作配置 （感谢@我已经没有头发了 Gitee issues I5MANC ）\n 5. 【server】优化节点首页：支持自定义刷新频率、图标自动缩放 （感谢@ccx2480）\n 6. 【server】优化构建列表：支持自动刷新、构建状态添加标签颜色\n 7. 【server】优化 SSH 发布上传异常没有抛出导致构建状态不一致问题（感谢@print(1)）\n\n----------------------------------------\n\n\n# 2.9.8 (2022-08-10)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复创建账号默认密码无法正常登录问题（感谢@ʟᴊx💎💎）\n 2. 【server】错别字：权限组周末改为周日、周七改为周日\n 3. 【server】容器构建 JDK 依赖下载地址更新（感谢@Yousinnmu Gitee issues I5LC3K ）\n 4. 【server】构建相关环境变量 GIT 仓库时新增：BUILD_BRANCH_NAME,BUILD_TAG_NAME （感谢@Yousinnmu\n 5. 【server】修复插件端管理页面中无法正常远程更新问题\n\n\n# 特别感谢\n\n感谢 @💎ℳ๓₯㎕斌💎💘 贡献 Adoptium JDK 自动更新的解决方案\n\n----------------------------------------\n\n\n# 2.9.7 (2022-08-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增权限组，用于批量管理用户权限（感谢@木迷榖）\n 2. 【server】账号新增状态字段,用于控制禁用账号\n 3. 【server】重置密码使用系统生成\n 4. 【server】构建 docker 镜像支持使用构建序号 ID 为 tag 版本号递增（感谢@Y.）\n 5. 【server】部分列表新增排序功能(置顶、上移、下移)（感谢@爱琳琳真是太好了 Gitee issues I5KBN9 ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】用户资料支持修改昵称\n 2.  【server】修复节点管理中【系统设置】菜单重复显示菜单项问题（感谢@ʟᴊx💎💎）\n 3.  【server】修复节点首页历史监控图表按钮未显示问题（感谢@ʟᴊx💎💎）\n 4.  【agent】优化加载 nginx 配置相关代码（感谢@伤感的风铃草🌿）\n 5.  【server】修改 node welcome vue 中单词拼写错误（感谢@dongge Gitee issues I5JT9R ）\n 6.  【server】修复 IP 字段长度不足,不能支持 IPV6 问题（感谢@宋晶磊 Gitee issues I5JSEW ）\n 7.  【server】修复在 docker 开启 TLS 时候配置私有仓库不生效问题（感谢@🐠）\n 8.  【server】docker 心跳时间调整为超时时间\n 9.  【server】修改在未配置 docker 私有仓库信息,部分功能出现 NPE（感谢@🐠、Y.）\n 10. 优化 windows 环境管理脚本,保存配置并重启不能正确启动问题（感谢@大灰灰）\n 11. 【server】用户管理中使用系统生成密码代替输入密码\n\n\n# ⚠️ 注意事项\n\n 1. 高版本会兼容低版本已经配置低用户权限，但是在编辑用户时候需要重新配置权限组\n 2. 升级后需要重新配置用户工作空间权限相关\n\n----------------------------------------\n\n\n# 2.9.6 (2022-07-27)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复日志弹窗在部分屏幕下按钮重叠问题（感谢@all-around-badass Gitee issues I5IZ9H ）\n 2. 【server】优化工作空间和用户昵称显示区域,支持显示更多文字（感谢@木迷榖）\n\n----------------------------------------\n\n\n# 2.9.5 (2022-07-26)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增配置容器构建基础镜像相关功能（ 感谢@💎ℳ๓₯㎕斌💎💘 ）\n 2. 【server】SSH 脚本、服务端脚本新增执行触发器\n 3. 节点脚本新增执行触发器 （感谢@田良 Gitee issues I5HB6F ）\n 4. 【server】查看日志组件新增是否换行（感谢@hjk2008 Gitee issues I5CYQK ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 优化 HTTP GET 请求打开重定向\n 2. 【server】触发器 token 机制调整,取消 SHA256 生成。采用数据表单独存储\n 3. 【server】修复启动加载全局代理时机,避免（The database is not initialized）\n 4. 管理脚本执行支持环境变量配置 jvm、端口等，JPOM_AGENT_JVM,JPOM_AGENT_PORT,JPOM_AGENT_ARGS、JPOM_SERVER_JVM,JPOM_SERVER_PORT,JPOM_SERVER_ARGS （ 感谢@飞儿 ）\n 5. 【agent】兼容 log.autoBackConsoleCron: none 配置属性\n\n----------------------------------------\n\n\n# 2.9.4 (2022-07-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】docker 支持配置私有仓库地址（感谢@🐠）\n 2. 【server】构建 Docker 镜像支持推送到仓库中\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】插件端上传文件大小配置恢复默认配置（之前版本遗漏）\n 2. 【server】docker 连接使用连接池实现\n\n----------------------------------------\n\n\n# 2.9.3 (2022-07-08)\n\n\n# 🐣 新增功能\n\n 1.  【server】新增容器 stats ,方便实时查看容器内存、网络信息\n 2.  【server】SSH 文件管理新增重命名文件功能\n 3.  【server】新增全局配置,解决 git httpProxy （感谢@五六 Gitee issues I5EY03 ）\n 4.  【server】新增更新容器配置（CPU、内存等）\n 5.  【server】新增页面 ICON 配置属性：jpom.iconFile （感谢@flyhigh318 Gitee issues I5FKMW ）\n 6.  【server】SSH 脚本新增跨工作空间同步功能 （感谢@flyhigh318 Gitee issues I5FC9R ）\n 7.  【server】服务端脚本模版新增跨工作空间同步功能\n 8.  【server】构建新增事件脚本属性,在构建环节可以执行指定脚本来实现部分功能（感谢@沈世举 Gitee issues I5FKFM ）\n 9.  【server】优化构建任务独立线程池,并且新增配置属性 build.poolSize、build.poolWaitQueue （感谢@小翼哥）\n 10. 【agent】配置项目是否备份控制台日志属性独立：log.autoBackToFile （感谢@Vergil。）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 升级 SpringBoot、Hutool、jgit、svnkit\n 2. 【server】docker 加入集群无法正常使用问题\n 3. 【server】项目文件备份列表不能取消弹窗（点击关闭依然执行）问题（感谢@ʟᴊx💎💎）\n 4. 【server】修复编辑构建仓库切换事件重复问题 （感谢@五六 Gitee issues I5F35E ）\n 5. 【server】修复 windows 执行脚本出现异常（感谢@all-around-badass Gitee issues I5FK0K ）\n\n----------------------------------------\n\n\n# 2.9.2 (2022-06-27)\n\n\n# 🐣 新增功能\n\n 1. 【agent】插件端白名单新增 nginx 安装路径,解决 nginx reload 问题（感谢@all-around-badass Gitee issues I5CJR7 ）\n 2. 【server】通过私人令牌导入仓库支持自建 GitLab\n 3. 【agent】项目文件管理新增重命名文件功能\n 4. 快速安装节点支持配置网卡名称（感谢@Elliot）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】构建历史分页查询不生效（感谢@PQ宝剑 Gitee issues I5CYOD ）\n 2.  【server】优化编辑 ssh 判断重复,支持多账号配置SSH（感谢@xiaofangkang Gitee issues I5D0EY ）\n 3.  【agent】文件备份对比流程异步处理,避免大文件对比耗时阻塞（感谢@ʟᴊx💎💎）\n 4.  【server】修复通过私人令牌导入仓库表格主键指定错误\n 5.  【server】修复 GitLab 通过私人令牌导入仓库接口分页错误\n 6.  【agent】优化新增文件、删除文件目录加载两次问题（感谢@all-around-badass Gitee issues I5DMKG ）\n 7.  【server】优化下拉菜单、下拉框跟随页面滚动 （感谢@pl.com Gitee issues I5D6I0 ）\n 8.  【server】导入仓库支持按仓库名搜索\n 9.  【server】修复导入仓库 GitLab 私有列显示错误\n 10. 副本功能优化,新增名称字段,项目列表快速查看 （感谢@爱琳琳真是太好了 Gitee issues I5E52A ）\n 11. 【server】修复非默认工作空间快速安装节点未正常绑定到对应工作空间问题\n\n----------------------------------------\n\n\n# 2.9.1 (2022-06-16)\n\n\n# 🐣 新增功能\n\n 1. 【server】SSH 终端新增标签页打开方式（感谢@hu丶向...🤡）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】db 安全检查时机前置(是否开启 web 访问),避免突然关闭数据库（感谢@信徒）\n 2. 【server】修复部分终端弹窗太小问题（感谢@syso）\n 3. 【server】修复重新初始化数据库异常问题（感谢@Dream、hu丶向...🤡）\n 4. 【server】修复系统管理中查看白名单配置报错（感谢@all-around-badass Gitee issues I5CGO7 ）\n 5. 【server】优化监听到路由错误 刷新页面\n 6. 【server】修复控制台按钮不能正常使用的情况（感谢@😱 会 🎉、ccx2480）\n\n----------------------------------------\n\n\n# 2.9.0 (2022-06-13)\n\n\n# 🐣 新增功能\n\n 1. 【server】SSH 终端新增全屏方式打开 （感谢@jaseeon Gitee issues I5BS52 ）\n 2. 【server】SSH 新增超时时间配置（感谢@带刺的玫瑰）\n 3. 【server】SFTP 新增超时时间（感谢@带刺的玫瑰）（特别感谢 @hutool 作者紧急发版支持）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】升级 h2 版本，低版本存在漏洞(CVE-2021-23463)\n 2. 升级 SpringBoot、Hutool 版本\n 3. 【server】修复监控日志未存储到对应的工作空间（感谢@带刺的玫瑰）\n\n\n# ⚠️ 注意\n\n> 此版本为不兼容升级，需要手动升级操作数据相关迁移，操作流程如下：\n\n 1. 导出低版本数据\n    1. 启动程序参数里面添加 --backup-h2\n    2. linux 环境举例：bash /xxxx/Server.sh restart -15 --backup-h2\n 2. 将导出的低版本数据( sql 文件) 导入到新版本中\n    1. 启动程序参数里面添加 --replace-import-h2-sql=/xxxx.sql --transform-sql (路径需要替换为第一步控制台输出的 sql 文件保存路径)\n    2. linux 环境举例：bash /xxxx/Server.sh restart -15 --replace-import-h2-sql=/xxxx.sql --transform-sql\n\n✈️ 更详细的升级说明文档",normalizedContent:"# 2.9.21 (2022-12-08)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 不能在线保存服务端配置（@迷了鹿）\n 2. 【all】修复 服务端脚本分发节点工作空间错乱问题，需要再次保存自动修正（感谢@mt-mored gitee issues i65b19 ）\n\n\n# ❌ 不兼容功能\n\n 1. 【agent】取消 对 2.4.3 以下的项目白名单目录修复支持\n\n----------------------------------------\n\n\n# 2.9.20 (2022-12-06)\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化 服务端脚本触发器传入参数添加为执行环境变量（变量名自动转下划线并且添加 trigger_ 前缀）（感谢@李中原）\n 2.  【agent】优化 插件端脚本触发器传入参数添加为执行环境变量（变量名自动转下划线并且添加 trigger_ 前缀）（感谢@李中原）\n 3.  【server】优化 构建确认弹窗支持选择差异构建\n 4.  【server】优化 修剪 docker 镜像支持选择悬空\n 5.  【server】优化 git 仓库标签拉取支持差异构建判断（感谢@m⃰i⃰n⃰g⃰ z⃰a⃰i⃰、@阿超）\n 6.  【server】优化 提醒 mfa 绑定取消 esc 关闭弹窗\n 7.  【server】优化 添加构建时未选择分支表单一致验证失败问题\n 8.  【agent】修复 上传文件并重启不能正常重启（节点分发完整顺序重启、顺序重启）\n 9.  【server】优化 节点分发列表显示更多字段\n 10. 【server】优化 日志阅读不可以阅读文件不能选择\n 11. 【server】优化 节点分发支持调整到实时阅读页面\n\n----------------------------------------\n\n\n# 2.9.19 (2022-12-05)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增 在线构建新增附加环境变量配置 来实现定义构建运行环境变量\n 2. 【server】新增 构建发布 docker 镜像新增构建参数,使构建镜像更灵活 （感谢@loyal）\n 3. 【server】新增 构建发布 docker 镜像新增镜像标签、no-cache、更新镜像配置\n 4. 【server】新增 修剪 docker 相关资源功能\n 5. 【server】新增 单 ip 登录失败指定次数将锁定对应 ip，默认 10 次 user.alwaysiploginerror\n 6. 【server】新增 镜像创建容器支持配置 label 属性\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 在线构建仓库文件存在.env文件时带来构建结果异常问题（感谢@蹉跎岁月）\n 2. 【agent】优化 项目清空上传文件等待文件上传完成后再清空、上传文件优先到临时目录完成后再移动至项目目录（感谢@tiv-cloud_0 gitee issues i649nu ）\n 3. 【server】修复 docker 创建容器部分场景端口无法正常暴露问题（感谢@李中原）\n 4. 【server】优化 docker 控制台刷新页面自动打开控制台\n 5. 【server】优化 docker java 依赖包\n 6. 【all】优化 取消 hutool-all 包，采用 bom 方式引入\n\n\n# ❌ 不兼容功能\n\n 1. 【server】在线构建本地构建、本地发布、docker 镜像取消默认读取 .env文件,需要手动配置\n 2. 【server】取消 user.iperrorlocktime 属性表达式支持，改为 duration 风格，转换异常默认值为 5h\n\n----------------------------------------\n\n\n# 2.9.18 (2022-12-01)\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增 dsl 项目运行脚本环境变量配置（run.start.scriptenv）\n 2. 【agent】新增 dsl 项目自定义 restart 流程 （run.restart）\n 3. 【agent】新增项目状态检测间隔时间配置属性：project.statusdetectioninterval （感谢@项勇祥）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【agent】修复 dsl 项目重启操作被偶发异常（自动）关闭问题\n 2.  【agent】优化 dsl 项目控制台日志输出格式\n 3.  【all】优化日志监听器：控制台支持自动重定向、第一次启动项目自动重新 showlog\n 4.  【server】节点超时时间配置为 0 失效问题\n 5.  【agent】修复进程列表在部分场景下进程号数字转换异常（感谢@易自玉）\n 6.  【agent】优化启动、停止、重启响应结果输出\n 7.  【agent】修复 windows dsl 模式：另一个程序正在使用此文件，进程无法访问。 问题\n 8.  【agent】修复节点脚本模板在一定情况下出现：另一个程序正在使用此文件，进程无法访问。 问题（感谢@易自玉）\n 9.  【server】修复服务端脚本模板在一定情况下出现：另一个程序正在使用此文件，进程无法访问。 问题\n 10. 【server】修复节点分发无法正常使用控制台、项目文件管理功能（感谢@ccx2480）\n\n----------------------------------------\n\n\n# 2.9.17 (2022-11-28)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增强制提示用户开启 mfa 认证,新增配置属性：user.forcemfa（感谢@长风 gitee issues i5zbfu ）\n 2. 【server】新增镜像创建容器支持配置网络模式属性、--privileged、重启策略属性\n 3. 【server】新增自动探测本地 docker 按钮\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化系统已经初始化过进入初始化页面提示信息（感谢@说一 gitee issues i61lqh ）\n 2. 【server】优化构建流程状态，不存在产物构建状态标记为构建失败\n 3. 【agent】修复未配置 nginx 路径时 reload 报错\n 4. 【server】优化在线构建根据标签拉取代码（感谢@tʀᴜsᴛ¹⁹⁹¹）\n 5. 【server】优化克隆 git 仓库仅显示少量日志\n 6. 【server】优化升级页面 loading 效果、全局 loading 关闭事件\n\n\n# ❌ 不兼容功能\n\n 1. 【server】取消启动自动加载本地 docker\n 2. 【server】在线构建选择标签构建后，不能切换分支\n\n----------------------------------------\n\n\n# 2.9.16 (2022-11-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】节点分发列表自动刷新数据\n 2. 【server】容器安装的服务端不能使用本地构建\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化节点转发超时时间计算方法\n 2.  【server】优化构建项目上传文件、节点分发上传文件超时时间\n 3.  【server】修复 docker 检查 url 是否正确引起的 npe （感谢@～）\n 4.  【server】修复节点分发列表在部分场景出现错误数据行\n 5.  【server】优化节点分发结果添加执行耗时、上传文件大小信息\n 6.  优化安装脚本支持 ubuntu 系统快速安装 （感谢@阿超）\n 7.  【server】修复节点分发日志未存储到对应的工作空间问题\n 8.  【server】h2 缓存大小配置调整为 50mb，已经安装的版本需要手动修改配置：db.cachesize\n 9.  【server】修复编辑关联分发项目删除项目数据错乱问题（感谢@dreamago gitee issues i631k2 ）\n 10. 【agent】修复 dsl 模式未运行的项目在部分场景下控制台按钮状态不正确（感谢@项勇祥）\n 11. 【server】优化编辑在线构建弹窗默认不加载仓库分支 （感谢@阿超）\n 12. 【server】优化构建切换分支时自动重新拉取仓库\n 13. 【server】优化构建自动放弃本地修改避免构建引起文件变动冲突（感谢@阿超）\n\n\n# ❌ 不兼容功能\n\n 1. 【server】已经创建的构建不支持切换构建方式\n\n----------------------------------------\n\n\n# 2.9.15 (2022-11-17)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复监控报警无法触发 webhook 类型的通知（感谢@项勇祥 gitee issues i61krv ）\n 2. 优化获取程序实参的方法（main 方法参数、使用 simplecommandlinepropertysource）\n 3. 【server】修复构建切换分支冲突后，手动清除代码(构建缓存)时文件被占用问题（感谢@xuejun84 gitee issues i61anl ）\n\n----------------------------------------\n\n\n# 2.9.14 (2022-11-08)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】更新 server.sh jvm 参数 -xx:+unlockexperimentalvmoptions：该参数为解锁 jvm 实验性参数\n 2. 【agent】更新 server.sh jvm 参数 -xx:+unlockexperimentalvmoptions：该参数为解锁 jvm 实验性参数\n 3. 【server】修复脚本执行日志名称搜索异常（感谢@伤感的风铃草 gitee issues i600oe ）\n\n----------------------------------------\n\n\n# 2.9.13 (2022-10-20)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复 ssh管理 中的编辑命令出现内容错乱问题\n 2. 【server】修复构建历史回滚无法正常使用问题（感谢@rs、@aholic）\n\n----------------------------------------\n\n\n# 2.9.12 (2022-10-10)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修正错别字传入 （感谢@fangdan）\n 2. 【server】修复下拉框组件在弹窗中不能完整显示问题（感谢@冷月）\n\n----------------------------------------\n\n\n# 2.9.11 (2022-09-09)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复全局变量未自动加载列表\n 2. 【server】修复全局变量编辑中不能选择分发节点\n 3. 【server】修复跨工作空间同步数据不能正常使用问题（感谢@ccx2480）\n 4. 【server】修复 svn 仓库无法构建问题（感谢@tʀᴜsᴛ¹⁹⁹¹）\n 5. 【server】修复全局变量和工作空间变量可能冲突的问题\n\n----------------------------------------\n\n\n# 2.9.10 (2022-09-07)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增全局工作空间变量\n 2. 【server】构建仓库中密码支持引用工作空间变量值（统一配置账号密码）（感谢 @g、 @hjk2008 gitee issues i4sh8v ）\n 3. 【server】ssh 账号密码支持引用工作空间变量值\n 4. 【server】构建列表新增下载最新产物方式（感谢@奇奇）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复下拉框组件在弹窗中不能完整显示问题（感谢@飞儿、@冷月、@ccx2480）\n 2. 【server】取消下拉菜单、下拉框跟随页面滚动（from 2.9.2）\n\n----------------------------------------\n\n\n# 2.9.9 (2022-08-22)\n\n\n# 🐣 新增功能\n\n1.【agent】dsl 项目新增支持单独配置是否开启日志文件备份属性（感谢@ccx2480）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】容器构建 cache 插件支持使用环境变量替换值\n 2. 【agent】优化检查 jps 异常,调整为实时检查（感谢@傲梅科技 gitee issues i5mta4 ）\n 3. 【server】修复登录后跳转到上次使用到工作空间中问题 （感谢@木迷榖）\n 4. 【server】缓存日志弹窗相关操作配置 （感谢@我已经没有头发了 gitee issues i5manc ）\n 5. 【server】优化节点首页：支持自定义刷新频率、图标自动缩放 （感谢@ccx2480）\n 6. 【server】优化构建列表：支持自动刷新、构建状态添加标签颜色\n 7. 【server】优化 ssh 发布上传异常没有抛出导致构建状态不一致问题（感谢@print(1)）\n\n----------------------------------------\n\n\n# 2.9.8 (2022-08-10)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复创建账号默认密码无法正常登录问题（感谢@ʟᴊx💎💎）\n 2. 【server】错别字：权限组周末改为周日、周七改为周日\n 3. 【server】容器构建 jdk 依赖下载地址更新（感谢@yousinnmu gitee issues i5lc3k ）\n 4. 【server】构建相关环境变量 git 仓库时新增：build_branch_name,build_tag_name （感谢@yousinnmu\n 5. 【server】修复插件端管理页面中无法正常远程更新问题\n\n\n# 特别感谢\n\n感谢 @💎ℳ๓₯㎕斌💎💘 贡献 adoptium jdk 自动更新的解决方案\n\n----------------------------------------\n\n\n# 2.9.7 (2022-08-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增权限组，用于批量管理用户权限（感谢@木迷榖）\n 2. 【server】账号新增状态字段,用于控制禁用账号\n 3. 【server】重置密码使用系统生成\n 4. 【server】构建 docker 镜像支持使用构建序号 id 为 tag 版本号递增（感谢@y.）\n 5. 【server】部分列表新增排序功能(置顶、上移、下移)（感谢@爱琳琳真是太好了 gitee issues i5kbn9 ）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】用户资料支持修改昵称\n 2.  【server】修复节点管理中【系统设置】菜单重复显示菜单项问题（感谢@ʟᴊx💎💎）\n 3.  【server】修复节点首页历史监控图表按钮未显示问题（感谢@ʟᴊx💎💎）\n 4.  【agent】优化加载 nginx 配置相关代码（感谢@伤感的风铃草🌿）\n 5.  【server】修改 node welcome vue 中单词拼写错误（感谢@dongge gitee issues i5jt9r ）\n 6.  【server】修复 ip 字段长度不足,不能支持 ipv6 问题（感谢@宋晶磊 gitee issues i5jsew ）\n 7.  【server】修复在 docker 开启 tls 时候配置私有仓库不生效问题（感谢@🐠）\n 8.  【server】docker 心跳时间调整为超时时间\n 9.  【server】修改在未配置 docker 私有仓库信息,部分功能出现 npe（感谢@🐠、y.）\n 10. 优化 windows 环境管理脚本,保存配置并重启不能正确启动问题（感谢@大灰灰）\n 11. 【server】用户管理中使用系统生成密码代替输入密码\n\n\n# ⚠️ 注意事项\n\n 1. 高版本会兼容低版本已经配置低用户权限，但是在编辑用户时候需要重新配置权限组\n 2. 升级后需要重新配置用户工作空间权限相关\n\n----------------------------------------\n\n\n# 2.9.6 (2022-07-27)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复日志弹窗在部分屏幕下按钮重叠问题（感谢@all-around-badass gitee issues i5iz9h ）\n 2. 【server】优化工作空间和用户昵称显示区域,支持显示更多文字（感谢@木迷榖）\n\n----------------------------------------\n\n\n# 2.9.5 (2022-07-26)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增配置容器构建基础镜像相关功能（ 感谢@💎ℳ๓₯㎕斌💎💘 ）\n 2. 【server】ssh 脚本、服务端脚本新增执行触发器\n 3. 节点脚本新增执行触发器 （感谢@田良 gitee issues i5hb6f ）\n 4. 【server】查看日志组件新增是否换行（感谢@hjk2008 gitee issues i5cyqk ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 优化 http get 请求打开重定向\n 2. 【server】触发器 token 机制调整,取消 sha256 生成。采用数据表单独存储\n 3. 【server】修复启动加载全局代理时机,避免（the database is not initialized）\n 4. 管理脚本执行支持环境变量配置 jvm、端口等，jpom_agent_jvm,jpom_agent_port,jpom_agent_args、jpom_server_jvm,jpom_server_port,jpom_server_args （ 感谢@飞儿 ）\n 5. 【agent】兼容 log.autobackconsolecron: none 配置属性\n\n----------------------------------------\n\n\n# 2.9.4 (2022-07-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】docker 支持配置私有仓库地址（感谢@🐠）\n 2. 【server】构建 docker 镜像支持推送到仓库中\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】插件端上传文件大小配置恢复默认配置（之前版本遗漏）\n 2. 【server】docker 连接使用连接池实现\n\n----------------------------------------\n\n\n# 2.9.3 (2022-07-08)\n\n\n# 🐣 新增功能\n\n 1.  【server】新增容器 stats ,方便实时查看容器内存、网络信息\n 2.  【server】ssh 文件管理新增重命名文件功能\n 3.  【server】新增全局配置,解决 git httpproxy （感谢@五六 gitee issues i5ey03 ）\n 4.  【server】新增更新容器配置（cpu、内存等）\n 5.  【server】新增页面 icon 配置属性：jpom.iconfile （感谢@flyhigh318 gitee issues i5fkmw ）\n 6.  【server】ssh 脚本新增跨工作空间同步功能 （感谢@flyhigh318 gitee issues i5fc9r ）\n 7.  【server】服务端脚本模版新增跨工作空间同步功能\n 8.  【server】构建新增事件脚本属性,在构建环节可以执行指定脚本来实现部分功能（感谢@沈世举 gitee issues i5fkfm ）\n 9.  【server】优化构建任务独立线程池,并且新增配置属性 build.poolsize、build.poolwaitqueue （感谢@小翼哥）\n 10. 【agent】配置项目是否备份控制台日志属性独立：log.autobacktofile （感谢@vergil。）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 升级 springboot、hutool、jgit、svnkit\n 2. 【server】docker 加入集群无法正常使用问题\n 3. 【server】项目文件备份列表不能取消弹窗（点击关闭依然执行）问题（感谢@ʟᴊx💎💎）\n 4. 【server】修复编辑构建仓库切换事件重复问题 （感谢@五六 gitee issues i5f35e ）\n 5. 【server】修复 windows 执行脚本出现异常（感谢@all-around-badass gitee issues i5fk0k ）\n\n----------------------------------------\n\n\n# 2.9.2 (2022-06-27)\n\n\n# 🐣 新增功能\n\n 1. 【agent】插件端白名单新增 nginx 安装路径,解决 nginx reload 问题（感谢@all-around-badass gitee issues i5cjr7 ）\n 2. 【server】通过私人令牌导入仓库支持自建 gitlab\n 3. 【agent】项目文件管理新增重命名文件功能\n 4. 快速安装节点支持配置网卡名称（感谢@elliot）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】构建历史分页查询不生效（感谢@pq宝剑 gitee issues i5cyod ）\n 2.  【server】优化编辑 ssh 判断重复,支持多账号配置ssh（感谢@xiaofangkang gitee issues i5d0ey ）\n 3.  【agent】文件备份对比流程异步处理,避免大文件对比耗时阻塞（感谢@ʟᴊx💎💎）\n 4.  【server】修复通过私人令牌导入仓库表格主键指定错误\n 5.  【server】修复 gitlab 通过私人令牌导入仓库接口分页错误\n 6.  【agent】优化新增文件、删除文件目录加载两次问题（感谢@all-around-badass gitee issues i5dmkg ）\n 7.  【server】优化下拉菜单、下拉框跟随页面滚动 （感谢@pl.com gitee issues i5d6i0 ）\n 8.  【server】导入仓库支持按仓库名搜索\n 9.  【server】修复导入仓库 gitlab 私有列显示错误\n 10. 副本功能优化,新增名称字段,项目列表快速查看 （感谢@爱琳琳真是太好了 gitee issues i5e52a ）\n 11. 【server】修复非默认工作空间快速安装节点未正常绑定到对应工作空间问题\n\n----------------------------------------\n\n\n# 2.9.1 (2022-06-16)\n\n\n# 🐣 新增功能\n\n 1. 【server】ssh 终端新增标签页打开方式（感谢@hu丶向...🤡）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】db 安全检查时机前置(是否开启 web 访问),避免突然关闭数据库（感谢@信徒）\n 2. 【server】修复部分终端弹窗太小问题（感谢@syso）\n 3. 【server】修复重新初始化数据库异常问题（感谢@dream、hu丶向...🤡）\n 4. 【server】修复系统管理中查看白名单配置报错（感谢@all-around-badass gitee issues i5cgo7 ）\n 5. 【server】优化监听到路由错误 刷新页面\n 6. 【server】修复控制台按钮不能正常使用的情况（感谢@😱 会 🎉、ccx2480）\n\n----------------------------------------\n\n\n# 2.9.0 (2022-06-13)\n\n\n# 🐣 新增功能\n\n 1. 【server】ssh 终端新增全屏方式打开 （感谢@jaseeon gitee issues i5bs52 ）\n 2. 【server】ssh 新增超时时间配置（感谢@带刺的玫瑰）\n 3. 【server】sftp 新增超时时间（感谢@带刺的玫瑰）（特别感谢 @hutool 作者紧急发版支持）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】升级 h2 版本，低版本存在漏洞(cve-2021-23463)\n 2. 升级 springboot、hutool 版本\n 3. 【server】修复监控日志未存储到对应的工作空间（感谢@带刺的玫瑰）\n\n\n# ⚠️ 注意\n\n> 此版本为不兼容升级，需要手动升级操作数据相关迁移，操作流程如下：\n\n 1. 导出低版本数据\n    1. 启动程序参数里面添加 --backup-h2\n    2. linux 环境举例：bash /xxxx/server.sh restart -15 --backup-h2\n 2. 将导出的低版本数据( sql 文件) 导入到新版本中\n    1. 启动程序参数里面添加 --replace-import-h2-sql=/xxxx.sql --transform-sql (路径需要替换为第一步控制台输出的 sql 文件保存路径)\n    2. linux 环境举例：bash /xxxx/server.sh restart -15 --replace-import-h2-sql=/xxxx.sql --transform-sql\n\n✈️ 更详细的升级说明文档",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"历史更新记录",frontmatter:{title:"历史更新记录",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/history/",tags:[null],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/11100.history.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/11100.history.md",key:"v-7109ac58",path:"/pages/changelog/history/",headers:[{level:2,title:"2.6.0 ~ 2.6.4 版本日志",slug:"_2-6-0-2-6-4-版本日志",normalizedTitle:"2.6.0 ~ 2.6.4 版本日志",charIndex:2},{level:2,title:"2.5.0 ~ 2.5.2 版本日志",slug:"_2-5-0-2-5-2-版本日志",normalizedTitle:"2.5.0 ~ 2.5.2 版本日志",charIndex:77},{level:2,title:"2.4.0 ~ 2.4.9 版本日志",slug:"_2-4-0-2-4-9-版本日志",normalizedTitle:"2.4.0 ~ 2.4.9 版本日志",charIndex:152},{level:2,title:"2.3.1 ~ 2.3.2 版本日志",slug:"_2-3-1-2-3-2-版本日志",normalizedTitle:"2.3.1 ~ 2.3.2 版本日志",charIndex:227},{level:2,title:"2.0 ~ 2.2 版本日志",slug:"_2-0-2-2-版本日志",normalizedTitle:"2.0 ~ 2.2 版本日志",charIndex:302}],headersStr:"2.6.0 ~ 2.6.4 版本日志 2.5.0 ~ 2.5.2 版本日志 2.4.0 ~ 2.4.9 版本日志 2.3.1 ~ 2.3.2 版本日志 2.0 ~ 2.2 版本日志",content:"# 2.6.0 ~ 2.6.4 版本日志\n\n2.6.x.md\n\n----------------------------------------\n\n\n# 2.5.0 ~ 2.5.2 版本日志\n\n2.5.x.md\n\n----------------------------------------\n\n\n# 2.4.0 ~ 2.4.9 版本日志\n\n2.4.x.md\n\n----------------------------------------\n\n\n# 2.3.1 ~ 2.3.2 版本日志\n\n2.3.x.md\n\n----------------------------------------\n\n\n# 2.0 ~ 2.2 版本日志\n\n2.x.md",normalizedContent:"# 2.6.0 ~ 2.6.4 版本日志\n\n2.6.x.md\n\n----------------------------------------\n\n\n# 2.5.0 ~ 2.5.2 版本日志\n\n2.5.x.md\n\n----------------------------------------\n\n\n# 2.4.0 ~ 2.4.9 版本日志\n\n2.4.x.md\n\n----------------------------------------\n\n\n# 2.3.1 ~ 2.3.2 版本日志\n\n2.3.x.md\n\n----------------------------------------\n\n\n# 2.0 ~ 2.2 版本日志\n\n2.x.md",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.7.0 ~ 2.7.3",frontmatter:{title:"2.7.0 ~ 2.7.3",date:"2022-06-11T17:18:44.000Z",permalink:"/pages/changelog/2.7.x/",tags:["2.7.x"],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/1193.2.7.x.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/1193.2.7.x.md",key:"v-6953f20c",path:"/pages/changelog/2.7.x/",headers:[{level:2,title:"2.7.3 (2021-12-02)",slug:"_2-7-3-2021-12-02",normalizedTitle:"2.7.3 (2021-12-02)",charIndex:2},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:25},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:285},{level:2,title:"2.7.2 (fix)",slug:"_2-7-2-fix",normalizedTitle:"2.7.2 (fix)",charIndex:792},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:25},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:285},{level:2,title:"2.7.1 (fix)",slug:"_2-7-1-fix",normalizedTitle:"2.7.1 (fix)",charIndex:983},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:25},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:285},{level:2,title:"2.7.0 (beta)",slug:"_2-7-0-beta",normalizedTitle:"2.7.0 (beta)",charIndex:1244},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:25},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:285},{level:3,title:"⚠️ 升级注意事项",slug:"⚠️-升级注意事项",normalizedTitle:"⚠️ 升级注意事项",charIndex:3766}],headersStr:"2.7.3 (2021-12-02) 🐣 新增功能 🐞 解决BUG、优化功能 2.7.2 (fix) 🐣 新增功能 🐞 解决BUG、优化功能 2.7.1 (fix) 🐣 新增功能 🐞 解决BUG、优化功能 2.7.0 (beta) 🐣 新增功能 🐞 解决BUG、优化功能 ⚠️ 升级注意事项",content:"# 2.7.3 (2021-12-02)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增自定义系统网页标题配置jpom.name\n 2. 【server】新增自定义系统网页 logo 配置jpom.logoFile\n 3. 【server】新增自定义系统登录页面标题配置jpom.loginTitle\n 4. 【server】新增自定义系统 logo 文字标题配置jpom.subTitle\n 5. 新增在线下载最新版本更新包功能（在线检测最新版本）\n 6. 【server】新增菜单系统管理-数据库备份，支持 Jpom 使用的 H2 数据库备份、还原\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】恢复构建产物为匹配符无法正常发布问题（感谢@Kay）\n 2.  【server】恢复在线升级页面在二级路径下无法使用的问题 (感谢@hu丶向...🤡)\n 3.  【server】恢复构建执行命令阻塞问题（感谢@小猿同学）\n 4.  【server】恢复限制 IP 访问和插件端授权信息不正确状态码冲突（感谢@小龙、@大灰灰）\n 5.  取消 tools.jar 依赖\n 6.  【server】优化初始化数据库流程，避免多次执行相同修改，节省启动时间\n 7.  【fix】恢复项目副本集乱码（感谢@ʟᴊx）\n 8.  【server】添加在线升级完成后的回调提示\n 9.  【server】ssh安装节点按钮动态显示\n 10. 【server】恢复构建信息中脚本过长无法构建的bug（感谢@Dream）\n 11. 在网页的编辑器中修改配置文件时兼容tab键（感谢@Dream）\n\n> 取消 tools.jar 依赖后，Java 项目状态监控使用 jps 命令实现\n\n----------------------------------------\n\n\n# 2.7.2 (fix)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】解决 nginx 编辑配置文件 url 编码问题\n 2. 【server】新增配置构建命令支持不检测删除命令 build.checkDeleteCommand (感谢@Dream)\n\n----------------------------------------\n\n\n# 2.7.1 (fix)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 解决插件端请求参数 url 编码无法解析问题（感谢@知识就是力量）\n 2. 【agent】项目文件夹为空不再提示错误信息\n 3. 【server】fix 编辑构建选择 ssh 发布无法保存 （感谢 @Peision Gitee issues I4CQWA ）\n 4. 【server】fix ssh 终端未配置禁用命令不能输入空格问题\n\n----------------------------------------\n\n\n# 2.7.0 (beta)\n\n\n# 🐣 新增功能\n\n 1.  【server】构建中的仓库独立管理\n 2.  【server】构建信息存储方式调整为 h2 数据库，不再存储到 json 文件中\n 3.  【server】构建触发器地址变更\n 4.  【agent】新增文件管理中允许编辑的文件后缀，以及对应后缀的文件编码\n 5.  项目文件管理中新增编辑按钮，支持编辑文本文件（ 新版本 UI 同步新增该功能）\n 6.  程序启动输出默认 IP 地址和当前运行端口信息\n 7.  bat 管理命令（windows）启动后输出日志文件,方便排查当前启动情况\n 8.  【server】上传文件到插件端（节点）超时配置独立,采用 server 端全局配置,配置参数 node.uploadFileTimeOut （感谢 @LW 根据 Gitee issues I3O8YE ）\n 9.  【server】角色新增添加权限配置 （感谢@misaka Gitee pr ）\n 10. 【server】节点升级上传新包成功后删除历史包\n 11. 【server】新版本 UI 菜单系统管理、节点升级只有系统管理员可见\n 12. 【server】新版本 UI 脚本模板同步添加执行参数（感谢@轻描淡写 Gitee issues I43G4B ）\n 13. 【server】新版本 UI 同步添加 common.js\n 14. 【agent】项目文件管理新增下载远程文件功能\n 15. 【agent】节点首页监控新增实际使用内存占比（linux系统） （感谢@大灰灰）\n 16. 【server】ssh 新增操作记录（方便查看执行历史回溯操作）\n 17. 【server】新增 h2 控制台配置属性,基于 SpringBoot,配置参数spring.h2.console.enabled\n 18. 【server】节点分发支持下载远程文件 （感谢@落泪归枫 Gitee issues I1LM27 ）\n 19. 【server】节点分发支持 file 类型项目\n 20. 【agent】项目新增配置日志文件输出到指定目录\n 21. 【server】构建产物目录支持通配符AntPathMatcher模式 （感谢@saysay Gitee issues I455FM ）\n 22. 【server】新增 h2 数据库缓存大小配置 CACHE_SIZE `db.cacheSize\n 23. 【server】构建触发器新增延迟执行参数（感谢@Steve.Liu）\n 24. 【server】增加全局项目搜索功能\n 25. 【agent】项目增加批量启动关闭重启\n 26. 【server】节点分发文件支持上传非压缩包（感谢@Sam、風中飛絮 Gitee issues I3YNA5 ）\n 27. 【server】nginx 二级代理无法访问（感谢@hu丶向...🤡）\n 28. 【server】ssh文件管理新增在线编辑（感谢@嗳啨 Gitee issues I4ADTA ）\n 29. 在线升级支持上传 zip 包自动解析（感谢@Sam）\n 30. 【server】ssh 安装插件端新增等待次数配置（感谢@hu丶向...🤡）\n 31. 【server】新增前端接口请求超时配置 jpom.webApiTimeOut（感谢@hu丶向...🤡）\n 32. 【server】构建支持 tag 通配符 （感谢@落泪归枫 Gitee issues I1LM1V ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】添加节点时候限制超时时间，避免配置错误一直等待情况\n 2.  【server】优化限制 IP 白名单相关判断，避免手动修改错误后一直限制访问\n 3.  【server】添加 QQ 邮箱配置参照说明 QQ邮箱官方文档\n 4.  【server】fix: 删除临时文件出现 AccessDeniedException 更新文件权限为可读（取消只读权限）\n 5.  【server】拉取 GIT 代码根据仓库路径添加 synchronized\n 6.  【server】节点管理页面支持刷新当前节点页面（刷新不再回到首页）\n 7.  【server】 jpom-service.sh 文件加载环境变量修改为 判断模式\n 8.  【agent】fix: windows 环境保存配置文件错误问题\n 9.  【agent】fix: 在线升级页面在没有配置白名单时候无法显示节点信息\n 10. 【server】ssh 快捷安装插件端检查配置文件不在使用 SpringBoot 非 public 工具类\n 11. 【server】请求节点发生异常打印具体堆栈、接口异常拦截器里面默认不打印堆栈 （根据 Gitee issues I3O8YE ）\n 12. 【server】节点升级中偶尔出现无法获取到对应的版本信息问题（感谢@misaka Gitee issues I41TDY ）\n 13. 本地运行数据目录位置改为${user.home}/jpom/xxxx、日志路径改为项目模块下\n 14. 【agent】升级 commons-compress 依赖 （来自 GitHub advisories ）\n 15. agent 和 server 间的 websocket 鉴权调整\n 16. 【server】update: 刷新整个页面的时候重新加载菜单\n 17. 历史监控图表查询报时间格式化错误(字符串工具类) （感谢@misaka Gitee pr ）\n 18. 【agent】nginx 配置文件取消强制检测 server 节点\n 19. 【server】仓库密码改为隐藏\n 20. 解决退出登录验证码没有刷新问题 （感谢群友：Steve.Liu）\n 21. 【agent】节点分发清空发布无效（感谢@Sam）\n 22. 【server】编写分发项目时，当分发节点做替换、新增的操作后，点击确认，控制台报错（感谢@tan90°）\n\n\n# ⚠️ 升级注意事项\n\n> 【特别声明】当前版本 仓库和构建并没有接入动态数据权限，如果对权限敏感的用户建议等待下一个版本优化权限后再升级（如有疑问可以微信群沟通）\n\n> ⚠️ 注意1：由于构建信息全部存储到 h2 数据库中，之前到构建信息会自动同步，在升级后到第一次启动需观察控制台信息，启动成功后请检查构建信息，仓库信息是否同步正确\n> \n> ⚠️ 注意2：构建的触发器地址有更新，需要重新获取触发器地址\n> \n> ⚠️ 注意3：升级到该版本需要保证 agent、server 都保持同步，如果只升级 server 会出现项目控制台等功能无法正常使用\n> \n> ⚠️ 注意4：升级 2.7.x 后不建议降级操作,会涉及到数据不兼容到情况\n\n----------------------------------------",normalizedContent:"# 2.7.3 (2021-12-02)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增自定义系统网页标题配置jpom.name\n 2. 【server】新增自定义系统网页 logo 配置jpom.logofile\n 3. 【server】新增自定义系统登录页面标题配置jpom.logintitle\n 4. 【server】新增自定义系统 logo 文字标题配置jpom.subtitle\n 5. 新增在线下载最新版本更新包功能（在线检测最新版本）\n 6. 【server】新增菜单系统管理-数据库备份，支持 jpom 使用的 h2 数据库备份、还原\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】恢复构建产物为匹配符无法正常发布问题（感谢@kay）\n 2.  【server】恢复在线升级页面在二级路径下无法使用的问题 (感谢@hu丶向...🤡)\n 3.  【server】恢复构建执行命令阻塞问题（感谢@小猿同学）\n 4.  【server】恢复限制 ip 访问和插件端授权信息不正确状态码冲突（感谢@小龙、@大灰灰）\n 5.  取消 tools.jar 依赖\n 6.  【server】优化初始化数据库流程，避免多次执行相同修改，节省启动时间\n 7.  【fix】恢复项目副本集乱码（感谢@ʟᴊx）\n 8.  【server】添加在线升级完成后的回调提示\n 9.  【server】ssh安装节点按钮动态显示\n 10. 【server】恢复构建信息中脚本过长无法构建的bug（感谢@dream）\n 11. 在网页的编辑器中修改配置文件时兼容tab键（感谢@dream）\n\n> 取消 tools.jar 依赖后，java 项目状态监控使用 jps 命令实现\n\n----------------------------------------\n\n\n# 2.7.2 (fix)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】解决 nginx 编辑配置文件 url 编码问题\n 2. 【server】新增配置构建命令支持不检测删除命令 build.checkdeletecommand (感谢@dream)\n\n----------------------------------------\n\n\n# 2.7.1 (fix)\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 解决插件端请求参数 url 编码无法解析问题（感谢@知识就是力量）\n 2. 【agent】项目文件夹为空不再提示错误信息\n 3. 【server】fix 编辑构建选择 ssh 发布无法保存 （感谢 @peision gitee issues i4cqwa ）\n 4. 【server】fix ssh 终端未配置禁用命令不能输入空格问题\n\n----------------------------------------\n\n\n# 2.7.0 (beta)\n\n\n# 🐣 新增功能\n\n 1.  【server】构建中的仓库独立管理\n 2.  【server】构建信息存储方式调整为 h2 数据库，不再存储到 json 文件中\n 3.  【server】构建触发器地址变更\n 4.  【agent】新增文件管理中允许编辑的文件后缀，以及对应后缀的文件编码\n 5.  项目文件管理中新增编辑按钮，支持编辑文本文件（ 新版本 ui 同步新增该功能）\n 6.  程序启动输出默认 ip 地址和当前运行端口信息\n 7.  bat 管理命令（windows）启动后输出日志文件,方便排查当前启动情况\n 8.  【server】上传文件到插件端（节点）超时配置独立,采用 server 端全局配置,配置参数 node.uploadfiletimeout （感谢 @lw 根据 gitee issues i3o8ye ）\n 9.  【server】角色新增添加权限配置 （感谢@misaka gitee pr ）\n 10. 【server】节点升级上传新包成功后删除历史包\n 11. 【server】新版本 ui 菜单系统管理、节点升级只有系统管理员可见\n 12. 【server】新版本 ui 脚本模板同步添加执行参数（感谢@轻描淡写 gitee issues i43g4b ）\n 13. 【server】新版本 ui 同步添加 common.js\n 14. 【agent】项目文件管理新增下载远程文件功能\n 15. 【agent】节点首页监控新增实际使用内存占比（linux系统） （感谢@大灰灰）\n 16. 【server】ssh 新增操作记录（方便查看执行历史回溯操作）\n 17. 【server】新增 h2 控制台配置属性,基于 springboot,配置参数spring.h2.console.enabled\n 18. 【server】节点分发支持下载远程文件 （感谢@落泪归枫 gitee issues i1lm27 ）\n 19. 【server】节点分发支持 file 类型项目\n 20. 【agent】项目新增配置日志文件输出到指定目录\n 21. 【server】构建产物目录支持通配符antpathmatcher模式 （感谢@saysay gitee issues i455fm ）\n 22. 【server】新增 h2 数据库缓存大小配置 cache_size `db.cachesize\n 23. 【server】构建触发器新增延迟执行参数（感谢@steve.liu）\n 24. 【server】增加全局项目搜索功能\n 25. 【agent】项目增加批量启动关闭重启\n 26. 【server】节点分发文件支持上传非压缩包（感谢@sam、風中飛絮 gitee issues i3yna5 ）\n 27. 【server】nginx 二级代理无法访问（感谢@hu丶向...🤡）\n 28. 【server】ssh文件管理新增在线编辑（感谢@嗳啨 gitee issues i4adta ）\n 29. 在线升级支持上传 zip 包自动解析（感谢@sam）\n 30. 【server】ssh 安装插件端新增等待次数配置（感谢@hu丶向...🤡）\n 31. 【server】新增前端接口请求超时配置 jpom.webapitimeout（感谢@hu丶向...🤡）\n 32. 【server】构建支持 tag 通配符 （感谢@落泪归枫 gitee issues i1lm1v ）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】添加节点时候限制超时时间，避免配置错误一直等待情况\n 2.  【server】优化限制 ip 白名单相关判断，避免手动修改错误后一直限制访问\n 3.  【server】添加 qq 邮箱配置参照说明 qq邮箱官方文档\n 4.  【server】fix: 删除临时文件出现 accessdeniedexception 更新文件权限为可读（取消只读权限）\n 5.  【server】拉取 git 代码根据仓库路径添加 synchronized\n 6.  【server】节点管理页面支持刷新当前节点页面（刷新不再回到首页）\n 7.  【server】 jpom-service.sh 文件加载环境变量修改为 判断模式\n 8.  【agent】fix: windows 环境保存配置文件错误问题\n 9.  【agent】fix: 在线升级页面在没有配置白名单时候无法显示节点信息\n 10. 【server】ssh 快捷安装插件端检查配置文件不在使用 springboot 非 public 工具类\n 11. 【server】请求节点发生异常打印具体堆栈、接口异常拦截器里面默认不打印堆栈 （根据 gitee issues i3o8ye ）\n 12. 【server】节点升级中偶尔出现无法获取到对应的版本信息问题（感谢@misaka gitee issues i41tdy ）\n 13. 本地运行数据目录位置改为${user.home}/jpom/xxxx、日志路径改为项目模块下\n 14. 【agent】升级 commons-compress 依赖 （来自 github advisories ）\n 15. agent 和 server 间的 websocket 鉴权调整\n 16. 【server】update: 刷新整个页面的时候重新加载菜单\n 17. 历史监控图表查询报时间格式化错误(字符串工具类) （感谢@misaka gitee pr ）\n 18. 【agent】nginx 配置文件取消强制检测 server 节点\n 19. 【server】仓库密码改为隐藏\n 20. 解决退出登录验证码没有刷新问题 （感谢群友：steve.liu）\n 21. 【agent】节点分发清空发布无效（感谢@sam）\n 22. 【server】编写分发项目时，当分发节点做替换、新增的操作后，点击确认，控制台报错（感谢@tan90°）\n\n\n# ⚠️ 升级注意事项\n\n> 【特别声明】当前版本 仓库和构建并没有接入动态数据权限，如果对权限敏感的用户建议等待下一个版本优化权限后再升级（如有疑问可以微信群沟通）\n\n> ⚠️ 注意1：由于构建信息全部存储到 h2 数据库中，之前到构建信息会自动同步，在升级后到第一次启动需观察控制台信息，启动成功后请检查构建信息，仓库信息是否同步正确\n> \n> ⚠️ 注意2：构建的触发器地址有更新，需要重新获取触发器地址\n> \n> ⚠️ 注意3：升级到该版本需要保证 agent、server 都保持同步，如果只升级 server 会出现项目控制台等功能无法正常使用\n> \n> ⚠️ 注意4：升级 2.7.x 后不建议降级操作,会涉及到数据不兼容到情况\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.8.0 ~ 2.8.25",frontmatter:{title:"2.8.0 ~ 2.8.25",date:"2022-06-11T17:18:34.000Z",permalink:"/pages/changelog/2.8.x/",tags:["2.8.x"],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/1192.2.8.x.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/1192.2.8.x.md",key:"v-60d7610c",path:"/pages/changelog/2.8.x/",headers:[{level:2,title:"2.8.25 (2022-06-10)",slug:"_2-8-25-2022-06-10",normalizedTitle:"2.8.25 (2022-06-10)",charIndex:2},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.24 (2022-06-09)",slug:"_2-8-24-2022-06-09",normalizedTitle:"2.8.24 (2022-06-09)",charIndex:132},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.23 (2022-06-01)",slug:"_2-8-23-2022-06-01",normalizedTitle:"2.8.23 (2022-06-01)",charIndex:601},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.22 (2022-05-27)",slug:"_2-8-22-2022-05-27",normalizedTitle:"2.8.22 (2022-05-27)",charIndex:813},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.21 (2022-05-23)",slug:"_2-8-21-2022-05-23",normalizedTitle:"2.8.21 (2022-05-23)",charIndex:944},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.20 (2022-05-13)",slug:"_2-8-20-2022-05-13",normalizedTitle:"2.8.20 (2022-05-13)",charIndex:1351},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-6",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.19 (2022-05-13)",slug:"_2-8-19-2022-05-13",normalizedTitle:"2.8.19 (2022-05-13)",charIndex:1512},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-7",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:3,title:"注意：⚠️",slug:"注意-⚠️",normalizedTitle:"注意：⚠️",charIndex:2604},{level:2,title:"2.8.18 (2022-04-12)",slug:"_2-8-18-2022-04-12",normalizedTitle:"2.8.18 (2022-04-12)",charIndex:2954},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-8",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.17 (2022-03-28)",slug:"_2-8-17-2022-03-28",normalizedTitle:"2.8.17 (2022-03-28)",charIndex:3621},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-9",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.16 (2022-03-10)",slug:"_2-8-16-2022-03-10",normalizedTitle:"2.8.16 (2022-03-10)",charIndex:3850},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-10",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.15 (2022-03-09)",slug:"_2-8-15-2022-03-09",normalizedTitle:"2.8.15 (2022-03-09)",charIndex:4174},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-6",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-11",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.14 (2022-02-25)",slug:"_2-8-14-2022-02-25",normalizedTitle:"2.8.14 (2022-02-25)",charIndex:4759},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-7",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-12",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.13 (2022-02-24)",slug:"_2-8-13-2022-02-24",normalizedTitle:"2.8.13 (2022-02-24)",charIndex:5037},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-8",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-13",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.12 (2022-02-18)",slug:"_2-8-12-2022-02-18",normalizedTitle:"2.8.12 (2022-02-18)",charIndex:5505},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-14",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.11 (2022-02-18)",slug:"_2-8-11-2022-02-18",normalizedTitle:"2.8.11 (2022-02-18)",charIndex:5623},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-15",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.10 (2022-02-16)",slug:"_2-8-10-2022-02-16",normalizedTitle:"2.8.10 (2022-02-16)",charIndex:5882},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-9",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-16",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.9 (2022-02-12)",slug:"_2-8-9-2022-02-12",normalizedTitle:"2.8.9 (2022-02-12)",charIndex:6513},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-10",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-17",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.8 (2022-02-08)",slug:"_2-8-8-2022-02-08",normalizedTitle:"2.8.8 (2022-02-08)",charIndex:7181},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-11",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-18",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.7 (2022-01-24)",slug:"_2-8-7-2022-01-24",normalizedTitle:"2.8.7 (2022-01-24)",charIndex:8288},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-12",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-19",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.6 (2022-01-21)",slug:"_2-8-6-2022-01-21",normalizedTitle:"2.8.6 (2022-01-21)",charIndex:9206},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-13",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-20",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.5 (2022-01-14)",slug:"_2-8-5-2022-01-14",normalizedTitle:"2.8.5 (2022-01-14)",charIndex:9838},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-14",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-21",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.4 (2022-01-06)",slug:"_2-8-4-2022-01-06",normalizedTitle:"2.8.4 (2022-01-06)",charIndex:10284},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-22",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.3 (2021-12-30)",slug:"_2-8-3-2021-12-30",normalizedTitle:"2.8.3 (2021-12-30)",charIndex:10612},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-15",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-23",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.2 (2021-12-24)",slug:"_2-8-2-2021-12-24",normalizedTitle:"2.8.2 (2021-12-24)",charIndex:11052},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-16",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-24",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.1  (2021-12-17)",slug:"_2-8-1-2021-12-17",normalizedTitle:"2.8.1  (2021-12-17)",charIndex:null},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-17",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-25",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26},{level:2,title:"2.8.0  (2021-12-14)",slug:"_2-8-0-2021-12-14",normalizedTitle:"2.8.0  (2021-12-14)",charIndex:null},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-18",normalizedTitle:"🐣 新增功能",charIndex:156},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-26",normalizedTitle:"🐞 解决bug、优化功能",charIndex:26}],headersStr:"2.8.25 (2022-06-10) 🐞 解决BUG、优化功能 2.8.24 (2022-06-09) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.23 (2022-06-01) 🐞 解决BUG、优化功能 2.8.22 (2022-05-27) 🐞 解决BUG、优化功能 2.8.21 (2022-05-23) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.20 (2022-05-13) 🐞 解决BUG、优化功能 2.8.19 (2022-05-13) 🐣 新增功能 🐞 解决BUG、优化功能 注意：⚠️ 2.8.18 (2022-04-12) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.17 (2022-03-28) 🐞 解决BUG、优化功能 2.8.16 (2022-03-10) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.15 (2022-03-09) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.14 (2022-02-25) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.13 (2022-02-24) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.12 (2022-02-18) 🐞 解决BUG、优化功能 2.8.11 (2022-02-18) 🐞 解决BUG、优化功能 2.8.10 (2022-02-16) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.9 (2022-02-12) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.8 (2022-02-08) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.7 (2022-01-24) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.6 (2022-01-21) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.5 (2022-01-14) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.4 (2022-01-06) 🐞 解决BUG、优化功能 2.8.3 (2021-12-30) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.2 (2021-12-24) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.1  (2021-12-17) 🐣 新增功能 🐞 解决BUG、优化功能 2.8.0  (2021-12-14) 🐣 新增功能 🐞 解决BUG、优化功能",content:"# 2.8.25 (2022-06-10)\n\n\n# 🐞 解决BUG、优化功能\n\n1.【server】修复 docker 集群服务编辑端口配置不能区分开问题（感谢@Y.）\n\n----------------------------------------\n\n\n# 2.8.24 (2022-06-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增命令行创建数据库备份参数 --backup-h2 bash /xxxx/Server.sh restart -15 --backup-h2\n 2. 【server】新增命令行导入 sql 数据文件参数 --import-h2-sql=/xxxx.sql bash /xxxx/Server.sh restart -15 --import-h2-sql=/xxxx.sql\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复切换分页限制数再排序数据查询条数不正确问题 （感谢@Eibons Gitee issues I5B47O ）\n 2. 【server】优化编辑构建时发布选择 docker 镜像服务名输入改为下拉框（感谢@W）\n 3. 【agent】重启项目操作返回停止项目相关信息\n 4. 【server】缓存用户选择的每页条数\n\n----------------------------------------\n\n\n# 2.8.23 (2022-06-01)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 修复构建产物目录输入框限制（50 改为 200）（感谢@H）\n 2. 【server】修复节点分发白名单多个节点无法正常保存问题（感谢@ccx2480 ）\n 3. 【agent】修改项目目录在不存在时候无法上传文件问题（感谢@ccx2480 ）\n\n----------------------------------------\n\n\n# 2.8.22 (2022-05-27)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 修复监听日志后线程阻塞造成部分功能无法正常使用（控制台等）（感谢@ʟᴊx💎💎）\n\n----------------------------------------\n\n\n# 2.8.21 (2022-05-23)\n\n\n# 🐣 新增功能\n\n 1. 新增日志查询功能 （感谢 @ 、 @漫步青春的日子 Gitee issues I54GDY ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复构建读取 .env 文件空时候无法正常使用（感谢@wangfeng2228952430 Gitee issues I57DC1 ）\n 2. 【server】优化构建拉取仓库锁对象,避免出现死锁问题（感谢@信徒 ）\n 3. 【server】修复节点分发配置多个节点无法正常保存问题（感谢@李道甫 ）\n 4. 【agent】上传文件大小限制配置属性默认值恢复为 1GB,避免用户升级后需要逐一配置 （感谢@李道甫 ）\n 5. 【server】修复服务端脚本自动删除执行记录未删除日志文件\n\n----------------------------------------\n\n\n# 2.8.20 (2022-05-13)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】优化部分弹窗数据和列表数据共用问题（感谢@晴天飛雪 ）\n 2. 【server】修复构建产物越级判断问题（感谢@Randy ）\n\n----------------------------------------\n\n\n# 2.8.19 (2022-05-13)\n\n\n# 🐣 新增功能\n\n 1. 【server】节点新增代理配置，实现使用代理访问插件端（感谢@背着砍刀的诗人）\n 2. 【server】构建新增差异构建配置选择（如果仓库代码未变动则不执行构建）\n 3. \n\n项目管理文件新增备份，自动备份变动的文件（感谢@少爷123 Gitee issues I54ZFM ）\n\n 4. 【server】SH配置和节点配置新增跨工作空间同步功能，方便快速同步信息（感谢@陈旭 ） Gitee issues I56YTU\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 修复上传文件限制大小异常拦截不生效的问题（感谢@小工匠 ）\n 2. 【server】新增配置前端消息弹窗位置属性 jpom.notificationPlacement （感谢@Eibons Gitee issues I53V8B ）\n 3. 【server】构建历史新增批量删除\n 4. \n\n【server】修复关联分发项目，无法选择不同节点下相同的项目的问题（感谢@宋建平 Gitee issues I5680N ）\n\n 5.  【server】调整 docker-compose 使用卷方式存储数据，避免在部分环境中出现无法正常使用情况 (感谢 @💎ℳ๓₯㎕斌💎💘 贡献解决方案) （感谢@笨笨巫师 Gitee issues I52OAV ）\n 6.  【server】调整节点里面在部分情况下会出现空白行 （感谢@💎ℳ๓₯㎕斌💎💘 ）\n 7.  【server】前端部分输入框添加maxLength 限制避免出现数据库字段长度不足问题（感谢@ccx2480 ）\n 8.  【agent】修复项目下载远程文件解压方法错误（感谢@背着砍刀的诗人 ）\n 9.  升级依赖 SpringBoot、Hutool、Docker-Java 版本号\n 10. 【server】优化报错构建时未判断构建产物越级问题（感谢@奇奇 ）\n\n> 使用项目文件备份说明：\n> \n>  1. 默认未开启文件备份功能\n>  2. 可以配置全局开启，插件端配置（ extConfig.yml ）文件中配置project.fileBackupCount属性\n>  3. DSL 项目可以在配置内容新增 file.backupCount 来开启（DSL 配置优先级最高）\n>  4. 如果配置值小于等于 0 则不开启备份功能\n>  5. 备份文件保留规则为，只保留有差异的文件\n>  6. 同时支持配置仅备份指定文件后缀的文件（详情查看配置文件说明）\n\n\n# 注意：⚠️\n\n本版本调整了上传文件大小配置参数位置，在插件端升级后可能出现上传文件失败。\n\n可能提示如下:\n\n * 节点上传失败,请优先检查限制上传大小配置是否合理\n * 上传文件太大了,请重新选择一个较小的文件上传吧\n\n出现如上提示信息需要对插件端或者服务端进行配置合理对上传文件大小限制。 配置方式：在对应端的 extConfig.yml 配置文件中配置如下代码\n\nspring:\n  servlet:\n    multipart:\n      # 上传文件大小限制\n      max-request-size: 2GB\n      max-file-size: 1GB\n\n\n1\n2\n3\n4\n5\n6\n\n\n----------------------------------------\n\n\n# 2.8.18 (2022-04-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】SSH文件管理器中加入创建目录和文件的功能 （感谢 @wxyShine Gitee PR 161 ）\n 2. 【server】新增禁用登录图形验证码配置属性 jpom.disabledCaptcha （感谢 @放学后的茶会 Gitee issues I4GD0U ）\n 3. 【agent】节点项目文件管理新增创建文件夹/文件功能 （感谢 @Eibons Gitee issues I4ZFFH ）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】本地构建命令、本地命令发布、ssh 发布支持加载仓库目录 .env 文件为环境变量 （感谢@z~）\n 2. 【server】容器相关引用 maven 版本升级为 3.8.5\n 3. 【server】容器构建 DSL 示例添加镜像地址说明 （感谢 @wxyShine Gitee PR 160 ）\n 4. 【server】本地构建命令添加本次构建相关的默认变量（感谢@杨杰）\n 5. 【server】优化 SHH 文件管理中文件上传,压缩包上传操作（感谢 @wxyShine Gitee PR 161 ）\n 6. 【agent】批量获取项目状态新增缓存，避免部分环境获取项目状态超时（感谢@奇奇 ）\n 7. 远程升级检查地址支持自定义配置，解决没有外网或者网络不同情况下自定义配置升级服务器\n\n----------------------------------------\n\n\n# 2.8.17 (2022-03-28)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复非超级管理员部分下载功能无法正常使用\n 2. 【server】ssh 私钥连接新增 private key content 登录 （感谢 @震秦 Gitee PR 159 ）\n 3. 【server】修复非默认工作空间节点分发白名单无法保存问题（感谢@愿好）\n\n----------------------------------------\n\n\n# 2.8.16 (2022-03-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】docker 创建容器添加执行命令参数\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复工作空间非隐私变量不切换无法创建问题\n 2. 【server】修复无法删除工作空间变量\n 3. 【server】修复编辑构建数据回显错乱情况（感谢@tan90°）\n 4. 【server】修复配置二级路径无法下载日志相关问题（感谢@hu丶向...🤡）\n 5. 【server】调整服务端 docker 默认时区为：Asia/Shanghai (感谢@z~)\n\n----------------------------------------\n\n\n# 2.8.15 (2022-03-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】监控新增 webhook 字段（感谢@wxyShine ）\n 2. 【server】新增自动添加本机 docker (感谢@💎ℳ๓₯㎕斌💎💘)\n 3. 【server】docker 镜像创建容器支持环境变量 (感谢@💎ℳ๓₯㎕斌💎💘)\n 4. 工作空间变量新增同步到指定节点\n 5. 【server】工作空间变量新增隐私字段（来控制关键字段不会二次显示提升字段安全）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】节点统计图表内存占用率取错字段（感谢@wxyShine ）\n 2. 【server】修复 ssh 上传文件资源未释放问题（感谢@也许是个意外 ）\n 3. 【server】备份数据不将 sql 输出到控制台\n 4. 【server】取消信号量监听,会出现 kill pid 无法关闭进程的情况\n 5. 【server】优化操作报警，能获取到更多到数据名称\n 6. 【server】修护工作空间变量编辑使用默认工作空间相关问题（感谢@lidaofu）\n 7. 【server】配置自定义 logo 支持远程地址（http）(感谢@wxyShine)\n\n----------------------------------------\n\n\n# 2.8.14 (2022-02-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】构建触发器新增获取当前状态接口 （感谢@wxyShine）\n 2. 【server】构建确认流程支持修改分支（感谢@）\n 3. 【server】服务端脚本新增解绑操作,用于释放关联的过期节点\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复编辑构建 svn 类型仓库无法提交问题（感谢@杰 ）\n 2. 【server】修复无法使用 git ssh 问题\n\n----------------------------------------\n\n\n# 2.8.13 (2022-02-24)\n\n\n# 🐣 新增功能\n\n 1. 【agent】项目 DSL 支持配置项目路径下的脚本\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】新增个性化配置,导航菜单打开方式（感谢@以为）\n 2. 【server】工作空间没有变量不能使用容器构建问题（感谢@杨杰）\n 3. 【server】在线构建 ssh 发布选择授权目录切换不生效问题（感谢@天天）\n 4. 【server】在线构建本地构建命令不能换行问题（感谢@华仔）\n 5. 【server】日志弹窗新增行号\n 6. 【server】在线升级执行脚本、脚本模版等兼容 debian （感谢@wxyShine Gitee issues I4UQBD ）\n 7. 【agent】修复 windows 环境，节点首页进程列表切换不生效问题（感谢@neoch Gitee issues I4UZA7 ）\n 8. 【server】脚本模版补充权限\n\n----------------------------------------\n\n\n# 2.8.12 (2022-02-18)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】紧急修复初始化系统后没有选择工作空间问题\n\n----------------------------------------\n\n\n# 2.8.11 (2022-02-18)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】修复操作监控没有判断操作用户\n 2. 【server】用户编辑不能修改自己的信息\n 3. 【server】优化日志查看器布局错乱\n 4. 【agent】修复进程名缓存不全问题\n 5. 【server】节点统计新增分组字段，自动同步节点分组（感谢@ʟᴊx💎💎）\n 6. 【server】docker 添加说明端口安全问题\n\n----------------------------------------\n\n\n# 2.8.10 (2022-02-16)\n\n\n# 🐣 新增功能\n\n 1. nginx 删除操作新增还原配置\n 2. 【server】新增用户登录日志记录\n 3. 【server】log view 新增正则参考\n 4. 【server】docker 控制台新增 docker 信息查看\n 5. 【server】新增 docker swarm 集群管理\n 6. 【server】构建新增是否保存产物配置\n 7. 【server】构建 Dockerfile 镜像 tag 支持仓库目录 .env 环境变量文件\n 8. 【server】docker 控制台新增 docker 网络信息查看\n 9. 【server】构建 Dockerfile 镜像支持发布 swarm service\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】 ssh 授权目录不能为根目录\n 2. 【server】 在线构建-构建列表中，选择构建命令时新增多环境下打包的命令\n 3. 【server】 在线构建-构建列表中，选择构建命令时提供不同的跳过执行测试类的方式\n 4. 【server】 编辑用户工作空间权限判断没有选择父级的空权限\n 5. 【server】 修改后分发后 并发重启 描述改为 并发执行\n 6. 【server】 自动构建触无法执行（感谢@zhangfuhua ）\n\n----------------------------------------\n\n\n# 2.8.9 (2022-02-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】容器构建新增 go 环境支持\n 2. 【server】新增查看 docker 容器日志\n 3. 【server】新增在线进入 docker 容器终端\n 4. 【server】构建 ssh 发布支持发布到多个服务器（感谢@老诗人 ）\n 5. 【server】构建发布方式新增 docker 镜像\n 6. 【server】容器管理新增在线镜像创建容器功能\n 7. 【server】容器管理新增在线拉取镜像功能\n 8. 【server】构建新增是否缓存构建目录\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 在线升级新增验证兼容最小版本号\n 2. 【server】支持在线修改数据库账户密码\n 3. 执行脚本文件由 /bin/sh 改为 /bin/bash 兼容 ubuntu\n 4. 【agent】项目 dsl 模式执行脚本变量支持直接引入 ${PROJECT_ID}、同时保留 #{PROJECT_ID} 引用\n 5. 【server】多处日志查看弹窗新增高亮搜索\n 6. 【server】本地构建命令 容器构建支持引用工作空间变量\n 7. 【server】修复构建触发器无法执行（感谢@老诗人 ）\n 8. 【server】服务端脚本新增工作空间环境变量\n 9. 修复检查 Jpom 包中没有释放资源（感谢@大海 Gitee issues I4T9L0 ）\n\n----------------------------------------\n\n\n# 2.8.8 (2022-02-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增容器构建(感谢@💎ℳ๓₯㎕斌💎💘)\n 2. 【server】新增容器管理基础版\n 3. 【server】节点脚本列表新增快速查看日志入口（感谢@ʟᴊx💎💎）\n 4. 【server】构建新增备注字段,可以用于记录版本日志或者本次构建备注（感谢@Alex）\n 5. 【server】新增解绑节点、节点分发功能 用于服务器过期或者已经确定不在使用直接删除节点相关数据（感谢@🐠）\n 6. 【server】构建命令新增预设命令提示输入,减少用户输入（感谢@hjk2008 Gitee issues I4SHC9 ）\n 7. 【server】批量构建支持指定部分参数使构建更灵活（感谢@hjk2008 Gitee issues I4SHB4 ）\n 8. 【server】用户账号新增两步验证(MFA) 提升账号安全性(感谢@💎ℳ๓₯㎕斌💎💘)\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】优化定时任务检查逻辑,避免不能正常关闭定时任务\n 2.  【server】数据库备份新增修改人字段（可以表示备份人和还原操作人）\n 3.  【server】邮箱配置权限修改为超级管理员\n 4.  【server】修复服务端脚本分发到节点特殊字符编码问题（感谢@ʟᴊx💎💎）\n 5.  【server】修复删除节点未删除节点统计数据（感谢@以为）\n 6.  升级 SpringBoot 到 2.6.3 (感谢@💎ℳ๓₯㎕斌💎💘)\n 7.  【server】解除 SSH 终端禁止命令权限保存失败（感谢@Alex）\n 8.  【server】本地构建模式模糊匹配支持匹配多个结果\n 9.  【server】修复节点分发不能删除节点问题（感谢@a19920714liou Gitee issues I4SHSP ）\n 10. 【server】ssh 快捷安装插件端保存安装包避免多次上传 （感谢@a19920714liou Gitee issues I4SHJC ）\n 11. 【server】ssh 快捷安装插件端权限改为管理员\n 12. 【server】构建 ssh 发布授权目录采用下拉模式,提升用户操作感知 ( 感谢@hjk2008 Gitee issues I4SICE )\n 13. 【server】修复数据库自动备份失败问题\n\n> 🙏 特别感谢：💎ℳ๓₯㎕斌💎💘 贡献容器构建相关架构\n\n----------------------------------------\n\n\n# 2.8.7 (2022-01-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增系统配置-节点白名单、节点系统配置分发功能，方便集群节点统一配置\n 2. 【server】新增构建快捷复制功能,方便快速创建类型一致的项目\n 3. 【server】新增系统配置-配置菜单是否显示,用于非超级管理员页面菜单控制\n 4. 【server】新增节点统计功能，快速了解当前所有节点状态\n 5. 【server】新增节点心跳检测配置system.nodeHeartSecond\n 6. 新增缓存管理查看定时任务执行统计\n 7. 【server】新增解除 SSH 终端禁止命令权限（感谢@ooooooam）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】新增全局关闭引导导航配置jpom.disabledGuide（感谢@南有乔木）\n 2.  【server】修复快速安装服务端 ping 检查超时时间 5ms to 5s\n 3.  项目文本文件支持在线实时阅读（感谢@）\n 4.  【server】控制台日志支持搜索高亮\n 5.  【server】跨工作空间更新节点授权将自动同步更新\n 6.  【server】取消节点监控周期字段（采用全局统一配置）\n 7.  【server】监控周期调整为 cron 表达式配置,用户可以自定义监控频率\n 8.  【server】邮箱配置菜单移动到监控管理\n 9.  【server】节点分发白名单配置区分工作空间（不同工作空间不能配置）\n 10. 【server】升级 SpringBoot 版本 2.6.2\n 11. 脚本模版执行目录修改为脚本所在目录\n 12. 【server】SSH 命令模版支持取消默认加载环境变量：#disabled-template-auto-evn\n 13. 【server】优化页面分页交互逻辑,只有一页不显示分页条\n 14. 【server】修复删除 SSH 没有删除执行日志\n\n> ⚠️ 特别提醒：强烈建议升级该版本,当前版本完善了权限拦截相关问题\n\n----------------------------------------\n\n\n# 2.8.6 (2022-01-21)\n\n\n# 🐣 新增功能\n\n 1. 项目运行模式新增 Dsl，配合脚本模版实现自定义项目管理\n 2. 【server】新增快捷恢复 h2 奔溃数据（启动参数添加：--recover:h2db）（感谢@大土豆）\n 3. 【server】邮箱配置新增超时时间配置（感谢@Y.）\n 4. 新增快速安装导入节点（插件端）\n 5. 【server】新增服务端脚本模版（区别于节点脚本模版）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】数据库备份自定义表显示中文描述\n 2. 【server】配置 ip 白名单判断是否合法,并且支持 ip/掩码位： 192.168.1.0/24 格式（感谢@skyou）\n 3. 【server】脚本模版独立菜单\n 4. 【server】执行升级前自动执行备份数据逻辑（保障数据稳定）\n 5. 【server】节点分发项目状态显示节点 ID 更正为节点名称 （感谢@hu丶向...🤡）\n 6. 【server】升级 jgit 到 5.13\n 7. 【server】fix：恢复删除脚本模版、ssh 命令模版未删除日志数据\n 8. 查看项目控制台日志优化（新增滚动和显示行数配置）\n\n> ⚠️ 注意：此次更新了项目控制台日志需要更新插件端后才能正常使用项目控制台否则会出现控制台按钮不可用的情况\n\n----------------------------------------\n\n\n# 2.8.5 (2022-01-14)\n\n\n# 🐣 新增功能\n\n 1. 新增保留旧包个数配置参数system.oldJarsCount\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】恢复删除脚本模版、ssh 命令模版未删除日志数据\n 2. 【server】项目副本集没有显示运行端口+进程ID（感谢@ʟᴊx💎💎）\n 3. 【server】ssh 发布清除产物目录忽略No such file异常\n 4. 【server】节点升级中远程下载插件包存储路径更改，并优化更新包后页面显示问题（感谢@hu丶向...🤡）\n 5. 脚本模版新增描述字段（感谢@ʟᴊx💎💎）\n 6. 在线升级取消重复 jar 包判断,改为自动重命名（感谢@大土豆）\n 7. 项目文件管理调整为支持清空当前目录（感谢@ʟᴊx💎💎）\n 8. 【server】ssh 列表安装节点按钮判断 java 环境\n\n----------------------------------------\n\n\n# 2.8.4 (2022-01-06)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】数据库新增连接池配置参数（感谢@ʟᴊx💎💎）\n 2. 【agent】fix：解压 tar.gz 文件\n 3. 【server】fix：恢复导航助手不能正常显示问题\n 4. 【agent】fix 插件端首页不能正常关闭进程（感谢@平安茹意）\n 5. 【agent】fix 插件端首页支持自定义进程名（感谢@者羽）\n 6. 【server】恢复节点、构建分组字段（感谢@ʟᴊx💎💎）\n 7. 【server】后端默认开启 gzip 提升访问速度（感谢@小夜）\n\n----------------------------------------\n\n\n# 2.8.3 (2021-12-30)\n\n\n# 🐣 新增功能\n\n 1. 脚本模版新增日志管理\n 2. 【server】ssh 文件管理新增导入压缩包自动解压（感谢@刘志远）\n 3. 脚本模版新增定时执行（感谢@大土豆）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】节点分发数据新增状态字段,启动程序时候触发恢复异常数据\n 2. 【server】定时执行相关 cron 表达式输入提示示例数据\n 3. 【server】节点升级菜单取消，整合到【系统管理】-> 【在线升级】中\n 4. 【server】邮箱配置优化,新增 smtp、port 示例数据，取消 SSL 端口字段（感谢@💎ℳ๓₯㎕斌💎💘）\n 5. 【server】fix：新增用户无法正常输入bug（感谢@在路上）\n 6. 【server】fix：ssh 命令执行记录菜单没有独立显示问题（感谢@刘志远）\n\n----------------------------------------\n\n\n# 2.8.2 (2021-12-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】仓库新增导入 Gitee、Github 仓库信息（感谢@💎ℳ๓₯㎕斌💎💘）\n 2. 【server】ssh 新增命令模版、可以用于批量执行命令脚本\n 3. 新增配置属性 system.timerMatchSecond 调度(定时任务)是否开启秒级匹配（感谢@大土豆）\n 4. 缓存管理新增清除旧版本程序包功能\n 5. 【server】用户权限新增绑定工作空间权限（指定工作空间的修改、删除、上传、执行等权限）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】nginx 列表显示不全，无法滚动问题（感谢@）\n 2. 【server】独立节点分发显示节点名称（感谢@奥特曼打猪）\n 3. 【server】用户ID（登录名）支持邮箱格式（感谢@陈力）\n 4. 【server】优化清除构建和删除构建时候删除相关文件操作（使用系统命令快速删除）（感谢@大土豆、Gitee PR ）\n 5. 【server】项目搜索菜单名变更为项目列表\n 6. 【server】调整自动清理日志数据逻辑、默认保留日志数据条数修改为 10000\n 7. 【server】脚本模版在服务端统一查看、编辑、执行（感谢@ʟᴊx）\n 8. 【server】ssh 私钥支持配置文件和加载用户目录下的私钥文件\n 9. 【server】初始化超级管理员不能使用 demo 关键词（感谢@A.Nevermore）\n\n> ⚠️ 注意：\n> \n>  1. 已经添加的用户重新绑定工作空间权限（默认没有工作空间操作权限）\n\n----------------------------------------\n\n\n# 2.8.1 (2021-12-17)\n\n\n# 🐣 新增功能\n\n 1. 节点缓存页面新增定时作业列表\n 2. 节点首页新增其他类型进程监控（感谢@大土豆）\n 3. 构建中的项目发布新增差异发布（多文件项目或者网络不佳情况只发布有变化的文件节省项目发布时间）（感谢@大灰灰）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】解决节点未配置监控周期接口报错+页面循环提示（感谢@周健全）\n 2.  Windows 无法关闭 Jpom 程序（感谢@……）\n 3.  【server】恢复项目搜索、节点分发项目的文件、控制管理无法正常使用（感谢@刘志远）\n 4.  脚本文件提示内容取消中文，修改为英文\n 5.  【agent】新增检查 jps 命令执行是否存在异常,异常则提示用户（感谢@……）\n 6.  部分控制台输出日志调整为英文\n 7.  【server】优化 ssh 安装插件端,不输入节点ID、没有配置权限报错（感谢@大土豆）\n 8.  【agent】恢复项目 JavaExtDirsCp 模式加载非 Jar 文件问题（感谢@大灰灰）\n 9.  升级 SpringBoot 版本 2.6.1\n 10. 【agent】恢复项目配置 webhook 后无法关闭进程的情况（感谢@大土豆）\n 11. 【server】ssh 命令日志低版本字段类型文件恢复（感谢@大土豆）\n 12. 【server】释放独立分发和删除分发项目提示更明确（感谢@周健全）\n 13. 【server】恢复自动导入节点异常（感谢@平安茹意）\n 14. 恢复节点密码包含特殊字符时节点控制台等相关功能无法正常使用问题（感谢@魔方技术-李广生）\n 15. 恢复解锁节点没有指定到对应的工作空间（感谢@周健全）\n\n----------------------------------------\n\n\n# 2.8.0 (2021-12-14)\n\n\n# 🐣 新增功能\n\n 1.  【server】新增工作空间概念（取代角色相关）【系统将自动创建默认工作空间、默认工作空间是不能删除】\n 2.  【server】用户新增可以配置管理员功能【管理员可以管理系统中的账号、系统管理等功能（除升级系统、导入数据外）】\n 3.  【server】新增超级管理员（第一次初始化系统等账号为超级管理员），超级可以拥有整个系统权限不受任何限制\n 4.  【server】列表数据都新增分页、搜索、排序功能（搜索字段、排序字段正在完善补充中）\n 5.  【server】新增通过命令行重置 IP 白名单配置参数 --rest:ip_config\n 6.  【server】新增通过命令行重置超级管理员参数 --rest:super_user_pwd\n 7.  【server】新增通过命令行重新加载数据库初始化操作参数 --rest:load_init_db\n 8.  【server】构建新增本地命令发布方式 用户在服务端执行相关命令进行发布操作\n 9.  【server】发布命令（SSH发布命令、本地命令）支持变量替换：#{BUILD_ID}、#{BUILD_NAME}、#{BUILD_RESULT_FILE}、#{BUILD_NUMBER_ID}\n 10. 【server】新增自动备份全量数据配置 db.autoBackupIntervalDay 默认一天备份一次,执行备份时间 凌晨0点或者中午12点\n 11. 【agent】项目的 webhook 新增项目启动成功后通知，并且参数新增 type 指包括：beforeStop,start,stop,beforeRestart\n 12. 【agent】项目新增自启动配置项,在 agent 启动时候检查对应项目是否启动，未启动执行启动逻辑 Gitee issues I4IJFK\n 13. 【server】构建新增 webhook，实时通知构建进度\n 14. 【server】节点分发新增分发间隔时间配置\n 15. 新增控制台日志配置数据 consoleLog.charset 避免部分服务器执行命令响应乱码 （感谢@……）\n 16. 【server】构建触发器新增批量触发 Gitee issues I4A37G\n 17. 【server】构建支持定时触发 Gitee issues I4FY5C\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】用户账号、节点、SSH、监控、节点分发等数据由 JSON 文件转存 h2\n 2.  【server】取消节点、构建分组字段\n 3.  【server】取消角色概念（新增工作空间取代）\n 4.  【server】操作监控数据由于数据字段不兼容将不自动升级需要用户重新配置\n 5.  【server】系统参数相关配置都由 JSON 转存 h2（邮箱配置、IP白名单、节点分发白名单、节点升级）\n 6.  【server】关联节点项目支持绑定单个节点不同项目\n 7.  【server】构建触发器新增跟随创建用户走，历史 url 将失效,需要重新生成\n 8.  【server】仓库假删功能下线，已经删除的仓库将恢复正常（假删功能后续重新开发）\n 9.  【agent】项目数据新增工作空间字段、取消分组字段\n 10. 【server】节点 ID 取消用户自定义采用系统生成\n 11. 【server】优化节点弹窗和菜单折叠页面布局\n 12. 【server】编辑节点、SSH、邮箱配置不回显密码字段\n 13. 【server】优化 SSH 终端不能自动换行问题\n 14. 【agent】脚本模版新增工作空间字段、列表数据并缓存到服务端、新增执行日志\n 15. 【server】优化批量操作项目启动、关闭、重启交互\n 16. 【agent】恢复在线升级插件端提示 [Agent-.jar] 已经存在啦,需要手动到服务器去上传新包\n 17. 自动注册对节点需要手动绑定工作空间后,节点才能正常使用 (感谢@💎ℳ๓₯㎕斌💎💘)\n\n> 🙏 特别感谢：Jpom 社区测试组成员【🐠】、【ʟᴊx】、【hu丶向...🤡】等参与内测的人员\n\n> ⚠️ 注意：\n> \n> 【特别说明】：分组字段将失效，目前所有数据在升级后都将默认跟随默认工作空间。\n> \n> 1: 升级该版本会自动将原 JSON 文件数据转存到 h2 中，如果转存成功旧数据文件将自动移动到数据目录中的 backup_old_data 文件夹中\n> \n> 2: 升级过程请注意控制台日志是否出现异常\n> \n> 3: 操作监控数据由于数据字段不兼容将不自动升级需要用户重新配置\n> \n> 4: 监控报警记录、构建记录、操作记录由于字段兼容问题存在部分字段为空的情况\n> \n> 5：非超级管理员用户会出现由于未分配工作空间不能正常登录或者不能使用的情况，需要分配工作空间才能登录\n> \n> 6: 用户绑定工作空间后，用户在对应工作空间下可以创建、修改、删除对应的数据（包括但不限于管理节点）\n> \n> 7: 此次升级启动耗时可能需要2分钟以上（耗时根据数据量来决定），请耐心等待和观察控制台日志输出\n> \n> 8: 一个节点建议不要被多个服务端绑定（可能出现数据工作空间错乱情况）\n\n----------------------------------------",normalizedContent:"# 2.8.25 (2022-06-10)\n\n\n# 🐞 解决bug、优化功能\n\n1.【server】修复 docker 集群服务编辑端口配置不能区分开问题（感谢@y.）\n\n----------------------------------------\n\n\n# 2.8.24 (2022-06-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增命令行创建数据库备份参数 --backup-h2 bash /xxxx/server.sh restart -15 --backup-h2\n 2. 【server】新增命令行导入 sql 数据文件参数 --import-h2-sql=/xxxx.sql bash /xxxx/server.sh restart -15 --import-h2-sql=/xxxx.sql\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复切换分页限制数再排序数据查询条数不正确问题 （感谢@eibons gitee issues i5b47o ）\n 2. 【server】优化编辑构建时发布选择 docker 镜像服务名输入改为下拉框（感谢@w）\n 3. 【agent】重启项目操作返回停止项目相关信息\n 4. 【server】缓存用户选择的每页条数\n\n----------------------------------------\n\n\n# 2.8.23 (2022-06-01)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 修复构建产物目录输入框限制（50 改为 200）（感谢@h）\n 2. 【server】修复节点分发白名单多个节点无法正常保存问题（感谢@ccx2480 ）\n 3. 【agent】修改项目目录在不存在时候无法上传文件问题（感谢@ccx2480 ）\n\n----------------------------------------\n\n\n# 2.8.22 (2022-05-27)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 修复监听日志后线程阻塞造成部分功能无法正常使用（控制台等）（感谢@ʟᴊx💎💎）\n\n----------------------------------------\n\n\n# 2.8.21 (2022-05-23)\n\n\n# 🐣 新增功能\n\n 1. 新增日志查询功能 （感谢 @ 、 @漫步青春的日子 gitee issues i54gdy ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复构建读取 .env 文件空时候无法正常使用（感谢@wangfeng2228952430 gitee issues i57dc1 ）\n 2. 【server】优化构建拉取仓库锁对象,避免出现死锁问题（感谢@信徒 ）\n 3. 【server】修复节点分发配置多个节点无法正常保存问题（感谢@李道甫 ）\n 4. 【agent】上传文件大小限制配置属性默认值恢复为 1gb,避免用户升级后需要逐一配置 （感谢@李道甫 ）\n 5. 【server】修复服务端脚本自动删除执行记录未删除日志文件\n\n----------------------------------------\n\n\n# 2.8.20 (2022-05-13)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】优化部分弹窗数据和列表数据共用问题（感谢@晴天飛雪 ）\n 2. 【server】修复构建产物越级判断问题（感谢@randy ）\n\n----------------------------------------\n\n\n# 2.8.19 (2022-05-13)\n\n\n# 🐣 新增功能\n\n 1. 【server】节点新增代理配置，实现使用代理访问插件端（感谢@背着砍刀的诗人）\n 2. 【server】构建新增差异构建配置选择（如果仓库代码未变动则不执行构建）\n 3. \n\n项目管理文件新增备份，自动备份变动的文件（感谢@少爷123 gitee issues i54zfm ）\n\n 4. 【server】sh配置和节点配置新增跨工作空间同步功能，方便快速同步信息（感谢@陈旭 ） gitee issues i56ytu\n\n\n# 🐞 解决bug、优化功能\n\n 1. 修复上传文件限制大小异常拦截不生效的问题（感谢@小工匠 ）\n 2. 【server】新增配置前端消息弹窗位置属性 jpom.notificationplacement （感谢@eibons gitee issues i53v8b ）\n 3. 【server】构建历史新增批量删除\n 4. \n\n【server】修复关联分发项目，无法选择不同节点下相同的项目的问题（感谢@宋建平 gitee issues i5680n ）\n\n 5.  【server】调整 docker-compose 使用卷方式存储数据，避免在部分环境中出现无法正常使用情况 (感谢 @💎ℳ๓₯㎕斌💎💘 贡献解决方案) （感谢@笨笨巫师 gitee issues i52oav ）\n 6.  【server】调整节点里面在部分情况下会出现空白行 （感谢@💎ℳ๓₯㎕斌💎💘 ）\n 7.  【server】前端部分输入框添加maxlength 限制避免出现数据库字段长度不足问题（感谢@ccx2480 ）\n 8.  【agent】修复项目下载远程文件解压方法错误（感谢@背着砍刀的诗人 ）\n 9.  升级依赖 springboot、hutool、docker-java 版本号\n 10. 【server】优化报错构建时未判断构建产物越级问题（感谢@奇奇 ）\n\n> 使用项目文件备份说明：\n> \n>  1. 默认未开启文件备份功能\n>  2. 可以配置全局开启，插件端配置（ extconfig.yml ）文件中配置project.filebackupcount属性\n>  3. dsl 项目可以在配置内容新增 file.backupcount 来开启（dsl 配置优先级最高）\n>  4. 如果配置值小于等于 0 则不开启备份功能\n>  5. 备份文件保留规则为，只保留有差异的文件\n>  6. 同时支持配置仅备份指定文件后缀的文件（详情查看配置文件说明）\n\n\n# 注意：⚠️\n\n本版本调整了上传文件大小配置参数位置，在插件端升级后可能出现上传文件失败。\n\n可能提示如下:\n\n * 节点上传失败,请优先检查限制上传大小配置是否合理\n * 上传文件太大了,请重新选择一个较小的文件上传吧\n\n出现如上提示信息需要对插件端或者服务端进行配置合理对上传文件大小限制。 配置方式：在对应端的 extconfig.yml 配置文件中配置如下代码\n\nspring:\n  servlet:\n    multipart:\n      # 上传文件大小限制\n      max-request-size: 2gb\n      max-file-size: 1gb\n\n\n1\n2\n3\n4\n5\n6\n\n\n----------------------------------------\n\n\n# 2.8.18 (2022-04-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】ssh文件管理器中加入创建目录和文件的功能 （感谢 @wxyshine gitee pr 161 ）\n 2. 【server】新增禁用登录图形验证码配置属性 jpom.disabledcaptcha （感谢 @放学后的茶会 gitee issues i4gd0u ）\n 3. 【agent】节点项目文件管理新增创建文件夹/文件功能 （感谢 @eibons gitee issues i4zffh ）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】本地构建命令、本地命令发布、ssh 发布支持加载仓库目录 .env 文件为环境变量 （感谢@z~）\n 2. 【server】容器相关引用 maven 版本升级为 3.8.5\n 3. 【server】容器构建 dsl 示例添加镜像地址说明 （感谢 @wxyshine gitee pr 160 ）\n 4. 【server】本地构建命令添加本次构建相关的默认变量（感谢@杨杰）\n 5. 【server】优化 shh 文件管理中文件上传,压缩包上传操作（感谢 @wxyshine gitee pr 161 ）\n 6. 【agent】批量获取项目状态新增缓存，避免部分环境获取项目状态超时（感谢@奇奇 ）\n 7. 远程升级检查地址支持自定义配置，解决没有外网或者网络不同情况下自定义配置升级服务器\n\n----------------------------------------\n\n\n# 2.8.17 (2022-03-28)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复非超级管理员部分下载功能无法正常使用\n 2. 【server】ssh 私钥连接新增 private key content 登录 （感谢 @震秦 gitee pr 159 ）\n 3. 【server】修复非默认工作空间节点分发白名单无法保存问题（感谢@愿好）\n\n----------------------------------------\n\n\n# 2.8.16 (2022-03-10)\n\n\n# 🐣 新增功能\n\n 1. 【server】docker 创建容器添加执行命令参数\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复工作空间非隐私变量不切换无法创建问题\n 2. 【server】修复无法删除工作空间变量\n 3. 【server】修复编辑构建数据回显错乱情况（感谢@tan90°）\n 4. 【server】修复配置二级路径无法下载日志相关问题（感谢@hu丶向...🤡）\n 5. 【server】调整服务端 docker 默认时区为：asia/shanghai (感谢@z~)\n\n----------------------------------------\n\n\n# 2.8.15 (2022-03-09)\n\n\n# 🐣 新增功能\n\n 1. 【server】监控新增 webhook 字段（感谢@wxyshine ）\n 2. 【server】新增自动添加本机 docker (感谢@💎ℳ๓₯㎕斌💎💘)\n 3. 【server】docker 镜像创建容器支持环境变量 (感谢@💎ℳ๓₯㎕斌💎💘)\n 4. 工作空间变量新增同步到指定节点\n 5. 【server】工作空间变量新增隐私字段（来控制关键字段不会二次显示提升字段安全）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】节点统计图表内存占用率取错字段（感谢@wxyshine ）\n 2. 【server】修复 ssh 上传文件资源未释放问题（感谢@也许是个意外 ）\n 3. 【server】备份数据不将 sql 输出到控制台\n 4. 【server】取消信号量监听,会出现 kill pid 无法关闭进程的情况\n 5. 【server】优化操作报警，能获取到更多到数据名称\n 6. 【server】修护工作空间变量编辑使用默认工作空间相关问题（感谢@lidaofu）\n 7. 【server】配置自定义 logo 支持远程地址（http）(感谢@wxyshine)\n\n----------------------------------------\n\n\n# 2.8.14 (2022-02-25)\n\n\n# 🐣 新增功能\n\n 1. 【server】构建触发器新增获取当前状态接口 （感谢@wxyshine）\n 2. 【server】构建确认流程支持修改分支（感谢@）\n 3. 【server】服务端脚本新增解绑操作,用于释放关联的过期节点\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复编辑构建 svn 类型仓库无法提交问题（感谢@杰 ）\n 2. 【server】修复无法使用 git ssh 问题\n\n----------------------------------------\n\n\n# 2.8.13 (2022-02-24)\n\n\n# 🐣 新增功能\n\n 1. 【agent】项目 dsl 支持配置项目路径下的脚本\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】新增个性化配置,导航菜单打开方式（感谢@以为）\n 2. 【server】工作空间没有变量不能使用容器构建问题（感谢@杨杰）\n 3. 【server】在线构建 ssh 发布选择授权目录切换不生效问题（感谢@天天）\n 4. 【server】在线构建本地构建命令不能换行问题（感谢@华仔）\n 5. 【server】日志弹窗新增行号\n 6. 【server】在线升级执行脚本、脚本模版等兼容 debian （感谢@wxyshine gitee issues i4uqbd ）\n 7. 【agent】修复 windows 环境，节点首页进程列表切换不生效问题（感谢@neoch gitee issues i4uza7 ）\n 8. 【server】脚本模版补充权限\n\n----------------------------------------\n\n\n# 2.8.12 (2022-02-18)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】紧急修复初始化系统后没有选择工作空间问题\n\n----------------------------------------\n\n\n# 2.8.11 (2022-02-18)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】修复操作监控没有判断操作用户\n 2. 【server】用户编辑不能修改自己的信息\n 3. 【server】优化日志查看器布局错乱\n 4. 【agent】修复进程名缓存不全问题\n 5. 【server】节点统计新增分组字段，自动同步节点分组（感谢@ʟᴊx💎💎）\n 6. 【server】docker 添加说明端口安全问题\n\n----------------------------------------\n\n\n# 2.8.10 (2022-02-16)\n\n\n# 🐣 新增功能\n\n 1. nginx 删除操作新增还原配置\n 2. 【server】新增用户登录日志记录\n 3. 【server】log view 新增正则参考\n 4. 【server】docker 控制台新增 docker 信息查看\n 5. 【server】新增 docker swarm 集群管理\n 6. 【server】构建新增是否保存产物配置\n 7. 【server】构建 dockerfile 镜像 tag 支持仓库目录 .env 环境变量文件\n 8. 【server】docker 控制台新增 docker 网络信息查看\n 9. 【server】构建 dockerfile 镜像支持发布 swarm service\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】 ssh 授权目录不能为根目录\n 2. 【server】 在线构建-构建列表中，选择构建命令时新增多环境下打包的命令\n 3. 【server】 在线构建-构建列表中，选择构建命令时提供不同的跳过执行测试类的方式\n 4. 【server】 编辑用户工作空间权限判断没有选择父级的空权限\n 5. 【server】 修改后分发后 并发重启 描述改为 并发执行\n 6. 【server】 自动构建触无法执行（感谢@zhangfuhua ）\n\n----------------------------------------\n\n\n# 2.8.9 (2022-02-12)\n\n\n# 🐣 新增功能\n\n 1. 【server】容器构建新增 go 环境支持\n 2. 【server】新增查看 docker 容器日志\n 3. 【server】新增在线进入 docker 容器终端\n 4. 【server】构建 ssh 发布支持发布到多个服务器（感谢@老诗人 ）\n 5. 【server】构建发布方式新增 docker 镜像\n 6. 【server】容器管理新增在线镜像创建容器功能\n 7. 【server】容器管理新增在线拉取镜像功能\n 8. 【server】构建新增是否缓存构建目录\n\n\n# 🐞 解决bug、优化功能\n\n 1. 在线升级新增验证兼容最小版本号\n 2. 【server】支持在线修改数据库账户密码\n 3. 执行脚本文件由 /bin/sh 改为 /bin/bash 兼容 ubuntu\n 4. 【agent】项目 dsl 模式执行脚本变量支持直接引入 ${project_id}、同时保留 #{project_id} 引用\n 5. 【server】多处日志查看弹窗新增高亮搜索\n 6. 【server】本地构建命令 容器构建支持引用工作空间变量\n 7. 【server】修复构建触发器无法执行（感谢@老诗人 ）\n 8. 【server】服务端脚本新增工作空间环境变量\n 9. 修复检查 jpom 包中没有释放资源（感谢@大海 gitee issues i4t9l0 ）\n\n----------------------------------------\n\n\n# 2.8.8 (2022-02-08)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增容器构建(感谢@💎ℳ๓₯㎕斌💎💘)\n 2. 【server】新增容器管理基础版\n 3. 【server】节点脚本列表新增快速查看日志入口（感谢@ʟᴊx💎💎）\n 4. 【server】构建新增备注字段,可以用于记录版本日志或者本次构建备注（感谢@alex）\n 5. 【server】新增解绑节点、节点分发功能 用于服务器过期或者已经确定不在使用直接删除节点相关数据（感谢@🐠）\n 6. 【server】构建命令新增预设命令提示输入,减少用户输入（感谢@hjk2008 gitee issues i4shc9 ）\n 7. 【server】批量构建支持指定部分参数使构建更灵活（感谢@hjk2008 gitee issues i4shb4 ）\n 8. 【server】用户账号新增两步验证(mfa) 提升账号安全性(感谢@💎ℳ๓₯㎕斌💎💘)\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】优化定时任务检查逻辑,避免不能正常关闭定时任务\n 2.  【server】数据库备份新增修改人字段（可以表示备份人和还原操作人）\n 3.  【server】邮箱配置权限修改为超级管理员\n 4.  【server】修复服务端脚本分发到节点特殊字符编码问题（感谢@ʟᴊx💎💎）\n 5.  【server】修复删除节点未删除节点统计数据（感谢@以为）\n 6.  升级 springboot 到 2.6.3 (感谢@💎ℳ๓₯㎕斌💎💘)\n 7.  【server】解除 ssh 终端禁止命令权限保存失败（感谢@alex）\n 8.  【server】本地构建模式模糊匹配支持匹配多个结果\n 9.  【server】修复节点分发不能删除节点问题（感谢@a19920714liou gitee issues i4shsp ）\n 10. 【server】ssh 快捷安装插件端保存安装包避免多次上传 （感谢@a19920714liou gitee issues i4shjc ）\n 11. 【server】ssh 快捷安装插件端权限改为管理员\n 12. 【server】构建 ssh 发布授权目录采用下拉模式,提升用户操作感知 ( 感谢@hjk2008 gitee issues i4sice )\n 13. 【server】修复数据库自动备份失败问题\n\n> 🙏 特别感谢：💎ℳ๓₯㎕斌💎💘 贡献容器构建相关架构\n\n----------------------------------------\n\n\n# 2.8.7 (2022-01-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】新增系统配置-节点白名单、节点系统配置分发功能，方便集群节点统一配置\n 2. 【server】新增构建快捷复制功能,方便快速创建类型一致的项目\n 3. 【server】新增系统配置-配置菜单是否显示,用于非超级管理员页面菜单控制\n 4. 【server】新增节点统计功能，快速了解当前所有节点状态\n 5. 【server】新增节点心跳检测配置system.nodeheartsecond\n 6. 新增缓存管理查看定时任务执行统计\n 7. 【server】新增解除 ssh 终端禁止命令权限（感谢@ooooooam）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】新增全局关闭引导导航配置jpom.disabledguide（感谢@南有乔木）\n 2.  【server】修复快速安装服务端 ping 检查超时时间 5ms to 5s\n 3.  项目文本文件支持在线实时阅读（感谢@）\n 4.  【server】控制台日志支持搜索高亮\n 5.  【server】跨工作空间更新节点授权将自动同步更新\n 6.  【server】取消节点监控周期字段（采用全局统一配置）\n 7.  【server】监控周期调整为 cron 表达式配置,用户可以自定义监控频率\n 8.  【server】邮箱配置菜单移动到监控管理\n 9.  【server】节点分发白名单配置区分工作空间（不同工作空间不能配置）\n 10. 【server】升级 springboot 版本 2.6.2\n 11. 脚本模版执行目录修改为脚本所在目录\n 12. 【server】ssh 命令模版支持取消默认加载环境变量：#disabled-template-auto-evn\n 13. 【server】优化页面分页交互逻辑,只有一页不显示分页条\n 14. 【server】修复删除 ssh 没有删除执行日志\n\n> ⚠️ 特别提醒：强烈建议升级该版本,当前版本完善了权限拦截相关问题\n\n----------------------------------------\n\n\n# 2.8.6 (2022-01-21)\n\n\n# 🐣 新增功能\n\n 1. 项目运行模式新增 dsl，配合脚本模版实现自定义项目管理\n 2. 【server】新增快捷恢复 h2 奔溃数据（启动参数添加：--recover:h2db）（感谢@大土豆）\n 3. 【server】邮箱配置新增超时时间配置（感谢@y.）\n 4. 新增快速安装导入节点（插件端）\n 5. 【server】新增服务端脚本模版（区别于节点脚本模版）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】数据库备份自定义表显示中文描述\n 2. 【server】配置 ip 白名单判断是否合法,并且支持 ip/掩码位： 192.168.1.0/24 格式（感谢@skyou）\n 3. 【server】脚本模版独立菜单\n 4. 【server】执行升级前自动执行备份数据逻辑（保障数据稳定）\n 5. 【server】节点分发项目状态显示节点 id 更正为节点名称 （感谢@hu丶向...🤡）\n 6. 【server】升级 jgit 到 5.13\n 7. 【server】fix：恢复删除脚本模版、ssh 命令模版未删除日志数据\n 8. 查看项目控制台日志优化（新增滚动和显示行数配置）\n\n> ⚠️ 注意：此次更新了项目控制台日志需要更新插件端后才能正常使用项目控制台否则会出现控制台按钮不可用的情况\n\n----------------------------------------\n\n\n# 2.8.5 (2022-01-14)\n\n\n# 🐣 新增功能\n\n 1. 新增保留旧包个数配置参数system.oldjarscount\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】恢复删除脚本模版、ssh 命令模版未删除日志数据\n 2. 【server】项目副本集没有显示运行端口+进程id（感谢@ʟᴊx💎💎）\n 3. 【server】ssh 发布清除产物目录忽略no such file异常\n 4. 【server】节点升级中远程下载插件包存储路径更改，并优化更新包后页面显示问题（感谢@hu丶向...🤡）\n 5. 脚本模版新增描述字段（感谢@ʟᴊx💎💎）\n 6. 在线升级取消重复 jar 包判断,改为自动重命名（感谢@大土豆）\n 7. 项目文件管理调整为支持清空当前目录（感谢@ʟᴊx💎💎）\n 8. 【server】ssh 列表安装节点按钮判断 java 环境\n\n----------------------------------------\n\n\n# 2.8.4 (2022-01-06)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】数据库新增连接池配置参数（感谢@ʟᴊx💎💎）\n 2. 【agent】fix：解压 tar.gz 文件\n 3. 【server】fix：恢复导航助手不能正常显示问题\n 4. 【agent】fix 插件端首页不能正常关闭进程（感谢@平安茹意）\n 5. 【agent】fix 插件端首页支持自定义进程名（感谢@者羽）\n 6. 【server】恢复节点、构建分组字段（感谢@ʟᴊx💎💎）\n 7. 【server】后端默认开启 gzip 提升访问速度（感谢@小夜）\n\n----------------------------------------\n\n\n# 2.8.3 (2021-12-30)\n\n\n# 🐣 新增功能\n\n 1. 脚本模版新增日志管理\n 2. 【server】ssh 文件管理新增导入压缩包自动解压（感谢@刘志远）\n 3. 脚本模版新增定时执行（感谢@大土豆）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】节点分发数据新增状态字段,启动程序时候触发恢复异常数据\n 2. 【server】定时执行相关 cron 表达式输入提示示例数据\n 3. 【server】节点升级菜单取消，整合到【系统管理】-> 【在线升级】中\n 4. 【server】邮箱配置优化,新增 smtp、port 示例数据，取消 ssl 端口字段（感谢@💎ℳ๓₯㎕斌💎💘）\n 5. 【server】fix：新增用户无法正常输入bug（感谢@在路上）\n 6. 【server】fix：ssh 命令执行记录菜单没有独立显示问题（感谢@刘志远）\n\n----------------------------------------\n\n\n# 2.8.2 (2021-12-24)\n\n\n# 🐣 新增功能\n\n 1. 【server】仓库新增导入 gitee、github 仓库信息（感谢@💎ℳ๓₯㎕斌💎💘）\n 2. 【server】ssh 新增命令模版、可以用于批量执行命令脚本\n 3. 新增配置属性 system.timermatchsecond 调度(定时任务)是否开启秒级匹配（感谢@大土豆）\n 4. 缓存管理新增清除旧版本程序包功能\n 5. 【server】用户权限新增绑定工作空间权限（指定工作空间的修改、删除、上传、执行等权限）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】nginx 列表显示不全，无法滚动问题（感谢@）\n 2. 【server】独立节点分发显示节点名称（感谢@奥特曼打猪）\n 3. 【server】用户id（登录名）支持邮箱格式（感谢@陈力）\n 4. 【server】优化清除构建和删除构建时候删除相关文件操作（使用系统命令快速删除）（感谢@大土豆、gitee pr ）\n 5. 【server】项目搜索菜单名变更为项目列表\n 6. 【server】调整自动清理日志数据逻辑、默认保留日志数据条数修改为 10000\n 7. 【server】脚本模版在服务端统一查看、编辑、执行（感谢@ʟᴊx）\n 8. 【server】ssh 私钥支持配置文件和加载用户目录下的私钥文件\n 9. 【server】初始化超级管理员不能使用 demo 关键词（感谢@a.nevermore）\n\n> ⚠️ 注意：\n> \n>  1. 已经添加的用户重新绑定工作空间权限（默认没有工作空间操作权限）\n\n----------------------------------------\n\n\n# 2.8.1 (2021-12-17)\n\n\n# 🐣 新增功能\n\n 1. 节点缓存页面新增定时作业列表\n 2. 节点首页新增其他类型进程监控（感谢@大土豆）\n 3. 构建中的项目发布新增差异发布（多文件项目或者网络不佳情况只发布有变化的文件节省项目发布时间）（感谢@大灰灰）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】解决节点未配置监控周期接口报错+页面循环提示（感谢@周健全）\n 2.  windows 无法关闭 jpom 程序（感谢@……）\n 3.  【server】恢复项目搜索、节点分发项目的文件、控制管理无法正常使用（感谢@刘志远）\n 4.  脚本文件提示内容取消中文，修改为英文\n 5.  【agent】新增检查 jps 命令执行是否存在异常,异常则提示用户（感谢@……）\n 6.  部分控制台输出日志调整为英文\n 7.  【server】优化 ssh 安装插件端,不输入节点id、没有配置权限报错（感谢@大土豆）\n 8.  【agent】恢复项目 javaextdirscp 模式加载非 jar 文件问题（感谢@大灰灰）\n 9.  升级 springboot 版本 2.6.1\n 10. 【agent】恢复项目配置 webhook 后无法关闭进程的情况（感谢@大土豆）\n 11. 【server】ssh 命令日志低版本字段类型文件恢复（感谢@大土豆）\n 12. 【server】释放独立分发和删除分发项目提示更明确（感谢@周健全）\n 13. 【server】恢复自动导入节点异常（感谢@平安茹意）\n 14. 恢复节点密码包含特殊字符时节点控制台等相关功能无法正常使用问题（感谢@魔方技术-李广生）\n 15. 恢复解锁节点没有指定到对应的工作空间（感谢@周健全）\n\n----------------------------------------\n\n\n# 2.8.0 (2021-12-14)\n\n\n# 🐣 新增功能\n\n 1.  【server】新增工作空间概念（取代角色相关）【系统将自动创建默认工作空间、默认工作空间是不能删除】\n 2.  【server】用户新增可以配置管理员功能【管理员可以管理系统中的账号、系统管理等功能（除升级系统、导入数据外）】\n 3.  【server】新增超级管理员（第一次初始化系统等账号为超级管理员），超级可以拥有整个系统权限不受任何限制\n 4.  【server】列表数据都新增分页、搜索、排序功能（搜索字段、排序字段正在完善补充中）\n 5.  【server】新增通过命令行重置 ip 白名单配置参数 --rest:ip_config\n 6.  【server】新增通过命令行重置超级管理员参数 --rest:super_user_pwd\n 7.  【server】新增通过命令行重新加载数据库初始化操作参数 --rest:load_init_db\n 8.  【server】构建新增本地命令发布方式 用户在服务端执行相关命令进行发布操作\n 9.  【server】发布命令（ssh发布命令、本地命令）支持变量替换：#{build_id}、#{build_name}、#{build_result_file}、#{build_number_id}\n 10. 【server】新增自动备份全量数据配置 db.autobackupintervalday 默认一天备份一次,执行备份时间 凌晨0点或者中午12点\n 11. 【agent】项目的 webhook 新增项目启动成功后通知，并且参数新增 type 指包括：beforestop,start,stop,beforerestart\n 12. 【agent】项目新增自启动配置项,在 agent 启动时候检查对应项目是否启动，未启动执行启动逻辑 gitee issues i4ijfk\n 13. 【server】构建新增 webhook，实时通知构建进度\n 14. 【server】节点分发新增分发间隔时间配置\n 15. 新增控制台日志配置数据 consolelog.charset 避免部分服务器执行命令响应乱码 （感谢@……）\n 16. 【server】构建触发器新增批量触发 gitee issues i4a37g\n 17. 【server】构建支持定时触发 gitee issues i4fy5c\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】用户账号、节点、ssh、监控、节点分发等数据由 json 文件转存 h2\n 2.  【server】取消节点、构建分组字段\n 3.  【server】取消角色概念（新增工作空间取代）\n 4.  【server】操作监控数据由于数据字段不兼容将不自动升级需要用户重新配置\n 5.  【server】系统参数相关配置都由 json 转存 h2（邮箱配置、ip白名单、节点分发白名单、节点升级）\n 6.  【server】关联节点项目支持绑定单个节点不同项目\n 7.  【server】构建触发器新增跟随创建用户走，历史 url 将失效,需要重新生成\n 8.  【server】仓库假删功能下线，已经删除的仓库将恢复正常（假删功能后续重新开发）\n 9.  【agent】项目数据新增工作空间字段、取消分组字段\n 10. 【server】节点 id 取消用户自定义采用系统生成\n 11. 【server】优化节点弹窗和菜单折叠页面布局\n 12. 【server】编辑节点、ssh、邮箱配置不回显密码字段\n 13. 【server】优化 ssh 终端不能自动换行问题\n 14. 【agent】脚本模版新增工作空间字段、列表数据并缓存到服务端、新增执行日志\n 15. 【server】优化批量操作项目启动、关闭、重启交互\n 16. 【agent】恢复在线升级插件端提示 [agent-.jar] 已经存在啦,需要手动到服务器去上传新包\n 17. 自动注册对节点需要手动绑定工作空间后,节点才能正常使用 (感谢@💎ℳ๓₯㎕斌💎💘)\n\n> 🙏 特别感谢：jpom 社区测试组成员【🐠】、【ʟᴊx】、【hu丶向...🤡】等参与内测的人员\n\n> ⚠️ 注意：\n> \n> 【特别说明】：分组字段将失效，目前所有数据在升级后都将默认跟随默认工作空间。\n> \n> 1: 升级该版本会自动将原 json 文件数据转存到 h2 中，如果转存成功旧数据文件将自动移动到数据目录中的 backup_old_data 文件夹中\n> \n> 2: 升级过程请注意控制台日志是否出现异常\n> \n> 3: 操作监控数据由于数据字段不兼容将不自动升级需要用户重新配置\n> \n> 4: 监控报警记录、构建记录、操作记录由于字段兼容问题存在部分字段为空的情况\n> \n> 5：非超级管理员用户会出现由于未分配工作空间不能正常登录或者不能使用的情况，需要分配工作空间才能登录\n> \n> 6: 用户绑定工作空间后，用户在对应工作空间下可以创建、修改、删除对应的数据（包括但不限于管理节点）\n> \n> 7: 此次升级启动耗时可能需要2分钟以上（耗时根据数据量来决定），请耐心等待和观察控制台日志输出\n> \n> 8: 一个节点建议不要被多个服务端绑定（可能出现数据工作空间错乱情况）\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.6.0 ~ 2.6.4",frontmatter:{title:"2.6.0 ~ 2.6.4",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.6.x/",tags:["2.6.x"],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/1194.2.6.x.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/1194.2.6.x.md",key:"v-71d0830c",path:"/pages/changelog/2.6.x/",headers:[{level:2,title:"2.6.4-patch",slug:"_2-6-4-patch",normalizedTitle:"2.6.4-patch",charIndex:28},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:44},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:56},{level:2,title:"2.6.3-patch",slug:"_2-6-3-patch",normalizedTitle:"2.6.3-patch",charIndex:250},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:44},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:56},{level:2,title:"2.6.2-patch",slug:"_2-6-2-patch",normalizedTitle:"2.6.2-patch",charIndex:438},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:44},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:56},{level:2,title:"2.6.1-patch",slug:"_2-6-1-patch",normalizedTitle:"2.6.1-patch",charIndex:737},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:44},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:56},{level:2,title:"2.6.0-beta",slug:"_2-6-0-beta",normalizedTitle:"2.6.0-beta",charIndex:1018},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:44},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:56}],headersStr:"2.6.4-patch 🐣 新增功能 🐞 解决BUG、优化功能 2.6.3-patch 🐣 新增功能 🐞 解决BUG、优化功能 2.6.2-patch 🐣 新增功能 🐞 解决BUG、优化功能 2.6.1-patch 🐣 新增功能 🐞 解决BUG、优化功能 2.6.0-beta 🐣 新增功能 🐞 解决BUG、优化功能",content:"# 🚀 2.6.0 ~ 2.6.4 版本日志\n\n\n# 2.6.4-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】构建触发器新增延迟执行参数（感谢@Steve.Liu）\n 2. 【server】数据库字段类型超大的 varchar 改为 CLOB（感谢@Alex）\n 3. 【server】获取仓库分支方式修改（避免大仓库执行时间太长）（感谢@自作多情）\n\n----------------------------------------\n\n\n# 2.6.3-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】mac 进程号转换问题恢复\n 2. 【server】节点分发的项目白名单路径回显错误（感谢@tan90°）\n 3. 【agent】自定义日志路径自动创建（感谢@tan90°）\n\n----------------------------------------\n\n\n# 2.6.2-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【server】清除构建目录失败（感谢@大灰灰）\n 2. 【server】fix: 在线升级页面在没有配置白名单时候无法显示节点信息\n 3. 【agent】fix: windows 环境保存配置文件错误问题\n 4. 【agent】升级 commons-compress 依赖 （来自 GitHub advisories ）\n 5. 【server】优化限制 IP 白名单相关判断，避免手动修改错误后一直限制访问\n\n----------------------------------------\n\n\n# 2.6.1-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【agent】 当自定义配置授权信息后增加控制台输出信息,避免用户无感（感谢@南）\n 2. 【server】增加构建日志表构建命令字段长度，变更后长度为5000\n 3. 【server】调整编辑构建弹窗布局\n 4. 【server】ssh 发布命令调整为 sh 命令统一执行,避免类似 nohup 一直阻塞不响应\n 5. 【server】拦截器文件权限异常,提醒检查目录权限\n\n----------------------------------------\n\n\n# 2.6.0-beta\n\n\n# 🐣 新增功能\n\n 1. 【server】新增配置 h2 数据账号密码参数（注意之前已经存在的数据不能直接配置、会出现登录不成功情况）\n 2. 【agent】项目新增配置控制台日志输出目录 （感谢@落泪归枫 Gitee I22O4N）\n 3. 【server】新增配置 jwt token 签名 key 参数\n 4. 【server】ssh 新增配置禁止执行的命令,避免执行高风险命令\n 5. 【server】构建发布方式为 ssh 检查发布命令是否包含禁止执行的命令\n 6. 【server】新增 ssh 执行命令初始化环境变量配置 ssh.initEnv\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【agent】 恢复 nginx 重载判断问题（@大灰灰大 码云 issue I40UE7 ）\n 2.  【server】恢复 ssh 上传文件时候不会自动创建多级文件夹（@大灰灰大）\n 3.  【server】角色动态权限显示分组\n 4.  【agent】 新增 stop 项目等待进程关闭时间配置 project.stopWaitTime、停止项目输出 kill 执行结果\n 5.  bat 管理命令更新环境变量，避免部分服务器出现无法找到 taskkill 命令（ 感谢@Sunny°晴天、@zt0330 ）\n 6.  升级SpringBoot、Hutool等 第三方依赖版本\n 7.  去掉旧版本 ui (thymeleaf、layui)\n 8.  【server】fix： ssh 分发执行命令找不到环境变量问题\n 9.  【server】在线升级显示打包时间、并发执行分发 jar 包、部分逻辑优化\n 10. 【server】 构建历史增加下载构建产物按钮（感谢@房东的喵。）\n 11. 【server】项目控制台新增心跳消息，避免超过一定时间后无法操作的情况\n 12. 【server】ssh 新增心跳消息，避免超过一定时间后无法操作的情况\n 13. 【server】系统缓存中的文件占用空间大小调整为定时更新（10分钟）\n 14. 【server】修复 bug：分发列表页面点击【创建分发项目】按钮之后不能正常显示【分发节点】感谢 @xingenhi 点击查看提交记录 @Hotstrip\n 15. 【server】fix: 编辑管理员时用户名不可修改\n 16. 【server】折叠显示部分列表操作按钮（减少误操作）\n\n> ⚠️ 注意：当前版本为 beta 版本。项目中升级了较多依赖版本、新增了部分重要配置（建议确认好后再配置）.如果大家在升级后使用中发现任何问题请及时到微信群反馈,我们会尽快协助排查解决\n> \n>  1. 如果是已经安装 Jpom、升级到当前版本请勿直接配置数据库账号密码,如果需要配置请手动连接数据库人工修改密码后再配置",normalizedContent:"# 🚀 2.6.0 ~ 2.6.4 版本日志\n\n\n# 2.6.4-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】构建触发器新增延迟执行参数（感谢@steve.liu）\n 2. 【server】数据库字段类型超大的 varchar 改为 clob（感谢@alex）\n 3. 【server】获取仓库分支方式修改（避免大仓库执行时间太长）（感谢@自作多情）\n\n----------------------------------------\n\n\n# 2.6.3-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】mac 进程号转换问题恢复\n 2. 【server】节点分发的项目白名单路径回显错误（感谢@tan90°）\n 3. 【agent】自定义日志路径自动创建（感谢@tan90°）\n\n----------------------------------------\n\n\n# 2.6.2-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】清除构建目录失败（感谢@大灰灰）\n 2. 【server】fix: 在线升级页面在没有配置白名单时候无法显示节点信息\n 3. 【agent】fix: windows 环境保存配置文件错误问题\n 4. 【agent】升级 commons-compress 依赖 （来自 github advisories ）\n 5. 【server】优化限制 ip 白名单相关判断，避免手动修改错误后一直限制访问\n\n----------------------------------------\n\n\n# 2.6.1-patch\n\n\n# 🐣 新增功能\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【agent】 当自定义配置授权信息后增加控制台输出信息,避免用户无感（感谢@南）\n 2. 【server】增加构建日志表构建命令字段长度，变更后长度为5000\n 3. 【server】调整编辑构建弹窗布局\n 4. 【server】ssh 发布命令调整为 sh 命令统一执行,避免类似 nohup 一直阻塞不响应\n 5. 【server】拦截器文件权限异常,提醒检查目录权限\n\n----------------------------------------\n\n\n# 2.6.0-beta\n\n\n# 🐣 新增功能\n\n 1. 【server】新增配置 h2 数据账号密码参数（注意之前已经存在的数据不能直接配置、会出现登录不成功情况）\n 2. 【agent】项目新增配置控制台日志输出目录 （感谢@落泪归枫 gitee i22o4n）\n 3. 【server】新增配置 jwt token 签名 key 参数\n 4. 【server】ssh 新增配置禁止执行的命令,避免执行高风险命令\n 5. 【server】构建发布方式为 ssh 检查发布命令是否包含禁止执行的命令\n 6. 【server】新增 ssh 执行命令初始化环境变量配置 ssh.initenv\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【agent】 恢复 nginx 重载判断问题（@大灰灰大 码云 issue i40ue7 ）\n 2.  【server】恢复 ssh 上传文件时候不会自动创建多级文件夹（@大灰灰大）\n 3.  【server】角色动态权限显示分组\n 4.  【agent】 新增 stop 项目等待进程关闭时间配置 project.stopwaittime、停止项目输出 kill 执行结果\n 5.  bat 管理命令更新环境变量，避免部分服务器出现无法找到 taskkill 命令（ 感谢@sunny°晴天、@zt0330 ）\n 6.  升级springboot、hutool等 第三方依赖版本\n 7.  去掉旧版本 ui (thymeleaf、layui)\n 8.  【server】fix： ssh 分发执行命令找不到环境变量问题\n 9.  【server】在线升级显示打包时间、并发执行分发 jar 包、部分逻辑优化\n 10. 【server】 构建历史增加下载构建产物按钮（感谢@房东的喵。）\n 11. 【server】项目控制台新增心跳消息，避免超过一定时间后无法操作的情况\n 12. 【server】ssh 新增心跳消息，避免超过一定时间后无法操作的情况\n 13. 【server】系统缓存中的文件占用空间大小调整为定时更新（10分钟）\n 14. 【server】修复 bug：分发列表页面点击【创建分发项目】按钮之后不能正常显示【分发节点】感谢 @xingenhi 点击查看提交记录 @hotstrip\n 15. 【server】fix: 编辑管理员时用户名不可修改\n 16. 【server】折叠显示部分列表操作按钮（减少误操作）\n\n> ⚠️ 注意：当前版本为 beta 版本。项目中升级了较多依赖版本、新增了部分重要配置（建议确认好后再配置）.如果大家在升级后使用中发现任何问题请及时到微信群反馈,我们会尽快协助排查解决\n> \n>  1. 如果是已经安装 jpom、升级到当前版本请勿直接配置数据库账号密码,如果需要配置请手动连接数据库人工修改密码后再配置",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.5.0 ~ 2.5.2",frontmatter:{title:"2.5.0 ~ 2.5.2",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.5.x/",tags:["2.5.x"],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/1195.2.5.x.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/1195.2.5.x.md",key:"v-7a4d140c",path:"/pages/changelog/2.5.x/",headers:[{level:2,title:"2.5.2",slug:"_2-5-2",normalizedTitle:"2.5.2",charIndex:13},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:38},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:189},{level:2,title:"2.5.1",slug:"_2-5-1",normalizedTitle:"2.5.1",charIndex:1186},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:38},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:189},{level:2,title:"2.5.0",slug:"_2-5-0",normalizedTitle:"2.5.0",charIndex:5},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:38},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:189}],headersStr:"2.5.2 🐣 新增功能 🐞 解决BUG、优化功能 2.5.1 🐣 新增功能 🐞 解决BUG、优化功能 2.5.0 🐣 新增功能 🐞 解决BUG、优化功能",content:"# 🚀 2.5.0 ~ 2.5.2 版本日志\n\n\n# 2.5.2\n\n\n# 🐣 新增功能\n\n 1. 【agent+server】 新增节点批量升级功能（注意，之前的节点版本不支持该功能需要升级当前版本后才能使用该功能）\n 2. 【server】节点配置的超时时间单位由毫秒改为秒，并且最小值为2秒\n 3. 【server】新增构建合并分支日志（便于判断分支冲突问题）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【server】fix bug: 分发列表页面，展开某个节点之后点击操作按钮会出现新的一行无效数据。点击查看提交记录 @Hotstrip\n 2.  【server】fix bug: 项目监控页面，线程数据加载失败问题 点击查看提交记录 @Hotstrip\n 3.  【server】fix bug: 修复低版本浏览器不支持 .replaceAll() 方法 点击查看提交记录 @杨巍\n 4.  【server】update: 更新分发列表 -- 关联分发项目页面操作逻辑（跟老版本操作逻辑一致）点击查看提交记录 @李道甫\n 5.  【server】update: 优化项目文件管理页面，加载目录树时会多次显示 loading 层 点击查看提交记录 @Hotstrip\n 6.  【server】fix bug: 修复节点请求超时可能导致节点项目列表为空 bug 点击查看提交记录 @Hotstrip\n 7.  【agent】 fix bug: index 获取进程列表 NPE (感谢@夏末秋初)\n 8.  【server】fix bug: 修复上传项目压缩文件创建项目目录异常点击这里查看对应 issue\n 9.  【server】fix bug：创建构建时，如果选择 svn，隐藏掉分支选项。点击这里查看对应 issue 感谢 Alexa 提出 issue @Hotstrip\n 10. 【server】 fix bug: ssh 构建发布清空历史文件失败（感谢@金晨曦）\n 11. 【server】update 构建初始化仓库拉取指定分支，不先拉取主分支再切换到指定分支（感谢@大灰灰）\n 12. 【server】程序关闭时候自动关闭 h2 数据连接池，避免数据库文件被损坏\n 13. 【server】style: 优化logo，登录页面，初始化页面 点击查看对应提交记录 @长得丑活得久i\n 14. 【server】fix bug: 修复在没有配置nginx白名单时访问nginx列表数据一直加载中问题点击这里查看对应 issue @长得丑活得久i\n 15. 新增 .gitattributes 文件控制命令文件的编码格式以及换行符（感谢@ℳ๓₯㎕斌）\n\n----------------------------------------\n\n\n# 2.5.1\n\n\n# 🐣 新增功能\n\n 1. 【Server】保存邮箱信息时候验证邮箱配置是否正确（感谢@maybe）\n 2. 【Server】Token 机制采用 jwt\n 3. 【Server】git 构建新增进度日志输出\n 4. 【Server】添加操作监控相关 api 和页面功能\n 5. 【Server】完善 JWT token 过期自动续签功能\n 6. 【Server】添加前端页面引导系统（使用 introJs）\n 7. 【Server】访问 ip 限制，支持配置白名单和黑名单来控制 ip 访问权限\n 8. 【Server】添加服务自启动脚本创建方案，下面贴一下 Server 端自启动方式：\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【Server】全局网络请求新增 loading 状态控制\n 2.  【Server】获取构建日志关闭 loading 状态\n 3.  【Agent】控制台日志支持定时清空,避免日志文件太大（感谢@南有乔木）\n 4.  【Server】在线升级状态判断修复\n 5.  【Server】修复项目获取进程信息失败（感谢@onlyonezhongjinhui GitHub issues#7）\n 6.  【Server】项目文件管理中显示项目文件存放真实目录\n 7.  【Server】项目文件管理中文件夹不存在时，loading不消失（感谢@onlyonezhongjinhui GitHub issues#6）\n 8.  【Server】文件管理列表不能正常加载二级以上的目录\n 9.  【Server】添加监控判断用户是否配置报警联系方式（感谢@maybe）\n 10. 【Server】初始化安装不能自动登录\n 11. 【Server】页面组件采用国际化采用 zh_cn\n 12. 【Server】服务器中验证码无法加载（感谢@何好听 Gitee issues#I3E7XQ）\n 13. 【Agent】解决控制台输出 Failed to check connection: java.net.ConnectException: Connection refused: connect,因为没有关闭对应的 jmx\n 14. 【Agent】解决首页控制台 java 进程列表慢的问题（采用定时拉取并缓存）\n 15. 【server】fix bug: 节点列表页面，展开某个节点之后点击操作按钮会出现新的一行无效数据。 点击查看提交记录\n 16. 【server】fix bug: 节点列表页面，在没有安装节点的情况下，点击终端按钮会在控制台报错。点击这里查看对应 issue\n 17. 【server】fix bug: 节点管理里面的 Nginx 管理，关闭服务的接口参数传递错了。点击这里查看对应 issue\n 18. 【server】优化系统配置页面的样式，在小屏幕设备上会出现多个竖方向上的滚动条，甚至有时候会遮住底部的操作按钮\n 19. 【server】ssh 终端命令交互优化（改优化取消之前版本快捷解压功能，删除命令检查）\n 20. 【server】优化表格的排版和高度等样式，适配页面。详情见 issue\n 21. 【server】优化节点分发关联操作界面。\n\n> ⚠️ 注意事项：\n> \n>  1. ssh 终端的删除命令检查临时取消（后面版本会重新优化）\n>  2. 该版本新增配置 Jpom 服务方式，需要更新 Server.sh、Agent.sh 文件，在线升级仅升级应用程序不会升级对应的管理命令文件，如果需要使用到该功能还需要手动覆盖更新对应的文件。（如果自定义过管理命令文件则需要差异覆盖）\n\n> 开机自启动：\n> \n> >  1. 在 Server 端找到 Server.sh 文件，执行命令 ./Server.sh create，会在当前目录下生成 jpom-server 文件，这个文件就是 Server 端的自启动的文件\n> >  2. 在 Agent 端找到 Agent.sh 文件，执行命令 ./Agent.sh create，会在当前目录下生成 jpom-agent 文件，这个文件就是 Agent 端的自启动的文件\n> >  3. 把刚刚生成的自启动文件移动到 /etc/init.d/ 目录\n> >  4. 到 /etc/init.d/ 目录让自启动文件拥有执行权限，执行命令 chmod +x jpom-server 或者 chmod +x jpom-agent\n> >  5. 注册到 chkconfig 列表里面，就可以实现开机自启，执行命令 chkconfig --add jpom-server 或者 chkconfig --add jpom-agent\n> >  6. 执行完第 4 步就可以通过 service jpom-xxx {status | start | stop} 来管理 Jpom 服务\n> >  7. 目前仅通过 Cent OS 服务器测试，其他服务器可能会无效\n\n----------------------------------------\n\n\n# 2.5.0\n\n\n# 🐣 新增功能\n\n 1. 【server】接入全局 loading 控件\n 2. 【server】默认进入新版UI\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【Server】fix bug: ssh 列表页面编辑弹窗无法加载（当没有设置文件目录时）\n 2.  【Server】fix bug: 分发列表，项目运行状态显示错误\n 3.  【Server】fix bug：第一次安装未能正常打开初始化账号密码页面\n 4.  【server】fix bug: 独立分发项目编辑时，jvm args 等参数不会回显\n 5.  【server】fix: 点击构建自动打开构建日志、构建日志弹窗自动滚动到底部\n 6.  【server】add: index.html 添加打包时间\n 7.  【server】fix bug：添加、编辑用户原始密码进行了sha1\n 8.  【server】add: 添加构建历史回滚操作（感谢@李道甫）\n 9.  【server】add: 添加项目文件管理页面上传压缩文件（感谢@李道甫）\n 10. 【server】fix bug: 文件上传时显示上传进度（感谢@李道甫）\n 11. 【server】fix bug: 项目文件管理的侧边文件树优化（感谢@李道甫）\n 12. 【server】fix: 控制台日志弹窗自动滚动到底部（感谢@南有乔木）\n 13. 【server】add: File方式创建项目 项目控制台互调（感谢@李道甫 贡献）\n 14. 【server】add: 分发提示修改 分发项目显示 （感谢@李道甫 贡献）\n\n> ⚠️ 注意：目前新版本登录状态采用固定 token 模式，登录后将一直保持在线状态，如需要退出或者离线需要进行退出登录操作。（该问题将于后面版本进行优化调整）",normalizedContent:"# 🚀 2.5.0 ~ 2.5.2 版本日志\n\n\n# 2.5.2\n\n\n# 🐣 新增功能\n\n 1. 【agent+server】 新增节点批量升级功能（注意，之前的节点版本不支持该功能需要升级当前版本后才能使用该功能）\n 2. 【server】节点配置的超时时间单位由毫秒改为秒，并且最小值为2秒\n 3. 【server】新增构建合并分支日志（便于判断分支冲突问题）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】fix bug: 分发列表页面，展开某个节点之后点击操作按钮会出现新的一行无效数据。点击查看提交记录 @hotstrip\n 2.  【server】fix bug: 项目监控页面，线程数据加载失败问题 点击查看提交记录 @hotstrip\n 3.  【server】fix bug: 修复低版本浏览器不支持 .replaceall() 方法 点击查看提交记录 @杨巍\n 4.  【server】update: 更新分发列表 -- 关联分发项目页面操作逻辑（跟老版本操作逻辑一致）点击查看提交记录 @李道甫\n 5.  【server】update: 优化项目文件管理页面，加载目录树时会多次显示 loading 层 点击查看提交记录 @hotstrip\n 6.  【server】fix bug: 修复节点请求超时可能导致节点项目列表为空 bug 点击查看提交记录 @hotstrip\n 7.  【agent】 fix bug: index 获取进程列表 npe (感谢@夏末秋初)\n 8.  【server】fix bug: 修复上传项目压缩文件创建项目目录异常点击这里查看对应 issue\n 9.  【server】fix bug：创建构建时，如果选择 svn，隐藏掉分支选项。点击这里查看对应 issue 感谢 alexa 提出 issue @hotstrip\n 10. 【server】 fix bug: ssh 构建发布清空历史文件失败（感谢@金晨曦）\n 11. 【server】update 构建初始化仓库拉取指定分支，不先拉取主分支再切换到指定分支（感谢@大灰灰）\n 12. 【server】程序关闭时候自动关闭 h2 数据连接池，避免数据库文件被损坏\n 13. 【server】style: 优化logo，登录页面，初始化页面 点击查看对应提交记录 @长得丑活得久i\n 14. 【server】fix bug: 修复在没有配置nginx白名单时访问nginx列表数据一直加载中问题点击这里查看对应 issue @长得丑活得久i\n 15. 新增 .gitattributes 文件控制命令文件的编码格式以及换行符（感谢@ℳ๓₯㎕斌）\n\n----------------------------------------\n\n\n# 2.5.1\n\n\n# 🐣 新增功能\n\n 1. 【server】保存邮箱信息时候验证邮箱配置是否正确（感谢@maybe）\n 2. 【server】token 机制采用 jwt\n 3. 【server】git 构建新增进度日志输出\n 4. 【server】添加操作监控相关 api 和页面功能\n 5. 【server】完善 jwt token 过期自动续签功能\n 6. 【server】添加前端页面引导系统（使用 introjs）\n 7. 【server】访问 ip 限制，支持配置白名单和黑名单来控制 ip 访问权限\n 8. 【server】添加服务自启动脚本创建方案，下面贴一下 server 端自启动方式：\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】全局网络请求新增 loading 状态控制\n 2.  【server】获取构建日志关闭 loading 状态\n 3.  【agent】控制台日志支持定时清空,避免日志文件太大（感谢@南有乔木）\n 4.  【server】在线升级状态判断修复\n 5.  【server】修复项目获取进程信息失败（感谢@onlyonezhongjinhui github issues#7）\n 6.  【server】项目文件管理中显示项目文件存放真实目录\n 7.  【server】项目文件管理中文件夹不存在时，loading不消失（感谢@onlyonezhongjinhui github issues#6）\n 8.  【server】文件管理列表不能正常加载二级以上的目录\n 9.  【server】添加监控判断用户是否配置报警联系方式（感谢@maybe）\n 10. 【server】初始化安装不能自动登录\n 11. 【server】页面组件采用国际化采用 zh_cn\n 12. 【server】服务器中验证码无法加载（感谢@何好听 gitee issues#i3e7xq）\n 13. 【agent】解决控制台输出 failed to check connection: java.net.connectexception: connection refused: connect,因为没有关闭对应的 jmx\n 14. 【agent】解决首页控制台 java 进程列表慢的问题（采用定时拉取并缓存）\n 15. 【server】fix bug: 节点列表页面，展开某个节点之后点击操作按钮会出现新的一行无效数据。 点击查看提交记录\n 16. 【server】fix bug: 节点列表页面，在没有安装节点的情况下，点击终端按钮会在控制台报错。点击这里查看对应 issue\n 17. 【server】fix bug: 节点管理里面的 nginx 管理，关闭服务的接口参数传递错了。点击这里查看对应 issue\n 18. 【server】优化系统配置页面的样式，在小屏幕设备上会出现多个竖方向上的滚动条，甚至有时候会遮住底部的操作按钮\n 19. 【server】ssh 终端命令交互优化（改优化取消之前版本快捷解压功能，删除命令检查）\n 20. 【server】优化表格的排版和高度等样式，适配页面。详情见 issue\n 21. 【server】优化节点分发关联操作界面。\n\n> ⚠️ 注意事项：\n> \n>  1. ssh 终端的删除命令检查临时取消（后面版本会重新优化）\n>  2. 该版本新增配置 jpom 服务方式，需要更新 server.sh、agent.sh 文件，在线升级仅升级应用程序不会升级对应的管理命令文件，如果需要使用到该功能还需要手动覆盖更新对应的文件。（如果自定义过管理命令文件则需要差异覆盖）\n\n> 开机自启动：\n> \n> >  1. 在 server 端找到 server.sh 文件，执行命令 ./server.sh create，会在当前目录下生成 jpom-server 文件，这个文件就是 server 端的自启动的文件\n> >  2. 在 agent 端找到 agent.sh 文件，执行命令 ./agent.sh create，会在当前目录下生成 jpom-agent 文件，这个文件就是 agent 端的自启动的文件\n> >  3. 把刚刚生成的自启动文件移动到 /etc/init.d/ 目录\n> >  4. 到 /etc/init.d/ 目录让自启动文件拥有执行权限，执行命令 chmod +x jpom-server 或者 chmod +x jpom-agent\n> >  5. 注册到 chkconfig 列表里面，就可以实现开机自启，执行命令 chkconfig --add jpom-server 或者 chkconfig --add jpom-agent\n> >  6. 执行完第 4 步就可以通过 service jpom-xxx {status | start | stop} 来管理 jpom 服务\n> >  7. 目前仅通过 cent os 服务器测试，其他服务器可能会无效\n\n----------------------------------------\n\n\n# 2.5.0\n\n\n# 🐣 新增功能\n\n 1. 【server】接入全局 loading 控件\n 2. 【server】默认进入新版ui\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】fix bug: ssh 列表页面编辑弹窗无法加载（当没有设置文件目录时）\n 2.  【server】fix bug: 分发列表，项目运行状态显示错误\n 3.  【server】fix bug：第一次安装未能正常打开初始化账号密码页面\n 4.  【server】fix bug: 独立分发项目编辑时，jvm args 等参数不会回显\n 5.  【server】fix: 点击构建自动打开构建日志、构建日志弹窗自动滚动到底部\n 6.  【server】add: index.html 添加打包时间\n 7.  【server】fix bug：添加、编辑用户原始密码进行了sha1\n 8.  【server】add: 添加构建历史回滚操作（感谢@李道甫）\n 9.  【server】add: 添加项目文件管理页面上传压缩文件（感谢@李道甫）\n 10. 【server】fix bug: 文件上传时显示上传进度（感谢@李道甫）\n 11. 【server】fix bug: 项目文件管理的侧边文件树优化（感谢@李道甫）\n 12. 【server】fix: 控制台日志弹窗自动滚动到底部（感谢@南有乔木）\n 13. 【server】add: file方式创建项目 项目控制台互调（感谢@李道甫 贡献）\n 14. 【server】add: 分发提示修改 分发项目显示 （感谢@李道甫 贡献）\n\n> ⚠️ 注意：目前新版本登录状态采用固定 token 模式，登录后将一直保持在线状态，如需要退出或者离线需要进行退出登录操作。（该问题将于后面版本进行优化调整）",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.0 ~ 2.2",frontmatter:{title:"2.0 ~ 2.2",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.x/",tags:[null],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/1199.2.0-2.2.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/1199.2.0-2.2.md",key:"v-2aaf1b60",path:"/pages/changelog/2.x/",headers:[{level:2,title:"2.2",slug:"_2-2",normalizedTitle:"2.2",charIndex:2},{level:2,title:"2.1",slug:"_2-1",normalizedTitle:"2.1",charIndex:146},{level:2,title:"2.0",slug:"_2-0",normalizedTitle:"2.0",charIndex:294}],headersStr:"2.2 2.1 2.0",content:"# 2.2\n\n 1. 解决批量上传文件造成卡死的问题\n 2. 控制台读取自动识别文件编码格式\n 3. 退出登录出现异常页面\n 4. 根据对应权限显示对应菜单\n 5. 系统管理员可以在线解锁锁定的用户\n\n----------------------------------------\n\n\n# 2.1\n\n 1. 全面取消调用命令文件执行\n 2. 静态资源缓存问题\n 3. 首页监控图表更新\n 4. 多处细节优化\n 5. 分别支持ClassPath和Jar模式\n 6. 证书文件支持验证私钥是否匹配\n\n----------------------------------------\n\n\n# 2.0\n\n 1. 优化安全问题\n 2. 兼容windows\n 3. 使用JVM获取运行状态",normalizedContent:"# 2.2\n\n 1. 解决批量上传文件造成卡死的问题\n 2. 控制台读取自动识别文件编码格式\n 3. 退出登录出现异常页面\n 4. 根据对应权限显示对应菜单\n 5. 系统管理员可以在线解锁锁定的用户\n\n----------------------------------------\n\n\n# 2.1\n\n 1. 全面取消调用命令文件执行\n 2. 静态资源缓存问题\n 3. 首页监控图表更新\n 4. 多处细节优化\n 5. 分别支持classpath和jar模式\n 6. 证书文件支持验证私钥是否匹配\n\n----------------------------------------\n\n\n# 2.0\n\n 1. 优化安全问题\n 2. 兼容windows\n 3. 使用jvm获取运行状态",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.4.0 ~ 2.4.9",frontmatter:{title:"2.4.0 ~ 2.4.9",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.4.x/",tags:[null],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/1197.2.4.x.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/1197.2.4.x.md",key:"v-630c3c8a",path:"/pages/changelog/2.4.x/",headers:[{level:2,title:"2.4.9 - 3.0.0(beta)",slug:"_2-4-9-3-0-0-beta",normalizedTitle:"2.4.9 - 3.0.0(beta)",charIndex:28},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:2,title:"2.4.8",slug:"_2-4-8",normalizedTitle:"2.4.8",charIndex:813},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-2",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:2,title:"2.4.7",slug:"_2-4-7",normalizedTitle:"2.4.7",charIndex:1379},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-3",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-3",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:2,title:"2.4.6",slug:"_2-4-6",normalizedTitle:"2.4.6",charIndex:2284},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-4",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-4",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:3,title:"升级注意",slug:"升级注意",normalizedTitle:"升级注意",charIndex:2791},{level:2,title:"2.4.5",slug:"_2-4-5",normalizedTitle:"2.4.5",charIndex:3015},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-5",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-5",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:2,title:"2.4.4",slug:"_2-4-4",normalizedTitle:"2.4.4",charIndex:3863},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-6",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-6",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:2,title:"2.4.3",slug:"_2-4-3",normalizedTitle:"2.4.3",charIndex:4172},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-7",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-7",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:3,title:"升级注意事项",slug:"升级注意事项",normalizedTitle:"升级注意事项",charIndex:5170},{level:2,title:"2.4.2",slug:"_2-4-2",normalizedTitle:"2.4.2",charIndex:5295},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-8",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-8",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:3,title:"升级注意事项",slug:"升级注意事项-2",normalizedTitle:"升级注意事项",charIndex:5170},{level:2,title:"2.4.1",slug:"_2-4-1",normalizedTitle:"2.4.1",charIndex:6500},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-9",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-9",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252},{level:2,title:"2.4.0",slug:"_2-4-0",normalizedTitle:"2.4.0",charIndex:5},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-10",normalizedTitle:"🐣 新增功能",charIndex:71},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能-10",normalizedTitle:"🐞 解决bug、优化功能",charIndex:252}],headersStr:"2.4.9 - 3.0.0(beta) 🐣 新增功能 🐞 解决BUG、优化功能 2.4.8 🐣 新增功能 🐞 解决BUG、优化功能 2.4.7 🐣 新增功能 🐞 解决BUG、优化功能 2.4.6 🐣 新增功能 🐞 解决BUG、优化功能 升级注意 2.4.5 🐣 新增功能 🐞 解决BUG、优化功能 2.4.4 🐣 新增功能 🐞 解决BUG、优化功能 2.4.3 🐣 新增功能 🐞 解决BUG、优化功能 升级注意事项 2.4.2 🐣 新增功能 🐞 解决BUG、优化功能 升级注意事项 2.4.1 🐣 新增功能 🐞 解决BUG、优化功能 2.4.0 🐣 新增功能 🐞 解决BUG、优化功能",content:"# 🚀 2.4.0 ~ 2.4.9 版本日志\n\n\n# 2.4.9 - 3.0.0(beta)\n\n> 当前版本为重构页面后的预览版本\n\n\n# 🐣 新增功能\n\n 1. 【Server】新增监控用户操作记录\n 2. 【Agent】新增配置是否禁用根据jmx获取项目状态（默认启用）\n 3. 项目文件管理支持在线修改文件（感谢@Chen 贡献）\n 4. 3.0.0bata版本的页面重构[采用vue项目编写]（感谢@Hotstrip）\n 5. 新增项目启动banner输出（感谢@Hotstrip）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【Server】 优化判断构建命令中的删除命令关键词\n 2.  【Server】 优化删除构建历史、构建代码（避免不能删除情况）\n 3.  【Agent】 调整项目的jvm 和 args参数支持url编码。避免xss后冲突\n 4.  优化获取项目当前运行路径问题\n 5.  【Server】开始构建时输出代码目录\n 6.  【Server】编辑构建类型为SVN没有分组bug（感谢@JAVA-落泪归枫）\n 7.  更新文档Jpom 的JDK要为1.8.0_40+（感谢@JAVA 企鹅）\n 8.  【Server】数据库初始化时间前置,打印成功日志，未初始化结束数据库相关操作都忽略\n 9.  【Server】修复报警恢复后，报警列表中的报警状态显示报警中的错误（感谢@南有乔木）\n 10. 更新hutool 版本至5.4.x （能避免系统缓存页面里面获取文件大小卡死）\n 11. 调整Jpom启动输出日志,启动消息采用控制台输出不再打印error级别的启动消息\n\n> 🙏 特别感谢：@Hotstrip 对Jpom的前端页面采用vue重构编写\n> \n> 当前版本为3.x版本前的过渡版本\n\n----------------------------------------\n\n\n# 2.4.8\n\n\n# 🐣 新增功能\n\n 1. 【Agent】读取进程新增 ps -ef | grep xxx 方式（感谢@JAVA-落泪归枫）\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【Server】构建历史中记录字段不全问题（感谢@￡天空之城～龙）\n 2.  【Server】Java-WebSocket 模块漏洞版本更新 来源 Github GHSA-gw55-jm4h-x339\n 3.  【Server】节点分发列表点击控制台、文件管理404\n 4.  【Server】节点分发顺序重启休眠时间取构建名称最后的时间（测试构建:10 则睡眠时间为10秒）\n 5.  【Agent】启动完成打印授权信息日志级别调至error\n 6.  CommandUtil.asyncExeLocalCommand 方法格式化命令中的换行\n 7.  优化启动读取进程文件目录避免包含node_modules 目录卡死\n 8.  【Server】修复构建命令中判断是否包含【rm、del、rd】bug （感谢@落泪归枫）\n 9.  【Server】修改删除节点会修改掉非管理员的账号密码bug\n 10. 【Server】 构建历史根据权限查询\n\n----------------------------------------\n\n\n# 2.4.7\n\n\n# 🐣 新增功能\n\n 1. 支持maven快速编辑节点项目 （配合jpom-maven-plugin使用）( 感谢@夜空中最亮的星)\n 2. 【Agent】 新增jdk 管理，不同项目选择不同的jdk （GITEE@IV8ZZ）\n 3. 【Server】构建新增分组属性，方便快速选择\n 4. 【Agent】 新增[JavaExtDirsCp] 运行模式 (感谢@TXpcmgr（Geiger）)\n 5. 【Server】 ssh 连接方式新增私钥证书连接\n 6. 【Server】 ssh文件管理新增解压操作（感谢@TXpcmgr（Geiger）贡献）\n 7. 【Agent】 项目新建副本集，方便单机快速运行多个副本\n 8. 【Server】构建发布后操作支持副本集相关操作\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  完善使用nginx之类代理二级目录，指定端口路径跳转问题（感谢@😯😨😰😱 ）\n 2.  解决菜单路径不正确问题（GITEE@I15O46）\n 3.  【Agent】 windows中Agent关闭，Agent中所有项目跟随关闭（感谢@java gods）\n 4.  【Server】构建命令包含删除命令误判断（感谢@Sawyer）\n 5.  【Server】构建历史支持配置单个构建最多保存多少个历史\n 6.  【Server】解决节点分组筛选bug(感谢gitee@I17XEH)\n 7.  【Server】角色权限动态数据，单个节点异常不影响所有节点配置（感谢@￡天空之城～龙）\n 8.  【Server】关联节点分发项目支持修改发布后操作\n 9.  补充说明文档：详情 (感谢@TXpcmgr（Geiger）)\n 10. 更新部分插件依赖版本【hutool、fast-boot、fastjson】\n\n> ⚠️ 注意：如果在2.4.7以下项目运行方式中使用过【War】模式的由于【War】更名为【JarWar】 所有在升级后请重新修改运行方式后再运行对应项目\n\n----------------------------------------\n\n\n# 2.4.6\n\n\n# 🐣 新增功能\n\n 1. 【Agent】 nginx管理支持自定义编译运行，管理方式变更\n 2. 【Server】 监控通知新增企业微信（感谢@TinyBao。）\n 3. 管理脚本支持自动识别环境变量和java路径（linux环境）\n 4. 项目类型新增File(快速管理纯静态文件)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【Server】解决分发列表项目状态显示不正确（感谢@群友）\n 2. 【Server】修复权限选择错乱和无法正确过滤问题【注意此版本的角色动态权限不兼容旧数据，需要重新授权动态数据权限】（感谢@Java-OutMan）\n 3. 调整项目日志输出\n 4. 更新【commons-compress】依赖版本[漏洞升级]\n 5. 【Server】构建弹窗条件构建名称（感谢@Sawyer）\n 6. json文件读取异常提示（感谢@Taller）\n 7. 【Server】 优化ssh上传文件、删除文件\n 8. InternalError 异常捕捉\n 9. 【Server】优化Nginx 非80、443端口 二级路径代理重定向问题（感谢@😯😨😰😱 ）\n\n\n# 升级注意\n\n 1. 此版本更新控制台日志级别有调整，如果使用管理命令方式运行日志级别将不再打印info级别，如果需要打印info级别的请调整管理命令中的--spring.profiles.active=pro 为 --spring.profiles.active=dev\n 2. 使用Nginx 二级路径代理请一定使用Jpom 推荐nginx配置查看配置\n\n----------------------------------------\n\n\n# 2.4.5\n\n\n# 🐣 新增功能\n\n 1. 【Server】节点列表支持筛选（感谢@￡天空之城～龙）\n 2. 【Server】新增构建触发器（感谢@java 麦田英雄）\n 3. 【Server】新增自动清理过量的构建历史记录和文件（感谢@Sawyer、@Jvmlz）\n 4. 【Server】构建支持ssh发布（感谢@￡天空之城～龙）\n 5. 【Server】节点新增分组属性，方便多节点快速筛选（感谢@￡天空之城～龙）\n 6. 新增windows快速升级\n 7. 【Server】layui升级到最新版，文件上传支持进度条\n 8. 新增节点内存、cpu、硬盘使用情况采集报表（感谢@￡天空之城～龙）\n 9. 节点首页新增快速结束进程方式\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【Server】节点分发需要节点数大于二（感谢@Sawyer）\n 2.  修复未加载到tools.jar判断（感谢@java-磊）\n 3.  【Server】控制台新增自动清屏开关（感谢@Jvmlz）\n 4.  上传文件大小限制，配置化\n 5.  【Server】构建文件copy忽略隐藏文件\n 6.  【Server】不能清除错误进程缓存（感谢@java 李道甫）\n 7.  【Agent】长时间运行jpom无法监控到项目运行状态（感谢@java 李道甫、@洋芋）\n 8.  【Server】节点分发编辑支持修改分发后的操作\n 9.  【Agent】脚本模板跟随系统编码\n 10. 【Server】tomcat控制台删除日志文件错误（感谢@Java-iwen）\n 11. 【Agent】自动备份控制台日志表达式为none,不生成日志备份\n 12. 【Server】角色授权编辑权限不能创建数据（感谢@Lostshadow）\n 13. 【Server】tomcat动态权限配置不正确（感谢@Lostshadow）\n\n----------------------------------------\n\n\n# 2.4.4\n\n\n# 🐣 新增功能\n\n 1. 【Agent】添加对SpringBoot war包支持\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【Server】新项目打开项目控制台页面报错（感谢@黄战虎）\n 2. 【Server】修改邮箱不及时生效问题（感谢@WeChat）\n 3. 【Server】修复发布构建产物路径bug（感谢@Sawyer）\n 4. 优化执行命令方式\n 5. 脚本模板在linux 不添加权限（采用sh 方式执行）\n 6. 【Server】修复添加节点分发项目报错的数据异常（感谢@WeChat）\n\n----------------------------------------\n\n\n# 2.4.3\n\n\n# 🐣 新增功能\n\n 1.  SpringBoot 升级到2.1.x\n 2.  【Server】velocity模板引擎升级为thymeleaf\n 3.  【Server】构建支持svn类型仓库（感谢@群友 .）\n 4.  插件端自动注册到服务端（感谢@群友 .）\n 5.  新增在线修改配置并可及时重启\n 6.  新增WebSSH 管理功能\n 7.  【Server】用户新增邮箱和钉钉群webhook 属性\n 8.  【Server】监控报警通知改为联系人\n 9.  【Server】引人netty插件（感谢@夜空中最亮的星）\n 10. 支持docker 容器运行（感谢@24k）\n 11. 【Server】 新增清空构建代码（解决代码冲突）(感谢@xieyue200810)\n 12. 搭建插件化基础架构\n 13. 用户权限重构，使用角色支持更细粒的权限控制\n 14. 新增ssh快速部署插件端\n 15. 新增一键安装脚本详情\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【Server】未登录重定向带入参数\n 2.  【Server】页面登录方法调整支持自定义事件登录\n 3.  【Server】删除节点、分发验证是否存在关联数据,分发释放分发关系\n 4.  项目白名单目录调整为属性\n 5.  【Server】编辑用户回显节点选中错乱问题\n 6.  调整linux管理命令脚本防止在线升级产生tail 进程\n 7.  【Agent】插件端的脚本模板路径切换到数据目录下\n 8.  【Agent】Windows异步执行命令调整不使用[INHERIT]（防止插件端进程阻塞）\n 9.  【Server】分页查询会存在字段not found\n 10. 【Server】构建命令不能包含删除命令（del,rd,rm）\n 11. 支持配置初始读取日志文件最后多少行【log.intiReadLine】(感谢@夜空中最亮的星)\n 12. 优化节点首页饼状图统计\n 13. 取消用户输入脚本模板id\n 14. 重定向支持自动识别 Proto（解决http-> https iframe报错）\n 15. 构建执行命令存在错误只是提示，不取消执行（感谢@Sawyer）\n 16. 构建打包目录没有文件名异常（感谢@Sawyer）\n 17. 修改为专属包名【io.jpom】\n\n\n# 升级注意事项\n\n 1. 由于修改包名引起：如果在旧版本中使用过在线升级，本次升级需要手动上传jar到到服务器中执行命令升级，并且删除旧包并且覆盖管理命令文件\n\n----------------------------------------\n\n\n# 2.4.2\n\n\n# 🐣 新增功能\n\n 1.  新增实时查看tomcat日志\n 2.  【Server】分发包支持更多压缩格式\n 3.  页面菜单采用json文件配置(支持二级菜单)\n 4.  【Server】分发包支持更多类型的压缩格式\n 5.  【Server】节点支持配置请求超时时间\n 6.  支持配置是否记录请求、响应日志【consoleLog.reqXss、consoleLog.reqResponse】\n 7.  新增日志记录最大记录条数【默认100000】\n 8.  【Server】layui 升级到2.5.4\n 9.  【Server】新增项目监控功能\n 10. 【Server】新增在线构建项目功能\n 11. 【Server】新增查看项目实际执行的命令行\n 12. 【Server】新增分发日志\n 13. 新增清空文件缓存、临时数据缓存\n 14. 在线查看、下载Jpom运行日志(windows不能实时查看)\n 15. 新增linux在线升级\n\n\n# 🐞 解决BUG、优化功能\n\n 1.  【Agent】logBack页面最后修改时间不能正确显示（感谢@JAVA jesion）\n 2.  【Agent】nginx修改内容截断，不正确情况（感谢@JAVA jesion）\n 3.  【Agent】nginx、脚本模板保存内容xss标签还原\n 4.  【Server】节点分发页面的交互方式\n 5.  【Server】页面菜单分类整理\n 6.  【Agent】修复SpringBoot相对文件夹下无法读取配置问题\n 7.  【Agent】缓存异常的jvm进程，避免卡死状态（感谢@java 李道甫）\n 8.  【Server】节点分发状态更新到所有节点状态\n 9.  【Server】节点分发白名单独立页面配置\n 10. 【Server】项目控制台未运行能查看已经存在的最后的日志\n 11. 【Agent】删除阿里云oss构建，已经有在线构建功能代替\n 12. 【Server】修改证书名称和导出证书问题\n 13. 打包方式改为一个可执行的jar\n 14. 【Server】解决编辑用户页面json转换异常（感谢@JAVA jesion）\n 15. 分发项目新增清空发布防止新旧jar冲突\n 16. 【Server】优化节点列表页面加载速度[不显示运行的项目数]（感谢@java 李道甫）\n 17. 【Agent】调整启动，关闭进程命令执行方式[解决重启不能监控项目状态]（感谢@java 李道甫）\n 18. 【Agent】调整进程标识传入参数到JVM参数中，避免和部分框架冲突（感谢@java-杨侨）\n\n\n# 升级注意事项\n\n 1. 需要删除旧lib目录所有文件\n 2. 覆盖旧版管理命令文件\n\n----------------------------------------\n\n\n# 2.4.1\n\n\n# 🐣 新增功能\n\n 1. 【Agent】新增线程列表监控(感谢@其锋)\n 2. 【Agent】新增节点脚本模板(感谢@其锋)\n 3. 【Server】新增所有页面添加公共Html代码\n 4. 新增Tomcat管理\n 5. 【Agent】导入证书文件新增对cer、crt文件支持\n 6. 【Agent】导入项目包时指出多压缩包[tar|bz2|gz|zip|tar.bz2|tar.gz] (感谢@群友)\n 7. 【Agent】新增配置控制台日志文件编码格式（详情查看extConfig.yml）\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 【Server】节点首页，右上角管理路径错误(感谢@其锋)\n 2. 【Server】查看用户操作日志支持筛选用户\n 3. 【Server】页面数据路径权限判断修复(感谢@Will)\n 4. 【Agent】优化获取进程监听端口的，防止卡死\n 5. 文件的读写锁不使用 synchronized关键字提高效率\n 6. 优化数据id字段的输入限制，数字+字母+中划线+下划线（感谢@JAVA jesion）\n 7. 【Agent】连接JVM失败则跳过（感谢@JAVA jesion）\n 8. 【Server】编辑用户页面优化选择授权项目\n 9. 【Agent】项目Jvm参数和Args参数兼容回车符（感谢@牛旺）\n\n----------------------------------------\n\n\n# 2.4.0\n\n\n# 🐣 新增功能\n\n 1. 首页进程列表显示属于Jpom项目名称(感谢@〓下页)\n 2. 多节点统一管理（插件模式）\n 3. 证书解析支持cer 证书(感谢@JAVA jesion)\n 4. 新增记录用户操作日志[采用H2数据库]（感谢@〓下页）\n 5. 节点分发功能、合并管理项目(感谢@其锋)\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 解析端口信息兼容:::8084(感谢@Agoni 、)\n 2. 进程id解析端口、解析项目名称带缓存\n 3. 项目分组变更，项目列表及时刷新(感谢@〓下页)\n 4. 批量上传文件数量进度显示(感谢@群友)\n 5. linux udp端口信息解析失败(感谢@Ruby)\n 6. jar模式读取主jar包错误(感谢@其锋)",normalizedContent:"# 🚀 2.4.0 ~ 2.4.9 版本日志\n\n\n# 2.4.9 - 3.0.0(beta)\n\n> 当前版本为重构页面后的预览版本\n\n\n# 🐣 新增功能\n\n 1. 【server】新增监控用户操作记录\n 2. 【agent】新增配置是否禁用根据jmx获取项目状态（默认启用）\n 3. 项目文件管理支持在线修改文件（感谢@chen 贡献）\n 4. 3.0.0bata版本的页面重构[采用vue项目编写]（感谢@hotstrip）\n 5. 新增项目启动banner输出（感谢@hotstrip）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】 优化判断构建命令中的删除命令关键词\n 2.  【server】 优化删除构建历史、构建代码（避免不能删除情况）\n 3.  【agent】 调整项目的jvm 和 args参数支持url编码。避免xss后冲突\n 4.  优化获取项目当前运行路径问题\n 5.  【server】开始构建时输出代码目录\n 6.  【server】编辑构建类型为svn没有分组bug（感谢@java-落泪归枫）\n 7.  更新文档jpom 的jdk要为1.8.0_40+（感谢@java 企鹅）\n 8.  【server】数据库初始化时间前置,打印成功日志，未初始化结束数据库相关操作都忽略\n 9.  【server】修复报警恢复后，报警列表中的报警状态显示报警中的错误（感谢@南有乔木）\n 10. 更新hutool 版本至5.4.x （能避免系统缓存页面里面获取文件大小卡死）\n 11. 调整jpom启动输出日志,启动消息采用控制台输出不再打印error级别的启动消息\n\n> 🙏 特别感谢：@hotstrip 对jpom的前端页面采用vue重构编写\n> \n> 当前版本为3.x版本前的过渡版本\n\n----------------------------------------\n\n\n# 2.4.8\n\n\n# 🐣 新增功能\n\n 1. 【agent】读取进程新增 ps -ef | grep xxx 方式（感谢@java-落泪归枫）\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】构建历史中记录字段不全问题（感谢@￡天空之城～龙）\n 2.  【server】java-websocket 模块漏洞版本更新 来源 github ghsa-gw55-jm4h-x339\n 3.  【server】节点分发列表点击控制台、文件管理404\n 4.  【server】节点分发顺序重启休眠时间取构建名称最后的时间（测试构建:10 则睡眠时间为10秒）\n 5.  【agent】启动完成打印授权信息日志级别调至error\n 6.  commandutil.asyncexelocalcommand 方法格式化命令中的换行\n 7.  优化启动读取进程文件目录避免包含node_modules 目录卡死\n 8.  【server】修复构建命令中判断是否包含【rm、del、rd】bug （感谢@落泪归枫）\n 9.  【server】修改删除节点会修改掉非管理员的账号密码bug\n 10. 【server】 构建历史根据权限查询\n\n----------------------------------------\n\n\n# 2.4.7\n\n\n# 🐣 新增功能\n\n 1. 支持maven快速编辑节点项目 （配合jpom-maven-plugin使用）( 感谢@夜空中最亮的星)\n 2. 【agent】 新增jdk 管理，不同项目选择不同的jdk （gitee@iv8zz）\n 3. 【server】构建新增分组属性，方便快速选择\n 4. 【agent】 新增[javaextdirscp] 运行模式 (感谢@txpcmgr（geiger）)\n 5. 【server】 ssh 连接方式新增私钥证书连接\n 6. 【server】 ssh文件管理新增解压操作（感谢@txpcmgr（geiger）贡献）\n 7. 【agent】 项目新建副本集，方便单机快速运行多个副本\n 8. 【server】构建发布后操作支持副本集相关操作\n\n\n# 🐞 解决bug、优化功能\n\n 1.  完善使用nginx之类代理二级目录，指定端口路径跳转问题（感谢@😯😨😰😱 ）\n 2.  解决菜单路径不正确问题（gitee@i15o46）\n 3.  【agent】 windows中agent关闭，agent中所有项目跟随关闭（感谢@java gods）\n 4.  【server】构建命令包含删除命令误判断（感谢@sawyer）\n 5.  【server】构建历史支持配置单个构建最多保存多少个历史\n 6.  【server】解决节点分组筛选bug(感谢gitee@i17xeh)\n 7.  【server】角色权限动态数据，单个节点异常不影响所有节点配置（感谢@￡天空之城～龙）\n 8.  【server】关联节点分发项目支持修改发布后操作\n 9.  补充说明文档：详情 (感谢@txpcmgr（geiger）)\n 10. 更新部分插件依赖版本【hutool、fast-boot、fastjson】\n\n> ⚠️ 注意：如果在2.4.7以下项目运行方式中使用过【war】模式的由于【war】更名为【jarwar】 所有在升级后请重新修改运行方式后再运行对应项目\n\n----------------------------------------\n\n\n# 2.4.6\n\n\n# 🐣 新增功能\n\n 1. 【agent】 nginx管理支持自定义编译运行，管理方式变更\n 2. 【server】 监控通知新增企业微信（感谢@tinybao。）\n 3. 管理脚本支持自动识别环境变量和java路径（linux环境）\n 4. 项目类型新增file(快速管理纯静态文件)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】解决分发列表项目状态显示不正确（感谢@群友）\n 2. 【server】修复权限选择错乱和无法正确过滤问题【注意此版本的角色动态权限不兼容旧数据，需要重新授权动态数据权限】（感谢@java-outman）\n 3. 调整项目日志输出\n 4. 更新【commons-compress】依赖版本[漏洞升级]\n 5. 【server】构建弹窗条件构建名称（感谢@sawyer）\n 6. json文件读取异常提示（感谢@taller）\n 7. 【server】 优化ssh上传文件、删除文件\n 8. internalerror 异常捕捉\n 9. 【server】优化nginx 非80、443端口 二级路径代理重定向问题（感谢@😯😨😰😱 ）\n\n\n# 升级注意\n\n 1. 此版本更新控制台日志级别有调整，如果使用管理命令方式运行日志级别将不再打印info级别，如果需要打印info级别的请调整管理命令中的--spring.profiles.active=pro 为 --spring.profiles.active=dev\n 2. 使用nginx 二级路径代理请一定使用jpom 推荐nginx配置查看配置\n\n----------------------------------------\n\n\n# 2.4.5\n\n\n# 🐣 新增功能\n\n 1. 【server】节点列表支持筛选（感谢@￡天空之城～龙）\n 2. 【server】新增构建触发器（感谢@java 麦田英雄）\n 3. 【server】新增自动清理过量的构建历史记录和文件（感谢@sawyer、@jvmlz）\n 4. 【server】构建支持ssh发布（感谢@￡天空之城～龙）\n 5. 【server】节点新增分组属性，方便多节点快速筛选（感谢@￡天空之城～龙）\n 6. 新增windows快速升级\n 7. 【server】layui升级到最新版，文件上传支持进度条\n 8. 新增节点内存、cpu、硬盘使用情况采集报表（感谢@￡天空之城～龙）\n 9. 节点首页新增快速结束进程方式\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】节点分发需要节点数大于二（感谢@sawyer）\n 2.  修复未加载到tools.jar判断（感谢@java-磊）\n 3.  【server】控制台新增自动清屏开关（感谢@jvmlz）\n 4.  上传文件大小限制，配置化\n 5.  【server】构建文件copy忽略隐藏文件\n 6.  【server】不能清除错误进程缓存（感谢@java 李道甫）\n 7.  【agent】长时间运行jpom无法监控到项目运行状态（感谢@java 李道甫、@洋芋）\n 8.  【server】节点分发编辑支持修改分发后的操作\n 9.  【agent】脚本模板跟随系统编码\n 10. 【server】tomcat控制台删除日志文件错误（感谢@java-iwen）\n 11. 【agent】自动备份控制台日志表达式为none,不生成日志备份\n 12. 【server】角色授权编辑权限不能创建数据（感谢@lostshadow）\n 13. 【server】tomcat动态权限配置不正确（感谢@lostshadow）\n\n----------------------------------------\n\n\n# 2.4.4\n\n\n# 🐣 新增功能\n\n 1. 【agent】添加对springboot war包支持\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】新项目打开项目控制台页面报错（感谢@黄战虎）\n 2. 【server】修改邮箱不及时生效问题（感谢@wechat）\n 3. 【server】修复发布构建产物路径bug（感谢@sawyer）\n 4. 优化执行命令方式\n 5. 脚本模板在linux 不添加权限（采用sh 方式执行）\n 6. 【server】修复添加节点分发项目报错的数据异常（感谢@wechat）\n\n----------------------------------------\n\n\n# 2.4.3\n\n\n# 🐣 新增功能\n\n 1.  springboot 升级到2.1.x\n 2.  【server】velocity模板引擎升级为thymeleaf\n 3.  【server】构建支持svn类型仓库（感谢@群友 .）\n 4.  插件端自动注册到服务端（感谢@群友 .）\n 5.  新增在线修改配置并可及时重启\n 6.  新增webssh 管理功能\n 7.  【server】用户新增邮箱和钉钉群webhook 属性\n 8.  【server】监控报警通知改为联系人\n 9.  【server】引人netty插件（感谢@夜空中最亮的星）\n 10. 支持docker 容器运行（感谢@24k）\n 11. 【server】 新增清空构建代码（解决代码冲突）(感谢@xieyue200810)\n 12. 搭建插件化基础架构\n 13. 用户权限重构，使用角色支持更细粒的权限控制\n 14. 新增ssh快速部署插件端\n 15. 新增一键安装脚本详情\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【server】未登录重定向带入参数\n 2.  【server】页面登录方法调整支持自定义事件登录\n 3.  【server】删除节点、分发验证是否存在关联数据,分发释放分发关系\n 4.  项目白名单目录调整为属性\n 5.  【server】编辑用户回显节点选中错乱问题\n 6.  调整linux管理命令脚本防止在线升级产生tail 进程\n 7.  【agent】插件端的脚本模板路径切换到数据目录下\n 8.  【agent】windows异步执行命令调整不使用[inherit]（防止插件端进程阻塞）\n 9.  【server】分页查询会存在字段not found\n 10. 【server】构建命令不能包含删除命令（del,rd,rm）\n 11. 支持配置初始读取日志文件最后多少行【log.intireadline】(感谢@夜空中最亮的星)\n 12. 优化节点首页饼状图统计\n 13. 取消用户输入脚本模板id\n 14. 重定向支持自动识别 proto（解决http-> https iframe报错）\n 15. 构建执行命令存在错误只是提示，不取消执行（感谢@sawyer）\n 16. 构建打包目录没有文件名异常（感谢@sawyer）\n 17. 修改为专属包名【io.jpom】\n\n\n# 升级注意事项\n\n 1. 由于修改包名引起：如果在旧版本中使用过在线升级，本次升级需要手动上传jar到到服务器中执行命令升级，并且删除旧包并且覆盖管理命令文件\n\n----------------------------------------\n\n\n# 2.4.2\n\n\n# 🐣 新增功能\n\n 1.  新增实时查看tomcat日志\n 2.  【server】分发包支持更多压缩格式\n 3.  页面菜单采用json文件配置(支持二级菜单)\n 4.  【server】分发包支持更多类型的压缩格式\n 5.  【server】节点支持配置请求超时时间\n 6.  支持配置是否记录请求、响应日志【consolelog.reqxss、consolelog.reqresponse】\n 7.  新增日志记录最大记录条数【默认100000】\n 8.  【server】layui 升级到2.5.4\n 9.  【server】新增项目监控功能\n 10. 【server】新增在线构建项目功能\n 11. 【server】新增查看项目实际执行的命令行\n 12. 【server】新增分发日志\n 13. 新增清空文件缓存、临时数据缓存\n 14. 在线查看、下载jpom运行日志(windows不能实时查看)\n 15. 新增linux在线升级\n\n\n# 🐞 解决bug、优化功能\n\n 1.  【agent】logback页面最后修改时间不能正确显示（感谢@java jesion）\n 2.  【agent】nginx修改内容截断，不正确情况（感谢@java jesion）\n 3.  【agent】nginx、脚本模板保存内容xss标签还原\n 4.  【server】节点分发页面的交互方式\n 5.  【server】页面菜单分类整理\n 6.  【agent】修复springboot相对文件夹下无法读取配置问题\n 7.  【agent】缓存异常的jvm进程，避免卡死状态（感谢@java 李道甫）\n 8.  【server】节点分发状态更新到所有节点状态\n 9.  【server】节点分发白名单独立页面配置\n 10. 【server】项目控制台未运行能查看已经存在的最后的日志\n 11. 【agent】删除阿里云oss构建，已经有在线构建功能代替\n 12. 【server】修改证书名称和导出证书问题\n 13. 打包方式改为一个可执行的jar\n 14. 【server】解决编辑用户页面json转换异常（感谢@java jesion）\n 15. 分发项目新增清空发布防止新旧jar冲突\n 16. 【server】优化节点列表页面加载速度[不显示运行的项目数]（感谢@java 李道甫）\n 17. 【agent】调整启动，关闭进程命令执行方式[解决重启不能监控项目状态]（感谢@java 李道甫）\n 18. 【agent】调整进程标识传入参数到jvm参数中，避免和部分框架冲突（感谢@java-杨侨）\n\n\n# 升级注意事项\n\n 1. 需要删除旧lib目录所有文件\n 2. 覆盖旧版管理命令文件\n\n----------------------------------------\n\n\n# 2.4.1\n\n\n# 🐣 新增功能\n\n 1. 【agent】新增线程列表监控(感谢@其锋)\n 2. 【agent】新增节点脚本模板(感谢@其锋)\n 3. 【server】新增所有页面添加公共html代码\n 4. 新增tomcat管理\n 5. 【agent】导入证书文件新增对cer、crt文件支持\n 6. 【agent】导入项目包时指出多压缩包[tar|bz2|gz|zip|tar.bz2|tar.gz] (感谢@群友)\n 7. 【agent】新增配置控制台日志文件编码格式（详情查看extconfig.yml）\n\n\n# 🐞 解决bug、优化功能\n\n 1. 【server】节点首页，右上角管理路径错误(感谢@其锋)\n 2. 【server】查看用户操作日志支持筛选用户\n 3. 【server】页面数据路径权限判断修复(感谢@will)\n 4. 【agent】优化获取进程监听端口的，防止卡死\n 5. 文件的读写锁不使用 synchronized关键字提高效率\n 6. 优化数据id字段的输入限制，数字+字母+中划线+下划线（感谢@java jesion）\n 7. 【agent】连接jvm失败则跳过（感谢@java jesion）\n 8. 【server】编辑用户页面优化选择授权项目\n 9. 【agent】项目jvm参数和args参数兼容回车符（感谢@牛旺）\n\n----------------------------------------\n\n\n# 2.4.0\n\n\n# 🐣 新增功能\n\n 1. 首页进程列表显示属于jpom项目名称(感谢@〓下页)\n 2. 多节点统一管理（插件模式）\n 3. 证书解析支持cer 证书(感谢@java jesion)\n 4. 新增记录用户操作日志[采用h2数据库]（感谢@〓下页）\n 5. 节点分发功能、合并管理项目(感谢@其锋)\n\n\n# 🐞 解决bug、优化功能\n\n 1. 解析端口信息兼容:::8084(感谢@agoni 、)\n 2. 进程id解析端口、解析项目名称带缓存\n 3. 项目分组变更，项目列表及时刷新(感谢@〓下页)\n 4. 批量上传文件数量进度显示(感谢@群友)\n 5. linux udp端口信息解析失败(感谢@ruby)\n 6. jar模式读取主jar包错误(感谢@其锋)",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.3.1 ~ 2.3.2",frontmatter:{title:"2.3.1 ~ 2.3.2",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.3.x/",tags:[null],categories:["docs","changelog"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/01.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9999.%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/1198.2.3.x.html",relativePath:"日志&下载/01.更新日志/9999.历史版本/1198.2.3.x.md",key:"v-6b88cd8a",path:"/pages/changelog/2.3.x/",headers:[{level:2,title:"2.3.2",slug:"_2-3-2",normalizedTitle:"2.3.2",charIndex:13},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能",normalizedTitle:"🐣 新增功能",charIndex:38},{level:3,title:"🐞 解决BUG、优化功能",slug:"🐞-解决bug、优化功能",normalizedTitle:"🐞 解决bug、优化功能",charIndex:349},{level:2,title:"2.3.1",slug:"_2-3-1",normalizedTitle:"2.3.1",charIndex:5},{level:3,title:"🐣 新增功能",slug:"🐣-新增功能-2",normalizedTitle:"🐣 新增功能",charIndex:38},{level:3,title:"🐞 解决BUG",slug:"🐞-解决bug",normalizedTitle:"🐞 解决bug",charIndex:349},{level:3,title:"⚠️ 升级注意事项",slug:"⚠️-升级注意事项",normalizedTitle:"⚠️ 升级注意事项",charIndex:1095}],headersStr:"2.3.2 🐣 新增功能 🐞 解决BUG、优化功能 2.3.1 🐣 新增功能 🐞 解决BUG ⚠️ 升级注意事项",content:"# 🚀 2.3.1 ~ 2.3.2 版本日志\n\n\n# 2.3.2\n\n\n# 🐣 新增功能\n\n 1.  控制台日志支持配置保留天数\n 2.  项目列表状态跟随控制台刷新\n 3.  项目配置页面优化交互流程\n 4.  项目列表显示正在运行的项目的端口号(感谢@洋芋)\n 5.  新版的Windows管理命令(感谢@洋芋)\n 6.  支持类似于Nginx二级代理配置(感谢@№譜樋)\n 7.  记录启动、重启、停止项目的操作人\n 8.  Jpom 数据路径默认为程序运行的路径(感谢@〓下页)\n 9.  首页进程监听表格显示端口号(感谢@洋芋)\n 10. 保存时检查Oss信息是否正确\n 11. Jpom管理命令新增判断JAVA_HOME环境变量\n 12. 修改用户信息，在线用户需要重新登录\n\n\n# 🐞 解决BUG、优化功能\n\n 1. 修改WebHooks 不生效\n 2. 初始化系统白名单初始化失败(感谢@洋芋)\n 3. 指定Cookie名称防止名称相同被踢下线(感谢@洋芋)\n 4. 优化未加载到tools.jar的提示(感谢@№譜樋)\n 5. 构建按钮移动到文件管理页面中\n 6. 优化nginx列表显示数据、取消nginx快捷配置\n 7. 证书管理页面交互优化\n 8. 取消安全模式功能（有更完善的权限代替）\n 9. 管理员不能修改自己的信息\n\n----------------------------------------\n\n\n# 2.3.1\n\n\n# 🐣 新增功能\n\n 1. 添加创建项目判断项目id是否被占用\n 2. 项目列表中添加悬停突出显示效果\n 3. 生产环境中检查Jpom 运行标识和项目id是否冲突\n 4. windows 管理命令支持停止Jpom\n 5. 防止暴力登录新增限制ip登录失败次数\n 6. 用户前台输入密码传输加密（感谢@JAVA jesion）\n 7. 首页页面自动刷新按钮状态记忆功能（感谢@Mark）\n 8. Jpom启动成功会自动在数据目录中创建进程id信息文件如pid.27936\n 9. 证书管理支持导出、查看代码模板功能\n\n\n# 🐞 解决BUG\n\n 1. 解决配置JVM、ARGS时，不能获取到程序运行信息bug(感谢@Agoni 、)\n 2. 减少登录图形验证码干扰线(感谢@Mark)\n 3. 项目编辑页面JVM、ARGS调整为多行文本(感谢@JAVA jesion)\n 4. jar模式MainClass非必填\n 5. 优化JDK32位和64位冲突时自动跳过(感谢@13145597)\n 6. 用户授权项目权限不足问题\n\n\n# ⚠️ 升级注意事项\n\n 1. 由2.2及以下升级到 2.3.x 需要手动删除Jpom数据目录中的data/user.json 文件、所有用户账户信息将失效需要重新添加\n\n----------------------------------------",normalizedContent:"# 🚀 2.3.1 ~ 2.3.2 版本日志\n\n\n# 2.3.2\n\n\n# 🐣 新增功能\n\n 1.  控制台日志支持配置保留天数\n 2.  项目列表状态跟随控制台刷新\n 3.  项目配置页面优化交互流程\n 4.  项目列表显示正在运行的项目的端口号(感谢@洋芋)\n 5.  新版的windows管理命令(感谢@洋芋)\n 6.  支持类似于nginx二级代理配置(感谢@№譜樋)\n 7.  记录启动、重启、停止项目的操作人\n 8.  jpom 数据路径默认为程序运行的路径(感谢@〓下页)\n 9.  首页进程监听表格显示端口号(感谢@洋芋)\n 10. 保存时检查oss信息是否正确\n 11. jpom管理命令新增判断java_home环境变量\n 12. 修改用户信息，在线用户需要重新登录\n\n\n# 🐞 解决bug、优化功能\n\n 1. 修改webhooks 不生效\n 2. 初始化系统白名单初始化失败(感谢@洋芋)\n 3. 指定cookie名称防止名称相同被踢下线(感谢@洋芋)\n 4. 优化未加载到tools.jar的提示(感谢@№譜樋)\n 5. 构建按钮移动到文件管理页面中\n 6. 优化nginx列表显示数据、取消nginx快捷配置\n 7. 证书管理页面交互优化\n 8. 取消安全模式功能（有更完善的权限代替）\n 9. 管理员不能修改自己的信息\n\n----------------------------------------\n\n\n# 2.3.1\n\n\n# 🐣 新增功能\n\n 1. 添加创建项目判断项目id是否被占用\n 2. 项目列表中添加悬停突出显示效果\n 3. 生产环境中检查jpom 运行标识和项目id是否冲突\n 4. windows 管理命令支持停止jpom\n 5. 防止暴力登录新增限制ip登录失败次数\n 6. 用户前台输入密码传输加密（感谢@java jesion）\n 7. 首页页面自动刷新按钮状态记忆功能（感谢@mark）\n 8. jpom启动成功会自动在数据目录中创建进程id信息文件如pid.27936\n 9. 证书管理支持导出、查看代码模板功能\n\n\n# 🐞 解决bug\n\n 1. 解决配置jvm、args时，不能获取到程序运行信息bug(感谢@agoni 、)\n 2. 减少登录图形验证码干扰线(感谢@mark)\n 3. 项目编辑页面jvm、args调整为多行文本(感谢@java jesion)\n 4. jar模式mainclass非必填\n 5. 优化jdk32位和64位冲突时自动跳过(感谢@13145597)\n 6. 用户授权项目权限不足问题\n\n\n# ⚠️ 升级注意事项\n\n 1. 由2.2及以下升级到 2.3.x 需要手动删除jpom数据目录中的data/user.json 文件、所有用户账户信息将失效需要重新添加\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2023/12/29, 04:45:37",lastUpdatedTimestamp:1703825137e3},{title:"2.11.x release",frontmatter:{title:"2.11.x release",date:"2022-08-01T17:28:25.000Z",permalink:"/pages/all-downloads/",categories:["docs","更新日志","下载链接","release"],tags:["downloads","release","2.11.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/02.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/01.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5.html",relativePath:"日志&下载/02.下载链接/01.下载链接.md",key:"v-56ffda0a",path:"/pages/all-downloads/",headers:[{level:2,title:"2.11.12-release",slug:"_2-11-12-release",normalizedTitle:"2.11.12-release",charIndex:91},{level:2,title:"2.11.11-release",slug:"_2-11-11-release",normalizedTitle:"2.11.11-release",charIndex:338},{level:2,title:"2.11.10-release",slug:"_2-11-10-release",normalizedTitle:"2.11.10-release",charIndex:585},{level:2,title:"2.11.9-release",slug:"_2-11-9-release",normalizedTitle:"2.11.9-release",charIndex:832},{level:2,title:"2.11.8-release",slug:"_2-11-8-release",normalizedTitle:"2.11.8-release",charIndex:1073},{level:2,title:"2.11.7-release",slug:"_2-11-7-release",normalizedTitle:"2.11.7-release",charIndex:1314},{level:2,title:"2.11.6-release",slug:"_2-11-6-release",normalizedTitle:"2.11.6-release",charIndex:1555},{level:2,title:"2.11.5-release",slug:"_2-11-5-release",normalizedTitle:"2.11.5-release",charIndex:1796},{level:2,title:"2.11.4-release",slug:"_2-11-4-release",normalizedTitle:"2.11.4-release",charIndex:2037},{level:2,title:"2.11.3-release",slug:"_2-11-3-release",normalizedTitle:"2.11.3-release",charIndex:2278},{level:2,title:"2.11.2-release",slug:"_2-11-2-release",normalizedTitle:"2.11.2-release",charIndex:2519},{level:2,title:"2.11.1-release",slug:"_2-11-1-release",normalizedTitle:"2.11.1-release",charIndex:2760},{level:2,title:"2.11.0-release",slug:"_2-11-0-release",normalizedTitle:"2.11.0-release",charIndex:3001}],headersStr:"2.11.12-release 2.11.11-release 2.11.10-release 2.11.9-release 2.11.8-release 2.11.7-release 2.11.6-release 2.11.5-release 2.11.4-release 2.11.3-release 2.11.2-release 2.11.1-release 2.11.0-release",content:"下载授权中心\n\n综合考虑到不同网络情况下载网速不稳定，现在推出国内 CDN 下载授权中：https://service.jpom.top/\n\n请大家友好使用下载服务，谢谢！\n\n\n# 2.11.12-release\n\n * jpom-2.11.12.zip\n * server-2.11.12-release.tar.gz | sha1sum\n * server-2.11.12-release.zip | sha1sum\n * agent-2.11.12-release.tar.gz | sha1sum\n * agent-2.11.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11-release\n\n * jpom-2.11.11.zip\n * server-2.11.11-release.tar.gz | sha1sum\n * server-2.11.11-release.zip | sha1sum\n * agent-2.11.11-release.tar.gz | sha1sum\n * agent-2.11.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.10-release\n\n * jpom-2.11.10.zip\n * server-2.11.10-release.tar.gz | sha1sum\n * server-2.11.10-release.zip | sha1sum\n * agent-2.11.10-release.tar.gz | sha1sum\n * agent-2.11.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9-release\n\n * jpom-2.11.9.zip\n * server-2.11.9-release.tar.gz | sha1sum\n * server-2.11.9-release.zip | sha1sum\n * agent-2.11.9-release.tar.gz | sha1sum\n * agent-2.11.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8-release\n\n * jpom-2.11.8.zip\n * server-2.11.8-release.tar.gz | sha1sum\n * server-2.11.8-release.zip | sha1sum\n * agent-2.11.8-release.tar.gz | sha1sum\n * agent-2.11.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.7-release\n\n * jpom-2.11.7.zip\n * server-2.11.7-release.tar.gz | sha1sum\n * server-2.11.7-release.zip | sha1sum\n * agent-2.11.7-release.tar.gz | sha1sum\n * agent-2.11.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6-release\n\n * jpom-2.11.6.zip\n * server-2.11.6-release.tar.gz | sha1sum\n * server-2.11.6-release.zip | sha1sum\n * agent-2.11.6-release.tar.gz | sha1sum\n * agent-2.11.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5-release\n\n * jpom-2.11.5.zip\n * server-2.11.5-release.tar.gz | sha1sum\n * server-2.11.5-release.zip | sha1sum\n * agent-2.11.5-release.tar.gz | sha1sum\n * agent-2.11.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4-release\n\n * jpom-2.11.4.zip\n * server-2.11.4-release.tar.gz | sha1sum\n * server-2.11.4-release.zip | sha1sum\n * agent-2.11.4-release.tar.gz | sha1sum\n * agent-2.11.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3-release\n\n * jpom-2.11.3.zip\n * server-2.11.3-release.tar.gz | sha1sum\n * server-2.11.3-release.zip | sha1sum\n * agent-2.11.3-release.tar.gz | sha1sum\n * agent-2.11.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2-release\n\n * jpom-2.11.2.zip\n * server-2.11.2-release.tar.gz | sha1sum\n * server-2.11.2-release.zip | sha1sum\n * agent-2.11.2-release.tar.gz | sha1sum\n * agent-2.11.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1-release\n\n * jpom-2.11.1.zip\n * server-2.11.1-release.tar.gz | sha1sum\n * server-2.11.1-release.zip | sha1sum\n * agent-2.11.1-release.tar.gz | sha1sum\n * agent-2.11.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0-release\n\n * jpom-2.11.0.zip\n * server-2.11.0-release.tar.gz | sha1sum\n * server-2.11.0-release.zip | sha1sum\n * agent-2.11.0-release.tar.gz | sha1sum\n * agent-2.11.0-release.zip | sha1sum\n\n----------------------------------------",normalizedContent:"下载授权中心\n\n综合考虑到不同网络情况下载网速不稳定，现在推出国内 cdn 下载授权中：https://service.jpom.top/\n\n请大家友好使用下载服务，谢谢！\n\n\n# 2.11.12-release\n\n * jpom-2.11.12.zip\n * server-2.11.12-release.tar.gz | sha1sum\n * server-2.11.12-release.zip | sha1sum\n * agent-2.11.12-release.tar.gz | sha1sum\n * agent-2.11.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11-release\n\n * jpom-2.11.11.zip\n * server-2.11.11-release.tar.gz | sha1sum\n * server-2.11.11-release.zip | sha1sum\n * agent-2.11.11-release.tar.gz | sha1sum\n * agent-2.11.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.10-release\n\n * jpom-2.11.10.zip\n * server-2.11.10-release.tar.gz | sha1sum\n * server-2.11.10-release.zip | sha1sum\n * agent-2.11.10-release.tar.gz | sha1sum\n * agent-2.11.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9-release\n\n * jpom-2.11.9.zip\n * server-2.11.9-release.tar.gz | sha1sum\n * server-2.11.9-release.zip | sha1sum\n * agent-2.11.9-release.tar.gz | sha1sum\n * agent-2.11.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8-release\n\n * jpom-2.11.8.zip\n * server-2.11.8-release.tar.gz | sha1sum\n * server-2.11.8-release.zip | sha1sum\n * agent-2.11.8-release.tar.gz | sha1sum\n * agent-2.11.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.7-release\n\n * jpom-2.11.7.zip\n * server-2.11.7-release.tar.gz | sha1sum\n * server-2.11.7-release.zip | sha1sum\n * agent-2.11.7-release.tar.gz | sha1sum\n * agent-2.11.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6-release\n\n * jpom-2.11.6.zip\n * server-2.11.6-release.tar.gz | sha1sum\n * server-2.11.6-release.zip | sha1sum\n * agent-2.11.6-release.tar.gz | sha1sum\n * agent-2.11.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5-release\n\n * jpom-2.11.5.zip\n * server-2.11.5-release.tar.gz | sha1sum\n * server-2.11.5-release.zip | sha1sum\n * agent-2.11.5-release.tar.gz | sha1sum\n * agent-2.11.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4-release\n\n * jpom-2.11.4.zip\n * server-2.11.4-release.tar.gz | sha1sum\n * server-2.11.4-release.zip | sha1sum\n * agent-2.11.4-release.tar.gz | sha1sum\n * agent-2.11.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3-release\n\n * jpom-2.11.3.zip\n * server-2.11.3-release.tar.gz | sha1sum\n * server-2.11.3-release.zip | sha1sum\n * agent-2.11.3-release.tar.gz | sha1sum\n * agent-2.11.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2-release\n\n * jpom-2.11.2.zip\n * server-2.11.2-release.tar.gz | sha1sum\n * server-2.11.2-release.zip | sha1sum\n * agent-2.11.2-release.tar.gz | sha1sum\n * agent-2.11.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1-release\n\n * jpom-2.11.1.zip\n * server-2.11.1-release.tar.gz | sha1sum\n * server-2.11.1-release.zip | sha1sum\n * agent-2.11.1-release.tar.gz | sha1sum\n * agent-2.11.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0-release\n\n * jpom-2.11.0.zip\n * server-2.11.0-release.tar.gz | sha1sum\n * server-2.11.0-release.zip | sha1sum\n * agent-2.11.0-release.tar.gz | sha1sum\n * agent-2.11.0-release.zip | sha1sum\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2025/05/06, 06:14:09",lastUpdatedTimestamp:1746512049e3},{title:"2.8.x 下载地址",frontmatter:{title:"2.8.x 下载地址",date:"2022-11-08T13:24:51.000Z",permalink:"/pages/downloads/downloads-2.8.x/",categories:["docs","更新日志","下载链接"],tags:["2.8.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/02.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/1000.2.8.x.html",relativePath:"日志&下载/02.下载链接/1000.2.8.x.md",key:"v-9024d35c",path:"/pages/downloads/downloads-2.8.x/",headers:[{level:2,title:"2.8.25",slug:"_2-8-25",normalizedTitle:"2.8.25",charIndex:2},{level:2,title:"2.8.24",slug:"_2-8-24",normalizedTitle:"2.8.24",charIndex:235},{level:2,title:"2.8.23",slug:"_2-8-23",normalizedTitle:"2.8.23",charIndex:468},{level:2,title:"2.8.22",slug:"_2-8-22",normalizedTitle:"2.8.22",charIndex:701},{level:2,title:"2.8.21",slug:"_2-8-21",normalizedTitle:"2.8.21",charIndex:934},{level:2,title:"2.8.20",slug:"_2-8-20",normalizedTitle:"2.8.20",charIndex:1167},{level:2,title:"2.8.19",slug:"_2-8-19",normalizedTitle:"2.8.19",charIndex:1400},{level:2,title:"2.8.18",slug:"_2-8-18",normalizedTitle:"2.8.18",charIndex:1633},{level:2,title:"2.8.17",slug:"_2-8-17",normalizedTitle:"2.8.17",charIndex:1866},{level:2,title:"2.8.16",slug:"_2-8-16",normalizedTitle:"2.8.16",charIndex:2099}],headersStr:"2.8.25 2.8.24 2.8.23 2.8.22 2.8.21 2.8.20 2.8.19 2.8.18 2.8.17 2.8.16",content:"# 2.8.25\n\n * jpom-2.8.25.zip\n * server-2.8.25-release.tar.gz | sha1sum\n * server-2.8.25-release.zip | sha1sum\n * agent-2.8.25-release.tar.gz | sha1sum\n * agent-2.8.25-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.24\n\n * jpom-2.8.24.zip\n * server-2.8.24-release.tar.gz | sha1sum\n * server-2.8.24-release.zip | sha1sum\n * agent-2.8.24-release.tar.gz | sha1sum\n * agent-2.8.24-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.23\n\n * jpom-2.8.23.zip\n * server-2.8.23-release.tar.gz | sha1sum\n * server-2.8.23-release.zip | sha1sum\n * agent-2.8.23-release.tar.gz | sha1sum\n * agent-2.8.23-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.22\n\n * jpom-2.8.22.zip\n * server-2.8.22-release.tar.gz | sha1sum\n * server-2.8.22-release.zip | sha1sum\n * agent-2.8.22-release.tar.gz | sha1sum\n * agent-2.8.22-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.21\n\n * jpom-2.8.21.zip\n * server-2.8.21-release.tar.gz | sha1sum\n * server-2.8.21-release.zip | sha1sum\n * agent-2.8.21-release.tar.gz | sha1sum\n * agent-2.8.21-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.20\n\n * jpom-2.8.20.zip\n * server-2.8.20-release.tar.gz | sha1sum\n * server-2.8.20-release.zip | sha1sum\n * agent-2.8.20-release.tar.gz | sha1sum\n * agent-2.8.20-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.19\n\n * jpom-2.8.19.zip\n * server-2.8.19-release.tar.gz | sha1sum\n * server-2.8.19-release.zip | sha1sum\n * agent-2.8.19-release.tar.gz | sha1sum\n * agent-2.8.19-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.18\n\n * jpom-2.8.18.zip\n * server-2.8.18-release.tar.gz | sha1sum\n * server-2.8.18-release.zip | sha1sum\n * agent-2.8.18-release.tar.gz | sha1sum\n * agent-2.8.18-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.17\n\n * jpom-2.8.17.zip\n * server-2.8.17-release.tar.gz | sha1sum\n * server-2.8.17-release.zip | sha1sum\n * agent-2.8.17-release.tar.gz | sha1sum\n * agent-2.8.17-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.16\n\n * jpom-2.8.16.zip\n * server-2.8.16-release.tar.gz | sha1sum\n * server-2.8.16-release.zip | sha1sum\n * agent-2.8.16-release.tar.gz | sha1sum\n * agent-2.8.16-release.zip | sha1sum\n\n----------------------------------------",normalizedContent:"# 2.8.25\n\n * jpom-2.8.25.zip\n * server-2.8.25-release.tar.gz | sha1sum\n * server-2.8.25-release.zip | sha1sum\n * agent-2.8.25-release.tar.gz | sha1sum\n * agent-2.8.25-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.24\n\n * jpom-2.8.24.zip\n * server-2.8.24-release.tar.gz | sha1sum\n * server-2.8.24-release.zip | sha1sum\n * agent-2.8.24-release.tar.gz | sha1sum\n * agent-2.8.24-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.23\n\n * jpom-2.8.23.zip\n * server-2.8.23-release.tar.gz | sha1sum\n * server-2.8.23-release.zip | sha1sum\n * agent-2.8.23-release.tar.gz | sha1sum\n * agent-2.8.23-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.22\n\n * jpom-2.8.22.zip\n * server-2.8.22-release.tar.gz | sha1sum\n * server-2.8.22-release.zip | sha1sum\n * agent-2.8.22-release.tar.gz | sha1sum\n * agent-2.8.22-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.21\n\n * jpom-2.8.21.zip\n * server-2.8.21-release.tar.gz | sha1sum\n * server-2.8.21-release.zip | sha1sum\n * agent-2.8.21-release.tar.gz | sha1sum\n * agent-2.8.21-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.20\n\n * jpom-2.8.20.zip\n * server-2.8.20-release.tar.gz | sha1sum\n * server-2.8.20-release.zip | sha1sum\n * agent-2.8.20-release.tar.gz | sha1sum\n * agent-2.8.20-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.19\n\n * jpom-2.8.19.zip\n * server-2.8.19-release.tar.gz | sha1sum\n * server-2.8.19-release.zip | sha1sum\n * agent-2.8.19-release.tar.gz | sha1sum\n * agent-2.8.19-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.18\n\n * jpom-2.8.18.zip\n * server-2.8.18-release.tar.gz | sha1sum\n * server-2.8.18-release.zip | sha1sum\n * agent-2.8.18-release.tar.gz | sha1sum\n * agent-2.8.18-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.17\n\n * jpom-2.8.17.zip\n * server-2.8.17-release.tar.gz | sha1sum\n * server-2.8.17-release.zip | sha1sum\n * agent-2.8.17-release.tar.gz | sha1sum\n * agent-2.8.17-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.8.16\n\n * jpom-2.8.16.zip\n * server-2.8.16-release.tar.gz | sha1sum\n * server-2.8.16-release.zip | sha1sum\n * agent-2.8.16-release.tar.gz | sha1sum\n * agent-2.8.16-release.zip | sha1sum\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2024/07/02, 05:53:05",lastUpdatedTimestamp:1719899585e3},{title:"2.11.x beta",frontmatter:{title:"2.11.x beta",date:"2022-08-01T17:28:25.000Z",permalink:"/pages/all-beta-downloads/",categories:["docs","更新日志","beta","下载链接"],tags:["beta-downloads","downloads","2.11.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/02.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/02.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5beta.html",relativePath:"日志&下载/02.下载链接/02.下载链接beta.md",key:"v-bd003cac",path:"/pages/all-beta-downloads/",headers:[{level:2,title:"2.11.11.4-beta",slug:"_2-11-11-4-beta",normalizedTitle:"2.11.11.4-beta",charIndex:91},{level:2,title:"2.11.11.3-beta",slug:"_2-11-11-3-beta",normalizedTitle:"2.11.11.3-beta",charIndex:347},{level:2,title:"2.11.11.2-beta",slug:"_2-11-11-2-beta",normalizedTitle:"2.11.11.2-beta",charIndex:603},{level:2,title:"2.11.11.1-beta",slug:"_2-11-11-1-beta",normalizedTitle:"2.11.11.1-beta",charIndex:859},{level:2,title:"2.11.10.2-beta",slug:"_2-11-10-2-beta",normalizedTitle:"2.11.10.2-beta",charIndex:1115},{level:2,title:"2.11.10.1-beta",slug:"_2-11-10-1-beta",normalizedTitle:"2.11.10.1-beta",charIndex:1371},{level:2,title:"2.11.9.3-beta",slug:"_2-11-9-3-beta",normalizedTitle:"2.11.9.3-beta",charIndex:1627},{level:2,title:"2.11.9.2-beta",slug:"_2-11-9-2-beta",normalizedTitle:"2.11.9.2-beta",charIndex:1877},{level:2,title:"2.11.9.1-beta",slug:"_2-11-9-1-beta",normalizedTitle:"2.11.9.1-beta",charIndex:2127},{level:2,title:"2.11.8.5-beta",slug:"_2-11-8-5-beta",normalizedTitle:"2.11.8.5-beta",charIndex:2377},{level:2,title:"2.11.8.4-beta",slug:"_2-11-8-4-beta",normalizedTitle:"2.11.8.4-beta",charIndex:2627},{level:2,title:"2.11.8.3-beta",slug:"_2-11-8-3-beta",normalizedTitle:"2.11.8.3-beta",charIndex:2877},{level:2,title:"2.11.8.2-beta",slug:"_2-11-8-2-beta",normalizedTitle:"2.11.8.2-beta",charIndex:3127},{level:2,title:"2.11.8.1-beta",slug:"_2-11-8-1-beta",normalizedTitle:"2.11.8.1-beta",charIndex:3377},{level:2,title:"2.11.7.1-beta",slug:"_2-11-7-1-beta",normalizedTitle:"2.11.7.1-beta",charIndex:3627},{level:2,title:"2.11.6.6-beta",slug:"_2-11-6-6-beta",normalizedTitle:"2.11.6.6-beta",charIndex:3877},{level:2,title:"2.11.6.5-beta",slug:"_2-11-6-5-beta",normalizedTitle:"2.11.6.5-beta",charIndex:4127},{level:2,title:"2.11.6.4-beta",slug:"_2-11-6-4-beta",normalizedTitle:"2.11.6.4-beta",charIndex:4377},{level:2,title:"2.11.6.3-beta",slug:"_2-11-6-3-beta",normalizedTitle:"2.11.6.3-beta",charIndex:4627},{level:2,title:"2.11.6.2-beta",slug:"_2-11-6-2-beta",normalizedTitle:"2.11.6.2-beta",charIndex:4877},{level:2,title:"2.11.6.1-beta",slug:"_2-11-6-1-beta",normalizedTitle:"2.11.6.1-beta",charIndex:5127},{level:2,title:"2.11.5.2-beta",slug:"_2-11-5-2-beta",normalizedTitle:"2.11.5.2-beta",charIndex:5377},{level:2,title:"2.11.5.1-beta",slug:"_2-11-5-1-beta",normalizedTitle:"2.11.5.1-beta",charIndex:5627},{level:2,title:"2.11.5.0-beta",slug:"_2-11-5-0-beta",normalizedTitle:"2.11.5.0-beta",charIndex:5877},{level:2,title:"2.11.4.2-beta",slug:"_2-11-4-2-beta",normalizedTitle:"2.11.4.2-beta",charIndex:6127},{level:2,title:"2.11.4.1-beta",slug:"_2-11-4-1-beta",normalizedTitle:"2.11.4.1-beta",charIndex:6377},{level:2,title:"2.11.4.0-beta",slug:"_2-11-4-0-beta",normalizedTitle:"2.11.4.0-beta",charIndex:6627},{level:2,title:"2.11.3.2-beta",slug:"_2-11-3-2-beta",normalizedTitle:"2.11.3.2-beta",charIndex:6877},{level:2,title:"2.11.3.1-beta",slug:"_2-11-3-1-beta",normalizedTitle:"2.11.3.1-beta",charIndex:7127},{level:2,title:"2.11.3.0-beta",slug:"_2-11-3-0-beta",normalizedTitle:"2.11.3.0-beta",charIndex:7377},{level:2,title:"2.11.2.3-beta",slug:"_2-11-2-3-beta",normalizedTitle:"2.11.2.3-beta",charIndex:7627},{level:2,title:"2.11.2.2-beta",slug:"_2-11-2-2-beta",normalizedTitle:"2.11.2.2-beta",charIndex:7877},{level:2,title:"2.11.2.1-beta",slug:"_2-11-2-1-beta",normalizedTitle:"2.11.2.1-beta",charIndex:8127},{level:2,title:"2.11.2.0-beta",slug:"_2-11-2-0-beta",normalizedTitle:"2.11.2.0-beta",charIndex:8377},{level:2,title:"2.11.1.5-beta",slug:"_2-11-1-5-beta",normalizedTitle:"2.11.1.5-beta",charIndex:8627},{level:2,title:"2.11.1.4-beta",slug:"_2-11-1-4-beta",normalizedTitle:"2.11.1.4-beta",charIndex:8877},{level:2,title:"2.11.1.3-beta",slug:"_2-11-1-3-beta",normalizedTitle:"2.11.1.3-beta",charIndex:9127},{level:2,title:"2.11.1.2-beta",slug:"_2-11-1-2-beta",normalizedTitle:"2.11.1.2-beta",charIndex:9377},{level:2,title:"2.11.1.1-beta",slug:"_2-11-1-1-beta",normalizedTitle:"2.11.1.1-beta",charIndex:9627},{level:2,title:"2.11.1.0-beta",slug:"_2-11-1-0-beta",normalizedTitle:"2.11.1.0-beta",charIndex:9877},{level:2,title:"2.11.0.13-beta",slug:"_2-11-0-13-beta",normalizedTitle:"2.11.0.13-beta",charIndex:10127},{level:2,title:"2.11.0.12-beta",slug:"_2-11-0-12-beta",normalizedTitle:"2.11.0.12-beta",charIndex:10383},{level:2,title:"2.11.0.11-beta",slug:"_2-11-0-11-beta",normalizedTitle:"2.11.0.11-beta",charIndex:10639},{level:2,title:"2.11.0.10-beta",slug:"_2-11-0-10-beta",normalizedTitle:"2.11.0.10-beta",charIndex:10895},{level:2,title:"2.11.0.9-beta",slug:"_2-11-0-9-beta",normalizedTitle:"2.11.0.9-beta",charIndex:11151},{level:2,title:"2.11.0.8-beta",slug:"_2-11-0-8-beta",normalizedTitle:"2.11.0.8-beta",charIndex:11401},{level:2,title:"2.11.0.7-beta",slug:"_2-11-0-7-beta",normalizedTitle:"2.11.0.7-beta",charIndex:11651},{level:2,title:"2.11.0.6-beta",slug:"_2-11-0-6-beta",normalizedTitle:"2.11.0.6-beta",charIndex:11901},{level:2,title:"2.11.0.5-beta",slug:"_2-11-0-5-beta",normalizedTitle:"2.11.0.5-beta",charIndex:12151},{level:2,title:"2.11.0.4-beta",slug:"_2-11-0-4-beta",normalizedTitle:"2.11.0.4-beta",charIndex:12401},{level:2,title:"2.11.0.3-beta",slug:"_2-11-0-3-beta",normalizedTitle:"2.11.0.3-beta",charIndex:12651},{level:2,title:"2.11.0.2-beta",slug:"_2-11-0-2-beta",normalizedTitle:"2.11.0.2-beta",charIndex:12901},{level:2,title:"2.11.0.1-beta",slug:"_2-11-0-1-beta",normalizedTitle:"2.11.0.1-beta",charIndex:13151},{level:2,title:"2.11.0.0-beta",slug:"_2-11-0-0-beta",normalizedTitle:"2.11.0.0-beta",charIndex:13401}],headersStr:"2.11.11.4-beta 2.11.11.3-beta 2.11.11.2-beta 2.11.11.1-beta 2.11.10.2-beta 2.11.10.1-beta 2.11.9.3-beta 2.11.9.2-beta 2.11.9.1-beta 2.11.8.5-beta 2.11.8.4-beta 2.11.8.3-beta 2.11.8.2-beta 2.11.8.1-beta 2.11.7.1-beta 2.11.6.6-beta 2.11.6.5-beta 2.11.6.4-beta 2.11.6.3-beta 2.11.6.2-beta 2.11.6.1-beta 2.11.5.2-beta 2.11.5.1-beta 2.11.5.0-beta 2.11.4.2-beta 2.11.4.1-beta 2.11.4.0-beta 2.11.3.2-beta 2.11.3.1-beta 2.11.3.0-beta 2.11.2.3-beta 2.11.2.2-beta 2.11.2.1-beta 2.11.2.0-beta 2.11.1.5-beta 2.11.1.4-beta 2.11.1.3-beta 2.11.1.2-beta 2.11.1.1-beta 2.11.1.0-beta 2.11.0.13-beta 2.11.0.12-beta 2.11.0.11-beta 2.11.0.10-beta 2.11.0.9-beta 2.11.0.8-beta 2.11.0.7-beta 2.11.0.6-beta 2.11.0.5-beta 2.11.0.4-beta 2.11.0.3-beta 2.11.0.2-beta 2.11.0.1-beta 2.11.0.0-beta",content:"下载授权中心\n\n综合考虑到不同网络情况下载网速不稳定，现在推出国内 CDN 下载授权中：https://service.jpom.top/\n\n请大家友好使用下载服务，谢谢！\n\n\n# 2.11.11.4-beta\n\n * jpom-2.11.11.4.zip\n * server-2.11.11.4-release.tar.gz | sha1sum\n * server-2.11.11.4-release.zip | sha1sum\n * agent-2.11.11.4-release.tar.gz | sha1sum\n * agent-2.11.11.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11.3-beta\n\n * jpom-2.11.11.3.zip\n * server-2.11.11.3-release.tar.gz | sha1sum\n * server-2.11.11.3-release.zip | sha1sum\n * agent-2.11.11.3-release.tar.gz | sha1sum\n * agent-2.11.11.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11.2-beta\n\n * jpom-2.11.11.2.zip\n * server-2.11.11.2-release.tar.gz | sha1sum\n * server-2.11.11.2-release.zip | sha1sum\n * agent-2.11.11.2-release.tar.gz | sha1sum\n * agent-2.11.11.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11.1-beta\n\n * jpom-2.11.11.1.zip\n * server-2.11.11.1-release.tar.gz | sha1sum\n * server-2.11.11.1-release.zip | sha1sum\n * agent-2.11.11.1-release.tar.gz | sha1sum\n * agent-2.11.11.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.10.2-beta\n\n * jpom-2.11.10.2.zip\n * server-2.11.10.2-release.tar.gz | sha1sum\n * server-2.11.10.2-release.zip | sha1sum\n * agent-2.11.10.2-release.tar.gz | sha1sum\n * agent-2.11.10.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.10.1-beta\n\n * jpom-2.11.10.1.zip\n * server-2.11.10.1-release.tar.gz | sha1sum\n * server-2.11.10.1-release.zip | sha1sum\n * agent-2.11.10.1-release.tar.gz | sha1sum\n * agent-2.11.10.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9.3-beta\n\n * jpom-2.11.9.3.zip\n * server-2.11.9.3-release.tar.gz | sha1sum\n * server-2.11.9.3-release.zip | sha1sum\n * agent-2.11.9.3-release.tar.gz | sha1sum\n * agent-2.11.9.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9.2-beta\n\n * jpom-2.11.9.2.zip\n * server-2.11.9.2-release.tar.gz | sha1sum\n * server-2.11.9.2-release.zip | sha1sum\n * agent-2.11.9.2-release.tar.gz | sha1sum\n * agent-2.11.9.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9.1-beta\n\n * jpom-2.11.9.1.zip\n * server-2.11.9.1-release.tar.gz | sha1sum\n * server-2.11.9.1-release.zip | sha1sum\n * agent-2.11.9.1-release.tar.gz | sha1sum\n * agent-2.11.9.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.5-beta\n\n * jpom-2.11.8.5.zip\n * server-2.11.8.5-release.tar.gz | sha1sum\n * server-2.11.8.5-release.zip | sha1sum\n * agent-2.11.8.5-release.tar.gz | sha1sum\n * agent-2.11.8.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.4-beta\n\n * jpom-2.11.8.4.zip\n * server-2.11.8.4-release.tar.gz | sha1sum\n * server-2.11.8.4-release.zip | sha1sum\n * agent-2.11.8.4-release.tar.gz | sha1sum\n * agent-2.11.8.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.3-beta\n\n * jpom-2.11.8.3.zip\n * server-2.11.8.3-release.tar.gz | sha1sum\n * server-2.11.8.3-release.zip | sha1sum\n * agent-2.11.8.3-release.tar.gz | sha1sum\n * agent-2.11.8.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.2-beta\n\n * jpom-2.11.8.2.zip\n * server-2.11.8.2-release.tar.gz | sha1sum\n * server-2.11.8.2-release.zip | sha1sum\n * agent-2.11.8.2-release.tar.gz | sha1sum\n * agent-2.11.8.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.1-beta\n\n * jpom-2.11.8.1.zip\n * server-2.11.8.1-release.tar.gz | sha1sum\n * server-2.11.8.1-release.zip | sha1sum\n * agent-2.11.8.1-release.tar.gz | sha1sum\n * agent-2.11.8.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.7.1-beta\n\n * jpom-2.11.7.1.zip\n * server-2.11.7.1-release.tar.gz | sha1sum\n * server-2.11.7.1-release.zip | sha1sum\n * agent-2.11.7.1-release.tar.gz | sha1sum\n * agent-2.11.7.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.6-beta\n\n * jpom-2.11.6.6.zip\n * server-2.11.6.6-release.tar.gz | sha1sum\n * server-2.11.6.6-release.zip | sha1sum\n * agent-2.11.6.6-release.tar.gz | sha1sum\n * agent-2.11.6.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.5-beta\n\n * jpom-2.11.6.5.zip\n * server-2.11.6.5-release.tar.gz | sha1sum\n * server-2.11.6.5-release.zip | sha1sum\n * agent-2.11.6.5-release.tar.gz | sha1sum\n * agent-2.11.6.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.4-beta\n\n * jpom-2.11.6.4.zip\n * server-2.11.6.4-release.tar.gz | sha1sum\n * server-2.11.6.4-release.zip | sha1sum\n * agent-2.11.6.4-release.tar.gz | sha1sum\n * agent-2.11.6.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.3-beta\n\n * jpom-2.11.6.3.zip\n * server-2.11.6.3-release.tar.gz | sha1sum\n * server-2.11.6.3-release.zip | sha1sum\n * agent-2.11.6.3-release.tar.gz | sha1sum\n * agent-2.11.6.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.2-beta\n\n * jpom-2.11.6.2.zip\n * server-2.11.6.2-release.tar.gz | sha1sum\n * server-2.11.6.2-release.zip | sha1sum\n * agent-2.11.6.2-release.tar.gz | sha1sum\n * agent-2.11.6.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.1-beta\n\n * jpom-2.11.6.1.zip\n * server-2.11.6.1-release.tar.gz | sha1sum\n * server-2.11.6.1-release.zip | sha1sum\n * agent-2.11.6.1-release.tar.gz | sha1sum\n * agent-2.11.6.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5.2-beta\n\n * jpom-2.11.5.2.zip\n * server-2.11.5.2-release.tar.gz | sha1sum\n * server-2.11.5.2-release.zip | sha1sum\n * agent-2.11.5.2-release.tar.gz | sha1sum\n * agent-2.11.5.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5.1-beta\n\n * jpom-2.11.5.1.zip\n * server-2.11.5.1-release.tar.gz | sha1sum\n * server-2.11.5.1-release.zip | sha1sum\n * agent-2.11.5.1-release.tar.gz | sha1sum\n * agent-2.11.5.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5.0-beta\n\n * jpom-2.11.5.0.zip\n * server-2.11.5.0-release.tar.gz | sha1sum\n * server-2.11.5.0-release.zip | sha1sum\n * agent-2.11.5.0-release.tar.gz | sha1sum\n * agent-2.11.5.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4.2-beta\n\n * jpom-2.11.4.2.zip\n * server-2.11.4.2-release.tar.gz | sha1sum\n * server-2.11.4.2-release.zip | sha1sum\n * agent-2.11.4.2-release.tar.gz | sha1sum\n * agent-2.11.4.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4.1-beta\n\n * jpom-2.11.4.1.zip\n * server-2.11.4.1-release.tar.gz | sha1sum\n * server-2.11.4.1-release.zip | sha1sum\n * agent-2.11.4.1-release.tar.gz | sha1sum\n * agent-2.11.4.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4.0-beta\n\n * jpom-2.11.4.0.zip\n * server-2.11.4.0-release.tar.gz | sha1sum\n * server-2.11.4.0-release.zip | sha1sum\n * agent-2.11.4.0-release.tar.gz | sha1sum\n * agent-2.11.4.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3.2-beta\n\n * jpom-2.11.3.2.zip\n * server-2.11.3.2-release.tar.gz | sha1sum\n * server-2.11.3.2-release.zip | sha1sum\n * agent-2.11.3.2-release.tar.gz | sha1sum\n * agent-2.11.3.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3.1-beta\n\n * jpom-2.11.3.1.zip\n * server-2.11.3.1-release.tar.gz | sha1sum\n * server-2.11.3.1-release.zip | sha1sum\n * agent-2.11.3.1-release.tar.gz | sha1sum\n * agent-2.11.3.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3.0-beta\n\n * jpom-2.11.3.0.zip\n * server-2.11.3.0-release.tar.gz | sha1sum\n * server-2.11.3.0-release.zip | sha1sum\n * agent-2.11.3.0-release.tar.gz | sha1sum\n * agent-2.11.3.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.3-beta\n\n * jpom-2.11.2.3.zip\n * server-2.11.2.3-release.tar.gz | sha1sum\n * server-2.11.2.3-release.zip | sha1sum\n * agent-2.11.2.3-release.tar.gz | sha1sum\n * agent-2.11.2.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.2-beta\n\n * jpom-2.11.2.2.zip\n * server-2.11.2.2-release.tar.gz | sha1sum\n * server-2.11.2.2-release.zip | sha1sum\n * agent-2.11.2.2-release.tar.gz | sha1sum\n * agent-2.11.2.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.1-beta\n\n * jpom-2.11.2.1.zip\n * server-2.11.2.1-release.tar.gz | sha1sum\n * server-2.11.2.1-release.zip | sha1sum\n * agent-2.11.2.1-release.tar.gz | sha1sum\n * agent-2.11.2.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.0-beta\n\n * jpom-2.11.2.0.zip\n * server-2.11.2.0-release.tar.gz | sha1sum\n * server-2.11.2.0-release.zip | sha1sum\n * agent-2.11.2.0-release.tar.gz | sha1sum\n * agent-2.11.2.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.5-beta\n\n * jpom-2.11.1.5.zip\n * server-2.11.1.5-release.tar.gz | sha1sum\n * server-2.11.1.5-release.zip | sha1sum\n * agent-2.11.1.5-release.tar.gz | sha1sum\n * agent-2.11.1.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.4-beta\n\n * jpom-2.11.1.4.zip\n * server-2.11.1.4-release.tar.gz | sha1sum\n * server-2.11.1.4-release.zip | sha1sum\n * agent-2.11.1.4-release.tar.gz | sha1sum\n * agent-2.11.1.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.3-beta\n\n * jpom-2.11.1.3.zip\n * server-2.11.1.3-release.tar.gz | sha1sum\n * server-2.11.1.3-release.zip | sha1sum\n * agent-2.11.1.3-release.tar.gz | sha1sum\n * agent-2.11.1.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.2-beta\n\n * jpom-2.11.1.2.zip\n * server-2.11.1.2-release.tar.gz | sha1sum\n * server-2.11.1.2-release.zip | sha1sum\n * agent-2.11.1.2-release.tar.gz | sha1sum\n * agent-2.11.1.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.1-beta\n\n * jpom-2.11.1.1.zip\n * server-2.11.1.1-release.tar.gz | sha1sum\n * server-2.11.1.1-release.zip | sha1sum\n * agent-2.11.1.1-release.tar.gz | sha1sum\n * agent-2.11.1.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.0-beta\n\n * jpom-2.11.1.0.zip\n * server-2.11.1.0-release.tar.gz | sha1sum\n * server-2.11.1.0-release.zip | sha1sum\n * agent-2.11.1.0-release.tar.gz | sha1sum\n * agent-2.11.1.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.13-beta\n\n * jpom-2.11.0.13.zip\n * server-2.11.0.13-release.tar.gz | sha1sum\n * server-2.11.0.13-release.zip | sha1sum\n * agent-2.11.0.13-release.tar.gz | sha1sum\n * agent-2.11.0.13-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.12-beta\n\n * jpom-2.11.0.12.zip\n * server-2.11.0.12-release.tar.gz | sha1sum\n * server-2.11.0.12-release.zip | sha1sum\n * agent-2.11.0.12-release.tar.gz | sha1sum\n * agent-2.11.0.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.11-beta\n\n * jpom-2.11.0.11.zip\n * server-2.11.0.11-release.tar.gz | sha1sum\n * server-2.11.0.11-release.zip | sha1sum\n * agent-2.11.0.11-release.tar.gz | sha1sum\n * agent-2.11.0.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.10-beta\n\n * jpom-2.11.0.10.zip\n * server-2.11.0.10-release.tar.gz | sha1sum\n * server-2.11.0.10-release.zip | sha1sum\n * agent-2.11.0.10-release.tar.gz | sha1sum\n * agent-2.11.0.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.9-beta\n\n * jpom-2.11.0.9.zip\n * server-2.11.0.9-release.tar.gz | sha1sum\n * server-2.11.0.9-release.zip | sha1sum\n * agent-2.11.0.9-release.tar.gz | sha1sum\n * agent-2.11.0.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.8-beta\n\n * jpom-2.11.0.8.zip\n * server-2.11.0.8-release.tar.gz | sha1sum\n * server-2.11.0.8-release.zip | sha1sum\n * agent-2.11.0.8-release.tar.gz | sha1sum\n * agent-2.11.0.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.7-beta\n\n * jpom-2.11.0.7.zip\n * server-2.11.0.7-release.tar.gz | sha1sum\n * server-2.11.0.7-release.zip | sha1sum\n * agent-2.11.0.7-release.tar.gz | sha1sum\n * agent-2.11.0.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.6-beta\n\n * jpom-2.11.0.6.zip\n * server-2.11.0.6-release.tar.gz | sha1sum\n * server-2.11.0.6-release.zip | sha1sum\n * agent-2.11.0.6-release.tar.gz | sha1sum\n * agent-2.11.0.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.5-beta\n\n * jpom-2.11.0.5.zip\n * server-2.11.0.5-release.tar.gz | sha1sum\n * server-2.11.0.5-release.zip | sha1sum\n * agent-2.11.0.5-release.tar.gz | sha1sum\n * agent-2.11.0.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.4-beta\n\n * jpom-2.11.0.4.zip\n * server-2.11.0.4-release.tar.gz | sha1sum\n * server-2.11.0.4-release.zip | sha1sum\n * agent-2.11.0.4-release.tar.gz | sha1sum\n * agent-2.11.0.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.3-beta\n\n * jpom-2.11.0.3.zip\n * server-2.11.0.3-release.tar.gz | sha1sum\n * server-2.11.0.3-release.zip | sha1sum\n * agent-2.11.0.3-release.tar.gz | sha1sum\n * agent-2.11.0.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.2-beta\n\n * jpom-2.11.0.2.zip\n * server-2.11.0.2-release.tar.gz | sha1sum\n * server-2.11.0.2-release.zip | sha1sum\n * agent-2.11.0.2-release.tar.gz | sha1sum\n * agent-2.11.0.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.1-beta\n\n * jpom-2.11.0.1.zip\n * server-2.11.0.1-release.tar.gz | sha1sum\n * server-2.11.0.1-release.zip | sha1sum\n * agent-2.11.0.1-release.tar.gz | sha1sum\n * agent-2.11.0.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.0-beta\n\n * jpom-2.11.0.0.zip\n * server-2.11.0.0-release.tar.gz | sha1sum\n * server-2.11.0.0-release.zip | sha1sum\n * agent-2.11.0.0-release.tar.gz | sha1sum\n * agent-2.11.0.0-release.zip | sha1sum\n\n----------------------------------------",normalizedContent:"下载授权中心\n\n综合考虑到不同网络情况下载网速不稳定，现在推出国内 cdn 下载授权中：https://service.jpom.top/\n\n请大家友好使用下载服务，谢谢！\n\n\n# 2.11.11.4-beta\n\n * jpom-2.11.11.4.zip\n * server-2.11.11.4-release.tar.gz | sha1sum\n * server-2.11.11.4-release.zip | sha1sum\n * agent-2.11.11.4-release.tar.gz | sha1sum\n * agent-2.11.11.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11.3-beta\n\n * jpom-2.11.11.3.zip\n * server-2.11.11.3-release.tar.gz | sha1sum\n * server-2.11.11.3-release.zip | sha1sum\n * agent-2.11.11.3-release.tar.gz | sha1sum\n * agent-2.11.11.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11.2-beta\n\n * jpom-2.11.11.2.zip\n * server-2.11.11.2-release.tar.gz | sha1sum\n * server-2.11.11.2-release.zip | sha1sum\n * agent-2.11.11.2-release.tar.gz | sha1sum\n * agent-2.11.11.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.11.1-beta\n\n * jpom-2.11.11.1.zip\n * server-2.11.11.1-release.tar.gz | sha1sum\n * server-2.11.11.1-release.zip | sha1sum\n * agent-2.11.11.1-release.tar.gz | sha1sum\n * agent-2.11.11.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.10.2-beta\n\n * jpom-2.11.10.2.zip\n * server-2.11.10.2-release.tar.gz | sha1sum\n * server-2.11.10.2-release.zip | sha1sum\n * agent-2.11.10.2-release.tar.gz | sha1sum\n * agent-2.11.10.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.10.1-beta\n\n * jpom-2.11.10.1.zip\n * server-2.11.10.1-release.tar.gz | sha1sum\n * server-2.11.10.1-release.zip | sha1sum\n * agent-2.11.10.1-release.tar.gz | sha1sum\n * agent-2.11.10.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9.3-beta\n\n * jpom-2.11.9.3.zip\n * server-2.11.9.3-release.tar.gz | sha1sum\n * server-2.11.9.3-release.zip | sha1sum\n * agent-2.11.9.3-release.tar.gz | sha1sum\n * agent-2.11.9.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9.2-beta\n\n * jpom-2.11.9.2.zip\n * server-2.11.9.2-release.tar.gz | sha1sum\n * server-2.11.9.2-release.zip | sha1sum\n * agent-2.11.9.2-release.tar.gz | sha1sum\n * agent-2.11.9.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.9.1-beta\n\n * jpom-2.11.9.1.zip\n * server-2.11.9.1-release.tar.gz | sha1sum\n * server-2.11.9.1-release.zip | sha1sum\n * agent-2.11.9.1-release.tar.gz | sha1sum\n * agent-2.11.9.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.5-beta\n\n * jpom-2.11.8.5.zip\n * server-2.11.8.5-release.tar.gz | sha1sum\n * server-2.11.8.5-release.zip | sha1sum\n * agent-2.11.8.5-release.tar.gz | sha1sum\n * agent-2.11.8.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.4-beta\n\n * jpom-2.11.8.4.zip\n * server-2.11.8.4-release.tar.gz | sha1sum\n * server-2.11.8.4-release.zip | sha1sum\n * agent-2.11.8.4-release.tar.gz | sha1sum\n * agent-2.11.8.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.3-beta\n\n * jpom-2.11.8.3.zip\n * server-2.11.8.3-release.tar.gz | sha1sum\n * server-2.11.8.3-release.zip | sha1sum\n * agent-2.11.8.3-release.tar.gz | sha1sum\n * agent-2.11.8.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.2-beta\n\n * jpom-2.11.8.2.zip\n * server-2.11.8.2-release.tar.gz | sha1sum\n * server-2.11.8.2-release.zip | sha1sum\n * agent-2.11.8.2-release.tar.gz | sha1sum\n * agent-2.11.8.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.8.1-beta\n\n * jpom-2.11.8.1.zip\n * server-2.11.8.1-release.tar.gz | sha1sum\n * server-2.11.8.1-release.zip | sha1sum\n * agent-2.11.8.1-release.tar.gz | sha1sum\n * agent-2.11.8.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.7.1-beta\n\n * jpom-2.11.7.1.zip\n * server-2.11.7.1-release.tar.gz | sha1sum\n * server-2.11.7.1-release.zip | sha1sum\n * agent-2.11.7.1-release.tar.gz | sha1sum\n * agent-2.11.7.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.6-beta\n\n * jpom-2.11.6.6.zip\n * server-2.11.6.6-release.tar.gz | sha1sum\n * server-2.11.6.6-release.zip | sha1sum\n * agent-2.11.6.6-release.tar.gz | sha1sum\n * agent-2.11.6.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.5-beta\n\n * jpom-2.11.6.5.zip\n * server-2.11.6.5-release.tar.gz | sha1sum\n * server-2.11.6.5-release.zip | sha1sum\n * agent-2.11.6.5-release.tar.gz | sha1sum\n * agent-2.11.6.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.4-beta\n\n * jpom-2.11.6.4.zip\n * server-2.11.6.4-release.tar.gz | sha1sum\n * server-2.11.6.4-release.zip | sha1sum\n * agent-2.11.6.4-release.tar.gz | sha1sum\n * agent-2.11.6.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.3-beta\n\n * jpom-2.11.6.3.zip\n * server-2.11.6.3-release.tar.gz | sha1sum\n * server-2.11.6.3-release.zip | sha1sum\n * agent-2.11.6.3-release.tar.gz | sha1sum\n * agent-2.11.6.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.2-beta\n\n * jpom-2.11.6.2.zip\n * server-2.11.6.2-release.tar.gz | sha1sum\n * server-2.11.6.2-release.zip | sha1sum\n * agent-2.11.6.2-release.tar.gz | sha1sum\n * agent-2.11.6.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.6.1-beta\n\n * jpom-2.11.6.1.zip\n * server-2.11.6.1-release.tar.gz | sha1sum\n * server-2.11.6.1-release.zip | sha1sum\n * agent-2.11.6.1-release.tar.gz | sha1sum\n * agent-2.11.6.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5.2-beta\n\n * jpom-2.11.5.2.zip\n * server-2.11.5.2-release.tar.gz | sha1sum\n * server-2.11.5.2-release.zip | sha1sum\n * agent-2.11.5.2-release.tar.gz | sha1sum\n * agent-2.11.5.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5.1-beta\n\n * jpom-2.11.5.1.zip\n * server-2.11.5.1-release.tar.gz | sha1sum\n * server-2.11.5.1-release.zip | sha1sum\n * agent-2.11.5.1-release.tar.gz | sha1sum\n * agent-2.11.5.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.5.0-beta\n\n * jpom-2.11.5.0.zip\n * server-2.11.5.0-release.tar.gz | sha1sum\n * server-2.11.5.0-release.zip | sha1sum\n * agent-2.11.5.0-release.tar.gz | sha1sum\n * agent-2.11.5.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4.2-beta\n\n * jpom-2.11.4.2.zip\n * server-2.11.4.2-release.tar.gz | sha1sum\n * server-2.11.4.2-release.zip | sha1sum\n * agent-2.11.4.2-release.tar.gz | sha1sum\n * agent-2.11.4.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4.1-beta\n\n * jpom-2.11.4.1.zip\n * server-2.11.4.1-release.tar.gz | sha1sum\n * server-2.11.4.1-release.zip | sha1sum\n * agent-2.11.4.1-release.tar.gz | sha1sum\n * agent-2.11.4.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.4.0-beta\n\n * jpom-2.11.4.0.zip\n * server-2.11.4.0-release.tar.gz | sha1sum\n * server-2.11.4.0-release.zip | sha1sum\n * agent-2.11.4.0-release.tar.gz | sha1sum\n * agent-2.11.4.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3.2-beta\n\n * jpom-2.11.3.2.zip\n * server-2.11.3.2-release.tar.gz | sha1sum\n * server-2.11.3.2-release.zip | sha1sum\n * agent-2.11.3.2-release.tar.gz | sha1sum\n * agent-2.11.3.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3.1-beta\n\n * jpom-2.11.3.1.zip\n * server-2.11.3.1-release.tar.gz | sha1sum\n * server-2.11.3.1-release.zip | sha1sum\n * agent-2.11.3.1-release.tar.gz | sha1sum\n * agent-2.11.3.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.3.0-beta\n\n * jpom-2.11.3.0.zip\n * server-2.11.3.0-release.tar.gz | sha1sum\n * server-2.11.3.0-release.zip | sha1sum\n * agent-2.11.3.0-release.tar.gz | sha1sum\n * agent-2.11.3.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.3-beta\n\n * jpom-2.11.2.3.zip\n * server-2.11.2.3-release.tar.gz | sha1sum\n * server-2.11.2.3-release.zip | sha1sum\n * agent-2.11.2.3-release.tar.gz | sha1sum\n * agent-2.11.2.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.2-beta\n\n * jpom-2.11.2.2.zip\n * server-2.11.2.2-release.tar.gz | sha1sum\n * server-2.11.2.2-release.zip | sha1sum\n * agent-2.11.2.2-release.tar.gz | sha1sum\n * agent-2.11.2.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.1-beta\n\n * jpom-2.11.2.1.zip\n * server-2.11.2.1-release.tar.gz | sha1sum\n * server-2.11.2.1-release.zip | sha1sum\n * agent-2.11.2.1-release.tar.gz | sha1sum\n * agent-2.11.2.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.2.0-beta\n\n * jpom-2.11.2.0.zip\n * server-2.11.2.0-release.tar.gz | sha1sum\n * server-2.11.2.0-release.zip | sha1sum\n * agent-2.11.2.0-release.tar.gz | sha1sum\n * agent-2.11.2.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.5-beta\n\n * jpom-2.11.1.5.zip\n * server-2.11.1.5-release.tar.gz | sha1sum\n * server-2.11.1.5-release.zip | sha1sum\n * agent-2.11.1.5-release.tar.gz | sha1sum\n * agent-2.11.1.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.4-beta\n\n * jpom-2.11.1.4.zip\n * server-2.11.1.4-release.tar.gz | sha1sum\n * server-2.11.1.4-release.zip | sha1sum\n * agent-2.11.1.4-release.tar.gz | sha1sum\n * agent-2.11.1.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.3-beta\n\n * jpom-2.11.1.3.zip\n * server-2.11.1.3-release.tar.gz | sha1sum\n * server-2.11.1.3-release.zip | sha1sum\n * agent-2.11.1.3-release.tar.gz | sha1sum\n * agent-2.11.1.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.2-beta\n\n * jpom-2.11.1.2.zip\n * server-2.11.1.2-release.tar.gz | sha1sum\n * server-2.11.1.2-release.zip | sha1sum\n * agent-2.11.1.2-release.tar.gz | sha1sum\n * agent-2.11.1.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.1-beta\n\n * jpom-2.11.1.1.zip\n * server-2.11.1.1-release.tar.gz | sha1sum\n * server-2.11.1.1-release.zip | sha1sum\n * agent-2.11.1.1-release.tar.gz | sha1sum\n * agent-2.11.1.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.1.0-beta\n\n * jpom-2.11.1.0.zip\n * server-2.11.1.0-release.tar.gz | sha1sum\n * server-2.11.1.0-release.zip | sha1sum\n * agent-2.11.1.0-release.tar.gz | sha1sum\n * agent-2.11.1.0-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.13-beta\n\n * jpom-2.11.0.13.zip\n * server-2.11.0.13-release.tar.gz | sha1sum\n * server-2.11.0.13-release.zip | sha1sum\n * agent-2.11.0.13-release.tar.gz | sha1sum\n * agent-2.11.0.13-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.12-beta\n\n * jpom-2.11.0.12.zip\n * server-2.11.0.12-release.tar.gz | sha1sum\n * server-2.11.0.12-release.zip | sha1sum\n * agent-2.11.0.12-release.tar.gz | sha1sum\n * agent-2.11.0.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.11-beta\n\n * jpom-2.11.0.11.zip\n * server-2.11.0.11-release.tar.gz | sha1sum\n * server-2.11.0.11-release.zip | sha1sum\n * agent-2.11.0.11-release.tar.gz | sha1sum\n * agent-2.11.0.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.10-beta\n\n * jpom-2.11.0.10.zip\n * server-2.11.0.10-release.tar.gz | sha1sum\n * server-2.11.0.10-release.zip | sha1sum\n * agent-2.11.0.10-release.tar.gz | sha1sum\n * agent-2.11.0.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.9-beta\n\n * jpom-2.11.0.9.zip\n * server-2.11.0.9-release.tar.gz | sha1sum\n * server-2.11.0.9-release.zip | sha1sum\n * agent-2.11.0.9-release.tar.gz | sha1sum\n * agent-2.11.0.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.8-beta\n\n * jpom-2.11.0.8.zip\n * server-2.11.0.8-release.tar.gz | sha1sum\n * server-2.11.0.8-release.zip | sha1sum\n * agent-2.11.0.8-release.tar.gz | sha1sum\n * agent-2.11.0.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.7-beta\n\n * jpom-2.11.0.7.zip\n * server-2.11.0.7-release.tar.gz | sha1sum\n * server-2.11.0.7-release.zip | sha1sum\n * agent-2.11.0.7-release.tar.gz | sha1sum\n * agent-2.11.0.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.6-beta\n\n * jpom-2.11.0.6.zip\n * server-2.11.0.6-release.tar.gz | sha1sum\n * server-2.11.0.6-release.zip | sha1sum\n * agent-2.11.0.6-release.tar.gz | sha1sum\n * agent-2.11.0.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.5-beta\n\n * jpom-2.11.0.5.zip\n * server-2.11.0.5-release.tar.gz | sha1sum\n * server-2.11.0.5-release.zip | sha1sum\n * agent-2.11.0.5-release.tar.gz | sha1sum\n * agent-2.11.0.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.4-beta\n\n * jpom-2.11.0.4.zip\n * server-2.11.0.4-release.tar.gz | sha1sum\n * server-2.11.0.4-release.zip | sha1sum\n * agent-2.11.0.4-release.tar.gz | sha1sum\n * agent-2.11.0.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.3-beta\n\n * jpom-2.11.0.3.zip\n * server-2.11.0.3-release.tar.gz | sha1sum\n * server-2.11.0.3-release.zip | sha1sum\n * agent-2.11.0.3-release.tar.gz | sha1sum\n * agent-2.11.0.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.2-beta\n\n * jpom-2.11.0.2.zip\n * server-2.11.0.2-release.tar.gz | sha1sum\n * server-2.11.0.2-release.zip | sha1sum\n * agent-2.11.0.2-release.tar.gz | sha1sum\n * agent-2.11.0.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.1-beta\n\n * jpom-2.11.0.1.zip\n * server-2.11.0.1-release.tar.gz | sha1sum\n * server-2.11.0.1-release.zip | sha1sum\n * agent-2.11.0.1-release.tar.gz | sha1sum\n * agent-2.11.0.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.11.0.0-beta\n\n * jpom-2.11.0.0.zip\n * server-2.11.0.0-release.tar.gz | sha1sum\n * server-2.11.0.0-release.zip | sha1sum\n * agent-2.11.0.0-release.tar.gz | sha1sum\n * agent-2.11.0.0-release.zip | sha1sum\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2025/05/06, 05:12:53",lastUpdatedTimestamp:1746508373e3},{title:"2.10.x-release",frontmatter:{title:"2.10.x-release",date:"2022-12-19T15:15:13.000Z",permalink:"/pages/downloads/508e7f/",categories:["docs","日志&下载","下载链接"],tags:["2.10.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/02.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/980.2.10.x-release.html",relativePath:"日志&下载/02.下载链接/980.2.10.x-release.md",key:"v-2352bf88",path:"/pages/downloads/508e7f/",headers:[{level:2,title:"2.10.47-release",slug:"_2-10-47-release",normalizedTitle:"2.10.47-release",charIndex:2},{level:2,title:"2.10.46-release",slug:"_2-10-46-release",normalizedTitle:"2.10.46-release",charIndex:249},{level:2,title:"2.10.45-release",slug:"_2-10-45-release",normalizedTitle:"2.10.45-release",charIndex:496},{level:2,title:"2.10.44-release",slug:"_2-10-44-release",normalizedTitle:"2.10.44-release",charIndex:743},{level:2,title:"2.10.43-release",slug:"_2-10-43-release",normalizedTitle:"2.10.43-release",charIndex:990},{level:2,title:"2.10.42-release",slug:"_2-10-42-release",normalizedTitle:"2.10.42-release",charIndex:1237},{level:2,title:"2.10.41-release",slug:"_2-10-41-release",normalizedTitle:"2.10.41-release",charIndex:1484},{level:2,title:"2.10.40-release",slug:"_2-10-40-release",normalizedTitle:"2.10.40-release",charIndex:1731},{level:2,title:"2.10.39-release",slug:"_2-10-39-release",normalizedTitle:"2.10.39-release",charIndex:1978},{level:2,title:"2.10.38-release",slug:"_2-10-38-release",normalizedTitle:"2.10.38-release",charIndex:2225},{level:2,title:"2.10.37",slug:"_2-10-37",normalizedTitle:"2.10.37",charIndex:2472},{level:2,title:"2.10.36",slug:"_2-10-36",normalizedTitle:"2.10.36",charIndex:2711},{level:2,title:"2.10.35",slug:"_2-10-35",normalizedTitle:"2.10.35",charIndex:2950},{level:2,title:"2.10.34",slug:"_2-10-34",normalizedTitle:"2.10.34",charIndex:3189},{level:2,title:"2.10.33",slug:"_2-10-33",normalizedTitle:"2.10.33",charIndex:3428},{level:2,title:"2.10.32",slug:"_2-10-32",normalizedTitle:"2.10.32",charIndex:3667},{level:2,title:"2.10.31",slug:"_2-10-31",normalizedTitle:"2.10.31",charIndex:3906},{level:2,title:"2.10.30",slug:"_2-10-30",normalizedTitle:"2.10.30",charIndex:4145},{level:2,title:"2.10.29",slug:"_2-10-29",normalizedTitle:"2.10.29",charIndex:4384},{level:2,title:"2.10.28",slug:"_2-10-28",normalizedTitle:"2.10.28",charIndex:4623},{level:2,title:"2.10.27",slug:"_2-10-27",normalizedTitle:"2.10.27",charIndex:4862},{level:2,title:"2.10.26",slug:"_2-10-26",normalizedTitle:"2.10.26",charIndex:5101},{level:2,title:"2.10.25",slug:"_2-10-25",normalizedTitle:"2.10.25",charIndex:5340},{level:2,title:"2.10.24",slug:"_2-10-24",normalizedTitle:"2.10.24",charIndex:5579},{level:2,title:"2.10.23",slug:"_2-10-23",normalizedTitle:"2.10.23",charIndex:5818},{level:2,title:"2.10.22",slug:"_2-10-22",normalizedTitle:"2.10.22",charIndex:6057},{level:2,title:"2.10.21",slug:"_2-10-21",normalizedTitle:"2.10.21",charIndex:6296},{level:2,title:"2.10.20",slug:"_2-10-20",normalizedTitle:"2.10.20",charIndex:6535},{level:2,title:"2.10.19",slug:"_2-10-19",normalizedTitle:"2.10.19",charIndex:6774},{level:2,title:"2.10.18",slug:"_2-10-18",normalizedTitle:"2.10.18",charIndex:7013},{level:2,title:"2.10.17",slug:"_2-10-17",normalizedTitle:"2.10.17",charIndex:7252},{level:2,title:"2.10.16",slug:"_2-10-16",normalizedTitle:"2.10.16",charIndex:7491},{level:2,title:"2.10.15",slug:"_2-10-15",normalizedTitle:"2.10.15",charIndex:7730},{level:2,title:"2.10.14",slug:"_2-10-14",normalizedTitle:"2.10.14",charIndex:7969},{level:2,title:"2.10.13",slug:"_2-10-13",normalizedTitle:"2.10.13",charIndex:8208},{level:2,title:"2.10.12",slug:"_2-10-12",normalizedTitle:"2.10.12",charIndex:8447},{level:2,title:"2.10.11",slug:"_2-10-11",normalizedTitle:"2.10.11",charIndex:8686},{level:2,title:"2.10.10",slug:"_2-10-10",normalizedTitle:"2.10.10",charIndex:8925},{level:2,title:"2.10.9",slug:"_2-10-9",normalizedTitle:"2.10.9",charIndex:9164},{level:2,title:"2.10.8",slug:"_2-10-8",normalizedTitle:"2.10.8",charIndex:9397},{level:2,title:"2.10.7",slug:"_2-10-7",normalizedTitle:"2.10.7",charIndex:9630},{level:2,title:"2.10.6",slug:"_2-10-6",normalizedTitle:"2.10.6",charIndex:9863},{level:2,title:"2.10.5",slug:"_2-10-5",normalizedTitle:"2.10.5",charIndex:10096},{level:2,title:"2.10.4",slug:"_2-10-4",normalizedTitle:"2.10.4",charIndex:2},{level:2,title:"2.10.3",slug:"_2-10-3",normalizedTitle:"2.10.3",charIndex:1978},{level:2,title:"2.10.2",slug:"_2-10-2",normalizedTitle:"2.10.2",charIndex:4384},{level:2,title:"2.10.1",slug:"_2-10-1",normalizedTitle:"2.10.1",charIndex:6774},{level:2,title:"2.10.0",slug:"_2-10-0",normalizedTitle:"2.10.0",charIndex:11261}],headersStr:"2.10.47-release 2.10.46-release 2.10.45-release 2.10.44-release 2.10.43-release 2.10.42-release 2.10.41-release 2.10.40-release 2.10.39-release 2.10.38-release 2.10.37 2.10.36 2.10.35 2.10.34 2.10.33 2.10.32 2.10.31 2.10.30 2.10.29 2.10.28 2.10.27 2.10.26 2.10.25 2.10.24 2.10.23 2.10.22 2.10.21 2.10.20 2.10.19 2.10.18 2.10.17 2.10.16 2.10.15 2.10.14 2.10.13 2.10.12 2.10.11 2.10.10 2.10.9 2.10.8 2.10.7 2.10.6 2.10.5 2.10.4 2.10.3 2.10.2 2.10.1 2.10.0",content:"# 2.10.47-release\n\n * jpom-2.10.47.zip\n * server-2.10.47-release.tar.gz | sha1sum\n * server-2.10.47-release.zip | sha1sum\n * agent-2.10.47-release.tar.gz | sha1sum\n * agent-2.10.47-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.46-release\n\n * jpom-2.10.46.zip\n * server-2.10.46-release.tar.gz | sha1sum\n * server-2.10.46-release.zip | sha1sum\n * agent-2.10.46-release.tar.gz | sha1sum\n * agent-2.10.46-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45-release\n\n * jpom-2.10.45.zip\n * server-2.10.45-release.tar.gz | sha1sum\n * server-2.10.45-release.zip | sha1sum\n * agent-2.10.45-release.tar.gz | sha1sum\n * agent-2.10.45-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44-release\n\n * jpom-2.10.44.zip\n * server-2.10.44-release.tar.gz | sha1sum\n * server-2.10.44-release.zip | sha1sum\n * agent-2.10.44-release.tar.gz | sha1sum\n * agent-2.10.44-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.43-release\n\n * jpom-2.10.43.zip\n * server-2.10.43-release.tar.gz | sha1sum\n * server-2.10.43-release.zip | sha1sum\n * agent-2.10.43-release.tar.gz | sha1sum\n * agent-2.10.43-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42-release\n\n * jpom-2.10.42.zip\n * server-2.10.42-release.tar.gz | sha1sum\n * server-2.10.42-release.zip | sha1sum\n * agent-2.10.42-release.tar.gz | sha1sum\n * agent-2.10.42-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41-release\n\n * jpom-2.10.41.zip\n * server-2.10.41-release.tar.gz | sha1sum\n * server-2.10.41-release.zip | sha1sum\n * agent-2.10.41-release.tar.gz | sha1sum\n * agent-2.10.41-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40-release\n\n * jpom-2.10.40.zip\n * server-2.10.40-release.tar.gz | sha1sum\n * server-2.10.40-release.zip | sha1sum\n * agent-2.10.40-release.tar.gz | sha1sum\n * agent-2.10.40-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39-release\n\n * jpom-2.10.39.zip\n * server-2.10.39-release.tar.gz | sha1sum\n * server-2.10.39-release.zip | sha1sum\n * agent-2.10.39-release.tar.gz | sha1sum\n * agent-2.10.39-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38-release\n\n * jpom-2.10.38.zip\n * server-2.10.38-release.tar.gz | sha1sum\n * server-2.10.38-release.zip | sha1sum\n * agent-2.10.38-release.tar.gz | sha1sum\n * agent-2.10.38-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.37\n\n * jpom-2.10.37.zip\n * server-2.10.37-release.tar.gz | sha1sum\n * server-2.10.37-release.zip | sha1sum\n * agent-2.10.37-release.tar.gz | sha1sum\n * agent-2.10.37-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.36\n\n * jpom-2.10.36.zip\n * server-2.10.36-release.tar.gz | sha1sum\n * server-2.10.36-release.zip | sha1sum\n * agent-2.10.36-release.tar.gz | sha1sum\n * agent-2.10.36-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.35\n\n * jpom-2.10.35.zip\n * server-2.10.35-release.tar.gz | sha1sum\n * server-2.10.35-release.zip | sha1sum\n * agent-2.10.35-release.tar.gz | sha1sum\n * agent-2.10.35-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.34\n\n * jpom-2.10.34.zip\n * server-2.10.34-release.tar.gz | sha1sum\n * server-2.10.34-release.zip | sha1sum\n * agent-2.10.34-release.tar.gz | sha1sum\n * agent-2.10.34-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.33\n\n * jpom-2.10.33.zip\n * server-2.10.33-release.tar.gz | sha1sum\n * server-2.10.33-release.zip | sha1sum\n * agent-2.10.33-release.tar.gz | sha1sum\n * agent-2.10.33-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.32\n\n * jpom-2.10.32.zip\n * server-2.10.32-release.tar.gz | sha1sum\n * server-2.10.32-release.zip | sha1sum\n * agent-2.10.32-release.tar.gz | sha1sum\n * agent-2.10.32-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.31\n\n * jpom-2.10.31.zip\n * server-2.10.31-release.tar.gz | sha1sum\n * server-2.10.31-release.zip | sha1sum\n * agent-2.10.31-release.tar.gz | sha1sum\n * agent-2.10.31-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.30\n\n * jpom-2.10.30.zip\n * server-2.10.30-release.tar.gz | sha1sum\n * server-2.10.30-release.zip | sha1sum\n * agent-2.10.30-release.tar.gz | sha1sum\n * agent-2.10.30-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.29\n\n * jpom-2.10.29.zip\n * server-2.10.29-release.tar.gz | sha1sum\n * server-2.10.29-release.zip | sha1sum\n * agent-2.10.29-release.tar.gz | sha1sum\n * agent-2.10.29-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.28\n\n * jpom-2.10.28.zip\n * server-2.10.28-release.tar.gz | sha1sum\n * server-2.10.28-release.zip | sha1sum\n * agent-2.10.28-release.tar.gz | sha1sum\n * agent-2.10.28-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.27\n\n * jpom-2.10.27.zip\n * server-2.10.27-release.tar.gz | sha1sum\n * server-2.10.27-release.zip | sha1sum\n * agent-2.10.27-release.tar.gz | sha1sum\n * agent-2.10.27-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.26\n\n * jpom-2.10.26.zip\n * server-2.10.26-release.tar.gz | sha1sum\n * server-2.10.26-release.zip | sha1sum\n * agent-2.10.26-release.tar.gz | sha1sum\n * agent-2.10.26-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.25\n\n * jpom-2.10.25.zip\n * server-2.10.25-release.tar.gz | sha1sum\n * server-2.10.25-release.zip | sha1sum\n * agent-2.10.25-release.tar.gz | sha1sum\n * agent-2.10.25-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.24\n\n * jpom-2.10.24.zip\n * server-2.10.24-release.tar.gz | sha1sum\n * server-2.10.24-release.zip | sha1sum\n * agent-2.10.24-release.tar.gz | sha1sum\n * agent-2.10.24-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.23\n\n * jpom-2.10.23.zip\n * server-2.10.23-release.tar.gz | sha1sum\n * server-2.10.23-release.zip | sha1sum\n * agent-2.10.23-release.tar.gz | sha1sum\n * agent-2.10.23-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.22\n\n * jpom-2.10.22.zip\n * server-2.10.22-release.tar.gz | sha1sum\n * server-2.10.22-release.zip | sha1sum\n * agent-2.10.22-release.tar.gz | sha1sum\n * agent-2.10.22-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.21\n\n * jpom-2.10.21.zip\n * server-2.10.21-release.tar.gz | sha1sum\n * server-2.10.21-release.zip | sha1sum\n * agent-2.10.21-release.tar.gz | sha1sum\n * agent-2.10.21-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.20\n\n * jpom-2.10.20.zip\n * server-2.10.20-release.tar.gz | sha1sum\n * server-2.10.20-release.zip | sha1sum\n * agent-2.10.20-release.tar.gz | sha1sum\n * agent-2.10.20-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.19\n\n * jpom-2.10.19.zip\n * server-2.10.19-release.tar.gz | sha1sum\n * server-2.10.19-release.zip | sha1sum\n * agent-2.10.19-release.tar.gz | sha1sum\n * agent-2.10.19-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.18\n\n * jpom-2.10.18.zip\n * server-2.10.18-release.tar.gz | sha1sum\n * server-2.10.18-release.zip | sha1sum\n * agent-2.10.18-release.tar.gz | sha1sum\n * agent-2.10.18-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.17\n\n * jpom-2.10.17.zip\n * server-2.10.17-release.tar.gz | sha1sum\n * server-2.10.17-release.zip | sha1sum\n * agent-2.10.17-release.tar.gz | sha1sum\n * agent-2.10.17-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.16\n\n * jpom-2.10.16.zip\n * server-2.10.16-release.tar.gz | sha1sum\n * server-2.10.16-release.zip | sha1sum\n * agent-2.10.16-release.tar.gz | sha1sum\n * agent-2.10.16-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.15\n\n * jpom-2.10.15.zip\n * server-2.10.15-release.tar.gz | sha1sum\n * server-2.10.15-release.zip | sha1sum\n * agent-2.10.15-release.tar.gz | sha1sum\n * agent-2.10.15-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.14\n\n * jpom-2.10.14.zip\n * server-2.10.14-release.tar.gz | sha1sum\n * server-2.10.14-release.zip | sha1sum\n * agent-2.10.14-release.tar.gz | sha1sum\n * agent-2.10.14-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.13\n\n * jpom-2.10.13.zip\n * server-2.10.13-release.tar.gz | sha1sum\n * server-2.10.13-release.zip | sha1sum\n * agent-2.10.13-release.tar.gz | sha1sum\n * agent-2.10.13-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.12\n\n * jpom-2.10.12.zip\n * server-2.10.12-release.tar.gz | sha1sum\n * server-2.10.12-release.zip | sha1sum\n * agent-2.10.12-release.tar.gz | sha1sum\n * agent-2.10.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.11\n\n * jpom-2.10.11.zip\n * server-2.10.11-release.tar.gz | sha1sum\n * server-2.10.11-release.zip | sha1sum\n * agent-2.10.11-release.tar.gz | sha1sum\n * agent-2.10.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.10\n\n * jpom-2.10.10.zip\n * server-2.10.10-release.tar.gz | sha1sum\n * server-2.10.10-release.zip | sha1sum\n * agent-2.10.10-release.tar.gz | sha1sum\n * agent-2.10.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.9\n\n * jpom-2.10.9.zip\n * server-2.10.9-release.tar.gz | sha1sum\n * server-2.10.9-release.zip | sha1sum\n * agent-2.10.9-release.tar.gz | sha1sum\n * agent-2.10.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.8\n\n * jpom-2.10.8.zip\n * server-2.10.8-release.tar.gz | sha1sum\n * server-2.10.8-release.zip | sha1sum\n * agent-2.10.8-release.tar.gz | sha1sum\n * agent-2.10.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.7\n\n * jpom-2.10.7.zip\n * server-2.10.7-release.tar.gz | sha1sum\n * server-2.10.7-release.zip | sha1sum\n * agent-2.10.7-release.tar.gz | sha1sum\n * agent-2.10.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.6\n\n * jpom-2.10.6.zip\n * server-2.10.6-release.tar.gz | sha1sum\n * server-2.10.6-release.zip | sha1sum\n * agent-2.10.6-release.tar.gz | sha1sum\n * agent-2.10.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.5\n\n * jpom-2.10.5.zip\n * server-2.10.5-release.tar.gz | sha1sum\n * server-2.10.5-release.zip | sha1sum\n * agent-2.10.5-release.tar.gz | sha1sum\n * agent-2.10.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.4\n\n * jpom-2.10.4.zip\n * server-2.10.4-release.tar.gz | sha1sum\n * server-2.10.4-release.zip | sha1sum\n * agent-2.10.4-release.tar.gz | sha1sum\n * agent-2.10.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.3\n\n * jpom-2.10.3.zip\n * server-2.10.3-release.tar.gz | sha1sum\n * server-2.10.3-release.zip | sha1sum\n * agent-2.10.3-release.tar.gz | sha1sum\n * agent-2.10.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.2\n\n * jpom-2.10.2.zip\n * server-2.10.2-release.tar.gz | sha1sum\n * server-2.10.2-release.zip | sha1sum\n * agent-2.10.2-release.tar.gz | sha1sum\n * agent-2.10.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.1\n\n * jpom-2.10.1.zip\n * server-2.10.1-release.tar.gz | sha1sum\n * server-2.10.1-release.zip | sha1sum\n * agent-2.10.1-release.tar.gz | sha1sum\n * agent-2.10.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.0\n\n * jpom-2.10.0.zip\n * server-2.10.0-release.tar.gz | sha1sum\n * server-2.10.0-release.zip | sha1sum\n * agent-2.10.0-release.tar.gz | sha1sum\n * agent-2.10.0-release.zip | sha1sum\n\n----------------------------------------",normalizedContent:"# 2.10.47-release\n\n * jpom-2.10.47.zip\n * server-2.10.47-release.tar.gz | sha1sum\n * server-2.10.47-release.zip | sha1sum\n * agent-2.10.47-release.tar.gz | sha1sum\n * agent-2.10.47-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.46-release\n\n * jpom-2.10.46.zip\n * server-2.10.46-release.tar.gz | sha1sum\n * server-2.10.46-release.zip | sha1sum\n * agent-2.10.46-release.tar.gz | sha1sum\n * agent-2.10.46-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45-release\n\n * jpom-2.10.45.zip\n * server-2.10.45-release.tar.gz | sha1sum\n * server-2.10.45-release.zip | sha1sum\n * agent-2.10.45-release.tar.gz | sha1sum\n * agent-2.10.45-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44-release\n\n * jpom-2.10.44.zip\n * server-2.10.44-release.tar.gz | sha1sum\n * server-2.10.44-release.zip | sha1sum\n * agent-2.10.44-release.tar.gz | sha1sum\n * agent-2.10.44-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.43-release\n\n * jpom-2.10.43.zip\n * server-2.10.43-release.tar.gz | sha1sum\n * server-2.10.43-release.zip | sha1sum\n * agent-2.10.43-release.tar.gz | sha1sum\n * agent-2.10.43-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42-release\n\n * jpom-2.10.42.zip\n * server-2.10.42-release.tar.gz | sha1sum\n * server-2.10.42-release.zip | sha1sum\n * agent-2.10.42-release.tar.gz | sha1sum\n * agent-2.10.42-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41-release\n\n * jpom-2.10.41.zip\n * server-2.10.41-release.tar.gz | sha1sum\n * server-2.10.41-release.zip | sha1sum\n * agent-2.10.41-release.tar.gz | sha1sum\n * agent-2.10.41-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40-release\n\n * jpom-2.10.40.zip\n * server-2.10.40-release.tar.gz | sha1sum\n * server-2.10.40-release.zip | sha1sum\n * agent-2.10.40-release.tar.gz | sha1sum\n * agent-2.10.40-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39-release\n\n * jpom-2.10.39.zip\n * server-2.10.39-release.tar.gz | sha1sum\n * server-2.10.39-release.zip | sha1sum\n * agent-2.10.39-release.tar.gz | sha1sum\n * agent-2.10.39-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38-release\n\n * jpom-2.10.38.zip\n * server-2.10.38-release.tar.gz | sha1sum\n * server-2.10.38-release.zip | sha1sum\n * agent-2.10.38-release.tar.gz | sha1sum\n * agent-2.10.38-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.37\n\n * jpom-2.10.37.zip\n * server-2.10.37-release.tar.gz | sha1sum\n * server-2.10.37-release.zip | sha1sum\n * agent-2.10.37-release.tar.gz | sha1sum\n * agent-2.10.37-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.36\n\n * jpom-2.10.36.zip\n * server-2.10.36-release.tar.gz | sha1sum\n * server-2.10.36-release.zip | sha1sum\n * agent-2.10.36-release.tar.gz | sha1sum\n * agent-2.10.36-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.35\n\n * jpom-2.10.35.zip\n * server-2.10.35-release.tar.gz | sha1sum\n * server-2.10.35-release.zip | sha1sum\n * agent-2.10.35-release.tar.gz | sha1sum\n * agent-2.10.35-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.34\n\n * jpom-2.10.34.zip\n * server-2.10.34-release.tar.gz | sha1sum\n * server-2.10.34-release.zip | sha1sum\n * agent-2.10.34-release.tar.gz | sha1sum\n * agent-2.10.34-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.33\n\n * jpom-2.10.33.zip\n * server-2.10.33-release.tar.gz | sha1sum\n * server-2.10.33-release.zip | sha1sum\n * agent-2.10.33-release.tar.gz | sha1sum\n * agent-2.10.33-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.32\n\n * jpom-2.10.32.zip\n * server-2.10.32-release.tar.gz | sha1sum\n * server-2.10.32-release.zip | sha1sum\n * agent-2.10.32-release.tar.gz | sha1sum\n * agent-2.10.32-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.31\n\n * jpom-2.10.31.zip\n * server-2.10.31-release.tar.gz | sha1sum\n * server-2.10.31-release.zip | sha1sum\n * agent-2.10.31-release.tar.gz | sha1sum\n * agent-2.10.31-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.30\n\n * jpom-2.10.30.zip\n * server-2.10.30-release.tar.gz | sha1sum\n * server-2.10.30-release.zip | sha1sum\n * agent-2.10.30-release.tar.gz | sha1sum\n * agent-2.10.30-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.29\n\n * jpom-2.10.29.zip\n * server-2.10.29-release.tar.gz | sha1sum\n * server-2.10.29-release.zip | sha1sum\n * agent-2.10.29-release.tar.gz | sha1sum\n * agent-2.10.29-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.28\n\n * jpom-2.10.28.zip\n * server-2.10.28-release.tar.gz | sha1sum\n * server-2.10.28-release.zip | sha1sum\n * agent-2.10.28-release.tar.gz | sha1sum\n * agent-2.10.28-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.27\n\n * jpom-2.10.27.zip\n * server-2.10.27-release.tar.gz | sha1sum\n * server-2.10.27-release.zip | sha1sum\n * agent-2.10.27-release.tar.gz | sha1sum\n * agent-2.10.27-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.26\n\n * jpom-2.10.26.zip\n * server-2.10.26-release.tar.gz | sha1sum\n * server-2.10.26-release.zip | sha1sum\n * agent-2.10.26-release.tar.gz | sha1sum\n * agent-2.10.26-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.25\n\n * jpom-2.10.25.zip\n * server-2.10.25-release.tar.gz | sha1sum\n * server-2.10.25-release.zip | sha1sum\n * agent-2.10.25-release.tar.gz | sha1sum\n * agent-2.10.25-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.24\n\n * jpom-2.10.24.zip\n * server-2.10.24-release.tar.gz | sha1sum\n * server-2.10.24-release.zip | sha1sum\n * agent-2.10.24-release.tar.gz | sha1sum\n * agent-2.10.24-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.23\n\n * jpom-2.10.23.zip\n * server-2.10.23-release.tar.gz | sha1sum\n * server-2.10.23-release.zip | sha1sum\n * agent-2.10.23-release.tar.gz | sha1sum\n * agent-2.10.23-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.22\n\n * jpom-2.10.22.zip\n * server-2.10.22-release.tar.gz | sha1sum\n * server-2.10.22-release.zip | sha1sum\n * agent-2.10.22-release.tar.gz | sha1sum\n * agent-2.10.22-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.21\n\n * jpom-2.10.21.zip\n * server-2.10.21-release.tar.gz | sha1sum\n * server-2.10.21-release.zip | sha1sum\n * agent-2.10.21-release.tar.gz | sha1sum\n * agent-2.10.21-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.20\n\n * jpom-2.10.20.zip\n * server-2.10.20-release.tar.gz | sha1sum\n * server-2.10.20-release.zip | sha1sum\n * agent-2.10.20-release.tar.gz | sha1sum\n * agent-2.10.20-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.19\n\n * jpom-2.10.19.zip\n * server-2.10.19-release.tar.gz | sha1sum\n * server-2.10.19-release.zip | sha1sum\n * agent-2.10.19-release.tar.gz | sha1sum\n * agent-2.10.19-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.18\n\n * jpom-2.10.18.zip\n * server-2.10.18-release.tar.gz | sha1sum\n * server-2.10.18-release.zip | sha1sum\n * agent-2.10.18-release.tar.gz | sha1sum\n * agent-2.10.18-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.17\n\n * jpom-2.10.17.zip\n * server-2.10.17-release.tar.gz | sha1sum\n * server-2.10.17-release.zip | sha1sum\n * agent-2.10.17-release.tar.gz | sha1sum\n * agent-2.10.17-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.16\n\n * jpom-2.10.16.zip\n * server-2.10.16-release.tar.gz | sha1sum\n * server-2.10.16-release.zip | sha1sum\n * agent-2.10.16-release.tar.gz | sha1sum\n * agent-2.10.16-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.15\n\n * jpom-2.10.15.zip\n * server-2.10.15-release.tar.gz | sha1sum\n * server-2.10.15-release.zip | sha1sum\n * agent-2.10.15-release.tar.gz | sha1sum\n * agent-2.10.15-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.14\n\n * jpom-2.10.14.zip\n * server-2.10.14-release.tar.gz | sha1sum\n * server-2.10.14-release.zip | sha1sum\n * agent-2.10.14-release.tar.gz | sha1sum\n * agent-2.10.14-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.13\n\n * jpom-2.10.13.zip\n * server-2.10.13-release.tar.gz | sha1sum\n * server-2.10.13-release.zip | sha1sum\n * agent-2.10.13-release.tar.gz | sha1sum\n * agent-2.10.13-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.12\n\n * jpom-2.10.12.zip\n * server-2.10.12-release.tar.gz | sha1sum\n * server-2.10.12-release.zip | sha1sum\n * agent-2.10.12-release.tar.gz | sha1sum\n * agent-2.10.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.11\n\n * jpom-2.10.11.zip\n * server-2.10.11-release.tar.gz | sha1sum\n * server-2.10.11-release.zip | sha1sum\n * agent-2.10.11-release.tar.gz | sha1sum\n * agent-2.10.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.10\n\n * jpom-2.10.10.zip\n * server-2.10.10-release.tar.gz | sha1sum\n * server-2.10.10-release.zip | sha1sum\n * agent-2.10.10-release.tar.gz | sha1sum\n * agent-2.10.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.9\n\n * jpom-2.10.9.zip\n * server-2.10.9-release.tar.gz | sha1sum\n * server-2.10.9-release.zip | sha1sum\n * agent-2.10.9-release.tar.gz | sha1sum\n * agent-2.10.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.8\n\n * jpom-2.10.8.zip\n * server-2.10.8-release.tar.gz | sha1sum\n * server-2.10.8-release.zip | sha1sum\n * agent-2.10.8-release.tar.gz | sha1sum\n * agent-2.10.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.7\n\n * jpom-2.10.7.zip\n * server-2.10.7-release.tar.gz | sha1sum\n * server-2.10.7-release.zip | sha1sum\n * agent-2.10.7-release.tar.gz | sha1sum\n * agent-2.10.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.6\n\n * jpom-2.10.6.zip\n * server-2.10.6-release.tar.gz | sha1sum\n * server-2.10.6-release.zip | sha1sum\n * agent-2.10.6-release.tar.gz | sha1sum\n * agent-2.10.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.5\n\n * jpom-2.10.5.zip\n * server-2.10.5-release.tar.gz | sha1sum\n * server-2.10.5-release.zip | sha1sum\n * agent-2.10.5-release.tar.gz | sha1sum\n * agent-2.10.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.4\n\n * jpom-2.10.4.zip\n * server-2.10.4-release.tar.gz | sha1sum\n * server-2.10.4-release.zip | sha1sum\n * agent-2.10.4-release.tar.gz | sha1sum\n * agent-2.10.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.3\n\n * jpom-2.10.3.zip\n * server-2.10.3-release.tar.gz | sha1sum\n * server-2.10.3-release.zip | sha1sum\n * agent-2.10.3-release.tar.gz | sha1sum\n * agent-2.10.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.2\n\n * jpom-2.10.2.zip\n * server-2.10.2-release.tar.gz | sha1sum\n * server-2.10.2-release.zip | sha1sum\n * agent-2.10.2-release.tar.gz | sha1sum\n * agent-2.10.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.1\n\n * jpom-2.10.1.zip\n * server-2.10.1-release.tar.gz | sha1sum\n * server-2.10.1-release.zip | sha1sum\n * agent-2.10.1-release.tar.gz | sha1sum\n * agent-2.10.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.0\n\n * jpom-2.10.0.zip\n * server-2.10.0-release.tar.gz | sha1sum\n * server-2.10.0-release.zip | sha1sum\n * agent-2.10.0-release.tar.gz | sha1sum\n * agent-2.10.0-release.zip | sha1sum\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2024/07/02, 05:53:05",lastUpdatedTimestamp:1719899585e3},{title:"2.10.x beta",frontmatter:{title:"2.10.x beta",date:"2023-03-23T12:28:18.000Z",permalink:"/pages/downloads/ba6e33/",categories:["docs","文档","更新日志","下载链接"],tags:["2.10.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/02.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/981.2.10.x%20beta.html",relativePath:"日志&下载/02.下载链接/981.2.10.x beta.md",key:"v-69eb03b9",path:"/pages/downloads/ba6e33/",headers:[{level:2,title:"2.10.47.7-beta",slug:"_2-10-47-7-beta",normalizedTitle:"2.10.47.7-beta",charIndex:2},{level:2,title:"2.10.47.6-beta",slug:"_2-10-47-6-beta",normalizedTitle:"2.10.47.6-beta",charIndex:258},{level:2,title:"2.10.47.5-beta",slug:"_2-10-47-5-beta",normalizedTitle:"2.10.47.5-beta",charIndex:514},{level:2,title:"2.10.47.4-beta",slug:"_2-10-47-4-beta",normalizedTitle:"2.10.47.4-beta",charIndex:770},{level:2,title:"2.10.47.3-beta",slug:"_2-10-47-3-beta",normalizedTitle:"2.10.47.3-beta",charIndex:1026},{level:2,title:"2.10.47.2-beta",slug:"_2-10-47-2-beta",normalizedTitle:"2.10.47.2-beta",charIndex:1282},{level:2,title:"2.10.47.1-beta",slug:"_2-10-47-1-beta",normalizedTitle:"2.10.47.1-beta",charIndex:1538},{level:2,title:"2.10.46.2-beta",slug:"_2-10-46-2-beta",normalizedTitle:"2.10.46.2-beta",charIndex:1794},{level:2,title:"2.10.46.1-beta",slug:"_2-10-46-1-beta",normalizedTitle:"2.10.46.1-beta",charIndex:2050},{level:2,title:"2.10.45.3-beta",slug:"_2-10-45-3-beta",normalizedTitle:"2.10.45.3-beta",charIndex:2306},{level:2,title:"2.10.45.2-beta",slug:"_2-10-45-2-beta",normalizedTitle:"2.10.45.2-beta",charIndex:2562},{level:2,title:"2.10.45.1-beta",slug:"_2-10-45-1-beta",normalizedTitle:"2.10.45.1-beta",charIndex:2818},{level:2,title:"2.10.44.4-beta",slug:"_2-10-44-4-beta",normalizedTitle:"2.10.44.4-beta",charIndex:3074},{level:2,title:"2.10.44.3-beta",slug:"_2-10-44-3-beta",normalizedTitle:"2.10.44.3-beta",charIndex:3330},{level:2,title:"2.10.44.2-beta",slug:"_2-10-44-2-beta",normalizedTitle:"2.10.44.2-beta",charIndex:3586},{level:2,title:"2.10.44.1-beta",slug:"_2-10-44-1-beta",normalizedTitle:"2.10.44.1-beta",charIndex:3842},{level:2,title:"2.10.42.6-beta",slug:"_2-10-42-6-beta",normalizedTitle:"2.10.42.6-beta",charIndex:4098},{level:2,title:"2.10.42.5-beta",slug:"_2-10-42-5-beta",normalizedTitle:"2.10.42.5-beta",charIndex:4354},{level:2,title:"2.10.42.4-beta",slug:"_2-10-42-4-beta",normalizedTitle:"2.10.42.4-beta",charIndex:4610},{level:2,title:"2.10.42.3-beta",slug:"_2-10-42-3-beta",normalizedTitle:"2.10.42.3-beta",charIndex:4866},{level:2,title:"2.10.42.2-beta",slug:"_2-10-42-2-beta",normalizedTitle:"2.10.42.2-beta",charIndex:5122},{level:2,title:"2.10.42.1-beta",slug:"_2-10-42-1-beta",normalizedTitle:"2.10.42.1-beta",charIndex:5378},{level:2,title:"2.10.41.3-beta",slug:"_2-10-41-3-beta",normalizedTitle:"2.10.41.3-beta",charIndex:5634},{level:2,title:"2.10.41.2-beta",slug:"_2-10-41-2-beta",normalizedTitle:"2.10.41.2-beta",charIndex:5890},{level:2,title:"2.10.41.1-beta",slug:"_2-10-41-1-beta",normalizedTitle:"2.10.41.1-beta",charIndex:6146},{level:2,title:"2.10.40.8-beta",slug:"_2-10-40-8-beta",normalizedTitle:"2.10.40.8-beta",charIndex:6402},{level:2,title:"2.10.40.7-beta",slug:"_2-10-40-7-beta",normalizedTitle:"2.10.40.7-beta",charIndex:6658},{level:2,title:"2.10.40.6-beta",slug:"_2-10-40-6-beta",normalizedTitle:"2.10.40.6-beta",charIndex:6914},{level:2,title:"2.10.40.5-beta",slug:"_2-10-40-5-beta",normalizedTitle:"2.10.40.5-beta",charIndex:7170},{level:2,title:"2.10.40.4-beta",slug:"_2-10-40-4-beta",normalizedTitle:"2.10.40.4-beta",charIndex:7426},{level:2,title:"2.10.40.3-beta",slug:"_2-10-40-3-beta",normalizedTitle:"2.10.40.3-beta",charIndex:7682},{level:2,title:"2.10.40.2-beta",slug:"_2-10-40-2-beta",normalizedTitle:"2.10.40.2-beta",charIndex:7938},{level:2,title:"2.10.40.1-beta",slug:"_2-10-40-1-beta",normalizedTitle:"2.10.40.1-beta",charIndex:8194},{level:2,title:"2.10.39.4-beta",slug:"_2-10-39-4-beta",normalizedTitle:"2.10.39.4-beta",charIndex:8450},{level:2,title:"2.10.39.3-beta",slug:"_2-10-39-3-beta",normalizedTitle:"2.10.39.3-beta",charIndex:8706},{level:2,title:"2.10.39.2-beta",slug:"_2-10-39-2-beta",normalizedTitle:"2.10.39.2-beta",charIndex:8962},{level:2,title:"2.10.39.1-beta",slug:"_2-10-39-1-beta",normalizedTitle:"2.10.39.1-beta",charIndex:9218},{level:2,title:"2.10.38.11-beta",slug:"_2-10-38-11-beta",normalizedTitle:"2.10.38.11-beta",charIndex:9474},{level:2,title:"2.10.38.10-beta",slug:"_2-10-38-10-beta",normalizedTitle:"2.10.38.10-beta",charIndex:9736},{level:2,title:"2.10.38.9-beta",slug:"_2-10-38-9-beta",normalizedTitle:"2.10.38.9-beta",charIndex:9998},{level:2,title:"2.10.38.8-beta",slug:"_2-10-38-8-beta",normalizedTitle:"2.10.38.8-beta",charIndex:10254},{level:2,title:"2.10.38.7-beta",slug:"_2-10-38-7-beta",normalizedTitle:"2.10.38.7-beta",charIndex:10510},{level:2,title:"2.10.38.6-beta",slug:"_2-10-38-6-beta",normalizedTitle:"2.10.38.6-beta",charIndex:10766},{level:2,title:"2.10.38.5-beta",slug:"_2-10-38-5-beta",normalizedTitle:"2.10.38.5-beta",charIndex:11022},{level:2,title:"2.10.38.4-beta",slug:"_2-10-38-4-beta",normalizedTitle:"2.10.38.4-beta",charIndex:11278},{level:2,title:"2.10.38.3-beta",slug:"_2-10-38-3-beta",normalizedTitle:"2.10.38.3-beta",charIndex:11534},{level:2,title:"2.10.38.2-beta",slug:"_2-10-38-2-beta",normalizedTitle:"2.10.38.2-beta",charIndex:11790},{level:2,title:"2.10.38.1-beta",slug:"_2-10-38-1-beta",normalizedTitle:"2.10.38.1-beta",charIndex:12046}],headersStr:"2.10.47.7-beta 2.10.47.6-beta 2.10.47.5-beta 2.10.47.4-beta 2.10.47.3-beta 2.10.47.2-beta 2.10.47.1-beta 2.10.46.2-beta 2.10.46.1-beta 2.10.45.3-beta 2.10.45.2-beta 2.10.45.1-beta 2.10.44.4-beta 2.10.44.3-beta 2.10.44.2-beta 2.10.44.1-beta 2.10.42.6-beta 2.10.42.5-beta 2.10.42.4-beta 2.10.42.3-beta 2.10.42.2-beta 2.10.42.1-beta 2.10.41.3-beta 2.10.41.2-beta 2.10.41.1-beta 2.10.40.8-beta 2.10.40.7-beta 2.10.40.6-beta 2.10.40.5-beta 2.10.40.4-beta 2.10.40.3-beta 2.10.40.2-beta 2.10.40.1-beta 2.10.39.4-beta 2.10.39.3-beta 2.10.39.2-beta 2.10.39.1-beta 2.10.38.11-beta 2.10.38.10-beta 2.10.38.9-beta 2.10.38.8-beta 2.10.38.7-beta 2.10.38.6-beta 2.10.38.5-beta 2.10.38.4-beta 2.10.38.3-beta 2.10.38.2-beta 2.10.38.1-beta",content:"# 2.10.47.7-beta\n\n * jpom-2.10.47.7.zip\n * server-2.10.47.7-release.tar.gz | sha1sum\n * server-2.10.47.7-release.zip | sha1sum\n * agent-2.10.47.7-release.tar.gz | sha1sum\n * agent-2.10.47.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.6-beta\n\n * jpom-2.10.47.6.zip\n * server-2.10.47.6-release.tar.gz | sha1sum\n * server-2.10.47.6-release.zip | sha1sum\n * agent-2.10.47.6-release.tar.gz | sha1sum\n * agent-2.10.47.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.5-beta\n\n * jpom-2.10.47.5.zip\n * server-2.10.47.5-release.tar.gz | sha1sum\n * server-2.10.47.5-release.zip | sha1sum\n * agent-2.10.47.5-release.tar.gz | sha1sum\n * agent-2.10.47.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.4-beta\n\n * jpom-2.10.47.4.zip\n * server-2.10.47.4-release.tar.gz | sha1sum\n * server-2.10.47.4-release.zip | sha1sum\n * agent-2.10.47.4-release.tar.gz | sha1sum\n * agent-2.10.47.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.3-beta\n\n * jpom-2.10.47.3.zip\n * server-2.10.47.3-release.tar.gz | sha1sum\n * server-2.10.47.3-release.zip | sha1sum\n * agent-2.10.47.3-release.tar.gz | sha1sum\n * agent-2.10.47.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.2-beta\n\n * jpom-2.10.47.2.zip\n * server-2.10.47.2-release.tar.gz | sha1sum\n * server-2.10.47.2-release.zip | sha1sum\n * agent-2.10.47.2-release.tar.gz | sha1sum\n * agent-2.10.47.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.1-beta\n\n * jpom-2.10.47.1.zip\n * server-2.10.47.1-release.tar.gz | sha1sum\n * server-2.10.47.1-release.zip | sha1sum\n * agent-2.10.47.1-release.tar.gz | sha1sum\n * agent-2.10.47.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.46.2-beta\n\n * jpom-2.10.46.2.zip\n * server-2.10.46.2-release.tar.gz | sha1sum\n * server-2.10.46.2-release.zip | sha1sum\n * agent-2.10.46.2-release.tar.gz | sha1sum\n * agent-2.10.46.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.46.1-beta\n\n * jpom-2.10.46.1.zip\n * server-2.10.46.1-release.tar.gz | sha1sum\n * server-2.10.46.1-release.zip | sha1sum\n * agent-2.10.46.1-release.tar.gz | sha1sum\n * agent-2.10.46.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45.3-beta\n\n * jpom-2.10.45.3.zip\n * server-2.10.45.3-release.tar.gz | sha1sum\n * server-2.10.45.3-release.zip | sha1sum\n * agent-2.10.45.3-release.tar.gz | sha1sum\n * agent-2.10.45.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45.2-beta\n\n * jpom-2.10.45.2.zip\n * server-2.10.45.2-release.tar.gz | sha1sum\n * server-2.10.45.2-release.zip | sha1sum\n * agent-2.10.45.2-release.tar.gz | sha1sum\n * agent-2.10.45.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45.1-beta\n\n * jpom-2.10.45.1.zip\n * server-2.10.45.1-release.tar.gz | sha1sum\n * server-2.10.45.1-release.zip | sha1sum\n * agent-2.10.45.1-release.tar.gz | sha1sum\n * agent-2.10.45.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.4-beta\n\n * jpom-2.10.44.4.zip\n * server-2.10.44.4-release.tar.gz | sha1sum\n * server-2.10.44.4-release.zip | sha1sum\n * agent-2.10.44.4-release.tar.gz | sha1sum\n * agent-2.10.44.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.3-beta\n\n * jpom-2.10.44.3.zip\n * server-2.10.44.3-release.tar.gz | sha1sum\n * server-2.10.44.3-release.zip | sha1sum\n * agent-2.10.44.3-release.tar.gz | sha1sum\n * agent-2.10.44.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.2-beta\n\n * jpom-2.10.44.2.zip\n * server-2.10.44.2-release.tar.gz | sha1sum\n * server-2.10.44.2-release.zip | sha1sum\n * agent-2.10.44.2-release.tar.gz | sha1sum\n * agent-2.10.44.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.1-beta\n\n * jpom-2.10.44.1.zip\n * server-2.10.44.1-release.tar.gz | sha1sum\n * server-2.10.44.1-release.zip | sha1sum\n * agent-2.10.44.1-release.tar.gz | sha1sum\n * agent-2.10.44.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.6-beta\n\n * jpom-2.10.42.6.zip\n * server-2.10.42.6-release.tar.gz | sha1sum\n * server-2.10.42.6-release.zip | sha1sum\n * agent-2.10.42.6-release.tar.gz | sha1sum\n * agent-2.10.42.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.5-beta\n\n * jpom-2.10.42.5.zip\n * server-2.10.42.5-release.tar.gz | sha1sum\n * server-2.10.42.5-release.zip | sha1sum\n * agent-2.10.42.5-release.tar.gz | sha1sum\n * agent-2.10.42.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.4-beta\n\n * jpom-2.10.42.4.zip\n * server-2.10.42.4-release.tar.gz | sha1sum\n * server-2.10.42.4-release.zip | sha1sum\n * agent-2.10.42.4-release.tar.gz | sha1sum\n * agent-2.10.42.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.3-beta\n\n * jpom-2.10.42.3.zip\n * server-2.10.42.3-release.tar.gz | sha1sum\n * server-2.10.42.3-release.zip | sha1sum\n * agent-2.10.42.3-release.tar.gz | sha1sum\n * agent-2.10.42.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.2-beta\n\n * jpom-2.10.42.2.zip\n * server-2.10.42.2-release.tar.gz | sha1sum\n * server-2.10.42.2-release.zip | sha1sum\n * agent-2.10.42.2-release.tar.gz | sha1sum\n * agent-2.10.42.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.1-beta\n\n * jpom-2.10.42.1.zip\n * server-2.10.42.1-release.tar.gz | sha1sum\n * server-2.10.42.1-release.zip | sha1sum\n * agent-2.10.42.1-release.tar.gz | sha1sum\n * agent-2.10.42.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41.3-beta\n\n * jpom-2.10.41.3.zip\n * server-2.10.41.3-release.tar.gz | sha1sum\n * server-2.10.41.3-release.zip | sha1sum\n * agent-2.10.41.3-release.tar.gz | sha1sum\n * agent-2.10.41.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41.2-beta\n\n * jpom-2.10.41.2.zip\n * server-2.10.41.2-release.tar.gz | sha1sum\n * server-2.10.41.2-release.zip | sha1sum\n * agent-2.10.41.2-release.tar.gz | sha1sum\n * agent-2.10.41.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41.1-beta\n\n * jpom-2.10.41.1.zip\n * server-2.10.41.1-release.tar.gz | sha1sum\n * server-2.10.41.1-release.zip | sha1sum\n * agent-2.10.41.1-release.tar.gz | sha1sum\n * agent-2.10.41.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.8-beta\n\n * jpom-2.10.40.8.zip\n * server-2.10.40.8-release.tar.gz | sha1sum\n * server-2.10.40.8-release.zip | sha1sum\n * agent-2.10.40.8-release.tar.gz | sha1sum\n * agent-2.10.40.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.7-beta\n\n * jpom-2.10.40.7.zip\n * server-2.10.40.7-release.tar.gz | sha1sum\n * server-2.10.40.7-release.zip | sha1sum\n * agent-2.10.40.7-release.tar.gz | sha1sum\n * agent-2.10.40.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.6-beta\n\n * jpom-2.10.40.6.zip\n * server-2.10.40.6-release.tar.gz | sha1sum\n * server-2.10.40.6-release.zip | sha1sum\n * agent-2.10.40.6-release.tar.gz | sha1sum\n * agent-2.10.40.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.5-beta\n\n * jpom-2.10.40.5.zip\n * server-2.10.40.5-release.tar.gz | sha1sum\n * server-2.10.40.5-release.zip | sha1sum\n * agent-2.10.40.5-release.tar.gz | sha1sum\n * agent-2.10.40.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.4-beta\n\n * jpom-2.10.40.4.zip\n * server-2.10.40.4-release.tar.gz | sha1sum\n * server-2.10.40.4-release.zip | sha1sum\n * agent-2.10.40.4-release.tar.gz | sha1sum\n * agent-2.10.40.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.3-beta\n\n * jpom-2.10.40.3.zip\n * server-2.10.40.3-release.tar.gz | sha1sum\n * server-2.10.40.3-release.zip | sha1sum\n * agent-2.10.40.3-release.tar.gz | sha1sum\n * agent-2.10.40.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.2-beta\n\n * jpom-2.10.40.2.zip\n * server-2.10.40.2-release.tar.gz | sha1sum\n * server-2.10.40.2-release.zip | sha1sum\n * agent-2.10.40.2-release.tar.gz | sha1sum\n * agent-2.10.40.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.1-beta\n\n * jpom-2.10.40.1.zip\n * server-2.10.40.1-release.tar.gz | sha1sum\n * server-2.10.40.1-release.zip | sha1sum\n * agent-2.10.40.1-release.tar.gz | sha1sum\n * agent-2.10.40.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.4-beta\n\n * jpom-2.10.39.4.zip\n * server-2.10.39.4-release.tar.gz | sha1sum\n * server-2.10.39.4-release.zip | sha1sum\n * agent-2.10.39.4-release.tar.gz | sha1sum\n * agent-2.10.39.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.3-beta\n\n * jpom-2.10.39.3.zip\n * server-2.10.39.3-release.tar.gz | sha1sum\n * server-2.10.39.3-release.zip | sha1sum\n * agent-2.10.39.3-release.tar.gz | sha1sum\n * agent-2.10.39.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.2-beta\n\n * jpom-2.10.39.2.zip\n * server-2.10.39.2-release.tar.gz | sha1sum\n * server-2.10.39.2-release.zip | sha1sum\n * agent-2.10.39.2-release.tar.gz | sha1sum\n * agent-2.10.39.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.1-beta\n\n * jpom-2.10.39.1.zip\n * server-2.10.39.1-release.tar.gz | sha1sum\n * server-2.10.39.1-release.zip | sha1sum\n * agent-2.10.39.1-release.tar.gz | sha1sum\n * agent-2.10.39.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.11-beta\n\n * jpom-2.10.38.11.zip\n * server-2.10.38.11-release.tar.gz | sha1sum\n * server-2.10.38.11-release.zip | sha1sum\n * agent-2.10.38.11-release.tar.gz | sha1sum\n * agent-2.10.38.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.10-beta\n\n * jpom-2.10.38.10.zip\n * server-2.10.38.10-release.tar.gz | sha1sum\n * server-2.10.38.10-release.zip | sha1sum\n * agent-2.10.38.10-release.tar.gz | sha1sum\n * agent-2.10.38.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.9-beta\n\n * jpom-2.10.38.9.zip\n * server-2.10.38.9-release.tar.gz | sha1sum\n * server-2.10.38.9-release.zip | sha1sum\n * agent-2.10.38.9-release.tar.gz | sha1sum\n * agent-2.10.38.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.8-beta\n\n * jpom-2.10.38.8.zip\n * server-2.10.38.8-release.tar.gz | sha1sum\n * server-2.10.38.8-release.zip | sha1sum\n * agent-2.10.38.8-release.tar.gz | sha1sum\n * agent-2.10.38.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.7-beta\n\n * jpom-2.10.38.7.zip\n * server-2.10.38.7-release.tar.gz | sha1sum\n * server-2.10.38.7-release.zip | sha1sum\n * agent-2.10.38.7-release.tar.gz | sha1sum\n * agent-2.10.38.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.6-beta\n\n * jpom-2.10.38.6.zip\n * server-2.10.38.6-release.tar.gz | sha1sum\n * server-2.10.38.6-release.zip | sha1sum\n * agent-2.10.38.6-release.tar.gz | sha1sum\n * agent-2.10.38.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.5-beta\n\n * jpom-2.10.38.5.zip\n * server-2.10.38.5-release.tar.gz | sha1sum\n * server-2.10.38.5-release.zip | sha1sum\n * agent-2.10.38.5-release.tar.gz | sha1sum\n * agent-2.10.38.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.4-beta\n\n * jpom-2.10.38.4.zip\n * server-2.10.38.4-release.tar.gz | sha1sum\n * server-2.10.38.4-release.zip | sha1sum\n * agent-2.10.38.4-release.tar.gz | sha1sum\n * agent-2.10.38.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.3-beta\n\n * jpom-2.10.38.3.zip\n * server-2.10.38.3-release.tar.gz | sha1sum\n * server-2.10.38.3-release.zip | sha1sum\n * agent-2.10.38.3-release.tar.gz | sha1sum\n * agent-2.10.38.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.2-beta\n\n * jpom-2.10.38.2.zip\n * server-2.10.38.2-release.tar.gz | sha1sum\n * server-2.10.38.2-release.zip | sha1sum\n * agent-2.10.38.2-release.tar.gz | sha1sum\n * agent-2.10.38.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.1-beta\n\n * jpom-2.10.38.1.zip\n * server-2.10.38.1-release.tar.gz | sha1sum\n * server-2.10.38.1-release.zip | sha1sum\n * agent-2.10.38.1-release.tar.gz | sha1sum\n * agent-2.10.38.1-release.zip | sha1sum\n\n----------------------------------------",normalizedContent:"# 2.10.47.7-beta\n\n * jpom-2.10.47.7.zip\n * server-2.10.47.7-release.tar.gz | sha1sum\n * server-2.10.47.7-release.zip | sha1sum\n * agent-2.10.47.7-release.tar.gz | sha1sum\n * agent-2.10.47.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.6-beta\n\n * jpom-2.10.47.6.zip\n * server-2.10.47.6-release.tar.gz | sha1sum\n * server-2.10.47.6-release.zip | sha1sum\n * agent-2.10.47.6-release.tar.gz | sha1sum\n * agent-2.10.47.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.5-beta\n\n * jpom-2.10.47.5.zip\n * server-2.10.47.5-release.tar.gz | sha1sum\n * server-2.10.47.5-release.zip | sha1sum\n * agent-2.10.47.5-release.tar.gz | sha1sum\n * agent-2.10.47.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.4-beta\n\n * jpom-2.10.47.4.zip\n * server-2.10.47.4-release.tar.gz | sha1sum\n * server-2.10.47.4-release.zip | sha1sum\n * agent-2.10.47.4-release.tar.gz | sha1sum\n * agent-2.10.47.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.3-beta\n\n * jpom-2.10.47.3.zip\n * server-2.10.47.3-release.tar.gz | sha1sum\n * server-2.10.47.3-release.zip | sha1sum\n * agent-2.10.47.3-release.tar.gz | sha1sum\n * agent-2.10.47.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.2-beta\n\n * jpom-2.10.47.2.zip\n * server-2.10.47.2-release.tar.gz | sha1sum\n * server-2.10.47.2-release.zip | sha1sum\n * agent-2.10.47.2-release.tar.gz | sha1sum\n * agent-2.10.47.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.47.1-beta\n\n * jpom-2.10.47.1.zip\n * server-2.10.47.1-release.tar.gz | sha1sum\n * server-2.10.47.1-release.zip | sha1sum\n * agent-2.10.47.1-release.tar.gz | sha1sum\n * agent-2.10.47.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.46.2-beta\n\n * jpom-2.10.46.2.zip\n * server-2.10.46.2-release.tar.gz | sha1sum\n * server-2.10.46.2-release.zip | sha1sum\n * agent-2.10.46.2-release.tar.gz | sha1sum\n * agent-2.10.46.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.46.1-beta\n\n * jpom-2.10.46.1.zip\n * server-2.10.46.1-release.tar.gz | sha1sum\n * server-2.10.46.1-release.zip | sha1sum\n * agent-2.10.46.1-release.tar.gz | sha1sum\n * agent-2.10.46.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45.3-beta\n\n * jpom-2.10.45.3.zip\n * server-2.10.45.3-release.tar.gz | sha1sum\n * server-2.10.45.3-release.zip | sha1sum\n * agent-2.10.45.3-release.tar.gz | sha1sum\n * agent-2.10.45.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45.2-beta\n\n * jpom-2.10.45.2.zip\n * server-2.10.45.2-release.tar.gz | sha1sum\n * server-2.10.45.2-release.zip | sha1sum\n * agent-2.10.45.2-release.tar.gz | sha1sum\n * agent-2.10.45.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.45.1-beta\n\n * jpom-2.10.45.1.zip\n * server-2.10.45.1-release.tar.gz | sha1sum\n * server-2.10.45.1-release.zip | sha1sum\n * agent-2.10.45.1-release.tar.gz | sha1sum\n * agent-2.10.45.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.4-beta\n\n * jpom-2.10.44.4.zip\n * server-2.10.44.4-release.tar.gz | sha1sum\n * server-2.10.44.4-release.zip | sha1sum\n * agent-2.10.44.4-release.tar.gz | sha1sum\n * agent-2.10.44.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.3-beta\n\n * jpom-2.10.44.3.zip\n * server-2.10.44.3-release.tar.gz | sha1sum\n * server-2.10.44.3-release.zip | sha1sum\n * agent-2.10.44.3-release.tar.gz | sha1sum\n * agent-2.10.44.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.2-beta\n\n * jpom-2.10.44.2.zip\n * server-2.10.44.2-release.tar.gz | sha1sum\n * server-2.10.44.2-release.zip | sha1sum\n * agent-2.10.44.2-release.tar.gz | sha1sum\n * agent-2.10.44.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.44.1-beta\n\n * jpom-2.10.44.1.zip\n * server-2.10.44.1-release.tar.gz | sha1sum\n * server-2.10.44.1-release.zip | sha1sum\n * agent-2.10.44.1-release.tar.gz | sha1sum\n * agent-2.10.44.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.6-beta\n\n * jpom-2.10.42.6.zip\n * server-2.10.42.6-release.tar.gz | sha1sum\n * server-2.10.42.6-release.zip | sha1sum\n * agent-2.10.42.6-release.tar.gz | sha1sum\n * agent-2.10.42.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.5-beta\n\n * jpom-2.10.42.5.zip\n * server-2.10.42.5-release.tar.gz | sha1sum\n * server-2.10.42.5-release.zip | sha1sum\n * agent-2.10.42.5-release.tar.gz | sha1sum\n * agent-2.10.42.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.4-beta\n\n * jpom-2.10.42.4.zip\n * server-2.10.42.4-release.tar.gz | sha1sum\n * server-2.10.42.4-release.zip | sha1sum\n * agent-2.10.42.4-release.tar.gz | sha1sum\n * agent-2.10.42.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.3-beta\n\n * jpom-2.10.42.3.zip\n * server-2.10.42.3-release.tar.gz | sha1sum\n * server-2.10.42.3-release.zip | sha1sum\n * agent-2.10.42.3-release.tar.gz | sha1sum\n * agent-2.10.42.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.2-beta\n\n * jpom-2.10.42.2.zip\n * server-2.10.42.2-release.tar.gz | sha1sum\n * server-2.10.42.2-release.zip | sha1sum\n * agent-2.10.42.2-release.tar.gz | sha1sum\n * agent-2.10.42.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.42.1-beta\n\n * jpom-2.10.42.1.zip\n * server-2.10.42.1-release.tar.gz | sha1sum\n * server-2.10.42.1-release.zip | sha1sum\n * agent-2.10.42.1-release.tar.gz | sha1sum\n * agent-2.10.42.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41.3-beta\n\n * jpom-2.10.41.3.zip\n * server-2.10.41.3-release.tar.gz | sha1sum\n * server-2.10.41.3-release.zip | sha1sum\n * agent-2.10.41.3-release.tar.gz | sha1sum\n * agent-2.10.41.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41.2-beta\n\n * jpom-2.10.41.2.zip\n * server-2.10.41.2-release.tar.gz | sha1sum\n * server-2.10.41.2-release.zip | sha1sum\n * agent-2.10.41.2-release.tar.gz | sha1sum\n * agent-2.10.41.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.41.1-beta\n\n * jpom-2.10.41.1.zip\n * server-2.10.41.1-release.tar.gz | sha1sum\n * server-2.10.41.1-release.zip | sha1sum\n * agent-2.10.41.1-release.tar.gz | sha1sum\n * agent-2.10.41.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.8-beta\n\n * jpom-2.10.40.8.zip\n * server-2.10.40.8-release.tar.gz | sha1sum\n * server-2.10.40.8-release.zip | sha1sum\n * agent-2.10.40.8-release.tar.gz | sha1sum\n * agent-2.10.40.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.7-beta\n\n * jpom-2.10.40.7.zip\n * server-2.10.40.7-release.tar.gz | sha1sum\n * server-2.10.40.7-release.zip | sha1sum\n * agent-2.10.40.7-release.tar.gz | sha1sum\n * agent-2.10.40.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.6-beta\n\n * jpom-2.10.40.6.zip\n * server-2.10.40.6-release.tar.gz | sha1sum\n * server-2.10.40.6-release.zip | sha1sum\n * agent-2.10.40.6-release.tar.gz | sha1sum\n * agent-2.10.40.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.5-beta\n\n * jpom-2.10.40.5.zip\n * server-2.10.40.5-release.tar.gz | sha1sum\n * server-2.10.40.5-release.zip | sha1sum\n * agent-2.10.40.5-release.tar.gz | sha1sum\n * agent-2.10.40.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.4-beta\n\n * jpom-2.10.40.4.zip\n * server-2.10.40.4-release.tar.gz | sha1sum\n * server-2.10.40.4-release.zip | sha1sum\n * agent-2.10.40.4-release.tar.gz | sha1sum\n * agent-2.10.40.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.3-beta\n\n * jpom-2.10.40.3.zip\n * server-2.10.40.3-release.tar.gz | sha1sum\n * server-2.10.40.3-release.zip | sha1sum\n * agent-2.10.40.3-release.tar.gz | sha1sum\n * agent-2.10.40.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.2-beta\n\n * jpom-2.10.40.2.zip\n * server-2.10.40.2-release.tar.gz | sha1sum\n * server-2.10.40.2-release.zip | sha1sum\n * agent-2.10.40.2-release.tar.gz | sha1sum\n * agent-2.10.40.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.40.1-beta\n\n * jpom-2.10.40.1.zip\n * server-2.10.40.1-release.tar.gz | sha1sum\n * server-2.10.40.1-release.zip | sha1sum\n * agent-2.10.40.1-release.tar.gz | sha1sum\n * agent-2.10.40.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.4-beta\n\n * jpom-2.10.39.4.zip\n * server-2.10.39.4-release.tar.gz | sha1sum\n * server-2.10.39.4-release.zip | sha1sum\n * agent-2.10.39.4-release.tar.gz | sha1sum\n * agent-2.10.39.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.3-beta\n\n * jpom-2.10.39.3.zip\n * server-2.10.39.3-release.tar.gz | sha1sum\n * server-2.10.39.3-release.zip | sha1sum\n * agent-2.10.39.3-release.tar.gz | sha1sum\n * agent-2.10.39.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.2-beta\n\n * jpom-2.10.39.2.zip\n * server-2.10.39.2-release.tar.gz | sha1sum\n * server-2.10.39.2-release.zip | sha1sum\n * agent-2.10.39.2-release.tar.gz | sha1sum\n * agent-2.10.39.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.39.1-beta\n\n * jpom-2.10.39.1.zip\n * server-2.10.39.1-release.tar.gz | sha1sum\n * server-2.10.39.1-release.zip | sha1sum\n * agent-2.10.39.1-release.tar.gz | sha1sum\n * agent-2.10.39.1-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.11-beta\n\n * jpom-2.10.38.11.zip\n * server-2.10.38.11-release.tar.gz | sha1sum\n * server-2.10.38.11-release.zip | sha1sum\n * agent-2.10.38.11-release.tar.gz | sha1sum\n * agent-2.10.38.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.10-beta\n\n * jpom-2.10.38.10.zip\n * server-2.10.38.10-release.tar.gz | sha1sum\n * server-2.10.38.10-release.zip | sha1sum\n * agent-2.10.38.10-release.tar.gz | sha1sum\n * agent-2.10.38.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.9-beta\n\n * jpom-2.10.38.9.zip\n * server-2.10.38.9-release.tar.gz | sha1sum\n * server-2.10.38.9-release.zip | sha1sum\n * agent-2.10.38.9-release.tar.gz | sha1sum\n * agent-2.10.38.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.8-beta\n\n * jpom-2.10.38.8.zip\n * server-2.10.38.8-release.tar.gz | sha1sum\n * server-2.10.38.8-release.zip | sha1sum\n * agent-2.10.38.8-release.tar.gz | sha1sum\n * agent-2.10.38.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.7-beta\n\n * jpom-2.10.38.7.zip\n * server-2.10.38.7-release.tar.gz | sha1sum\n * server-2.10.38.7-release.zip | sha1sum\n * agent-2.10.38.7-release.tar.gz | sha1sum\n * agent-2.10.38.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.6-beta\n\n * jpom-2.10.38.6.zip\n * server-2.10.38.6-release.tar.gz | sha1sum\n * server-2.10.38.6-release.zip | sha1sum\n * agent-2.10.38.6-release.tar.gz | sha1sum\n * agent-2.10.38.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.5-beta\n\n * jpom-2.10.38.5.zip\n * server-2.10.38.5-release.tar.gz | sha1sum\n * server-2.10.38.5-release.zip | sha1sum\n * agent-2.10.38.5-release.tar.gz | sha1sum\n * agent-2.10.38.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.4-beta\n\n * jpom-2.10.38.4.zip\n * server-2.10.38.4-release.tar.gz | sha1sum\n * server-2.10.38.4-release.zip | sha1sum\n * agent-2.10.38.4-release.tar.gz | sha1sum\n * agent-2.10.38.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.3-beta\n\n * jpom-2.10.38.3.zip\n * server-2.10.38.3-release.tar.gz | sha1sum\n * server-2.10.38.3-release.zip | sha1sum\n * agent-2.10.38.3-release.tar.gz | sha1sum\n * agent-2.10.38.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.2-beta\n\n * jpom-2.10.38.2.zip\n * server-2.10.38.2-release.tar.gz | sha1sum\n * server-2.10.38.2-release.zip | sha1sum\n * agent-2.10.38.2-release.tar.gz | sha1sum\n * agent-2.10.38.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.10.38.1-beta\n\n * jpom-2.10.38.1.zip\n * server-2.10.38.1-release.tar.gz | sha1sum\n * server-2.10.38.1-release.zip | sha1sum\n * agent-2.10.38.1-release.tar.gz | sha1sum\n * agent-2.10.38.1-release.zip | sha1sum\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2024/07/02, 05:53:05",lastUpdatedTimestamp:1719899585e3},{title:"2.9.x 下载地址",frontmatter:{title:"2.9.x 下载地址",date:"2022-12-19T18:59:51.000Z",permalink:"/pages/downloads/downloads-2.9.x/",categories:["docs","更新日志","下载链接"],tags:["2.9.x"],readingShow:"top"},regularPath:"/%E6%97%A5%E5%BF%97&%E4%B8%8B%E8%BD%BD/02.%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5/999.2.9.x.html",relativePath:"日志&下载/02.下载链接/999.2.9.x.md",key:"v-c4f83d88",path:"/pages/downloads/downloads-2.9.x/",headers:[{level:2,title:"2.9.21",slug:"_2-9-21",normalizedTitle:"2.9.21",charIndex:2},{level:2,title:"2.9.20",slug:"_2-9-20",normalizedTitle:"2.9.20",charIndex:235},{level:2,title:"2.9.19",slug:"_2-9-19",normalizedTitle:"2.9.19",charIndex:468},{level:2,title:"2.9.18",slug:"_2-9-18",normalizedTitle:"2.9.18",charIndex:701},{level:2,title:"2.9.17",slug:"_2-9-17",normalizedTitle:"2.9.17",charIndex:934},{level:2,title:"2.9.16",slug:"_2-9-16",normalizedTitle:"2.9.16",charIndex:1167},{level:2,title:"2.9.15",slug:"_2-9-15",normalizedTitle:"2.9.15",charIndex:1400},{level:2,title:"2.9.14",slug:"_2-9-14",normalizedTitle:"2.9.14",charIndex:1633},{level:2,title:"2.9.13",slug:"_2-9-13",normalizedTitle:"2.9.13",charIndex:1866},{level:2,title:"2.9.12",slug:"_2-9-12",normalizedTitle:"2.9.12",charIndex:2099},{level:2,title:"2.9.11",slug:"_2-9-11",normalizedTitle:"2.9.11",charIndex:2332},{level:2,title:"2.9.10",slug:"_2-9-10",normalizedTitle:"2.9.10",charIndex:2565},{level:2,title:"2.9.9",slug:"_2-9-9",normalizedTitle:"2.9.9",charIndex:2798},{level:2,title:"2.9.8",slug:"_2-9-8",normalizedTitle:"2.9.8",charIndex:3025},{level:2,title:"2.9.7",slug:"_2-9-7",normalizedTitle:"2.9.7",charIndex:3252},{level:2,title:"2.9.6",slug:"_2-9-6",normalizedTitle:"2.9.6",charIndex:3479},{level:2,title:"2.9.5",slug:"_2-9-5",normalizedTitle:"2.9.5",charIndex:3706},{level:2,title:"2.9.4",slug:"_2-9-4",normalizedTitle:"2.9.4",charIndex:3933},{level:2,title:"2.9.3",slug:"_2-9-3",normalizedTitle:"2.9.3",charIndex:4160},{level:2,title:"2.9.2",slug:"_2-9-2",normalizedTitle:"2.9.2",charIndex:2},{level:2,title:"2.9.1",slug:"_2-9-1",normalizedTitle:"2.9.1",charIndex:468}],headersStr:"2.9.21 2.9.20 2.9.19 2.9.18 2.9.17 2.9.16 2.9.15 2.9.14 2.9.13 2.9.12 2.9.11 2.9.10 2.9.9 2.9.8 2.9.7 2.9.6 2.9.5 2.9.4 2.9.3 2.9.2 2.9.1",content:"# 2.9.21\n\n * jpom-2.9.21.zip\n * server-2.9.21-release.tar.gz | sha1sum\n * server-2.9.21-release.zip | sha1sum\n * agent-2.9.21-release.tar.gz | sha1sum\n * agent-2.9.21-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.20\n\n * jpom-2.9.20.zip\n * server-2.9.20-release.tar.gz | sha1sum\n * server-2.9.20-release.zip | sha1sum\n * agent-2.9.20-release.tar.gz | sha1sum\n * agent-2.9.20-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.19\n\n * jpom-2.9.19.zip\n * server-2.9.19-release.tar.gz | sha1sum\n * server-2.9.19-release.zip | sha1sum\n * agent-2.9.19-release.tar.gz | sha1sum\n * agent-2.9.19-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.18\n\n * jpom-2.9.18.zip\n * server-2.9.18-release.tar.gz | sha1sum\n * server-2.9.18-release.zip | sha1sum\n * agent-2.9.18-release.tar.gz | sha1sum\n * agent-2.9.18-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.17\n\n * jpom-2.9.17.zip\n * server-2.9.17-release.tar.gz | sha1sum\n * server-2.9.17-release.zip | sha1sum\n * agent-2.9.17-release.tar.gz | sha1sum\n * agent-2.9.17-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.16\n\n * jpom-2.9.16.zip\n * server-2.9.16-release.tar.gz | sha1sum\n * server-2.9.16-release.zip | sha1sum\n * agent-2.9.16-release.tar.gz | sha1sum\n * agent-2.9.16-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.15\n\n * jpom-2.9.15.zip\n * server-2.9.15-release.tar.gz | sha1sum\n * server-2.9.15-release.zip | sha1sum\n * agent-2.9.15-release.tar.gz | sha1sum\n * agent-2.9.15-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.14\n\n * jpom-2.9.14.zip\n * server-2.9.14-release.tar.gz | sha1sum\n * server-2.9.14-release.zip | sha1sum\n * agent-2.9.14-release.tar.gz | sha1sum\n * agent-2.9.14-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.13\n\n * jpom-2.9.13.zip\n * server-2.9.13-release.tar.gz | sha1sum\n * server-2.9.13-release.zip | sha1sum\n * agent-2.9.13-release.tar.gz | sha1sum\n * agent-2.9.13-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.12\n\n * jpom-2.9.12.zip\n * server-2.9.12-release.tar.gz | sha1sum\n * server-2.9.12-release.zip | sha1sum\n * agent-2.9.12-release.tar.gz | sha1sum\n * agent-2.9.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.11\n\n * jpom-2.9.11.zip\n * server-2.9.11-release.tar.gz | sha1sum\n * server-2.9.11-release.zip | sha1sum\n * agent-2.9.11-release.tar.gz | sha1sum\n * agent-2.9.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.10\n\n * jpom-2.9.10.zip\n * server-2.9.10-release.tar.gz | sha1sum\n * server-2.9.10-release.zip | sha1sum\n * agent-2.9.10-release.tar.gz | sha1sum\n * agent-2.9.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.9\n\n * jpom-2.9.9.zip\n * server-2.9.9-release.tar.gz | sha1sum\n * server-2.9.9-release.zip | sha1sum\n * agent-2.9.9-release.tar.gz | sha1sum\n * agent-2.9.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.8\n\n * jpom-2.9.8.zip\n * server-2.9.8-release.tar.gz | sha1sum\n * server-2.9.8-release.zip | sha1sum\n * agent-2.9.8-release.tar.gz | sha1sum\n * agent-2.9.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.7\n\n * jpom-2.9.7.zip\n * server-2.9.7-release.tar.gz | sha1sum\n * server-2.9.7-release.zip | sha1sum\n * agent-2.9.7-release.tar.gz | sha1sum\n * agent-2.9.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.6\n\n * jpom-2.9.6.zip\n * server-2.9.6-release.tar.gz | sha1sum\n * server-2.9.6-release.zip | sha1sum\n * agent-2.9.6-release.tar.gz | sha1sum\n * agent-2.9.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.5\n\n * jpom-2.9.5.zip\n * server-2.9.5-release.tar.gz | sha1sum\n * server-2.9.5-release.zip | sha1sum\n * agent-2.9.5-release.tar.gz | sha1sum\n * agent-2.9.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.4\n\n * jpom-2.9.4.zip\n * server-2.9.4-release.tar.gz | sha1sum\n * server-2.9.4-release.zip | sha1sum\n * agent-2.9.4-release.tar.gz | sha1sum\n * agent-2.9.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.3\n\n * jpom-2.9.3.zip\n * server-2.9.3-release.tar.gz | sha1sum\n * server-2.9.3-release.zip | sha1sum\n * agent-2.9.3-release.tar.gz | sha1sum\n * agent-2.9.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.2\n\n * jpom-2.9.2.zip\n * server-2.9.2-release.tar.gz | sha1sum\n * server-2.9.2-release.zip | sha1sum\n * agent-2.9.2-release.tar.gz | sha1sum\n * agent-2.9.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.1\n\n * jpom-2.9.1.zip\n * server-2.9.1-release.tar.gz | sha1sum\n * server-2.9.1-release.zip | sha1sum\n * agent-2.9.1-release.tar.gz | sha1sum\n * agent-2.9.1-release.zip | sha1sum\n\n----------------------------------------",normalizedContent:"# 2.9.21\n\n * jpom-2.9.21.zip\n * server-2.9.21-release.tar.gz | sha1sum\n * server-2.9.21-release.zip | sha1sum\n * agent-2.9.21-release.tar.gz | sha1sum\n * agent-2.9.21-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.20\n\n * jpom-2.9.20.zip\n * server-2.9.20-release.tar.gz | sha1sum\n * server-2.9.20-release.zip | sha1sum\n * agent-2.9.20-release.tar.gz | sha1sum\n * agent-2.9.20-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.19\n\n * jpom-2.9.19.zip\n * server-2.9.19-release.tar.gz | sha1sum\n * server-2.9.19-release.zip | sha1sum\n * agent-2.9.19-release.tar.gz | sha1sum\n * agent-2.9.19-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.18\n\n * jpom-2.9.18.zip\n * server-2.9.18-release.tar.gz | sha1sum\n * server-2.9.18-release.zip | sha1sum\n * agent-2.9.18-release.tar.gz | sha1sum\n * agent-2.9.18-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.17\n\n * jpom-2.9.17.zip\n * server-2.9.17-release.tar.gz | sha1sum\n * server-2.9.17-release.zip | sha1sum\n * agent-2.9.17-release.tar.gz | sha1sum\n * agent-2.9.17-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.16\n\n * jpom-2.9.16.zip\n * server-2.9.16-release.tar.gz | sha1sum\n * server-2.9.16-release.zip | sha1sum\n * agent-2.9.16-release.tar.gz | sha1sum\n * agent-2.9.16-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.15\n\n * jpom-2.9.15.zip\n * server-2.9.15-release.tar.gz | sha1sum\n * server-2.9.15-release.zip | sha1sum\n * agent-2.9.15-release.tar.gz | sha1sum\n * agent-2.9.15-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.14\n\n * jpom-2.9.14.zip\n * server-2.9.14-release.tar.gz | sha1sum\n * server-2.9.14-release.zip | sha1sum\n * agent-2.9.14-release.tar.gz | sha1sum\n * agent-2.9.14-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.13\n\n * jpom-2.9.13.zip\n * server-2.9.13-release.tar.gz | sha1sum\n * server-2.9.13-release.zip | sha1sum\n * agent-2.9.13-release.tar.gz | sha1sum\n * agent-2.9.13-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.12\n\n * jpom-2.9.12.zip\n * server-2.9.12-release.tar.gz | sha1sum\n * server-2.9.12-release.zip | sha1sum\n * agent-2.9.12-release.tar.gz | sha1sum\n * agent-2.9.12-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.11\n\n * jpom-2.9.11.zip\n * server-2.9.11-release.tar.gz | sha1sum\n * server-2.9.11-release.zip | sha1sum\n * agent-2.9.11-release.tar.gz | sha1sum\n * agent-2.9.11-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.10\n\n * jpom-2.9.10.zip\n * server-2.9.10-release.tar.gz | sha1sum\n * server-2.9.10-release.zip | sha1sum\n * agent-2.9.10-release.tar.gz | sha1sum\n * agent-2.9.10-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.9\n\n * jpom-2.9.9.zip\n * server-2.9.9-release.tar.gz | sha1sum\n * server-2.9.9-release.zip | sha1sum\n * agent-2.9.9-release.tar.gz | sha1sum\n * agent-2.9.9-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.8\n\n * jpom-2.9.8.zip\n * server-2.9.8-release.tar.gz | sha1sum\n * server-2.9.8-release.zip | sha1sum\n * agent-2.9.8-release.tar.gz | sha1sum\n * agent-2.9.8-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.7\n\n * jpom-2.9.7.zip\n * server-2.9.7-release.tar.gz | sha1sum\n * server-2.9.7-release.zip | sha1sum\n * agent-2.9.7-release.tar.gz | sha1sum\n * agent-2.9.7-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.6\n\n * jpom-2.9.6.zip\n * server-2.9.6-release.tar.gz | sha1sum\n * server-2.9.6-release.zip | sha1sum\n * agent-2.9.6-release.tar.gz | sha1sum\n * agent-2.9.6-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.5\n\n * jpom-2.9.5.zip\n * server-2.9.5-release.tar.gz | sha1sum\n * server-2.9.5-release.zip | sha1sum\n * agent-2.9.5-release.tar.gz | sha1sum\n * agent-2.9.5-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.4\n\n * jpom-2.9.4.zip\n * server-2.9.4-release.tar.gz | sha1sum\n * server-2.9.4-release.zip | sha1sum\n * agent-2.9.4-release.tar.gz | sha1sum\n * agent-2.9.4-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.3\n\n * jpom-2.9.3.zip\n * server-2.9.3-release.tar.gz | sha1sum\n * server-2.9.3-release.zip | sha1sum\n * agent-2.9.3-release.tar.gz | sha1sum\n * agent-2.9.3-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.2\n\n * jpom-2.9.2.zip\n * server-2.9.2-release.tar.gz | sha1sum\n * server-2.9.2-release.zip | sha1sum\n * agent-2.9.2-release.tar.gz | sha1sum\n * agent-2.9.2-release.zip | sha1sum\n\n----------------------------------------\n\n\n# 2.9.1\n\n * jpom-2.9.1.zip\n * server-2.9.1-release.tar.gz | sha1sum\n * server-2.9.1-release.zip | sha1sum\n * agent-2.9.1-release.tar.gz | sha1sum\n * agent-2.9.1-release.zip | sha1sum\n\n----------------------------------------",charsets:{cjk:!0},lastUpdated:"2024/07/02, 05:53:05",lastUpdatedTimestamp:1719899585e3}],themeConfig:{nav:[{text:"💻演示系统",link:"/pages/2e4ffc/",items:[{text:"🔖回到首页",link:"/"},{text:"大陆站",link:"https://jpom.top"},{text:"dromara 官网",link:"https://dromara.org"}]},{text:"📖安装文档",link:"/pages/install/",items:[{text:"立马上手安装",items:[{text:"一键安装",link:"/pages/fe28e9/"},{text:"下载安装",link:"/pages/db3065/"},{text:"容器安装",link:"/pages/820286/"},{text:"安装服务",link:"/pages/929085/"}]},{text:"大版本升级",items:[{text:"v2.10.X迁移到v2.11.X指南",link:"/pages/upgrade/2.10.x-to-2.11.x/"},{text:"v2.9.X迁移到v2.10.X指南",link:"/pages/upgrade/2.9.x-to-2.10.x/"},{text:"v2.8.X迁移到v2.9.X指南",link:"/pages/upgrade/2.8.x-to-2.9.x/"},{text:"数据库迁移到 mysql",link:"/pages/db/4cfb46/"},{text:"数据库迁移到 mariadb",link:"/pages/db/5622b5/"},{text:"数据库迁移到 postgresql",link:"/pages/db/e59f84/"}]},{text:"文档碎片",items:[{text:"分类",link:"/categories/"},{text:"标签",link:"/tags/"},{text:"归档",link:"/archives/"}]}]},{text:"🔥实践案例",link:"/pages/practice/",items:[{text:"实践案例目录",link:"/pages/practice/catalogue/"},{text:"Oauth2平台登录",link:"/pages/oauth/898d2e/"},{text:"安装实践",items:[{text:"一键安装教程",link:"/pages/practice/15b7a2/"},{text:"Docker 容器安装教程",link:"/pages/practice/c846d3/"},{text:"离线安装教程",link:"/pages/practice/af288b/"}]},{text:"通用教程",items:[{text:"Jpom 为 Jpom 发版",link:"/pages/practice/build-jpom/"},{text:"自定义第三方通知",link:"/pages/practice/ea3667/"},{text:"DSL 项目来管理 NGINX",link:"/pages/practice/dc2837/"},{text:"管理证书文件",link:"/pages/practice/jpom-server-cert-manage/"}]}]},{text:"❓常见问题",link:"/pages/FQA/",items:[{text:"名词解释",link:"/pages/FQA/proper-noun/"},{text:"账户相关",link:"/pages/FQA/839836/"},{text:"构建相关",link:"/pages/FQA/6a1f29/"},{text:"工作空间",link:"/pages/workspace/d3f985/"},{text:"权限说明",link:"/pages/permissions/ca90a5/"},{text:"资产说明",link:"/pages/350118/"}]},{text:"💡DSL说明",link:"/pages/FQA/DSL/",items:[{text:"万能的 DSL 项目模板（Java）",link:"/pages/practice/4756ec/"},{text:"本地构建 + 自定义管理 python 项目",link:"/pages/practice/project-dsl-python/"},{text:"DSL 项目接口探活监控报警",link:"/pages/practice/610387/"},{text:"DSL 项目来管理 NGINX",link:"/pages/practice/dc2837/"}]},{text:"💖开源周边",link:"/pages/shop/",items:[{text:"🔋赞赏支持💰",link:"/pages/praise/"},{text:"📑赞赏记录",link:"/pages/praise/publicity/"},{text:"🎁专属纪念品",link:"/pages/souvenir/"},{text:"💬社群讨论",link:"/pages/praise/join/"},{text:"💪🏻如何贡献",link:"/pages/dc18b8/"},{text:"👥贡献者们",link:"/pages/praise/friends/"},{text:" 🚩我们用户",link:"/pages/user/"},{text:"🤝企业服务",link:"/pages/enterprise-service/"}]},{text:"📰更新记录",link:"/pages/changelog/new/",items:[{text:"发版日志",items:[{text:"稳定版本-release",link:"/pages/changelog/new/"},{text:"内测版本-beta",link:"/pages/changelog/new-beta/"}]},{text:"下载中心",items:[{text:"稳定版本-release",link:"/pages/all-downloads/"},{text:"内测版本-beta",link:"/pages/all-beta-downloads/"}]}]},{text:"📦开源仓库",items:[{text:"Gitee",link:"https://gitee.com/dromara/Jpom"},{text:"Github",link:"https://github.com/dromara/Jpom"},{text:"Gitcode",link:"https://gitcode.com/dromara/Jpom/"}]}],sidebarDepth:2,logo:"/images/logo/jpom_logo_small.svg",searchMaxSuggestions:10,lastUpdated:"更新时间",docsRepo:"bwcx-jzy/jpom-docs",docsBranch:"main",docsDir:"docs",editLinks:!0,editLinkText:"帮助我们改善此文档",categoryText:"随笔",bodyBgImg:"/images/index/light.svg",bodyBgMode:{light:"/images/index/light.svg",dark:"/images/index/dark.svg",read:"/images/index/read.svg"},bodyBgImgOpacity:1,updateBar:{showToArticle:!0,moreArticle:"/archives"},pageButton:!1,sidebar:{"/实践案例/":[{title:"解决方案",collapsable:!0,children:[{title:"V2.10.X",collapsable:!0,children:[["009.解决方案/0000.V2.10.X/0088.在线构建为 Jpom 发版.md","如何使用 Jpom 的在线构建为 Jpom 发版","/pages/practice/build-jpom/"]]},["009.解决方案/0090.simple-solution-01.md","基于 Jpom 搭建应用部署系统","/pages/practice/simple-solution-01/"],["009.解决方案/0094.自定义第三方通知.md","自定义第三方通知","/pages/practice/ea3667/"],["009.解决方案/0100.Jpom运维系统安装与使用.md","Jpom运维系统安装与使用","/pages/practice/4f8e47/"],{title:"V2.9.X",collapsable:!0,children:[["009.解决方案/9998.V2.9.X/0092.Docker 容器安装实践.md","Docker 容器安装实践","/pages/practice/c846d3/"],["009.解决方案/9998.V2.9.X/0093.离线安装实践.md","离线安装实践","/pages/practice/af288b/"]]},{title:"V2.8.X",collapsable:!0,children:[["009.解决方案/9999.V2.8.X/0089.DSL 项目模板.md","万能的 DSL 项目模板（Java）","/pages/practice/4756ec/"],["009.解决方案/9999.V2.8.X/0091.一键安装实践.md","一键安装实践","/pages/practice/15b7a2/"]]}]},{title:"在线构建",collapsable:!0,children:[{title:"V2.10.X",collapsable:!0,children:[["010.在线构建/0000.V2.10.X/0101.jpom-server-scp-upload.md","本地构建 + Jpom Server 使用 SCP 发布项目","/pages/practice/jpom-server-scp-upload/"]]},["010.在线构建/0109.Gitee提交代码后自动执行构建.md","Gitee 提交代码后自动执行构建","/pages/practice/gitee-webhook-trigger-build/"],["010.在线构建/0110.使用 gradle 本地构建打包项目并发布到节点.md","使用 gradle 本地构建打包项目并发布到节点","/pages/practice/build-gradle-node-release/"],["010.在线构建/0111.GitLab提交代码后自动执行构建.md","GitLab 提交代码后自动执行构建","/pages/practice/gitlab-webhook-trigger-build/"],["010.在线构建/0112.构建状态统一通知推送.md","构建状态统一通知推送","/pages/practice/e33af5/"],{title:"V2.9.X",collapsable:!0,children:[["010.在线构建/9997.V2.9.X/0211.通过私人令牌导入仓库.md","通过私人令牌导入仓库","/pages/practice/privateToken-import-repository/"]]},{title:"V2.8.X",collapsable:!0,children:[["010.在线构建/9998.V2.8.X/0102.build-node-release.md","本地构建 + 项目发布 node 项目","/pages/practice/build-node-release/"],["010.在线构建/9998.V2.8.X/0103.build-node-ssh-release.md","本地构建 + SSH 发布 node 项目","/pages/practice/build-node-ssh-release/"],["010.在线构建/9998.V2.8.X/0104.project-dsl-python.md","本地构建 + 自定义管理 python 项目","/pages/practice/project-dsl-python/"],["010.在线构建/9998.V2.8.X/0108.build-docker-java-node-release.md","容器构建 + 项目发布 java 项目","/pages/practice/build-docker-java-node-release/"]]},{title:"V2.6.X",collapsable:!0,children:[["010.在线构建/9999.V2.6.X/0100.build-java-ssh-release.md","本地构建 + SSH 发布 java 项目","/pages/practice/build-java-ssh-release/"]]}]},{title:"docker",collapsable:!0,children:[{title:"V2.11.X",collapsable:!0,children:[["011.docker/9997.V2.11.X/0111.构建web镜像并推送至仓库.md","构建web镜像并推送至仓库","/pages/practice/9c1641/"]]},{title:"V2.9.X",collapsable:!0,children:[["011.docker/9998.V2.9.X/0108.在线构建 docker 镜像.md","在线构建 docker 镜像","/pages/practice/d4a57d/"],["011.docker/9998.V2.9.X/0109.构建镜像并推送至仓库.md","在线构建 docker 镜像并推送至远程仓库","/pages/practice/9c1640/"],["011.docker/9998.V2.9.X/0110.界面安装 reids 流程.md","docker 安装 redis 流程","/pages/practice/988404/"]]},{title:"V2.8.X",collapsable:!0,children:[["011.docker/9999.V2.8.X/0107.docker-cli.md","管理 docker","/pages/practice/docker-cli/"]]}]},{title:"节点管理",collapsable:!0,children:[{title:"V2.8.X",collapsable:!0,children:[["012.节点管理/9999.V2.8.X/0106.node-nginx.md","管理编译安装的 nginx","/pages/practice/node-nginx/"]]}]},{title:"项目管理",collapsable:!0,children:[{title:"V2.10.X",collapsable:!0,children:[["013.项目管理/0000.V2.10.X/0107.DSL 管理 TOMCAT.md","在 Jpom 中如何使用 DSL 项目来管理 TOMCAT","/pages/practice/dc2836/"],["013.项目管理/0000.V2.10.X/0108.DSL管理elasticsearch.md","在 Jpom 中如何使用 DSL 项目来管理 elasticsearch","/pages/practice/8017a2/"],["013.项目管理/0000.V2.10.X/0109.DSL 管理 NGINX.md","在 Jpom 中如何使用 DSL 项目来管理 NGINX","/pages/practice/dc2837/"]]},{title:"V2.9.X",collapsable:!0,children:[["013.项目管理/9998.V2.9.X/0106.DSL项目接口探活.md","DSL项目接口探活","/pages/practice/ac7b66/"]]},{title:"V2.8.X",collapsable:!0,children:[["013.项目管理/9999.V2.8.X/0105.project-dsl-java.md","自定义管理 java 项目","/pages/practice/project-dsl-java/"]]}]},{title:"项目监控",collapsable:!0,children:[["014.项目监控/0120.DSL 项目接口探活监控.md","DSL 项目接口探活监控报警","/pages/practice/610387/"],{title:"V2.9.X",collapsable:!0,children:[["014.项目监控/9998.V2.9.X/0109.monitor.notice.md","监控项目 + 邮件报警通知","/pages/practice/monitor-notice/"]]}]},{title:"在线脚本",collapsable:!0,children:[["015.在线脚本/01.使用节点脚本定时备份 docker 中的 mysql 数据库.md","使用节点脚本定时备份 docker 中的 mysql 数据库","/pages/practice/node-script-backup-docker-mysql/"]]},{title:"SSH管理",collapsable:!0,children:[["016.SSH管理/01.在线管理 SSH 终端以及上传文件和执行命令历史.md","在线管理 SSH 终端以及上传文件(SFTP)和执行命令历史","/pages/practice/ssh-terminal/"]]},{title:"日常管理",collapsable:!0,children:[{title:"V2.10.X",collapsable:!0,children:[["017.日常管理/0000.V2.10.X/0200.Linux安装Jpom2.10.40教程.md","Linux安装Jpom2.10.40教程","/pages/practice/8127a2/"]]},["017.日常管理/0100.如何开启 h2-console web 访问功能.md","如何开启 h2-console web 访问功能","/pages/practice/h2-console/"],["017.日常管理/0300.jpom-server-import-multi-repos.md","使用 Jpom 导入多个项目仓库","/pages/practice/jpom-server-import-multi-repos/"],["017.日常管理/0400.jpom-server-cert-manage.md","Jpom 管理证书文件实践案例","/pages/practice/jpom-server-cert-manage/"],["017.日常管理/1900.安装docker.md","安装Docker","/pages/practice/b63dc5/"],["017.日常管理/9999.使用 Rainbond 部署 Jpom.md","使用 Rainbond 部署 Jpom","/pages/practice/a033a2/"]]}],catalogue:{"赞赏总览":"/pages/praise/publicity/","基础名词":"/pages/FQA/proper-noun/","命令相关":"/pages/0171cb/","产物目录":"/pages/d05224/","更多说明":"/pages/6f2c0b/",FQA:"/pages/FQA/"},"/支持/":[{title:"赞赏支持",collapsable:!0,children:[["00.赞赏支持/00.个人赞赏.md","个人赞赏","/pages/praise/"],["00.赞赏支持/04.成为赞助商.md","成为赞助商","/pages/589c8e/"],["00.赞赏支持/90.专属纪念品.md","专属纪念品","/pages/souvenir/"],["00.赞赏支持/100.赞赏总览.md","赞赏公示","/pages/praise/publicity/"],{title:"赞赏记录",collapsable:!0,children:[["00.赞赏支持/101.赞赏记录/75.2025年.md","2025年","/pages/da38d0/"],["00.赞赏支持/101.赞赏记录/76.2024年.md","2024年","/pages/97e0e2/"],["00.赞赏支持/101.赞赏记录/77.2023年.md","2023年","/pages/8bbc44/"],["00.赞赏支持/101.赞赏记录/78.2022年.md","2022年","/pages/e69067/"],["00.赞赏支持/101.赞赏记录/79.2021年.md","2021年","/pages/1bf779/"],["00.赞赏支持/101.赞赏记录/80.2020年.md","2020年","/pages/eb27c8/"],["00.赞赏支持/101.赞赏记录/81.2019年.md","2019年","/pages/9a4844/"]]}]},{title:"周边商品",collapsable:!0,children:[["01.周边商品/02.周边商品.md","周边商品","/pages/shop/"],["01.周边商品/10.推荐周边.md","推荐周边","/pages/3cfadf/"]]},{title:"企业服务",collapsable:!0,children:[["03.企业服务/00.法律风险.md","法律风险","/pages/legal-risk/"],["03.企业服务/03.企业服务.md","企业服务","/pages/enterprise-service/"]]},{title:"贡献说明",collapsable:!0,children:[["102.贡献说明/102.贡献准则.md","贡献准则","/pages/dc18b8/"],["102.贡献说明/103.贡献者.md","贡献者","/pages/praise/friends/"]]},["109.我们用户.md","我们用户","/pages/user/"],["110.加入社群.md","加入社群","/pages/praise/join/"]],"/文档/":[{title:"自述序言",collapsable:!0,children:[["00.自述序言/02.了解Jpom.md","了解Jpom","/pages/readme/"],["00.自述序言/10.文档说明.md","文档说明","/pages/ac6961/"],{title:"名词解释",collapsable:!0,children:[["00.自述序言/22.名词解释/01.基础名词.md","基础名词","/pages/FQA/proper-noun/"],["00.自述序言/22.名词解释/02.命令相关.md","命令相关","/pages/0171cb/"],["00.自述序言/22.名词解释/08.产物目录.md","产物目录","/pages/d05224/"],["00.自述序言/22.名词解释/09.更多说明.md","更多说明","/pages/6f2c0b/"]]},["00.自述序言/30.演示系统.md","演示系统","/pages/2e4ffc/"],["00.自述序言/998.高效报告BUG.md","高效报告BUG","/pages/0facbd/"],["00.自述序言/999.提问智慧.md","提问的智慧","/pages/FQA/how-to-ask-questions-the-smart-way/"]]},{title:"安装使用",collapsable:!0,children:[["01.安装使用/01.安装说明.md","必读前言","/pages/install/"],["01.安装使用/02.一键安装.md","一键安装（linux）","/pages/fe28e9/"],["01.安装使用/03.下载安装.md","下载安装","/pages/db3065/"],["01.安装使用/04.容器化安装.md","容器化安装","/pages/820286/"],["01.安装使用/05.自行编译.md","自行编译","/pages/e6e8bf/"],["01.安装使用/06.docker-compose.md","docker-compose","/pages/a06a94/"],["01.安装使用/20.安装服务.md","安装服务","/pages/929085/"],{title:"开始使用",collapsable:!0,children:[["01.安装使用/30.开始使用/001.如何访问.md","如何访问","/pages/892df7/"],["01.安装使用/30.开始使用/002.初始化服务端.md","初始化服务端","/pages/269bdc/"],["01.安装使用/30.开始使用/099.nginx.md","Nginx推荐配置","/pages/FQA/nginx-conf"]]},["01.安装使用/35.Windows安装.md","Windows安装","/pages/a13d8d/"],["01.安装使用/099.辅助安装.md","辅助安装","/pages/feb7c1/"],["01.安装使用/9999.宝塔安装.md","宝塔面板部署","/pages/40765e/"]]},{title:"备份&升级",collapsable:!0,children:[["012.备份&升级/08.升级版本.md","升级版本","/pages/FQA/upgrade/"],["012.备份&升级/010.备份数据.md","备份数据","/pages/2026d1/"],{title:"数据库管理",collapsable:!0,children:[["012.备份&升级/020.数据库管理/020.数据库管理.md","数据库管理","/pages/db/672ad5/"],["012.备份&升级/020.数据库管理/0990.数据库迁移到 mysql.md","H2 迁移到 MYSQL","/pages/db/4cfb46/"],["012.备份&升级/020.数据库管理/0991.数据库迁移到 mariadb.md","H2 迁移到 MARIADB","/pages/db/5622b5/"],["012.备份&升级/020.数据库管理/0992.数据库迁移到 postgresql.md","H2 迁移到 POSTGRESQL","/pages/db/e59f84/"],["012.备份&升级/020.数据库管理/0993.数据库迁移到 dameng.md","H2 迁移到 DAMENG","/pages/db/e59f85/"]]},["012.备份&升级/0996.2.10.x-2.11.x.md","2.10.x 升级到 2.11.x","/pages/upgrade/2.10.x-to-2.11.x/"],["012.备份&升级/0998.2.9.x-2.10.x.md","2.9.x 升级到 2.10.x","/pages/upgrade/2.9.x-to-2.10.x/"],["012.备份&升级/0999.2.8.x-2.9.x.md","2.8.x 升级到 2.9.x","/pages/upgrade/2.8.x-to-2.9.x/"]]},{title:"迁移数据",collapsable:!0,children:[["013.迁移数据/010.迁移方式.md","迁移方式","/pages/4d2ebc/"],["013.迁移数据/020.完整&部分迁移.md","迁移数据","/pages/dec2a1/"],["013.迁移数据/030.数据还原&导入.md","还原&导入","/pages/643951/"],["013.迁移数据/040.容器迁移.md","容器迁移","/pages/1ec490/"]]},{title:"用户&权限",collapsable:!0,children:[["020.用户&权限/00.权限说明.md","权限说明","/pages/permissions/ca90a5/"],["020.用户&权限/05.登录说明.md","登录说明","/pages/be7a7b/"],["020.用户&权限/10.管理用户.md","管理用户","/pages/0f14d7/"],{title:"Oauth2登录",collapsable:!0,children:[["020.用户&权限/90.Oauth2登录/00.Oauth2说明.md","Oauth2说明","/pages/oauth/898d2e/"],["020.用户&权限/90.Oauth2登录/01.gitee登录.md","Gitee登录","/pages/oauth/gitee/"],["020.用户&权限/90.Oauth2登录/02.钉钉登录.md","钉钉登录","/pages/oauth/dingtalk/"],["020.用户&权限/90.Oauth2登录/03.企业微信二维码登录.md","企业微信扫码登录","/pages/oauth/wechat_enterprise_qrcode/"],["020.用户&权限/90.Oauth2登录/04.飞书登录.md","飞书登录","/pages/oauth/feishu/"],["020.用户&权限/90.Oauth2登录/05.github登录.md","Github登录","/pages/oauth/github/"],["020.用户&权限/90.Oauth2登录/06.自建 Gitlab.md","自建 Gitlab","/pages/oauth/my_gitlab/"]]},["020.用户&权限/98.用户日志.md","用户日志","/pages/6e6103/"],["020.用户&权限/99.MFA两步验证.md","MFA两步验证","/pages/885659/"]]},{title:"工作空间&集群",collapsable:!0,children:[["030.工作空间&集群/000.集群管理.md","集群管理","/pages/workspace/cluster/"],["030.工作空间&集群/010.工作空间.md","工作空间","/pages/workspace/d3f985/"]]},{title:"资产管理",collapsable:!0,children:[["035.资产管理/00.资产说明.md","资产说明","/pages/350118/"],["035.资产管理/10.机器资产.md","机器资产","/pages/3f268f/"],["035.资产管理/20.SSH资产.md","SSH资产","/pages/d2df49/"],{title:"Docker资产",collapsable:!0,children:[["035.资产管理/30.Docker资产/00.新增Docker.md","新增&删除","/pages/4d0c1b/"],["035.资产管理/30.Docker资产/05.Docker控制台.md","Docker控制台","/pages/81c6ca/"],["035.资产管理/30.Docker资产/10.Swarm管理.md","Swarm管理","/pages/6af9e1/"],["035.资产管理/30.Docker资产/14.Swarm控制台.md","Swarm控制台","/pages/ccc0ae/"],["035.资产管理/30.Docker资产/20.分配Docker.md","分配Docker","/pages/bb772f/"]]}]},{title:"节点&项目",collapsable:!0,children:[["040.节点&项目/010.逻辑节点.md","逻辑节点","/pages/285484/"],["040.节点&项目/020.节点项目.md","节点项目","/pages/b3e508/"],["040.节点&项目/030.节点脚本.md","节点脚本","/pages/8a95bf/"],["040.节点&项目/040.节点分发.md","节点分发","/pages/e35370/"],["040.节点&项目/050.日志搜索.md","日志搜索","/pages/c5cbe6/"]]},{title:"DSL说明",collapsable:!0,children:[["100.DSL说明/00.介绍.md","DSL 说明","/pages/FQA/DSL/"],{title:"配置示例",collapsable:!0,children:[["100.DSL说明/10.配置示例/01.DSL-java.md","管理 java 项目脚本示例","/pages/519020/"],["100.DSL说明/10.配置示例/02.DSL-python.md","管理 python 项目脚本示例","/pages/eb9c6e/"],["100.DSL说明/10.配置示例/03.DOCKER_DSL.md","容器构建的 DSL 配置示例","/pages/5020f7/"]]}]},{title:"常见问题",collapsable:!0,children:[["200.常见问题/010.FQA.md","问题合集","/pages/FQA/"],["200.常见问题/100.账号相关.md","账号相关","/pages/FQA/839836/"],["200.常见问题/101.启动相关.md","启动失败","/pages/FQA/a1e454/"],["200.常见问题/103.无法访问.md","无法访问","/pages/FQA/ba6ff8/"],["200.常见问题/104.系统报错.md","使用报错","/pages/FQA/d0b0c3/"],["200.常见问题/105.修改配置.md","修改配置","/pages/FQA/98500f/"],["200.常见问题/106.构建相关.md","构建相关","/pages/FQA/6a1f29/"],["200.常见问题/199.更多问题.md","更多问题","/pages/FQA/fa9335/"],["200.常见问题/300.ProjectFileBackup.md","项目备份","/pages/FQA/project-file-backup/"],["200.常见问题/500.maven.md","maven 私服","/pages/FQA/maven-conf/"]]},{title:"历史文档",collapsable:!0,children:[{title:"用户管理",collapsable:!0,children:[["9999.历史文档/0010.用户管理/01.用户角色.md","部分限制说明","/pages/7d218d/"],["9999.历史文档/0010.用户管理/02.编辑用户.md","编辑用户","/pages/c6e79e/"]]},{title:"管理",collapsable:!0,children:[["9999.历史文档/0111.管理/08.启动参数.md","启动参数","/pages/1508cd/"],["9999.历史文档/0111.管理/09.启动失败.md","启动失败","/pages/d39de8/"],["9999.历史文档/0111.管理/10.管理命令.md","管理命令","/pages/530eb0/"]]},{title:"在线构建",collapsable:!0,children:[["9999.历史文档/0887.在线构建/01.编辑构建.md","编辑构建","/pages/29f687/"]]},{title:"监控管理",collapsable:!0,children:[["9999.历史文档/0888.监控管理/01.监控介绍.md","监控介绍","/pages/2f4ebb/"]]},{title:"系统管理",collapsable:!0,children:[["9999.历史文档/0889.系统管理/01.系统日志.md","系统日志","/pages/5d6479/"],["9999.历史文档/0889.系统管理/02.系统管理.md","系统管理","/pages/0429ad/"],["9999.历史文档/0889.系统管理/03.邮箱配置.md","邮箱配置","/pages/25f350/"]]},{title:"节点功能",collapsable:!0,children:[{title:"项目管理",collapsable:!0,children:[["9999.历史文档/0890.节点功能/10.项目管理/01.项目属性.md","项目属性","/pages/fa7614/"],["9999.历史文档/0890.节点功能/10.项目管理/02.控制台.md","控制台","/pages/ff3028/"]]},{title:"系统管理",collapsable:!0,children:[["9999.历史文档/0890.节点功能/13.系统管理/01.白名单目录.md","授权（白名单）目录","/pages/933483/"],["9999.历史文档/0890.节点功能/13.系统管理/02.缓存管理.md","缓存管理","/pages/b06467/"]]}]},{title:"节点管理",collapsable:!0,children:[["9999.历史文档/0891.节点管理/01.添加节点.md","添加节点","/pages/2573d3/"],["9999.历史文档/0891.节点管理/02.SSH管理.md","SSH管理","/pages/c6da0f/"]]},{title:"节点分发",collapsable:!0,children:[["9999.历史文档/0892.节点分发/01.分发介绍.md","分发介绍","/pages/541f19/"]]}]}],"/日志&下载/":[{title:"更新日志",collapsable:!0,children:[["01.更新日志/01.最新.md","2.11.x-release","/pages/changelog/new/"],["01.更新日志/02.最新beta.md","2.11.x-beta","/pages/changelog/new-beta/"],["01.更新日志/1180.2.10.x-release.md","2.10.x-release","/pages/9b918a/"],["01.更新日志/1181.2.10.x-beta.md","2.10.x-beta","/pages/cc9ffc/"],["01.更新日志/1191.2.9.x.md","2.9.x ~ 2.9.21","/pages/changelog/2.9.x/"],{title:"历史版本",collapsable:!0,children:[["01.更新日志/9999.历史版本/1192.2.8.x.md","2.8.0 ~ 2.8.25","/pages/changelog/2.8.x/"],["01.更新日志/9999.历史版本/1193.2.7.x.md","2.7.0 ~ 2.7.3","/pages/changelog/2.7.x/"],["01.更新日志/9999.历史版本/1194.2.6.x.md","2.6.0 ~ 2.6.4","/pages/changelog/2.6.x/"],["01.更新日志/9999.历史版本/1195.2.5.x.md","2.5.0 ~ 2.5.2","/pages/changelog/2.5.x/"],["01.更新日志/9999.历史版本/1197.2.4.x.md","2.4.0 ~ 2.4.9","/pages/changelog/2.4.x/"],["01.更新日志/9999.历史版本/1198.2.3.x.md","2.3.1 ~ 2.3.2","/pages/changelog/2.3.x/"],["01.更新日志/9999.历史版本/1199.2.0-2.2.md","2.0 ~ 2.2","/pages/changelog/2.x/"],["01.更新日志/9999.历史版本/11100.history.md","历史更新记录","/pages/changelog/history/"]]}]},{title:"下载链接",collapsable:!0,children:[["02.下载链接/01.下载链接.md","2.11.x release","/pages/all-downloads/"],["02.下载链接/02.下载链接beta.md","2.11.x beta","/pages/all-beta-downloads/"],["02.下载链接/980.2.10.x-release.md","2.10.x-release","/pages/downloads/508e7f/"],["02.下载链接/981.2.10.x beta.md","2.10.x beta","/pages/downloads/ba6e33/"],["02.下载链接/999.2.9.x.md","2.9.x 下载地址","/pages/downloads/downloads-2.9.x/"],["02.下载链接/1000.2.8.x.md","2.8.x 下载地址","/pages/downloads/downloads-2.8.x/"]]}]},blogInfo:{blogCreate:"2019-04-01",indexView:!0,pageView:!0,readingTime:!0,eachFileWords:[{name:"best_practices",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/_posts/best_practices.md",wordsCount:305,readingTime:"1.1m",title:"Jpom 最佳实践征文",date:"2022-09-05T19:08:44.000Z",permalink:"/pages/praise/best-practices/",categories:["docs","赞赏"],tags:[null],sidebar:"auto"},{name:"workspace_vs_role",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/_posts/workspace_vs_role.md",wordsCount:138,readingTime:"1",title:"关于工作空间和角色对比说明",date:"2022-06-11T16:22:29.000Z",permalink:"/pages/9d6940/",tags:[null],categories:["docs","FQA"],sidebar:"auto"},{name:"下载中心调整",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/_posts/下载中心调整.md",wordsCount:738,readingTime:"2.6m",title:"下载中心调整通知",date:"2024-07-02T08:51:53.000Z",permalink:"/pages/malice-fraudulent/",sidebar:"auto",categories:["通知"],tags:["CDN","恶意","盗刷"]},{name:"演示系统维护",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/_posts/演示系统维护.md",wordsCount:182,readingTime:"1",title:"很抱歉演示系统维护中",date:"2024-04-19T20:19:02.000Z",permalink:"/pages/demo-maintain/",sidebar:!1,article:!1,comment:!1,categories:["随笔"],tags:["演示"]},{name:"在线构建为 Jpom 发版",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/0000.V2.10.X/0088.在线构建为 Jpom 发版.md",wordsCount:"2.6k",readingTime:"12m",title:"如何使用 Jpom 的在线构建为 Jpom 发版",date:"2023-02-24T16:06:23.000Z",permalink:"/pages/practice/build-jpom/",categories:["docs","实践案例","解决方案"],tags:[null]},{name:"simple-solution-01",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/0090.simple-solution-01.md",wordsCount:"1.6k",readingTime:"6.5m",title:"基于 Jpom 搭建应用部署系统",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/simple-solution-01/",author:{name:"带刺的玫瑰",link:"https://gitee.com/LinChong2018"},tags:["监控","SSH","在线构建"],categories:["文档","实践案例"]},{name:"自定义第三方通知",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/0094.自定义第三方通知.md",wordsCount:685,readingTime:"2.6m",title:"自定义第三方通知",date:"2023-02-17T17:47:51.000Z",permalink:"/pages/practice/ea3667/",categories:["docs","实践案例","解决方案"],tags:[null]},{name:"Jpom运维系统安装与使用",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/0100.Jpom运维系统安装与使用.md",wordsCount:"2.1k",readingTime:"8.8m",title:"Jpom运维系统安装与使用",date:"2024-10-18T12:27:52.000Z",permalink:"/pages/practice/4f8e47/",categories:["docs","实践案例","解决方案"],tags:[null],author:{name:"will",link:"https://gitee.com/arvinWill"}},{name:"Docker 容器安装实践",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/9998.V2.9.X/0092.Docker 容器安装实践.md",wordsCount:"1.5k",readingTime:"6.1m",title:"Docker 容器安装实践",date:"2022-11-04T13:20:29.000Z",permalink:"/pages/practice/c846d3/",categories:["docs","实践案例","解决方案"],tags:[null]},{name:"离线安装实践",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/9998.V2.9.X/0093.离线安装实践.md",wordsCount:"1k",readingTime:"4.3m",title:"离线安装实践",date:"2022-11-04T14:54:33.000Z",permalink:"/pages/practice/af288b/",categories:["docs","实践案例","解决方案"],tags:[null]},{name:"DSL 项目模板",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/9999.V2.8.X/0089.DSL 项目模板.md",wordsCount:"3k",readingTime:"13.9m",title:"万能的 DSL 项目模板（Java）",date:"2022-12-02T11:00:14.000Z",permalink:"/pages/practice/4756ec/",categories:["docs","实践案例","解决方案"],tags:[null]},{name:"一键安装实践",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/009.解决方案/9999.V2.8.X/0091.一键安装实践.md",wordsCount:924,readingTime:"3.5m",title:"一键安装实践",date:"2022-11-03T21:42:10.000Z",permalink:"/pages/practice/15b7a2/",categories:["docs","实践案例","解决方案"],tags:[null]},{name:"jpom-server-scp-upload",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/0000.V2.10.X/0101.jpom-server-scp-upload.md",wordsCount:"1.8k",readingTime:"6.7m",title:"本地构建 + Jpom Server 使用 SCP 发布项目",date:"2023-03-31T15:33:14.000Z",permalink:"/pages/practice/jpom-server-scp-upload/",tags:["SSH","SCP","Java","在线构建"],categories:["docs","文档","实践案例"],author:{name:"Hotstrip",link:"https://gitee.com/hotstrip"}},{name:"Gitee提交代码后自动执行构建",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/0109.Gitee提交代码后自动执行构建.md",wordsCount:437,readingTime:"1.7m",title:"Gitee 提交代码后自动执行构建",date:"2022-07-25T20:25:42.000Z",permalink:"/pages/practice/gitee-webhook-trigger-build/",categories:["docs","实践案例","在线构建"],tags:["Gitee","构建"]},{name:"使用 gradle 本地构建打包项目并发布到节点",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/0110.使用 gradle 本地构建打包项目并发布到节点.md",wordsCount:882,readingTime:"3.9m",title:"使用 gradle 本地构建打包项目并发布到节点",date:"2022-08-08T18:57:15.000Z",permalink:"/pages/practice/build-gradle-node-release/",categories:["docs","实践案例","在线构建"],tags:[null]},{name:"GitLab提交代码后自动执行构建",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/0111.GitLab提交代码后自动执行构建.md",wordsCount:475,readingTime:"1.8m",title:"GitLab 提交代码后自动执行构建",date:"2022-12-04T17:24:33.000Z",permalink:"/pages/practice/gitlab-webhook-trigger-build/",categories:["docs","实践案例","在线构建"],tags:["GitLab","构建"]},{name:"构建状态统一通知推送",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/0112.构建状态统一通知推送.md",wordsCount:"1.3k",readingTime:"6m",title:"构建状态统一通知推送",date:"2023-09-19T16:09:57.000Z",permalink:"/pages/practice/e33af5/",categories:["docs","实践案例","在线构建"],author:{name:"Caiqy",link:"https://github.com/caiqy"},tags:[null]},{name:"通过私人令牌导入仓库",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/9997.V2.9.X/0211.通过私人令牌导入仓库.md",wordsCount:714,readingTime:"2.8m",title:"通过私人令牌导入仓库",date:"2022-06-25T06:30:05.000Z",permalink:"/pages/practice/privateToken-import-repository/",author:{name:"sam",link:"https://gitee.com/hjk2008"},categories:["文档","在线构建"],tags:["私人令牌"]},{name:"build-node-release",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/9998.V2.8.X/0102.build-node-release.md",wordsCount:"1.8k",readingTime:"7.6m",title:"本地构建 + 项目发布 node 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-node-release/",tags:["在线构建","vue"],categories:["docs","文档","实践案例"]},{name:"build-node-ssh-release",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/9998.V2.8.X/0103.build-node-ssh-release.md",wordsCount:"1.4k",readingTime:"6m",title:"本地构建 + SSH 发布 node 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-node-ssh-release/",tags:["SSH","vue","在线构建"],categories:["docs","文档","实践案例"]},{name:"project-dsl-python",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/9998.V2.8.X/0104.project-dsl-python.md",wordsCount:"1.3k",readingTime:"5.3m",title:"本地构建 + 自定义管理 python 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/project-dsl-python/",tags:["DSL","python","在线构建"],categories:["docs","文档","实践案例"]},{name:"build-docker-java-node-release",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/9998.V2.8.X/0108.build-docker-java-node-release.md",wordsCount:"1.9k",readingTime:"8.7m",title:"容器构建 + 项目发布 java 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-docker-java-node-release/",tags:["docker","在线构建"],categories:["docs","文档","实践案例"]},{name:"build-java-ssh-release",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/010.在线构建/9999.V2.6.X/0100.build-java-ssh-release.md",wordsCount:759,readingTime:"3.1m",title:"本地构建 + SSH 发布 java 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/build-java-ssh-release/",tags:["SSH","Java","在线构建"],categories:["docs","文档","实践案例"]},{name:"构建web镜像并推送至仓库",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/011.docker/9997.V2.11.X/0111.构建web镜像并推送至仓库.md",wordsCount:"1.4k",readingTime:"5.8m",title:"构建web镜像并推送至仓库",date:"2024-06-26T17:29:29.000Z",permalink:"/pages/practice/9c1641/",categories:["docs","实践案例","docker"],author:{name:"Smith",link:"https://gitee.com/autools"},tags:[null]},{name:"在线构建 docker 镜像",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/011.docker/9998.V2.9.X/0108.在线构建 docker 镜像.md",wordsCount:"1.3k",readingTime:"5.2m",title:"在线构建 docker 镜像",date:"2022-12-03T14:03:18.000Z",permalink:"/pages/practice/d4a57d/",categories:["docs","实践案例","docker"],tags:[null]},{name:"构建镜像并推送至仓库",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/011.docker/9998.V2.9.X/0109.构建镜像并推送至仓库.md",wordsCount:"1.4k",readingTime:"5.8m",title:"在线构建 docker 镜像并推送至远程仓库",date:"2022-12-03T17:29:29.000Z",permalink:"/pages/practice/9c1640/",categories:["docs","实践案例","docker"],tags:[null]},{name:"界面安装 reids 流程",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/011.docker/9998.V2.9.X/0110.界面安装 reids 流程.md",wordsCount:424,readingTime:"1.8m",title:"docker 安装 redis 流程",date:"2022-12-04T13:40:49.000Z",permalink:"/pages/practice/988404/",categories:["docs","实践案例","docker"],author:{name:"碎花爱洋裙",link:"https://lizhongyuan3.gitee.io/"},tags:[null]},{name:"docker-cli",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/011.docker/9999.V2.8.X/0107.docker-cli.md",wordsCount:"1.5k",readingTime:"6.9m",title:"管理 docker",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/docker-cli/",tags:["docker"],categories:["docs","文档","实践案例"]},{name:"node-nginx",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/012.节点管理/9999.V2.8.X/0106.node-nginx.md",wordsCount:"1.2k",readingTime:"5.1m",title:"管理编译安装的 nginx",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/node-nginx/",tags:["nginx"],categories:["docs","文档","实践案例"]},{name:"DSL 管理 TOMCAT",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/013.项目管理/0000.V2.10.X/0107.DSL 管理 TOMCAT.md",wordsCount:"1.4k",readingTime:"6m",title:"在 Jpom 中如何使用 DSL 项目来管理 TOMCAT",date:"2023-02-14T22:05:11.000Z",permalink:"/pages/practice/dc2836/",categories:["docs","实践案例","项目管理"],tags:["tomcat"]},{name:"DSL管理elasticsearch",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/013.项目管理/0000.V2.10.X/0108.DSL管理elasticsearch.md",wordsCount:821,readingTime:"3.8m",title:"在 Jpom 中如何使用 DSL 项目来管理 elasticsearch",date:"2023-02-24T19:46:42.000Z",permalink:"/pages/practice/8017a2/",categories:["docs","实践案例","项目管理"],tags:["elasticsearch"]},{name:"DSL 管理 NGINX",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/013.项目管理/0000.V2.10.X/0109.DSL 管理 NGINX.md",wordsCount:"1.2k",readingTime:"5.4m",title:"在 Jpom 中如何使用 DSL 项目来管理 NGINX",date:"2024-01-02T15:00:00.000Z",permalink:"/pages/practice/dc2837/",categories:["docs","实践案例","项目管理"],tags:["nginx"]},{name:"DSL项目接口探活",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/013.项目管理/9998.V2.9.X/0106.DSL项目接口探活.md",wordsCount:"1.3k",readingTime:"5.6m",title:"DSL项目接口探活",date:"2022-10-21T09:31:18.000Z",permalink:"/pages/practice/ac7b66/",categories:["docs","实践案例","项目管理"],tags:[null]},{name:"project-dsl-java",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/013.项目管理/9999.V2.8.X/0105.project-dsl-java.md",wordsCount:"1.3k",readingTime:"5.6m",title:"自定义管理 java 项目",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/project-dsl-java/",tags:["DSL","Java"],categories:["docs","文档","实践案例"]},{name:"DSL 项目接口探活监控",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/014.项目监控/0120.DSL 项目接口探活监控.md",wordsCount:"1k",readingTime:"4.3m",title:"DSL 项目接口探活监控报警",date:"2022-10-21T13:20:47.000Z",permalink:"/pages/practice/610387/",categories:["docs","实践案例","项目监控"],tags:[null]},{name:"monitor.notice",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/014.项目监控/9998.V2.9.X/0109.monitor.notice.md",wordsCount:"1.3k",readingTime:"5.2m",title:"监控项目 + 邮件报警通知",date:"2022-07-21T21:54:21.000Z",permalink:"/pages/practice/monitor-notice/",categories:["docs","文档","实践案例"],tags:["监控","邮件"]},{name:"使用节点脚本定时备份 docker 中的 mysql 数据库",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/015.在线脚本/01.使用节点脚本定时备份 docker 中的 mysql 数据库.md",wordsCount:975,readingTime:"4.3m",title:"使用节点脚本定时备份 docker 中的 mysql 数据库",date:"2022-08-01T22:34:42.000Z",permalink:"/pages/practice/node-script-backup-docker-mysql/",categories:["docs","实践案例","在线脚本"],tags:[null]},{name:"在线管理 SSH 终端以及上传文件和执行命令历史",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/016.SSH管理/01.在线管理 SSH 终端以及上传文件和执行命令历史.md",wordsCount:399,readingTime:"1.6m",title:"在线管理 SSH 终端以及上传文件(SFTP)和执行命令历史",date:"2022-08-01T23:01:54.000Z",permalink:"/pages/practice/ssh-terminal/",categories:["docs","实践案例","SSH管理"],tags:[null]},{name:"Linux安装Jpom2.10.40教程",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/017.日常管理/0000.V2.10.X/0200.Linux安装Jpom2.10.40教程.md",wordsCount:"1.7k",readingTime:"7.2m",title:"Linux安装Jpom2.10.40教程",date:"2023-05-09T17:15:14.000Z",permalink:"/pages/practice/8127a2/",categories:["docs","实践案例","日常管理"],tags:[null],author:{name:"超人那个超i",link:"https://gitee.com/WCmayun"}},{name:"如何开启 h2-console web 访问功能",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/017.日常管理/0100.如何开启 h2-console web 访问功能.md",wordsCount:725,readingTime:"2.7m",title:"如何开启 h2-console web 访问功能",date:"2022-08-05T17:59:07.000Z",permalink:"/pages/practice/h2-console/",categories:["docs","实践案例","日常管理"],tags:[null]},{name:"jpom-server-import-multi-repos",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/017.日常管理/0300.jpom-server-import-multi-repos.md",wordsCount:709,readingTime:"2.9m",title:"使用 Jpom 导入多个项目仓库",date:"2023-04-20T20:31:51.000Z",permalink:"/pages/practice/jpom-server-import-multi-repos/",categories:["docs","实践案例","日常管理"],tags:[null],author:{name:"Hotstrip",link:"https://gitee.com/hotstrip"}},{name:"jpom-server-cert-manage",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/017.日常管理/0400.jpom-server-cert-manage.md",wordsCount:"1.4k",readingTime:"5.4m",title:"Jpom 管理证书文件实践案例",date:"2024-01-06T19:13:51.000Z",permalink:"/pages/practice/jpom-server-cert-manage/",categories:["docs","实践案例","日常管理"],tags:[null],author:{name:"Hotstrip",link:"https://gitee.com/hotstrip"}},{name:"安装docker",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/017.日常管理/1900.安装docker.md",wordsCount:547,readingTime:"2.6m",title:"安装Docker",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/practice/b63dc5/",tags:[null],categories:["docs","文档","安装使用"]},{name:"使用 Rainbond 部署 Jpom",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/017.日常管理/9999.使用 Rainbond 部署 Jpom.md",wordsCount:322,readingTime:"1.2m",title:"使用 Rainbond 部署 Jpom",date:"2023-04-20T20:31:51.000Z",permalink:"/pages/practice/a033a2/",categories:["docs","实践案例","日常管理"],tags:[null]},{name:"实践案例",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/实践案例.md",wordsCount:529,readingTime:"2.2m",title:"经典的实践案例",date:"2022-06-11T16:27:37.000Z",permalink:"/pages/practice/",tags:["实践案例"],categories:["docs","文档","实践案例"]},{name:"实践案例目录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/实践案例/实践案例目录.md",wordsCount:37,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"实践案例"}},title:"实践案例目录",date:"2022-06-11T16:27:37.000Z",permalink:"/pages/practice/catalogue/",tags:[null],categories:["docs","文档","实践案例"]},{name:"Java项目自动升级的方式之一",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/推广文章/Java项目自动升级的方式之一.md",wordsCount:"4.8k",readingTime:"19m",title:"探索 Java 项目如何实现自动升级",date:"2024-03-02T12:02:22.000Z",permalink:"/pages/c270ce/",categories:["docs","推广文章"],tags:["推广文章"]},{name:"Jpom介绍文章0727",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/推广文章/Jpom介绍文章0727.md",wordsCount:"1.1k",readingTime:"4.4m",title:"Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件",date:"2022-07-27T14:42:05.000Z",permalink:"/pages/e234a7/",categories:["推广文章"],tags:["推广文章"]},{name:"Jpom认证管理20230403",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/推广文章/Jpom认证管理20230403.md",wordsCount:"1.1k",readingTime:"4.4m",title:"围观 Jpom 支持使用第三方 OAuth2 认证用户",date:"2023-04-03T18:13:51.000Z",permalink:"/pages/b66671/",categories:["docs","推广文章"],tags:["OAuth2"]},{name:"Jpom资产管理介绍",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/推广文章/Jpom资产管理介绍.md",wordsCount:"2.1k",readingTime:"8.2m",title:"带您了解能替代 Jenkins 的国产【项目运维】开源软件",date:"2023-03-20T13:31:38.000Z",permalink:"/pages/7f1127/",categories:["docs","推广文章"],tags:[null]},{name:"Jpom软文0727",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/推广文章/Jpom软文0727.md",wordsCount:"1.1k",readingTime:"4.1m",title:"再见 jenkins，中小公司的福音，运维，持续集成，监控一站式平台",date:"2022-07-27T15:44:42.000Z",permalink:"/pages/dfeb97/",categories:["推广文章"],tags:["推广文章"]},{name:"个人赞赏",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/00.个人赞赏.md",wordsCount:"1.3k",readingTime:"4.6m",title:"个人赞赏",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/praise/",tags:["赞赏"],categories:["docs","赞赏"]},{name:"成为赞助商",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/04.成为赞助商.md",wordsCount:340,readingTime:"1.2m",title:"成为赞助商",date:"2023-03-06T17:00:58.000Z",permalink:"/pages/589c8e/",categories:["docs","支持"],tags:[null]},{name:"赞赏总览",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/100.赞赏总览.md",wordsCount:48,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"支持/00.赞赏支持/101.赞赏记录"}},title:"赞赏公示",date:"2022-06-11T15:13:49.000Z",permalink:"/pages/praise/publicity/",tags:["赞赏"],categories:["docs","赞赏"]},{name:"2025年",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/101.赞赏记录/75.2025年.md",wordsCount:238,readingTime:"1m",title:"2025年",date:"2025-01-14T12:54:19.000Z",permalink:"/pages/da38d0/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:["赞赏记录"]},{name:"2024年",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/101.赞赏记录/76.2024年.md",wordsCount:"1.4k",readingTime:"5.9m",title:"2024年",date:"2024-01-02T16:39:32.000Z",permalink:"/pages/97e0e2/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:["赞赏记录"]},{name:"2023年",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/101.赞赏记录/77.2023年.md",wordsCount:"1.3k",readingTime:"5.4m",title:"2023年",date:"2023-03-31T17:46:14.000Z",permalink:"/pages/8bbc44/",categories:["docs","支持","赞赏记录"],tags:["2023年"]},{name:"2022年",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/101.赞赏记录/78.2022年.md",wordsCount:490,readingTime:"2.1m",title:"2022年",date:"2023-03-31T17:43:59.000Z",permalink:"/pages/e69067/",categories:["docs","支持","赞赏记录"],tags:["2022年"]},{name:"2021年",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/101.赞赏记录/79.2021年.md",wordsCount:268,readingTime:"1.2m",title:"2021年",date:"2023-03-31T17:42:42.000Z",permalink:"/pages/1bf779/",categories:["docs","支持","赞赏记录"],tags:["2021年"]},{name:"2020年",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/101.赞赏记录/80.2020年.md",wordsCount:84,readingTime:"1",title:"2020年",date:"2024-01-04T13:11:05.000Z",permalink:"/pages/eb27c8/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:[null]},{name:"2019年",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/101.赞赏记录/81.2019年.md",wordsCount:88,readingTime:"1",title:"2019年",date:"2024-01-04T13:11:36.000Z",permalink:"/pages/9a4844/",categories:["docs","支持","赞赏支持","赞赏记录"],tags:[null]},{name:"专属纪念品",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/00.赞赏支持/90.专属纪念品.md",wordsCount:617,readingTime:"2.5m",title:"专属纪念品",date:"2024-03-07T10:21:51.000Z",permalink:"/pages/souvenir/",categories:["docs","支持","赞赏支持"],tags:["纪念品"],config:{objectFit:"contain",imgHeight:"200px"}},{name:"周边商品",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/01.周边商品/02.周边商品.md",wordsCount:669,readingTime:"2.3m",title:"周边商品",date:"2024-01-03T12:04:59.000Z",permalink:"/pages/shop/",categories:["docs","支持","赞赏支持"],tags:["周边","商品"]},{name:"推荐周边",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/01.周边商品/10.推荐周边.md",wordsCount:507,readingTime:"2.1m",title:"推荐周边",date:"2024-02-01T11:58:28.000Z",permalink:"/pages/3cfadf/",categories:["docs","支持","周边商品"],tags:["周边商品"]},{name:"法律风险",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/03.企业服务/00.法律风险.md",wordsCount:447,readingTime:"1.8m",title:"法律风险",date:"2024-03-01T10:34:36.000Z",permalink:"/pages/legal-risk/",categories:["docs","支持","企业服务"],tags:["法律风险"]},{name:"企业服务",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/03.企业服务/03.企业服务.md",wordsCount:596,readingTime:"2.1m",title:"企业服务",date:"2023-04-12T09:31:24.000Z",permalink:"/pages/enterprise-service/",categories:["docs","支持"],tags:["企业服务"]},{name:"贡献准则",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/102.贡献说明/102.贡献准则.md",wordsCount:"1.2k",readingTime:"4.4m",title:"贡献准则",date:"2022-11-17T12:41:37.000Z",permalink:"/pages/dc18b8/",categories:["docs","支持"],tags:["贡献准则"]},{name:"贡献者",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/102.贡献说明/103.贡献者.md",wordsCount:552,readingTime:"2.4m",title:"贡献者",date:"2022-10-28T22:17:38.000Z",permalink:"/pages/praise/friends/",categories:["docs","支持"],tags:["贡献者"]},{name:"我们用户",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/109.我们用户.md",wordsCount:"1.1k",readingTime:"5.5m",title:"我们用户",date:"2022-10-21T14:47:35.000Z",permalink:"/pages/user/",categories:["docs","支持"],tags:["我们用户"]},{name:"加入社群",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/支持/110.加入社群.md",wordsCount:"1.4k",readingTime:"5m",title:"加入社群",date:"2022-06-11T17:46:54.000Z",permalink:"/pages/praise/join/",tags:["社群"],categories:["docs","赞赏"]},{name:"了解Jpom",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/02.了解Jpom.md",wordsCount:"2.5k",readingTime:"9.7m",title:"了解Jpom",date:"2023-12-20T21:20:26.000Z",permalink:"/pages/readme/",categories:["docs","文档","序言"],tags:["序言"]},{name:"文档说明",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/10.文档说明.md",wordsCount:"1k",readingTime:"3.5m",title:"文档说明",date:"2023-12-23T20:38:37.000Z",permalink:"/pages/ac6961/",categories:["docs","文档","序言"],tags:[null]},{name:"基础名词",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/22.名词解释/01.基础名词.md",wordsCount:"2.8k",readingTime:"10m",pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"基础名词",date:"2022-10-20T10:12:39.000Z",permalink:"/pages/FQA/proper-noun/",categories:["docs","FQA","名词解释"],tags:["基础名词"]},{name:"命令相关",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/22.名词解释/02.命令相关.md",wordsCount:994,readingTime:"3.6m",pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"命令相关",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/0171cb/",tags:["名词-命令相关"],categories:["docs","FQA"]},{name:"产物目录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/22.名词解释/08.产物目录.md",wordsCount:986,readingTime:"3.8m",pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"产物目录",date:"2023-02-24T16:01:18.000Z",permalink:"/pages/d05224/",categories:["docs","FQA","名词解释"],tags:[null]},{name:"更多说明",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/22.名词解释/09.更多说明.md",wordsCount:464,readingTime:"1.7m",pageComponent:{name:"Catalogue",data:{path:"文档/00.自述序言/22.名称解释/",description:"请您在使用 Jpom 前请了解 Jpom 中相关名称来帮助您快速了解相关功能。"}},title:"更多说明",date:"2022-10-20T10:18:48.000Z",permalink:"/pages/6f2c0b/",categories:["docs","FQA","名称解释"],tags:["名词-更多说明"]},{name:"演示系统",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/30.演示系统.md",wordsCount:735,readingTime:"2.8m",title:"演示系统",date:"2023-04-24T13:16:19.000Z",permalink:"/pages/2e4ffc/",categories:["docs","FQA"],tags:["演示系统"]},{name:"高效报告BUG",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/998.高效报告BUG.md",wordsCount:"5.4k",readingTime:"18.1m",title:"高效报告BUG",date:"2024-01-22T21:46:35.000Z",permalink:"/pages/0facbd/",categories:["docs","文档","自述序言"],tags:[null]},{name:"提问智慧",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/00.自述序言/999.提问智慧.md",wordsCount:"17.9k",readingTime:"1h1m",title:"提问的智慧",date:"2022-11-03T22:55:30.000Z",permalink:"/pages/FQA/how-to-ask-questions-the-smart-way/",categories:["docs","FQA"],tags:[null]},{name:"安装说明",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/01.安装说明.md",wordsCount:"2k",readingTime:"7.3m",title:"必读前言",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/install/",tags:["前言","必读"],categories:["docs","文档","安装使用"]},{name:"一键安装",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/02.一键安装.md",wordsCount:"1.3k",readingTime:"6m",title:"一键安装（linux）",date:"2022-06-11T16:05:40.000Z",permalink:"/pages/fe28e9/",tags:["安装"],categories:["docs","文档","安装使用"]},{name:"下载安装",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/03.下载安装.md",wordsCount:677,readingTime:"3.1m",title:"下载安装",date:"2022-06-11T16:02:24.000Z",permalink:"/pages/db3065/",tags:["安装"],categories:["docs","文档","安装使用"]},{name:"容器化安装",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/04.容器化安装.md",wordsCount:"1.2k",readingTime:"6m",title:"容器化安装",date:"2022-06-11T16:11:41.000Z",permalink:"/pages/820286/",tags:["安装"],categories:["docs","文档","安装使用"]},{name:"自行编译",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/05.自行编译.md",wordsCount:496,readingTime:"1.9m",title:"自行编译",date:"2022-06-11T16:09:01.000Z",permalink:"/pages/e6e8bf/",tags:["安装"],categories:["docs","文档","安装使用"]},{name:"docker-compose",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/06.docker-compose.md",wordsCount:89,readingTime:"1",title:"docker-compose",date:"2022-06-11T16:10:10.000Z",permalink:"/pages/a06a94/",tags:["安装"],categories:["docs","文档","安装使用"]},{name:"辅助安装",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/099.辅助安装.md",wordsCount:900,readingTime:"4.2m",title:"辅助安装",date:"2023-12-20T13:45:55.000Z",permalink:"/pages/feb7c1/",categories:["docs","文档","安装使用"],tags:["安装"]},{name:"安装服务",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/20.安装服务.md",wordsCount:528,readingTime:"1.9m",title:"安装服务",date:"2023-12-20T18:46:35.000Z",permalink:"/pages/929085/",categories:["docs","文档","安装使用"],tags:["安装"]},{name:"如何访问",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/30.开始使用/001.如何访问.md",wordsCount:726,readingTime:"2.6m",title:"如何访问",date:"2023-12-20T12:49:55.000Z",permalink:"/pages/892df7/",categories:["docs","文档","开始使用"],tags:["使用"]},{name:"初始化服务端",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/30.开始使用/002.初始化服务端.md",wordsCount:272,readingTime:"1m",title:"初始化服务端",date:"2023-12-20T13:03:56.000Z",permalink:"/pages/269bdc/",categories:["docs","文档","开始使用"],tags:["使用"]},{name:"nginx",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/30.开始使用/099.nginx.md",wordsCount:474,readingTime:"2.5m",title:"Nginx推荐配置",date:"2022-06-11T14:49:51.000Z",permalink:"/pages/FQA/nginx-conf",tags:["Nginx 配置"],categories:["docs","FQA"]},{name:"Windows安装",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/35.Windows安装.md",wordsCount:939,readingTime:"4.4m",title:"Windows安装",date:"2024-07-05T14:43:57.000Z",permalink:"/pages/a13d8d/",categories:["docs","文档","安装使用"],tags:[null],author:{name:"程鯤鵬",link:"https://github.com/conancheng"}},{name:"宝塔安装",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/01.安装使用/9999.宝塔安装.md",wordsCount:455,readingTime:"1.7m",title:"宝塔面板部署",date:"2024-11-05T09:40:41.000Z",permalink:"/pages/40765e/",categories:["docs","文档","安装使用"],tags:[null]},{name:"备份数据",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/010.备份数据.md",wordsCount:"1.3k",readingTime:"4.9m",title:"备份数据",date:"2023-12-23T16:25:59.000Z",permalink:"/pages/2026d1/",categories:["docs","文档","如何升级&迁移"],tags:[null]},{name:"数据库管理",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/020.数据库管理/020.数据库管理.md",wordsCount:"1.6k",readingTime:"5.8m",title:"数据库管理",date:"2023-12-23T20:33:03.000Z",permalink:"/pages/db/672ad5/",categories:["docs","文档","开始使用"],tags:["数据库"]},{name:"数据库迁移到 mysql",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/020.数据库管理/0990.数据库迁移到 mysql.md",wordsCount:"5.4k",readingTime:"28.9m",title:"H2 迁移到 MYSQL",date:"2023-01-10T14:21:11.000Z",permalink:"/pages/db/4cfb46/",categories:["docs","文档","如何升级"],author:{name:"loyal",link:"https://gitee.com/Mr_loyal"},tags:["mysql"]},{name:"数据库迁移到 mariadb",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/020.数据库管理/0991.数据库迁移到 mariadb.md",wordsCount:"4.4k",readingTime:"22.3m",title:"H2 迁移到 MARIADB",date:"2024-04-01T14:21:11.000Z",permalink:"/pages/db/5622b5/",categories:["docs","文档","如何升级"],tags:["mariadb"]},{name:"数据库迁移到 postgresql",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/020.数据库管理/0992.数据库迁移到 postgresql.md",wordsCount:"3.9k",readingTime:"19m",title:"H2 迁移到 POSTGRESQL",date:"2024-04-01T14:21:11.000Z",permalink:"/pages/db/e59f84/",categories:["docs","文档","如何升级"],tags:["postgresql"]},{name:"数据库迁移到 dameng",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/020.数据库管理/0993.数据库迁移到 dameng.md",wordsCount:"3.9k",readingTime:"19.1m",title:"H2 迁移到 DAMENG",date:"2025-05-12T14:21:11.000Z",permalink:"/pages/db/e59f85/",categories:["docs","文档","如何升级"],tags:["dameng"]},{name:"升级版本",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/08.升级版本.md",wordsCount:"1.2k",readingTime:"4.5m",title:"升级版本",date:"2022-06-11T14:53:07.000Z",permalink:"/pages/FQA/upgrade/",tags:["升级"],categories:["docs","FQA"]},{name:"2.10.x-2.11.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/0996.2.10.x-2.11.x.md",wordsCount:720,readingTime:"2.6m",title:"2.10.x 升级到 2.11.x",date:"2024-01-13T15:13:15.000Z",permalink:"/pages/upgrade/2.10.x-to-2.11.x/",categories:["docs","文档","备份&升级"],tags:[null]},{name:"2.9.x-2.10.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/0998.2.9.x-2.10.x.md",wordsCount:"3.2k",readingTime:"12.7m",title:"2.9.x 升级到 2.10.x",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/upgrade/2.9.x-to-2.10.x/",tags:["升级"],categories:["docs","文档"]},{name:"2.8.x-2.9.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/012.备份&升级/0999.2.8.x-2.9.x.md",wordsCount:"2.2k",readingTime:"9.2m",title:"2.8.x 升级到 2.9.x",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/upgrade/2.8.x-to-2.9.x/",tags:["升级"],categories:["docs","文档"]},{name:"迁移方式",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/013.迁移数据/010.迁移方式.md",wordsCount:182,readingTime:"1",title:"迁移方式",date:"2023-12-24T11:34:27.000Z",permalink:"/pages/4d2ebc/",categories:["docs","文档","备份&升级&迁移","迁移数据"],tags:[null]},{name:"完整&部分迁移",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/013.迁移数据/020.完整&部分迁移.md",wordsCount:"3k",readingTime:"10.3m",title:"迁移数据",date:"2023-12-23T17:15:45.000Z",permalink:"/pages/dec2a1/",categories:["docs","文档","如何升级&迁移"],tags:[null]},{name:"数据还原&导入",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/013.迁移数据/030.数据还原&导入.md",wordsCount:"3.7k",readingTime:"13.1m",title:"还原&导入",date:"2023-12-24T11:35:54.000Z",permalink:"/pages/643951/",categories:["docs","文档","备份&升级&迁移","迁移数据"],tags:[null]},{name:"容器迁移",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/013.迁移数据/040.容器迁移.md",wordsCount:"2k",readingTime:"7.5m",title:"容器迁移",date:"2023-12-24T12:21:09.000Z",permalink:"/pages/1ec490/",categories:["docs","文档","备份&升级&迁移","迁移数据"],tags:[null]},{name:"权限说明",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/00.权限说明.md",wordsCount:"1.1k",readingTime:"3.8m",title:"权限说明",date:"2022-11-08T09:29:58.000Z",permalink:"/pages/permissions/ca90a5/",categories:["docs","FQA","常见问题"],tags:["用户"]},{name:"登录说明",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/05.登录说明.md",wordsCount:892,readingTime:"3.3m",title:"登录说明",date:"2023-12-20T17:52:28.000Z",permalink:"/pages/be7a7b/",categories:["docs","文档","用户&权限","assets"],tags:["用户"]},{name:"管理用户",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/10.管理用户.md",wordsCount:447,readingTime:"1.6m",title:"管理用户",date:"2023-12-20T16:04:24.000Z",permalink:"/pages/0f14d7/",categories:["docs","文档","用户&权限"],tags:["用户"]},{name:"Oauth2说明",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/90.Oauth2登录/00.Oauth2说明.md",wordsCount:312,readingTime:"1.2m",title:"Oauth2说明",date:"2023-12-20T19:05:12.000Z",permalink:"/pages/oauth/898d2e/",categories:["docs","文档","用户&权限"],tags:["用户"]},{name:"gitee登录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/90.Oauth2登录/01.gitee登录.md",wordsCount:471,readingTime:"1.8m",title:"Gitee登录",permalink:"/pages/oauth/gitee/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},tags:["OAuth","Gitee"],date:"2024-04-08T18:46:14.000Z"},{name:"钉钉登录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/90.Oauth2登录/02.钉钉登录.md",wordsCount:477,readingTime:"1.8m",title:"钉钉登录",permalink:"/pages/oauth/dingtalk/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","dingtalk","钉钉"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z"},{name:"企业微信二维码登录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/90.Oauth2登录/03.企业微信二维码登录.md",wordsCount:651,readingTime:"2.5m",title:"企业微信扫码登录",permalink:"/pages/oauth/wechat_enterprise_qrcode/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","微信","企业微信","扫码"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z"},{name:"飞书登录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/90.Oauth2登录/04.飞书登录.md",wordsCount:440,readingTime:"1.7m",title:"飞书登录",permalink:"/pages/oauth/feishu/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","飞书"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z"},{name:"github登录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/90.Oauth2登录/05.github登录.md",wordsCount:490,readingTime:"1.9m",title:"Github登录",permalink:"/pages/oauth/github/",sidebar:!0,article:!0,comment:!0,categories:["指南","集成第三方"],tags:["OAuth","Github"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"},date:"2024-04-08T18:46:14.000Z"},{name:"自建 Gitlab",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/90.Oauth2登录/06.自建 Gitlab.md",wordsCount:179,readingTime:"1",title:"自建 Gitlab",date:"2024-04-08T16:49:15.000Z",permalink:"/pages/oauth/my_gitlab/",categories:["高级特性"],tags:["oauth"],author:{name:"JustAuth 官方",link:"https://www.justauth.cn/"}},{name:"用户日志",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/98.用户日志.md",wordsCount:276,readingTime:"1m",title:"用户日志",date:"2023-12-20T15:51:40.000Z",permalink:"/pages/6e6103/",categories:["docs","文档","用户&权限"],tags:["用户"]},{name:"MFA两步验证",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/020.用户&权限/99.MFA两步验证.md",wordsCount:624,readingTime:"2.5m",title:"MFA两步验证",date:"2023-12-20T15:22:03.000Z",permalink:"/pages/885659/",categories:["docs","文档","用户&权限"],tags:["用户"]},{name:"集群管理",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/030.工作空间&集群/000.集群管理.md",wordsCount:"2.2k",readingTime:"7.7m",title:"集群管理",date:"2023-12-24T15:12:09.000Z",permalink:"/pages/workspace/cluster/",categories:["docs","文档","工作空间&集群"],tags:[null]},{name:"工作空间",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/030.工作空间&集群/010.工作空间.md",wordsCount:426,readingTime:"1.4m",title:"工作空间",date:"2023-12-23T16:16:26.000Z",permalink:"/pages/workspace/d3f985/",categories:["docs","文档","工作空间&集群"],tags:[null]},{name:"资产说明",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/00.资产说明.md",wordsCount:397,readingTime:"1.4m",title:"资产说明",date:"2023-12-24T19:10:07.000Z",permalink:"/pages/350118/",categories:["docs","文档","工作空间&集群","资产管理"],tags:[null]},{name:"机器资产",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/10.机器资产.md",wordsCount:"2.6k",readingTime:"9.6m",title:"机器资产",date:"2023-12-24T19:10:40.000Z",permalink:"/pages/3f268f/",categories:["docs","文档","工作空间&集群","资产管理"],tags:[null]},{name:"SSH资产",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/20.SSH资产.md",wordsCount:"1.9k",readingTime:"7.6m",title:"SSH资产",date:"2023-12-24T19:12:25.000Z",permalink:"/pages/d2df49/",categories:["docs","文档","工作空间&集群","资产管理"],tags:[null]},{name:"新增Docker",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/30.Docker资产/00.新增Docker.md",wordsCount:"2.4k",readingTime:"10.6m",title:"新增&删除",date:"2023-12-24T19:12:37.000Z",permalink:"/pages/4d0c1b/",categories:["docs","文档","Docker","资产管理"],tags:[null]},{name:"Docker控制台",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/30.Docker资产/05.Docker控制台.md",wordsCount:"1.2k",readingTime:"5m",title:"Docker控制台",date:"2024-01-14T14:17:42.000Z",permalink:"/pages/81c6ca/",categories:["docs","文档","资产管理","Docker资产"],tags:[null]},{name:"Swarm管理",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/30.Docker资产/10.Swarm管理.md",wordsCount:545,readingTime:"2.2m",title:"Swarm管理",date:"2024-01-14T15:50:21.000Z",permalink:"/pages/6af9e1/",categories:["docs","文档","资产管理","Docker资产"],tags:[null]},{name:"Swarm控制台",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/30.Docker资产/14.Swarm控制台.md",wordsCount:983,readingTime:"3.8m",title:"Swarm控制台",date:"2024-01-14T16:17:15.000Z",permalink:"/pages/ccc0ae/",categories:["docs","文档","资产管理","Docker资产"],tags:[null]},{name:"分配Docker",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/035.资产管理/30.Docker资产/20.分配Docker.md",wordsCount:279,readingTime:"1.1m",title:"分配Docker",date:"2024-01-14T17:09:28.000Z",permalink:"/pages/bb772f/",categories:["docs","文档","资产管理","Docker资产"],tags:[null]},{name:"逻辑节点",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/040.节点&项目/010.逻辑节点.md",wordsCount:"2.4k",readingTime:"8.7m",title:"逻辑节点",date:"2024-01-14T18:32:42.000Z",permalink:"/pages/285484/",categories:["docs","文档","节点&项目"],tags:[null]},{name:"节点项目",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/040.节点&项目/020.节点项目.md",wordsCount:35,readingTime:"1",title:"节点项目",date:"2024-01-14T18:32:58.000Z",permalink:"/pages/b3e508/",categories:["docs","文档","节点&项目"],tags:[null]},{name:"节点脚本",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/040.节点&项目/030.节点脚本.md",wordsCount:35,readingTime:"1",title:"节点脚本",date:"2024-01-14T18:33:23.000Z",permalink:"/pages/8a95bf/",categories:["docs","文档","节点&项目"],tags:[null]},{name:"节点分发",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/040.节点&项目/040.节点分发.md",wordsCount:35,readingTime:"1",title:"节点分发",date:"2024-01-14T18:33:38.000Z",permalink:"/pages/e35370/",categories:["docs","文档","节点&项目"],tags:[null]},{name:"日志搜索",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/040.节点&项目/050.日志搜索.md",wordsCount:35,readingTime:"1",title:"日志搜索",date:"2024-01-14T18:34:41.000Z",permalink:"/pages/c5cbe6/",categories:["docs","文档","节点&项目"],tags:[null]},{name:"介绍",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/100.DSL说明/00.介绍.md",wordsCount:658,readingTime:"2.4m",title:"DSL 说明",date:"2022-10-20T10:35:12.000Z",permalink:"/pages/FQA/DSL/",categories:["docs","FQA","DSL说明"],tags:[null]},{name:"常见问题",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/100.DSL说明/10.常见问题.md",wordsCount:161,readingTime:"1",title:"常见问题",date:"2024-04-01T14:23:54.000Z",permalink:"/pages/9c85bc/",categories:["docs","文档","DSL说明"],tags:[null]},{name:"DSL-java",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/100.DSL说明/10.配置示例/01.DSL-java.md",wordsCount:374,readingTime:"2.3m",title:"管理 java 项目脚本示例",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/519020/",tags:["DSL"],categories:["docs","FQA"]},{name:"DSL-python",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/100.DSL说明/10.配置示例/02.DSL-python.md",wordsCount:357,readingTime:"2.1m",title:"管理 python 项目脚本示例",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/eb9c6e/",tags:["DSL"],categories:["docs","FQA"]},{name:"DOCKER_DSL",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/100.DSL说明/10.配置示例/03.DOCKER_DSL.md",wordsCount:259,readingTime:"1.2m",title:"容器构建的 DSL 配置示例",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/5020f7/",tags:[null],categories:["docs","FQA"]},{name:"FQA",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/010.FQA.md",wordsCount:87,readingTime:"1",pageComponent:{name:"Catalogue",data:{path:"文档/200.常见问题/",description:"常见问题是目前我们收到到您在使用过程中可能遇到的一系列问题的解决方案和说明"}},title:"问题合集",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/FQA/",tags:["FQA"],categories:["docs","FQA"]},{name:"账号相关",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/100.账号相关.md",wordsCount:609,readingTime:"2.3m",title:"账号相关",date:"2022-07-25T16:36:11.000Z",permalink:"/pages/FQA/839836/",categories:["docs","FQA","常见问题"],tags:[null]},{name:"启动相关",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/101.启动相关.md",wordsCount:961,readingTime:"4.5m",title:"启动失败",date:"2022-07-25T16:40:31.000Z",permalink:"/pages/FQA/a1e454/",categories:["docs","FQA","常见问题"],tags:[null]},{name:"无法访问",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/103.无法访问.md",wordsCount:462,readingTime:"1.7m",title:"无法访问",date:"2022-07-25T16:43:49.000Z",permalink:"/pages/FQA/ba6ff8/",categories:["docs","FQA","常见问题"],tags:["常见问题","无法访问"]},{name:"系统报错",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/104.系统报错.md",wordsCount:"1.8k",readingTime:"6.4m",title:"使用报错",date:"2022-07-25T16:44:53.000Z",permalink:"/pages/FQA/d0b0c3/",categories:["docs","FQA","常见问题"],tags:["常见问题"]},{name:"修改配置",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/105.修改配置.md",wordsCount:"3k",readingTime:"11m",title:"修改配置",date:"2022-07-25T16:45:23.000Z",permalink:"/pages/FQA/98500f/",categories:["docs","FQA","常见问题"],tags:[null]},{name:"构建相关",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/106.构建相关.md",wordsCount:"1.7k",readingTime:"6.8m",title:"构建相关",date:"2022-07-25T16:46:41.000Z",permalink:"/pages/FQA/6a1f29/",categories:["docs","FQA","常见问题"],tags:["在线构建"]},{name:"更多问题",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/199.更多问题.md",wordsCount:"2.4k",readingTime:"9.9m",title:"更多问题",date:"2022-07-25T16:46:14.000Z",permalink:"/pages/FQA/fa9335/",categories:["docs","FQA","常见问题"],tags:["常见问题"]},{name:"ProjectFileBackup",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/300.ProjectFileBackup.md",wordsCount:655,readingTime:"2.4m",title:"项目备份",date:"2022-06-11T14:58:09.000Z",permalink:"/pages/FQA/project-file-backup/",tags:[null],categories:["docs","FQA"]},{name:"maven",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/200.常见问题/500.maven.md",wordsCount:392,readingTime:"1.6m",title:"maven 私服",date:"2022-06-11T14:55:08.000Z",permalink:"/pages/FQA/maven-conf/",tags:["maven 私服"],categories:["docs","FQA"]},{name:"用户角色",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0010.用户管理/01.用户角色.md",wordsCount:223,readingTime:"1",title:"部分限制说明",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/7d218d/",tags:[null],categories:["docs","文档","用户管理"]},{name:"编辑用户",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0010.用户管理/02.编辑用户.md",wordsCount:404,readingTime:"1.5m",title:"编辑用户",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/c6e79e/",tags:[null],categories:["docs","文档","用户管理"]},{name:"启动参数",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0111.管理/08.启动参数.md",wordsCount:262,readingTime:"1m",title:"启动参数",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/1508cd/",tags:[null],categories:["docs","文档","安装使用"]},{name:"启动失败",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0111.管理/09.启动失败.md",wordsCount:210,readingTime:"1",title:"启动失败",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/d39de8/",tags:[null],categories:["docs","文档","安装使用"]},{name:"管理命令",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0111.管理/10.管理命令.md",wordsCount:197,readingTime:"1",title:"管理命令",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/530eb0/",tags:[null],categories:["docs","文档","安装使用"]},{name:"编辑构建",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0887.在线构建/01.编辑构建.md",wordsCount:457,readingTime:"1.7m",title:"编辑构建",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/29f687/",tags:[null],categories:["docs","文档","在线构建"]},{name:"监控介绍",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0888.监控管理/01.监控介绍.md",wordsCount:316,readingTime:"1.1m",title:"监控介绍",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/2f4ebb/",tags:[null],categories:["docs","文档","监控管理"]},{name:"系统日志",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0889.系统管理/01.系统日志.md",wordsCount:25,readingTime:"1",title:"系统日志",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/5d6479/",tags:[null],categories:["docs","文档","系统管理"]},{name:"系统管理",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0889.系统管理/02.系统管理.md",wordsCount:633,readingTime:"2.2m",title:"系统管理",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/0429ad/",tags:[null],categories:["docs","文档","系统管理"]},{name:"邮箱配置",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0889.系统管理/03.邮箱配置.md",wordsCount:179,readingTime:"1",title:"邮箱配置",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/25f350/",tags:[null],categories:["docs","文档","系统管理"]},{name:"项目属性",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0890.节点功能/10.项目管理/01.项目属性.md",wordsCount:661,readingTime:"2.6m",title:"项目属性",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/fa7614/",tags:[null],categories:["docs","文档","节点功能","项目管理"]},{name:"控制台",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0890.节点功能/10.项目管理/02.控制台.md",wordsCount:469,readingTime:"1.7m",title:"控制台",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/ff3028/",tags:[null],categories:["docs","文档","节点功能","项目管理"]},{name:"白名单目录",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0890.节点功能/13.系统管理/01.白名单目录.md",wordsCount:725,readingTime:"2.5m",title:"授权（白名单）目录",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/933483/",tags:[null],categories:["docs","文档","节点功能","系统管理"]},{name:"缓存管理",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0890.节点功能/13.系统管理/02.缓存管理.md",wordsCount:122,readingTime:"1",title:"缓存管理",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/b06467/",tags:[null],categories:["docs","文档","节点功能","系统管理"]},{name:"添加节点",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0891.节点管理/01.添加节点.md",wordsCount:872,readingTime:"3.2m",title:"添加节点",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/2573d3/",tags:[null],categories:["docs","文档","节点管理"]},{name:"SSH管理",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0891.节点管理/02.SSH管理.md",wordsCount:"1.2k",readingTime:"4.5m",title:"SSH管理",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/c6da0f/",tags:[null],categories:["docs","文档","节点管理"]},{name:"分发介绍",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/文档/9999.历史文档/0892.节点分发/01.分发介绍.md",wordsCount:558,readingTime:"1.9m",title:"分发介绍",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/541f19/",tags:[null],categories:["docs","文档","节点分发"]},{name:"最新",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/01.最新.md",wordsCount:"7k",readingTime:"29m",title:"2.11.x-release",date:"2024-01-12T14:04:53.000Z",permalink:"/pages/changelog/new/",categories:["docs","更新日志","更新说明"],tags:["2.11.x"]},{name:"最新beta",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/02.最新beta.md",wordsCount:"8.7k",readingTime:"36m",title:"2.11.x-beta",date:"2023-12-29T09:24:53.000Z",permalink:"/pages/changelog/new-beta/",categories:["docs","更新日志","更新说明"],tags:["2.11.x"]},{name:"2.10.x-release",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/1180.2.10.x-release.md",wordsCount:"16.2k",readingTime:"1h4m",title:"2.10.x-release",date:"2022-12-19T15:12:09.000Z",permalink:"/pages/9b918a/",categories:["docs","日志&下载","更新日志"],tags:["2.10.x"]},{name:"2.10.x-beta",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/1181.2.10.x-beta.md",wordsCount:"6.2k",readingTime:"25.2m",title:"2.10.x-beta",date:"2023-03-23T12:32:45.000Z",permalink:"/pages/cc9ffc/",categories:["docs","文档","更新日志","更新说明"],tags:["2.10.x"]},{name:"2.9.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/1191.2.9.x.md",wordsCount:"5k",readingTime:"20.5m",title:"2.9.x ~ 2.9.21",date:"2022-06-11T17:27:47.000Z",permalink:"/pages/changelog/2.9.x/",tags:["2.9.x"],categories:["docs","changelog"]},{name:"history",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/11100.history.md",wordsCount:114,readingTime:"1",title:"历史更新记录",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/history/",tags:[null],categories:["docs","changelog"]},{name:"2.8.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/1192.2.8.x.md",wordsCount:"7.3k",readingTime:"28.3m",title:"2.8.0 ~ 2.8.25",date:"2022-06-11T17:18:34.000Z",permalink:"/pages/changelog/2.8.x/",tags:["2.8.x"],categories:["docs","changelog"]},{name:"2.7.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/1193.2.7.x.md",wordsCount:"2.1k",readingTime:"8.3m",title:"2.7.0 ~ 2.7.3",date:"2022-06-11T17:18:44.000Z",permalink:"/pages/changelog/2.7.x/",tags:["2.7.x"],categories:["docs","changelog"]},{name:"2.6.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/1194.2.6.x.md",wordsCount:"1.1k",readingTime:"4.3m",title:"2.6.0 ~ 2.6.4",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.6.x/",tags:["2.6.x"],categories:["docs","changelog"]},{name:"2.5.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/1195.2.5.x.md",wordsCount:"2.2k",readingTime:"8.7m",title:"2.5.0 ~ 2.5.2",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.5.x/",tags:["2.5.x"],categories:["docs","changelog"]},{name:"2.4.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/1197.2.4.x.md",wordsCount:"3.7k",readingTime:"14.3m",title:"2.4.0 ~ 2.4.9",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.4.x/",tags:[null],categories:["docs","changelog"]},{name:"2.3.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/1198.2.3.x.md",wordsCount:698,readingTime:"2.6m",title:"2.3.1 ~ 2.3.2",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.3.x/",tags:[null],categories:["docs","changelog"]},{name:"2.0-2.2",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/01.更新日志/9999.历史版本/1199.2.0-2.2.md",wordsCount:184,readingTime:"1",title:"2.0 ~ 2.2",date:"2022-06-11T09:57:14.000Z",permalink:"/pages/changelog/2.x/",tags:[null],categories:["docs","changelog"]},{name:"下载链接",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/02.下载链接/01.下载链接.md",wordsCount:"2.3k",readingTime:"14.3m",title:"2.11.x release",date:"2022-08-01T17:28:25.000Z",permalink:"/pages/all-downloads/",categories:["docs","更新日志","下载链接","release"],tags:["downloads","release","2.11.x"]},{name:"下载链接beta",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/02.下载链接/02.下载链接beta.md",wordsCount:"10.7k",readingTime:"1h6m",title:"2.11.x beta",date:"2022-08-01T17:28:25.000Z",permalink:"/pages/all-beta-downloads/",categories:["docs","更新日志","beta","下载链接"],tags:["beta-downloads","downloads","2.11.x"]},{name:"2.8.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/02.下载链接/1000.2.8.x.md",wordsCount:"1.7k",readingTime:"10.8m",title:"2.8.x 下载地址",date:"2022-11-08T13:24:51.000Z",permalink:"/pages/downloads/downloads-2.8.x/",categories:["docs","更新日志","下载链接"],tags:["2.8.x"]},{name:"2.10.x-release",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/02.下载链接/980.2.10.x-release.md",wordsCount:"8.2k",readingTime:"51.5m",title:"2.10.x-release",date:"2022-12-19T15:15:13.000Z",permalink:"/pages/downloads/508e7f/",categories:["docs","日志&下载","下载链接"],tags:["2.10.x"]},{name:"2.10.x beta",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/02.下载链接/981.2.10.x beta.md",wordsCount:"9.4k",readingTime:"58.9m",title:"2.10.x beta",date:"2023-03-23T12:28:18.000Z",permalink:"/pages/downloads/ba6e33/",categories:["docs","文档","更新日志","下载链接"],tags:["2.10.x"]},{name:"2.9.x",filePath:"/home/runner/work/jpom-docs/jpom-docs/docs/日志&下载/02.下载链接/999.2.9.x.md",wordsCount:"3.6k",readingTime:"22.6m",title:"2.9.x 下载地址",date:"2022-12-19T18:59:51.000Z",permalink:"/pages/downloads/downloads-2.9.x/",categories:["docs","更新日志","下载链接"],tags:["2.9.x"]}],mdFileCountType:"archives",totalWords:"archives",moutedEvent:".tags-wrapper",indexIteration:2500,pageIteration:2500},privatePage:{openPrivate:!1,username:"jpom",password:"jpom",expire:"1d",loginPath:"/login/",loginKey:"jpom_manager",loginSession:!1,firstLogin:0,firstLoginKey:"jpom_first_login",loginInfo:{}},author:{name:"bwcx_jzy",link:"https://gitee.com/bwcx-jzy"},social:{icons:[{iconClass:"icon-gitee",title:"Gitee",link:"https://gitee.com/dromara/Jpom"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/dromara/Jpom"}]},footer:{createYear:2019,copyrightInfo:' | Jpom开源项目<p><a href="/pages/user/">我们用户</a> | <a href="/pages/praise/friends/">贡献者们</a> | <a href="/pages/souvenir/">专属纪念品</a></p><span id=\'busuanzi_container_site_pv\'>本站访问量：<span id=\'busuanzi_value_site_pv\'>-</span></span> |  <a href="http://beian.miit.gov.cn/" target="_blank">京ICP备17044819号</a>'},htmlModules:{homeSidebarB:'<div style="padding: 0.95rem">\n         <p style="\n           color: var(--textColor);\n           opacity: 0.9;\n           font-size: 20px;\n           font-weight: bold;\n           margin: 0 0 8px 0;\n         ">社区讨论</p>\n         <img  loading="lazy" src="/images/wx_qrcode2.png"  style="width:100%;" />\n         添加小助手：备注 <b>Jpom</b> 进群\n        </div>',sidebarT:'\n  <div style="width:230px;margin:0 auto;display:flex;flex-direction: column;">\n    <a href="https://gitee.com/dromara/MaxKey" target="_blank">\n      <img  loading="lazy" class="no-zoom" height="60" width="224" src="/images/friends/ad/maxkey-banner.png">\n    </a>\n    <a href="https://www.xiaonuo.vip" target="_blank">\n      <img  loading="lazy" class="no-zoom" height="60" width="224" src="/images/friends/ad/snowy-banner.jpg">\n    </a>\n     <a href="https://gitee.com/qingqinkj/mdp-lcode-ui-web" target="_blank" >\n      <img  loading="lazy" class="no-zoom" height="60" width="224" src="/images/friends/ad/mdp-banner2.png">\n    </a>\n    <a href="https://www.jnpfsoft.com/index.html?from=jpom" target="_blank"  style="background:#dcf3ff">\n          <img  loading="lazy" class="no-zoom" height="60" width="224" src="/images/friends/ad/jnpfsoft-banner2.png">\n    </a>\n     <a href="https://www.orangeforms.com/?from=jpom" target="_blank"  style="background:#f37700">\n          <img  loading="lazy" class="no-zoom" height="60" width="224" src="/images/friends/ad/orangeforms-banner.jpg">\n    </a>\n    <div style="order: 9999;">\n      <span style=\'color: gray;font-size: smaller;\'>广告采用随机轮播方式显示</span>\n      <span style=\'color: #E01E5A;font-size: smaller;font-weight: bolder;float: right\'>❤️<a href=\'/pages/589c8e/\'>成为赞助商</a></span>\n    </div>\n    <div style="order: 100000;background-color:var(--borderColor);width:100%;height:1px;margin: 30px 0px 0px 0px;position:relative;">\n          <button style="border-radius: 100%;padding: 0;text-align: center;border: none;background-color: #ff3861;cursor: pointer;position: absolute;left: calc(50% - 15px);top: -15px;height: 30px;width: 30px;color: #fff;" onclick="document.getElementsByClassName(\'sidebar-slot-top\')[0].style.display=\'none\'">收</button>\n    </div>\n    </div>\n  ',pageT:'\n  <div class="wwads-cn wwads-horizontal page-wwads" data-id="188" style="display: flex !important"></div>\n  ',pageB:"\n\n  ",windowRB:'\n\x3c!--  <div class="custom-block danger"><p class="custom-block-title">系统公告</p> <p>近期我们下载中心受到持续的恶意刷流量，给我们的长期运营带来了很大的挑战。我们已经将下载中心迁移至 cloudflare，部分网络环境下使用可能不便还请谅解。</p>--\x3e\n\x3c!--  <p><a href="/pages/malice-fraudulent/" target="_blank">点击查看详情</a></p>--\x3e\n\x3c!--  </div>--\x3e\n  '}},locales:{"/":{lang:"zh-CN",title:"Jpom项目运维",description:"一款简而轻的低侵入式在线构建、自动部署、日常运维、项目监控开源软件",path:"/"}}};var pl=t(125),ml=t(126),ul=t(21);var gl={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:r}}=n;return!(e||!1===t||!0===r)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(ul.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(ul.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(ul.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let r=0,a=n.length;r<a;r++){const{frontmatter:{categories:a,tags:s}}=n[r];"array"===Object(ul.n)(a)&&a.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[r]))}),"array"===Object(ul.n)(s)&&s.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[r]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Xt.component(pl.default),Xt.component(ml.default);function hl(n){return n.toString().padStart(2,"0")}t(278);Xt.component("BlockToggle",()=>Promise.all([t.e(7),t.e(4)]).then(t.bind(null,385))),Xt.component("Bubble",()=>Promise.all([t.e(7),t.e(1)]).then(t.bind(null,386))),Xt.component("GlobalTip",()=>Promise.all([t.e(7),t.e(2)]).then(t.bind(null,387))),Xt.component("Card",()=>Promise.all([t.e(7),t.e(4)]).then(t.bind(null,388))),Xt.component("Login",()=>Promise.all([t.e(7),t.e(6)]).then(t.bind(null,389))),Xt.component("PageInfo",()=>Promise.all([t.e(7),t.e(1)]).then(t.bind(null,383))),Xt.component("SidebarReverse",()=>t.e(0).then(t.bind(null,390))),Xt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,125))),Xt.component("Badge",()=>Promise.all([t.e(7),t.e(3)]).then(t.bind(null,579))),Xt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,126)));t(279);var vl={name:"ReadingProgress",data:()=>({readingTop:0,readingHeight:1,progressStyle:null,transform:void 0,running:!1}),watch:{$readingShow(){this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)}},mounted(){this.transform=this.getTransform(),this.progressStyle=this.getProgressStyle(),this.$readingShow&&window.addEventListener("scroll",this.base)},beforeDestroy(){this.$readingShow&&window.removeEventListener("scroll",this.base)},methods:{base(){this.running||(this.running=!0,requestAnimationFrame(this.getReadingBase))},getReadingBase(){this.readingHeight=this.getReadingHeight()-this.getScreenHeight(),this.readingTop=this.getReadingTop(),this.progressStyle=this.getProgressStyle(),this.running=!1},getReadingHeight:()=>Math.max(document.body.scrollHeight,document.body.offsetHeight,0),getScreenHeight:()=>Math.max(window.innerHeight,document.documentElement.clientHeight,0),getReadingTop:()=>Math.max(window.pageYOffset,document.documentElement.scrollTop,0),getTransform(){const n=document.createElement("div");return["transform","-webkit-transform","-moz-transform","-o-transform","-ms-transform"].find(e=>e in n.style)||void 0},getProgressStyle(){const n=this.readingTop/this.readingHeight;switch(this.$readingShow){case"top":case"bottom":return this.transform?`${this.transform}: scaleX(${n})`:`width: ${100*n}%`;case"left":case"right":return this.transform?`${this.transform}: scaleY(${n})`:`height: ${100*n}%`;default:return null}}}},fl=(t(280),Object(il.a)(vl,(function(){var n=this._self._c;return n("ClientOnly",[this.$readingShow?n("div",{staticClass:"reading-progress",class:this.$readingShow},[n("div",{staticClass:"progress",style:this.progressStyle})]):this._e()])}),[],!1,null,"3640397f",null).exports),bl=t(124),xl=t.n(bl),jl=[({Vue:n,options:e,router:t,siteData:r,isServer:a})=>{function s(){setTimeout(()=>{const n=document.querySelector(".wwads-cn");if(!n)return;const e=n.querySelector(".wwads-hide");e&&(e.onclick=()=>{n.style.display="none"}),"none"===n.style.display&&$(n).css("cssText","display:flex !important")},900)}a||(t.beforeEach((n,e,t)=>{t()}),t.afterEach((n,e)=>{docReady((function(){console.log(`\n %c Jpom %c ${location.protocol}//${location.host} \n`,"color: #ffffff; background: #f1404b; padding:5px 0;","background: #030307; padding:5px 0;"),loopExecute((function(){return void 0!==window._AdBlockInit&&0!==$(".wwads-cn").children().length&&(s(),!0)}),10,(function(){!function(){const n=document.getElementsByClassName("wwads-cn"),e=document.querySelector(".wwads-content");n[0]&&!e&&(n[0].innerHTML="<style>.wwads-horizontal,.wwads-vertical{background-color:var(--bodyBg);padding:5px;box-sizing:border-box;border-radius:3px;font-family:sans-serif;display:flex;min-width:150px;position:relative;overflow:hidden;}.wwads-horizontal{flex-wrap:wrap;justify-content:center}.wwads-vertical{flex-direction:column;align-items:center;padding-bottom:32px}.wwads-horizontal a,.wwads-vertical a{text-decoration:none}.wwads-horizontal .wwads-img,.wwads-vertical .wwads-img{margin:5px}.wwads-horizontal .wwads-content,.wwads-vertical .wwads-content{margin:5px}.wwads-horizontal .wwads-content{flex:130px}.wwads-vertical .wwads-content{margin-top:10px}.wwads-horizontal .wwads-text,.wwads-content .wwads-text{font-size:14px;line-height:1.4;color:var(--textColor);;-webkit-font-smoothing:antialiased}.wwads-horizontal .wwads-poweredby,.wwads-vertical .wwads-poweredby{display:block;font-size:11px;color:var(--textColor);margin-top:1em}.wwads-vertical .wwads-poweredby{position:absolute;left:10px;bottom:10px}.wwads-horizontal .wwads-poweredby span,.wwads-vertical .wwads-poweredby span{transition:all 0.2s ease-in-out;margin-left:-1em}.wwads-horizontal .wwads-poweredby span:first-child,.wwads-vertical .wwads-poweredby span:first-child{opacity:0}.wwads-horizontal:hover .wwads-poweredby span,.wwads-vertical:hover .wwads-poweredby span{opacity:1;margin-left:0}.wwads-horizontal .wwads-hide,.wwads-vertical .wwads-hide{position:absolute;right:-23px;bottom:-23px;width:46px;height:46px;border-radius:23px;transition:all 0.3s ease-in-out;cursor:pointer;}.wwads-horizontal .wwads-hide:hover,.wwads-vertical .wwads-hide:hover{background:rgb(0 0 0 /0.05)}.wwads-horizontal .wwads-hide svg,.wwads-vertical .wwads-hide svg{position:absolute;left:10px;top:10px;fill:#a6b7bf}.wwads-horizontal .wwads-hide:hover svg,.wwads-vertical .wwads-hide:hover svg{fill:#3E4546}</style><a href='https://wwads.cn/page/whitelist-wwads' class='wwads-img' target='_blank' rel='nofollow'><img  loading=\"lazy\" src='/images/error/wwads.2a3pidhlh4ys.webp' width='130'></a><div class='wwads-content'><a href='https://wwads.cn/page/whitelist-wwads' class='wwads-text' target='_blank' rel='nofollow'>为了支持开源项目长期发展，请将我们的网站加入广告拦截器的白名单，感谢您的支持！<span style='color: #11a8cd'>如何添加白名单?</span></a><a href='https://wwads.cn/page/end-user-privacy' class='wwads-poweredby' title='万维广告 ～ 让广告更优雅，且有用' target='_blank'><span>万维</span><span>广告</span></a></div><a class='wwads-hide' onclick='parentNode.remove()' title='隐藏广告'><svg xmlns='http://www.w3.org/2000/svg' width='6' height='7'><path d='M.879.672L3 2.793 5.121.672a.5.5 0 11.707.707L3.708 3.5l2.12 2.121a.5.5 0 11-.707.707l-2.12-2.12-2.122 2.12a.5.5 0 11-.707-.707l2.121-2.12L.172 1.378A.5.5 0 01.879.672z'></path></svg></a>")}(),s()})),loopExecute((function(){!function(){var n=$("#main-title");if(n.length&&window.JPOM_RELEASE_VERSION)if($(window).width()>800){n.css({display:"inline-block"});const e=layer.tips(JPOM_RELEASE_VERSION,n.get(0),{tips:2,time:0,offset:"auto",anim:1});$("#layui-layer"+e+" .layui-layer-content").css({"background-color":"rgba(0,0,0,.6)"}),$("#layui-layer"+e+" .layui-layer-TipsG").hide(),window.mainTitleTipsIndex=e}else layer.close(window.mainTitleTipsIndex);else layer.close(window.mainTitleTipsIndex);$(".hero img").hasClass("animationLogo")||$(".hero img").addClass("animationLogo")}();var n=$(".hover-alt[alt]");return!!n.length&&(n.hover((function(){var n=$(this).attr("alt");n&&(window.msgLayer=layer.tips(n,$(this),{tips:1,time:0}))}),(function(){var n=window.msgLayer;setTimeout((function(){layer.close(n)}),1e3)})),!0)}),20),new EmbedLiteSDK({appId:"f394f6e2-7219-4a06-b19e-06f5907dc96e",code:"embedvXWqahpL1LXZ0KbDaWWK"})}))}))},({Vue:n,options:e,router:t,siteData:r})=>{r.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${hl(n.getUTCMonth()+1)}-${hl(n.getUTCDate())} ${hl(n.getUTCHours())}:${hl(n.getUTCMinutes())}:${hl(n.getUTCSeconds())}`}(e)),t?n.author=t:r.themeConfig.author&&(n.author=r.themeConfig.author)}),n.mixin(gl)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({router:n})=>{"undefined"!=typeof window&&function(){var n=document.createElement("script"),e=window.location.protocol.split(":")[0];n.src="https"===e?"https://zz.bdstatic.com/linksubmit/push.js":"http://push.zhanzhang.baidu.com/push.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)}()},({Vue:n})=>{n.component(fl.name,fl),n.mixin({computed:{$readingShow(){return this.$page.frontmatter.readingShow}}})},({Vue:n})=>n.use(xl.a)],yl=["PageInfo","ReadingProgress"];class kl extends class{constructor(){this.store=new Xt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Xt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(kl.prototype,{getPageAsyncComponent:li,getLayoutAsyncComponent:ci,getAsyncComponent:di,getVueComponent:pi});var zl={install(n){const e=new kl;n.$vuepress=e,n.prototype.$vuepress=e}};function Sl(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Il={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return ui("pageKey",e),Xt.component(e)||Xt.component(e,li(e)),Xt.component(e)?n(e):n("")}},wl={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Tl={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},_l=(t(281),t(282),Object(il.a)(Tl,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),El={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Xt.config.productionTip=!1,Xt.use(Mo),Xt.use(zl),Xt.mixin(function(n,e,t=Xt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const r=new(n(t.$vuepress.$get("siteData"))),a=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),s={};return Object.keys(a).reduce((n,e)=>(e.startsWith("$")&&(n[e]=a[e].get),n),s),{computed:s}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const r in n)"/"===r?t=n[r]:0===this.$page.path.indexOf(r)&&(e=n[r]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},dl)),Xt.component("Content",Il),Xt.component("ContentSlotsDistributor",wl),Xt.component("OutboundLink",_l),Xt.component("ClientOnly",El),Xt.component("Layout",ci("Layout")),Xt.component("NotFound",ci("NotFound")),Xt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.5",hash:"9996f6fb6"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:dl.routerBase||dl.base,t=new Mo({base:e,mode:"history",fallback:!1,routes:cl,scrollBehavior:(n,e,t)=>t||(n.hash?!Xt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,r)=>{if(Sl(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Sl(n,t)?r(t):r()}else r();else{const t=e.path+"/",a=e.path+".html";Sl(n,a)?r(a):Sl(n,t)?r(t):r()}})}(t);const r={};try{await Promise.all(jl.filter(n=>"function"==typeof n).map(e=>e({Vue:Xt,options:r,router:t,siteData:dl,isServer:n})))}catch(n){console.error(n)}return{app:new Xt(Object.assign(r,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},yl.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);